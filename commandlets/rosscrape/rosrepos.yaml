JKU_Robotic_Stack:
  CB_TCP_RTAI:
    shortdesc: TCP_RTAI
  JKU_maps:
    author: !!python/unicode 'aaronmr'
    deps: []
    desc: maps
    license: BSD
    shortdesc: maps
    source: https://github.com/AaronMR/JKU_Robotic_Stack.git
    website: http://ros.org/wiki/maps
  Laser_PLS200:
    shortdesc: PLS200
  R1_2dnav:
    author: !!python/unicode 'aaronmr'
    deps:
    - R1_Odom
    - R1_urdf
    - joint_state_publisher
    - Laser_PLS200
    - CB_TCP_RTAI
    desc: R1_2dnav
    license: BSD
    shortdesc: R1_2dnav
    source: https://github.com/AaronMR/JKU_Robotic_Stack.git
    website: http://ros.org/wiki/R1_2dnav
  R1_Odom:
    author: !!python/unicode 'aaronmr'
    deps:
    - roscpp
    - joy
    - nav_msgs
    - tf
    - geometry_msgs
    desc: R1_Odom
    license: BSD
    shortdesc: R1_Odom
    source: https://github.com/AaronMR/JKU_Robotic_Stack.git
    website: http://ros.org/wiki/R1_Odom
  R1_launch:
    author: !!python/unicode 'aaronmr'
    deps: []
    desc: R1_launch
    license: BSD
    shortdesc: R1_launch
    source: https://github.com/AaronMR/JKU_Robotic_Stack.git
    website: http://ros.org/wiki/R1_launch
  R1_teleop_joy:
    author: !!python/unicode 'aaronmr'
    deps:
    - roscpp
    - joy
    - geometry_msgs
    desc: R1_teleop_joy
    license: BSD
    shortdesc: R1_teleop_joy
    source: https://github.com/AaronMR/JKU_Robotic_Stack.git
    website: http://ros.org/wiki/R1_teleop_joy
  R1_teleop_key:
    author: !!python/unicode 'aaronmr'
    deps:
    - roscpp
    - geometry_msgs
    desc: R1_teleop_key
    license: BSD
    shortdesc: R1_teleop_key
    source: https://github.com/AaronMR/JKU_Robotic_Stack.git
    website: http://ros.org/wiki/R1_teleop_key
  R1_urdf:
    author: !!python/unicode 'David Lu!!'
    deps: []
    desc: Support code for the step by step URDF tutorials on ROS.org
    license: BSD
    shortdesc: Code for some URDF Tutorials
    source: https://github.com/AaronMR/JKU_Robotic_Stack.git
    website: http://ros.org/wiki/urdf_tutorial
RCPRG_camera_drivers:
  camerav4l2:
    author: !!python/unicode 'Konrad Banachowicz'
    deps:
    - image_transport
    - tf
    - camera_info_manager
    - driver_base
    desc: camerav4l2
    license: BSD
    shortdesc: camerav4l2
    source: https://github.com/RCPRG-ros-pkg/RCPRG_camera_drivers.git
    website: http://ros.org/wiki/camerav4l2
  stereov4l2:
    author: !!python/unicode 'Konrad Banachowicz'
    deps:
    - image_transport
    - tf
    - camera_info_manager
    - driver_base
    desc: stereov4l2
    license: BSD
    shortdesc: stereov4l2
    source: https://github.com/RCPRG-ros-pkg/RCPRG_camera_drivers.git
    website: http://ros.org/wiki/stereov4l2
RCPRG_laser_drivers:
  LMS1xx:
    author: !!python/unicode 'Konrad Banachowicz'
    deps:
    - libLMS1xx
    - roscpp
    - sensor_msgs
    desc: Driver for SICK LMS1xx.
    license: GPL
    shortdesc: Driver for SICK LMS1xx.
    source: https://github.com/RCPRG-ros-pkg/RCPRG_laser_drivers.git
    website: http://github.com/konradb3/RCPRG-ros-pkg/wiki/LMS1xx
  libLMS1xx:
    author: !!python/unicode 'Konrad Banachowicz'
    deps: []
    desc: Library for communicating with SICK LMS1xx.
    license: LGPL
    shortdesc: Library for communicating with SICK LMS1xx.
    source: https://github.com/RCPRG-ros-pkg/RCPRG_laser_drivers.git
    website: http://github.com/konradb3/RCPRG-ros-pkg/wiki/libLMS1xx
ROSMiabotDriver:
  ROSMiabotDriver:
    author: !!python/unicode 'user'
    deps:
    - roscpp
    - tf
    - geometry_msgs
    - nav_msgs
    - std_msgs
    desc: Merlin Systems Corp. Ltd - MiabotPro mobile robot platform driver.
    license: BSD
    shortdesc: Merlin Systems Corp. Ltd - MiabotPro mobile robot platform driver.
    source: https://github.com/MerlinSystemsCorp/ROSMiabotDriver.git
    website: http://ros.org/wiki/miabot
ais-bonn-ros-pkg:
  mocap_optitrack:
    author: "Kathrin Gr\xC3\xA4ve/graeve@ais.uni-bonn.de"
    deps:
    - roscpp
    - tf
    desc: "<p>\n    This package contains a node that translates motion capture data\
      \ from an OptiTrack rig to tf transforms.\n    The node receives the binary\
      \ packages that are streamed by the Arena software,\n    decodes them and broadcasts\
      \ the poses of rigid bodies as tf transforms.\n    </p>\n    <p>\n    Currently,\
      \ this node supports the NatNet streaming protocol v1.4.\n    </p>\n    <p>\n\
      \    Copyright (c) 2010, University of Bonn, Computer Science Institute VI<br/>\n\
      \    All rights reserved.\n    </p>"
    license: BSD
    shortdesc: Streaming of OptiTrack mocap data to tf
    source: http://ais-bonn-ros-pkg.googlecode.com/svn/trunk/stacks/ais_bonn_drivers/mocap_optitrack
    website: http://ros.org/wiki/mocap_optitrack
  octreelib:
    author: !!python/unicode 'Joerg Stueckler'
    deps:
    - roscpp
    - pcl
    - pcl_ros
    - sensor_msgs
    - visualization_msgs
    - eigen
    - dynamic_reconfigure
    - nodelet
    desc: "The octreelib contains an octree implementation that is templated for coordinate\
      \ and value type. \n     It features fast sampling and value aggregation on\
      \ many resolutions in parallel.\n     The implementation is specifically suited\
      \ for fast volume queries of integral or extremum values."
    license: BSD
    shortdesc: The octreelib contains an octree implementation that is templated for
      coordinate and value ty...
    source: http://ais-bonn-ros-pkg.googlecode.com/svn/trunk/stacks/ais_bonn_pcl_addons/octreelib
    website: http://ros.org/wiki/octreelib
  roomrider_driver:
    author: !!python/unicode 'Andreas Hochrath, Torsten Fiolka'
    deps:
    - roscpp
    - geometry_msgs
    - nav_msgs
    - tf
    - joy
    desc: "This driver controls the iRobot Roomba 530 from our roomrider platform.\
      \ It has been developed for a robotics lab at\n\tthe Autonomous Intelligent\
      \ Systems department at Bonn University."
    license: GPL
    shortdesc: Driver for the Roomrider platform
    source: http://ais-bonn-ros-pkg.googlecode.com/svn/trunk/stacks/ais_bonn_drivers/roomrider_driver
    website: http://www.ros.org/wiki/roomrider_driver/
  sicks300:
    author: !!python/unicode 'Andreas Hochrath, Torsten Fiolka'
    deps:
    - roscpp
    - tf
    - sensor_msgs
    desc: "This driver was developed from Player drivers for the Sick 300 for a robotics\
      \ lab in the \n\tAutonomous Intelligent Systems Department at Bonn University."
    license: GPL
    shortdesc: Driver for the Sick 3000 Laserscanner
    source: http://ais-bonn-ros-pkg.googlecode.com/svn/trunk/stacks/ais_bonn_drivers/sicks300
    website: http://www.ros.org/wiki/sicks300/
ajh-ros-pkg:
  cmucam_png:
    author: !!python/unicode 'Andrew Harris'
    deps:
    - std_msgs
    - sensor_msgs
    - rospy
    - roscpp
    desc: cmucam_png
    license: BSD
    shortdesc: cmucam_png
    source: https://ajh-ros-pkg.svn.sourceforge.net/svnroot/ajh-ros-pkg/trunk/cmucam_png
    website: http://ros.org/wiki/cmucam_png
  pmad:
    author: !!python/unicode 'Andrew Harris'
    deps:
    - std_msgs
    - rospy
    - roscpp
    desc: "The PMAD (power management and distribution) node provides access\n   \
      \  to digital outputs and analog inputs on an Arduino."
    license: BSD
    shortdesc: Access analog inputs and digital outputs on the Arduino.
    source: https://ajh-ros-pkg.svn.sourceforge.net/svnroot/ajh-ros-pkg/trunk/pmad
    website: http://ros.org/wiki/pmad
albany-ros-pkg:
  2dnav_create:
    author: !!python/unicode 'Michael E. Ferguson'
    deps:
    - irobot_create_2_1
    - hokuyo_node
    - move_base
    - tf
    desc: Launch files to bring up an iRobot Create with hokoyu laser.
    license: BSD
    shortdesc: 2dnav_create
    source: http://albany-ros-pkg.googlecode.com/svn/trunk/albany_nav/2dnav_create
    website: http://ros.org/wiki/2dnav_create
  2dnav_neato:
    author: !!python/unicode 'Michael Ferguson'
    deps: []
    desc: This package contains configuration and launch files for using the navigation
      stack with the Neato XV-11 robot.
    license: BSD
    shortdesc: Navigation stuff for use with the Neato XV-11
    source: http://albany-ros-pkg.googlecode.com/svn/trunk/neato_robot/2dnav_neato
    website: http://ros.org/wiki/2dnav_neato
  albany_common:
    author: !!python/unicode 'Michael E. Ferguson'
    deps:
    - rospy
    - usb_cam
    - sensor_msgs
    - geometry_msgs
    desc: Description and launch files for common hardware in the ILS Social Robotics
      Lab.
    license: BSD
    shortdesc: Common files for the ILS Social Robotics Lab
    source: http://albany-ros-pkg.googlecode.com/svn/trunk/albany_robots/albany_common
    website: http://ros.org/wiki/albany_common
  ar_kinect:
    author: !!python/unicode 'Michael Ferguson'
    deps:
    - visualization_msgs
    - artoolkit
    - ar_pose
    - geometry_msgs
    - tf
    - pcl_ros
    - opencv2
    - image_transport
    - cv_bridge
    - roscpp
    desc: This package extends the ar_pose package to handle point clouds + images
      generated from the kinect for improved AR marker localization.
    license: BSD
    shortdesc: Improved AR-markers using a Kinect
    source: http://albany-ros-pkg.googlecode.com/svn/trunk/albany_vision/ar_kinect
    website: http://ros.org/wiki/ar_kinect
  camera_turnpike:
    author: !!python/unicode 'Michael Ferguson'
    deps:
    - roscpp
    - pcl_ros
    - sensor_msgs
    - std_srvs
    desc: ''
    license: BSD
    shortdesc: Allows a metered copying of Kinect output to an alternate topic.
    source: http://albany-ros-pkg.googlecode.com/svn/trunk/albany_chess/camera_turnpike
    website: http://ros.org/wiki/camera_turnpike
  chess_board_locator:
    author: !!python/unicode 'Michael Ferguson'
    deps:
    - roscpp
    - pcl_ros
    - opencv2
    - cv_bridge
    - sensor_msgs
    - tf
    - message_filters
    - dynamic_reconfigure
    - image_transport
    desc: ''
    license: BSD
    shortdesc: chess_board_locator
    source: http://albany-ros-pkg.googlecode.com/svn/trunk/albany_chess/chess_board_locator
    website: http://ros.org/wiki/chess_board_locator
  chess_msgs:
    author: !!python/unicode 'Michael Ferguson'
    deps:
    - rospy
    - roscpp
    - geometry_msgs
    desc: ''
    license: BSD
    shortdesc: Message definitions for AAAI Chess 2011
    source: http://albany-ros-pkg.googlecode.com/svn/trunk/albany_chess/chess_msgs
    website: http://ros.org/wiki/chess_msgs
  chess_piece_locator:
    author: !!python/unicode 'james'
    deps:
    - roscpp
    - pcl_ros
    - chess_msgs
    - nodelet
    - nodelet_topic_tools
    desc: chess_piece_locator
    license: BSD
    shortdesc: chess_piece_locator
    source: http://albany-ros-pkg.googlecode.com/svn/trunk/albany_chess/chess_piece_locator
    website: http://ros.org/wiki/chess_piece_locator
  chiara:
    author: !!python/unicode 'Michael Ferguson'
    deps:
    - rospy
    - std_msgs
    - arbotix_python
    desc: Configuration and launch files for a CMU Chiara.
    license: BSD
    shortdesc: Configuration and launch files for a CMU Chiara.
    source: http://albany-ros-pkg.googlecode.com/svn/trunk/albany_robots/chiara
    website: http://ros.org/wiki/chiara
  coreslam:
    author: !!python/unicode 'Bruno Steuxa and Oussama El Hamzaoui; ROS Wrapper by
      Michael Ferguson'
    deps:
    - roscpp
    - rosconsole
    - std_msgs
    - nav_msgs
    - std_msgs
    - tf
    - message_filters
    desc: This package contains CoreSLAM, from OpenSlam, and a ROS wrapper.
    license: MIT
    shortdesc: This package contains CoreSLAM, from OpenSlam, and a ROS wrapper.
    source: http://albany-ros-pkg.googlecode.com/svn/trunk/slam_coreslam/coreslam
    website: http://ros.org/wiki/coreslam
  depth_viewer:
    author: !!python/unicode 'Michael Ferguson'
    deps:
    - roscpp
    - sensor_msgs
    - cv_bridge
    desc: ''
    license: BSD
    shortdesc: A simple depth viewer for kinect images
    source: http://albany-ros-pkg.googlecode.com/svn/trunk/albany_vision/depth_viewer
    website: http://ros.org/wiki/depth_viewer
  fall10_workshop:
    author: !!python/unicode 'Michael Ferguson'
    deps:
    - irobot_create_2_1
    - rospy
    - roscpp
    - std_msgs
    desc: fall10_workshop
    license: BSD
    shortdesc: fall10_workshop
    source: http://albany-ros-pkg.googlecode.com/svn/trunk/sandbox/fall10_workshop
    website: http://ros.org/wiki/fall10_workshop
  locator:
    author: !!python/unicode 'Michael Ferguson'
    deps:
    - rospy
    - geometry_msgs
    - ar_pose
    desc: Localizes a robot against a map being broadcast in TF.
    license: BSD
    shortdesc: Localization with AR Markers
    source: http://albany-ros-pkg.googlecode.com/svn/trunk/albany_nav/locator
    website: http://ros.org/wiki/locator
  neato_driver:
    author: !!python/unicode 'Michael Ferguson'
    deps: []
    desc: "This is a generic drivers for the Neato XV-11 Robotic Vacuum.\n\n    ROS\
      \ Bindings can be found in the neato_node package."
    license: BSD
    shortdesc: Driver for the Neato XV-11
    source: http://albany-ros-pkg.googlecode.com/svn/trunk/neato_robot/neato_driver
    website: http://ros.org/wiki/neato_driver
  neato_node:
    author: !!python/unicode 'Michael Ferguson'
    deps:
    - neato_driver
    - rospy
    - sensor_msgs
    - geometry_msgs
    - nav_msgs
    - tf
    desc: This package contains a node that connects to the Neato Robotics XV-11.
      It enables control of motors through a geometry_msgs/Twist topic and publishes
      laser scans and odometry.
    license: BSD
    shortdesc: A node wrapper for the neato_driver package
    source: http://albany-ros-pkg.googlecode.com/svn/trunk/neato_robot/neato_node
    website: http://ros.org/wiki/neato_node
  nelson:
    author: !!python/unicode 'Michael Ferguson'
    deps:
    - rospy
    - roscpp
    - std_msgs
    - sensor_msgs
    - geometry_msgs
    - social_msgs
    - arbotix_python
    - arbotix_msgs
    - tf
    - irobot_create_2_1
    desc: Configuration and launch files for Nelson
    license: BSD
    shortdesc: Configuration and launch files for Nelson
    source: http://albany-ros-pkg.googlecode.com/svn/trunk/albany_robots/nelson
    website: http://ros.org/wiki/nelson
  pocketsphinx:
    author: !!python/unicode 'Michael Ferguson'
    deps:
    - rospy
    - std_msgs
    - geometry_msgs
    - std_srvs
    desc: A simple wrapper around the pocket sphinx speech recognizer, using gstreamer.
    license: BSD
    shortdesc: A simple wrapper around pocketsphinx speech recognizer.
    source: http://albany-ros-pkg.googlecode.com/svn/trunk/rharmony/pocketsphinx
    website: http://ros.org/wiki/pocketsphinx
  rosalyn:
    author: !!python/unicode 'Michael E. Ferguson'
    deps:
    - rospy
    - irobot_create_2_1
    - arbotix_python
    desc: Configuration and launch files for ROSalyn.
    license: BSD
    shortdesc: Configuration and launch files for ROSalyn.
    source: http://albany-ros-pkg.googlecode.com/svn/trunk/albany_robots/rosalyn
    website: http://ros.org/wiki/rosalyn
  slam_experiments:
    author: !!python/unicode 'Michael Ferguson'
    deps: []
    desc: slam_experiments
    license: BSD
    shortdesc: slam_experiments
    source: http://albany-ros-pkg.googlecode.com/svn/trunk/albany_nav/slam_experiments
    website: http://ros.org/wiki/slam_experiments
  smart_ranger:
    author: !!python/unicode 'Michael Ferguson'
    deps:
    - arbotix_python
    - geometry_msgs
    - sensor_msgs
    - nav_msgs
    - tf
    desc: Implementation of &quot;An Intelligent Low-Cost Scanning Range Finder&quot;
    license: BSD
    shortdesc: Implementation of &quot;An Intelligent Low-Cost Scanning Range Finder&quot;
    source: details.php?name=rospy
    website: http://albany-ros-pkg.googlecode.com/svn/trunk/albany_nav/smart_ranger
  social_msgs:
    author: !!python/unicode 'Michael E. Ferguson'
    deps:
    - std_msgs
    - rospy
    - roscpp
    desc: A collection of message and server prototypes for social robotics.
    license: BSD
    shortdesc: social_msgs
    source: http://albany-ros-pkg.googlecode.com/svn/trunk/albany_robots/social_msgs
    website: http://ros.org/wiki/social_msgs
  stargate_locater:
    author: !!python/unicode 'Michael E. Ferguson'
    deps:
    - rospy
    - ar_pose
    - tf
    desc: Localization routines for the ILS Stargate Navigator.
    license: BSD
    shortdesc: stargate_locater
    source: http://albany-ros-pkg.googlecode.com/svn/trunk/sandbox/stargate_navigator/stargate_locater
    website: http://ros.org/wiki/stargate_locater
  stargate_map_server:
    author: !!python/unicode 'Michael E. Ferguson'
    deps:
    - rospy
    - roscpp
    - tf
    - std_msgs
    - geometry_msgs
    desc: A map server for the ILS Stargate Navigator.
    license: BSD
    shortdesc: stargate_map_server
    source: http://albany-ros-pkg.googlecode.com/svn/trunk/sandbox/stargate_navigator/stargate_map_server
    website: http://ros.org/wiki/stargate_map_server
  stargate_move_base:
    author: !!python/unicode 'Michael E. Ferguson'
    deps:
    - roscpp
    - rosconsole
    - std_msgs
    - move_base_msgs
    - geometry_msgs
    - visualization_msgs
    - actionlib
    - nav_core
    - pluginlib
    - costmap_2d
    - tf
    - nav_msgs
    - roslib
    - rospy
    - rosmsg
    - rostopic
    - base_local_planner
    - clear_costmap_recovery
    - rotate_recovery
    desc: Customized move_base for the ILS Stargate Navigator.
    license: BSD
    shortdesc: stargate_move_base
    source: http://albany-ros-pkg.googlecode.com/svn/trunk/sandbox/stargate_navigator/stargate_move_base
    website: http://ros.org/wiki/stargate_move_base
  stargate_planner:
    author: !!python/unicode 'Michael E. Ferguson'
    deps:
    - roscpp
    - costmap_2d
    - pluginlib
    - nav_core
    - tf
    - angles
    - stargate_map_server
    desc: A planner for the ILS Stargate Navigator. Based on carrot_planner.
    license: BSD
    shortdesc: stargate_planner
    source: http://albany-ros-pkg.googlecode.com/svn/trunk/sandbox/stargate_navigator/stargate_planner
    website: http://ros.org/wiki/stargate_planner
  stargate_rosalyn:
    author: !!python/unicode 'Michael Ferguson'
    deps:
    - stargate_move_base
    desc: Launch running stargate_navigator on ROSalyn
    license: BSD
    shortdesc: stargate_rosalyn
    source: http://albany-ros-pkg.googlecode.com/svn/trunk/sandbox/stargate_navigator/stargate_rosalyn
    website: http://ros.org/wiki/stargate_rosalyn
  trike:
    author: !!python/unicode 'Michael Ferguson'
    deps:
    - rospy
    - irobot_create_2_1
    - openni_camera
    desc: Configuration and launch files for Trike.
    license: BSD
    shortdesc: Trike Robot Utilities
    source: http://albany-ros-pkg.googlecode.com/svn/trunk/albany_robots/trike
    website: http://ros.org/wiki/trike
alufr-ros-pkg:
  articulation_models:
    author: !!python/unicode 'Juergen Sturm'
    deps:
    - geometry_msgs
    - sensor_msgs
    - visualization_msgs
    - tf
    - gaussian_process
    - articulation_msgs
    - icp
    - bullet
    - eigen
    desc: "<p>\nThis package contains the core library for kinematic model fitting\
      \ for articulated objects. Examples of articulated objects are gangway or cabinet\
      \ doors, door handles, and drawers. \nIt provides both a C++ library for model\
      \ fitting and selection, and nodes that make the functions of this library available\
      \ as ROS services to other nodes.\n</p>"
    license: BSD
    shortdesc: Estimates kinematic models for articulated objects like doors and drawers.
    source: http://alufr-ros-pkg.googlecode.com/svn/trunk/articulation/articulation_models
    website: http://ros.org/wiki/articulation_models
  articulation_msgs:
    author: !!python/unicode 'Juergen Sturm'
    deps:
    - geometry_msgs
    - sensor_msgs
    - visualization_msgs
    desc: This package defines generic messages for communicating observed kinematic
      trajectories and articulation models. Further, this packages defines generic
      services for fitting, selecting and storing kinematic models from observed trajectories.
    license: BSD
    shortdesc: ROS messages and services for describing articulation models of doors
      and drawers.
    source: http://alufr-ros-pkg.googlecode.com/svn/trunk/articulation/articulation_msgs
    website: http://ros.org/wiki/articulation_msgs
  articulation_perception:
    author: !!python/unicode ''
    deps:
    - visualization_msgs
    - std_msgs
    - geometry_msgs
    - cv_bridge
    - opencv2
    - sensor_msgs
    - tf_conversions
    - tf
    - articulation_msgs
    desc: This package provides a detector for cabinet fronts from dense depth images
      (as produced by Microsoft's Kinect sensor or the PR2's projected texture stereo
      system). The basic approach is to segment each image into planes and to search
      for the rectangle with the maximum support.
    license: BSD
    shortdesc: articulation_perception
    source: http://alufr-ros-pkg.googlecode.com/svn/trunk/articulation/articulation_perception
    website: http://ros.org/wiki/articulation_perception
  articulation_rviz_plugin:
    author: !!python/unicode 'Juergen Sturm'
    deps:
    - rviz
    - roscpp
    - tf
    - message_filters
    - articulation_models
    desc: "<p>\nThis package contains two visualization plugins for the RVIZ viewer,\
      \ for displaying messages of articulation_msgs/TrackMsg and articulation_msgs/ModelMsg\
      \ messages. This is useful for the debugging and visualization of fitted articulation\
      \ models. \n</p>"
    license: BSD
    shortdesc: Visualizes kinematic models for articulated objects like doors and
      drawers in RVIZ.
    source: http://alufr-ros-pkg.googlecode.com/svn/trunk/articulation/articulation_rviz_plugin
    website: http://ros.org/wiki/articulation_rviz_plugin
  articulation_structure:
    author: !!python/unicode 'sturm'
    deps:
    - articulation_rviz_plugin
    - geometry_msgs
    - visualization_msgs
    - tf
    - hogman_minimal
    desc: articulation_structure
    license: BSD
    shortdesc: articulation_structure
    source: http://alufr-ros-pkg.googlecode.com/svn/trunk/articulation/articulation_structure
    website: http://ros.org/wiki/articulation_closedchain
  articulation_tutorials:
    author: !!python/unicode 'Juergen Sturm'
    deps:
    - articulation_models
    - articulation_rviz_plugin
    - articulation_structure
    - checkerboard_detector2
    - uvc_cam2
    - image_proc
    - compressed_image_transport
    desc: This package contains various tutorials on how to use, learn and evaluate
      articulation models.
    license: BSD
    shortdesc: articulation_tutorials
    source: http://alufr-ros-pkg.googlecode.com/svn/trunk/articulation/articulation_tutorials
    website: http://ros.org/wiki/articulation_tutorials
  checkerboard_detector2:
    author: !!python/unicode 'Rosen Diankov (rdiankov@cs.cmu.edu)'
    deps:
    - opencv2
    - cv_bridge
    - sensor_msgs
    - image_transport
    - geometry_msgs
    - visualization_msgs
    - tf
    desc: "Uses opencv to find checkboards and compute their 6D poses with respect\
      \ to the image. Requires the image to be calibrated.\n    Parameters:\n    display\
      \ - show the checkerboard detection\n    rect%d_size_x - size of checker in\
      \ x direction\n    rect%d_size_y - size of checker in y direction\n    grid%d_size_x\
      \ - number of checkers in x direction\n    grid%d_size_y - number of checkers\
      \ in y direction\n    \n    There can be more than one grid%d declared, the\
      \ numbers should grow consecutively starting at 0."
    license: BSD
    shortdesc: Finds checkerboards and returns their 6D poses
    source: details.php?name=roscpp
    website: http://alufr-ros-pkg.googlecode.com/svn/trunk/freiburg_tools/checkerboard_detector2
  dynamicvoronoi:
    author: !!python/unicode 'Boris Lau, Christoph Sprunk, Wolfram Burgard'
    deps: []
    desc: '<p>

      This package provides software to compute and update Euclidean distance maps
      (DM) and Euclidean Voronoi diagrams (GVD) on 2D grid maps.

      </p>


      <p>

      The program is initialized with a binary occupancy grid map and computes the
      corresponding DM and GVD. When provided with points that mark newly occupied
      or freed cells, the DM and GVD can be updated efficiently to reflect the changes
      in the environment.

      </p>


      <p>

      Details on the algorithms can be found in the corresponding paper. Please cite
      the paper if you use it for scientific work:<br/>

      B. Lau, C. Sprunk and W. Burgard, Improved Updating of Euclidean Distance Maps
      and Voronoi Diagrams, IEEE Intl. Conf. on Intelligent Robots and Systems (IROS),
      Taipei, Taiwan, 2010.<br/>

      See also <a href="http://www.informatik.uni-freiburg.de/~lau/dynamicvoronoi">http://www.informatik.uni-freiburg.de/~lau/dynamicvoronoi</a>

      </p>'
    license: BSD
    shortdesc: Efficient computation and updating of Euclidean distance maps and Euclidean
      Voronoi diagrams on 2D grid maps.
    source: http://alufr-ros-pkg.googlecode.com/svn/trunk/dynamic_voronoi/dynamicvoronoi
    website: http://ros.org/wiki/dynamicvoronoi
  face_contour_detector:
    author: !!python/unicode 'Fabian Wenzelmann and Julian Schmid'
    deps:
    - rospy
    - roscpp
    - opencv2
    - cv_bridge
    - sensor_msgs
    - image_transport
    - portrait_roboter_msgs
    desc: Takes an image of a face (and a mask image) and extracts characteristic
      lines and returns an image of those.
    license: BSD
    shortdesc: face_contour_detector
    source: http://alufr-ros-pkg.googlecode.com/svn/trunk/portrait_bot/face_contour_detector
    website: http://ros.org/wiki/face_contour_detector
  face_finder:
    author: !!python/unicode 'Nikolaus Mayer, Christian Schilling'
    deps:
    - roscpp
    - std_msgs
    - sensor_msgs
    - geometry_msgs
    - opencv2
    - tf
    - cv_bridge
    - image_geometry
    - people_msgs
    - pcl
    - laser_assembler
    - image_transport
    - compressed_image_transport
    - pr2_msgs
    - pcl_ros
    - actionlib
    - pr2_controllers_msgs
    - face_detector
    - portrait_roboter_msgs
    desc: face_finder
    license: BSD
    shortdesc: This package supplies the portrait_bot stack with both a face extraction
      and portrait taking tool and a gui.
    source: http://alufr-ros-pkg.googlecode.com/svn/trunk/portrait_bot/face_finder
    website: http://ros.org/wiki/face_finder
  footstep_planner:
    author: !!python/unicode 'Johannes Garimort, Armin Hornung'
    deps:
    - humanoid_nav_msgs
    - map_server
    - tf
    - visualization_msgs
    - geometry_msgs
    - roscpp
    - rospy
    - gridmap_2d
    desc: "<p>A footstep planner for humanoid robots using dynamic replanning based\
      \ on D* Lite.</p>\n     <p>Details can be found in the corresponding paper <em>&quot;Humanoid\
      \ Navigation with Dynamic Footstep Plans&quot;</em>\n     by J. Garimort, A.\
      \ Hornung, and M. Bennewitz; published in \n     Proc. of the IEEE International\
      \ Conference on Robotics &amp; Automation (ICRA), 2011</p>"
    license: GPL 3
    shortdesc: Footstep planning for humanoid robots
    source: http://alufr-ros-pkg.googlecode.com/svn/trunk/humanoid_navigation/footstep_planner
    website: http://ros.org/wiki/footstep_planner
  fr_tools:
    author: !!python/unicode 'Armin Hornung'
    deps: []
    desc: fr_tools - small collection of various helpful tools
    license: BSD
    shortdesc: fr_tools - small collection of various helpful tools
    source: http://alufr-ros-pkg.googlecode.com/svn/trunk/freiburg_tools/fr_tools
    website: http://ros.org/wiki/fr_tools
  gaussian_process:
    author: !!python/unicode 'Maintained by Juergen Sturm'
    deps: []
    desc: !!python/str "This package provides an implementation of Gaussian Process\
      \ regression. It provides an easy interface to build a GP from input and output\
      \ data. The GP can then estimate the output at any given input location. Further,\
      \ a gradient-descent based optimization of the hyperparameter is available.\n\
      \nThis library was implemented by Christian Plagemann, J\xFCrgen Hess, Axel\
      \ Rottmann and J\xFCrgen Sturm at the Autonomous Intelligent Systems Lab. It\
      \ contains code from Gunter Winkler and Konstantin Kutzkow which implements\
      \ a LU factorization for boost.\n\nMore details on Gaussian Process regression\
      \ can be found in the open-source book &quot;Gaussian Processes for Machine\
      \ Learning&quot;, written by Carl Edward Rasmussen and Chris Williams, the MIT\
      \ Press, 2006, available from http://www.gaussianprocess.org/gpml/chapters."
    license: LGPL
    shortdesc: Gaussian Process regression (C++ library)
    source: http://alufr-ros-pkg.googlecode.com/svn/trunk/freiburg_tools/gaussian_process
    website: http://ros.org/wiki/gaussian_process
  gridmap_2d:
    author: !!python/unicode 'Armin Hornung'
    deps:
    - opencv2
    - nav_msgs
    desc: gridmap_2d - a simple 2D gridmap structure, based on OpenCV's cv::Mat
    license: BSD
    shortdesc: gridmap_2d
    source: http://alufr-ros-pkg.googlecode.com/svn/trunk/humanoid_navigation/gridmap_2d
    website: http://ros.org/wiki/gridmap_2d
  hogman_minimal:
    author: !!python/unicode 'Maintained by Juergen Sturm'
    deps:
    - roscpp
    desc: Wrapper package for HOGMAN (hierarchical graph optimization), only minimal
      set of files
    license: BSD (hogman wrapper), GPL (hogman itself)
    shortdesc: Wrapper package for HOGMAN (hierarchical graph optimization), only
      minimal set of files
    source: http://alufr-ros-pkg.googlecode.com/svn/trunk/freiburg_tools/hogman_minimal
    website: http://ros.org/wiki/hogman_minimal
  humanoid_nav_msgs:
    author: !!python/unicode 'Armin Hornung'
    deps:
    - geometry_msgs
    desc: Messages and services for humanoid robot navigation
    license: BSD
    shortdesc: Messages and services for humanoid robot navigation
    source: http://alufr-ros-pkg.googlecode.com/svn/trunk/humanoid_navigation/humanoid_nav_msgs
    website: http://ros.org/wiki/humanoid_nav_msgs
  icp:
    author: !!python/unicode 'Maintained by Juergen Sturm'
    deps:
    - articulation_msgs
    - bullet
    desc: "<p>\n     ICP, an open-source implementation of the iteratively closest\
      \ point library.\n     </p>\n\n     <p>\n     ROS wrapper for the implementation\
      \ of the \n     Iteratively Closest Point algorithm, originally\n     implemented\
      \ by Per Bergstrom, released under BSD.\n     It uses a kd-Tree library, originally\
      \ \n     implemented by Guy Shechter, released under BSD.\n     </p>\n\n   \
      \  <p>\n     http://www.mathworks.com/matlabcentral/fileexchange/16766\n   \
      \  </p>\n     <p>\n     http://www.mathworks.com/matlabcentral/fileexchange/4586-k-d-tree\n\
      \     </p>"
    license: BSD
    shortdesc: Iteratively Closest Point library
    source: http://alufr-ros-pkg.googlecode.com/svn/trunk/articulation/icp
    website: http://ros.org/wiki/icp
  nao_ctrl:
    author: !!python/unicode 'Armin Hornung, Stefan Osswald, Daniel Maier'
    deps:
    - std_msgs
    - std_srvs
    - geometry_msgs
    - sensor_msgs
    - nao_msgs
    - humanoid_nav_msgs
    - rospy
    desc: "Control package for the Nao robot, providing basic odometry and movement\
      \ messages.\n     Makes Nao move accordinge to the MotionCommand topic. The\
      \ most-current version is\n     compatible with the Nao API version 1.6 or newer,\
      \ connecting to a real or simulated Nao. To include NaoQI for \n     controlling\
      \ the robot, the &quot;lib&quot; directory of the Aldebaran SDK needs to be\
      \ in your PYTHONPATH\n     environment variable."
    license: BSD
    shortdesc: Control package for the Nao humanoid robot.
    source: http://alufr-ros-pkg.googlecode.com/svn/trunk/nao/nao_ctrl
    website: http://ros.org/wiki/nao_ctrl
  nao_description:
    author: !!python/unicode 'Armin Hornung'
    deps:
    - urdf
    - robot_state_publisher
    desc: "nao_description - Description of the Nao robot model that can be used with\
      \ robot_state_publisher\n\t to display the robot's state of joint angles."
    license: BSD
    shortdesc: URDF robot model of the Nao humanoid, to be used with robot_state_publisher
    source: http://alufr-ros-pkg.googlecode.com/svn/trunk/nao/nao_description
    website: http://ros.org/wiki/nao_description
  nao_msgs:
    author: !!python/unicode 'Armin Hornung, Stefan Osswald, Daniel Maier'
    deps:
    - geometry_msgs
    desc: Message and service declarations for the Nao humanoid
    license: BSD
    shortdesc: Message and service declarations for the Nao humanoid
    source: http://alufr-ros-pkg.googlecode.com/svn/trunk/nao/nao_msgs
    website: http://ros.org/wiki/nao_msgs
  nao_remote:
    author: !!python/unicode 'Armin Hornung'
    deps:
    - std_msgs
    - sensor_msgs
    - nav_msgs
    - std_srvs
    - geometry_msgs
    - roscpp
    - tf
    - joy
    - nao_msgs
    - nao_description
    - message_filters
    - robot_state_publisher
    desc: "<p>\n     Remote control package for the Nao robot. \n     Provides a node\
      \ for Nao joystick teleoperation and odometry remapping into ROS format.\n \
      \    The motion commands should be sent to a <a href=\"http://www.ros.org/wiki/nao_ctrl\"\
      >\n     nao_ctrl</a> node, which in turn sends back robot state and odometry.\
      \     \n    </p>"
    license: BSD
    shortdesc: Remote control package for the Nao humanoid robot.
    source: http://alufr-ros-pkg.googlecode.com/svn/trunk/nao/nao_remote
    website: http://ros.org/wiki/nao_remote
  octomap:
    author: !!python/unicode 'Kai M. Wurm and Armin Hornung'
    deps:
    - roscpp
    desc: "<p>The <a href=\"http://octomap.sourceforge.net/\">OctoMap library</a>\
      \ implements a 3D occupancy grid mapping approach, \n     providing data structures\
      \ and mapping algorithms. The map implementation is based on an octree.</p>\n\
      \     <p>This package contains the latest release from the OctoMap repository,\
      \ providing a convenient way to download and compile the library in a way that\
      \ can be managed by the ROS dependency system.</p>\n     <p>More details are\
      \ available at <a href=\"http://octomap.sourceforge.net/\">http://octomap.sourceforge.net/</a>.</p>"
    license: BSD
    shortdesc: OctoMap -  A  probabilistic, flexible, and compact 3D mapping library
      for robotic systems.
    source: http://alufr-ros-pkg.googlecode.com/svn/trunk/octomap_mapping/octomap
    website: http://www.ros.org/wiki/octomap
  octomap_ros:
    author: !!python/unicode 'Armin Hornung'
    deps:
    - octomap
    - roscpp
    - geometry_msgs
    - sensor_msgs
    - pcl
    - tf
    desc: "octomap_ros provides conversion functions between ROS / PCL and OctoMap's\
      \ native types. \n     This enables a convenvient use of the octomap package\
      \ in ROS."
    license: BSD
    shortdesc: octomap_ros - conversions and wrappers to use octomap in ROS
    source: http://alufr-ros-pkg.googlecode.com/svn/trunk/octomap_mapping/octomap_ros
    website: http://ros.org/wiki/octomap_ros
  octomap_server:
    author: !!python/unicode 'Armin Hornung'
    deps:
    - octomap
    - visualization_msgs
    - octomap_ros
    desc: "octomap_server loads a 3D map (as Octree-based OctoMap) and distributes\
      \ it to other nodes in a compact binary format. \n\t See octomap_saver on how\
      \ to request or save a map file. A visualization of the occupied cells is sent\
      \ as MarkerArray."
    license: BSD
    shortdesc: octomap_server - map server for the OctoMap 3D maps
    source: http://alufr-ros-pkg.googlecode.com/svn/trunk/octomap_mapping/octomap_server
    website: http://www.ros.org/wiki/octomap_server
  pen_gripper:
    author: !!python/unicode 'Richard Schneider'
    deps:
    - roscpp
    - opencv2
    - roslib
    - std_msgs
    - sensor_msgs
    - pcl
    - ee_cart_imped_action
    - actionlib
    - pr2_controllers_msgs
    - visualization_msgs
    - dynamic_reconfigure
    - portrait_roboter_msgs
    - tf
    desc: This package gives a pr2 robot the ability to grip a pen off a surface.
    license: BSD
    shortdesc: pen_gripper
    source: http://alufr-ros-pkg.googlecode.com/svn/trunk/portrait_bot/pen_gripper/pen_gripper
    website: http://ros.org/wiki/pen_gripper
  portrait_painter:
    author: !!python/unicode 'Niklas Meinzer, Ina Baumgarten'
    deps:
    - tf
    - roscpp
    - rospy
    - actionlib
    - actionlib_msgs
    - geometry_msgs
    - pr2_controllers_msgs
    - visualization_msgs
    - ee_cart_imped_action
    - cv_bridge
    - sensor_msgs
    - std_msgs
    - image_transport
    - portrait_roboter_msgs
    - opencv2
    desc: "Package written for extracting lines out of an image of contours and\n\
      \    painting those lines on a board, sheet or anything else, afterwards."
    license: BSD
    shortdesc: portrait_painter
    source: http://alufr-ros-pkg.googlecode.com/svn/trunk/portrait_bot/portrait_painter
    website: http://ros.org/wiki/portrait_painter
  portrait_roboter_msgs:
    author: !!python/unicode 'Julian Schmid'
    deps:
    - std_msgs
    - sensor_msgs
    - rospy
    - roscpp
    desc: portrait_roboter_msgs
    license: BSD
    shortdesc: This package contains the service definitions for intra-project communication
      and the launch files.
    source: http://alufr-ros-pkg.googlecode.com/svn/trunk/portrait_bot/portrait_roboter_msgs
    website: http://ros.org/wiki/portrait_roboter_msgs
  rgbdslam:
    author: !!python/unicode 'Felix Endres, Juergen Hess, Nikolas Engelhard'
    deps:
    - pcl
    - eigen
    - rospy
    - roscpp
    - rosbag
    - pcl_ros
    - opencv2
    - cv_bridge
    - sensor_msgs
    - openni_camera
    - geometry_msgs
    - image_geometry
    - hogman_minimal
    - visualization_msgs
    desc: This package can be used to register the point clouds from RGBD sensors.
    license: GPL v3
    shortdesc: SLAM on RGBD Data
    source: details.php?name=tf
    website: http://alufr-ros-pkg.googlecode.com/svn/trunk/freiburg_tools/rgbdslam
  uvc_cam2:
    author: !!python/unicode 'Morgan Quigley, extended and maintained by Juergen Sturm'
    deps:
    - sensor_msgs
    - image_transport
    - opencv2
    - cv_bridge
    desc: "A node and utilities for webcams supporting the uvcvideo driver (e.g. Logitech\
      \ cameras and many others).\n\n  Package is GPL since some of its code is adapted\
      \ from GPL programs such as guvcview"
    license: GPL
    shortdesc: A node and utilities for webcams supporting the uvcvideo driver (e.g.
      Logitech cameras and many othe...
    source: details.php?name=roscpp
    website: http://alufr-ros-pkg.googlecode.com/svn/trunk/freiburg_tools/uvc_cam2
amor-ros-pkg:
  Aria:
    author: "Maintained by Sre\xC4\x87ko Juri\xC4\x87-Kavelj"
    deps: []
    desc: 'This package contains MobileRobots'' ARIA C++ library (software development
      toolkit or SDK)

      for all MobileRobots'' ActivMedia platforms.

      ARIA can dynamically control your robot''s velocity, heading, relative heading
      and

      other motion parameters either through simple low-level commands or

      through its high-level Actions infrastructure.

      ARIA also receives odometric position estimates, sonar readings and

      all other current operating data sent by the robot platform.'
    license: BSD
    shortdesc: MobileRobots' Advanced Robot Interface for Applications (ARIA) C++
      library
    source: https://amor-ros-pkg.googlecode.com/hg/
    website: http://www.ros.org/wiki/Aria
  ROSARIA:
    author: "Sre\xC4\x87ko Juri\xC4\x87-Kavelj"
    deps:
    - Aria
    - roscpp
    - nav_msgs
    - geometry_msgs
    - tf
    desc: "<tt>ROSARIA</tt> is a ROS wrapper for MobileRobots' ARIA C++ library.\n\
      \    This is a simple proof of concept package that lets you set velocity and\n\
      \    read odometry data form MobileRobots (ActivMedia) platforms (e.g. Pioneer)\n\
      \    using their official library."
    license: BSD
    shortdesc: ROS wrapper for MobileRobots' ARIA C++ library
    source: https://amor-ros-pkg.googlecode.com/hg/
    website: http://www.ros.org/wiki/ROSARIA
  anaglyph:
    author: "Sre\xC4\x87ko Juri\xC4\x87-Kavelj"
    deps:
    - sensor_msgs
    - stereo_msgs
    - image_transport
    desc: <tt>anaglyph</tt> combines left and right stereo camera images to produce
      a single stereoscopic image.
    license: BSD
    shortdesc: Get anaglyph image form a stereo camera
    source: https://amor-ros-pkg.googlecode.com/hg/
    website: http://ros.org/wiki/anaglyph
  pyoj:
    author: "Sre\xC4\x87ko Juri\xC4\x87-Kavelj"
    deps:
    - rospy
    - joy
    desc: "<tt>pyoj</tt> is a ROS joystick node, that publishes data from the\n  \
      \   <a href=\"http://code.google.com/p/accelerometer-simulator/\">accelerometer-simulator</a>.\n\
      \     It is written in Python."
    license: GPLv3
    shortdesc: pyoj - use iPhone/iPod Touch as a joystick
    source: https://amor-ros-pkg.googlecode.com/hg/
    website: http://ros.org/wiki/pyoj
aptima-ros-pkg:
  imu_um6:
    author: !!python/unicode 'Jeff Rousseau'
    deps:
    - rospy
    - sensor_msgs
    - geometry_msgs
    - tf
    desc: This package is a ROS driver for the CH Robotics UM6 IMU
    license: BSD
    shortdesc: This package is a ROS driver for the CH Robotics UM6 IMU
    source: http://aptima-ros-pkg.googlecode.com/svn/trunk/imu_um6
    website: http://ros.org/wiki/imu_um6
  irobot_create_description:
    author: !!python/unicode 'Jeff Rousseau'
    deps:
    - urdf
    - xacro
    - gazebo
    - gazebo_tools
    - fake_localization
    - erratic_gazebo_plugins
    desc: URDF description files for the Create mobile robot base from iRobot.
    license: BSD
    shortdesc: URDF for Create mobile base
    source: http://aptima-ros-pkg.googlecode.com/svn/trunk/irobot_create_description
    website: http://ros.org/wiki/irobot_create_description
asctec_drivers:
  asctec_autopilot:
    author: !!python/unicode 'William Morris, Ivan Dryanovski, Steven Bellens, Patrick
      Bouffard et al.'
    deps:
    - roscpp
    - nodelet
    - geometry_msgs
    - sensor_msgs
    - nav_msgs
    - asctec_msgs
    - diagnostic_updater
    desc: 'This is the hardware driver for the AscTec AutoPilot built by Ascending
      Technologies GmbH. http://www.asctec.de


      It should be compatible with the Hummingbird and Pelican quadrotor aircraft.


      This driver is not yet complete and the interfaces are not yet finalized. Full
      functionality will be supported in the near future. Contributions are welcome.'
    license: GPL
    shortdesc: asctec_autopilot
    source: http://robotics.ccny.cuny.edu/git/ccny-ros-pkg/asctec_drivers.git
    website: http://ros.org/wiki/asctec_autopilot
  asctec_mon:
    author: !!python/unicode 'William Morris'
    deps:
    - std_msgs
    - rospy
    - asctec_msgs
    desc: "AscTec AutoPilot Console Monitor\n\t\tThis is a curses based groundstation."
    license: GPL
    shortdesc: AscTec AutoPilot Console Monitor
    source: http://robotics.ccny.cuny.edu/git/ccny-ros-pkg/asctec_drivers.git
    website: http://ros.org/wiki/asctec_mon
  asctec_msgs:
    author: !!python/unicode 'William Morris, Ivan Dryanovski, Steven Bellens, Patrick
      Bouffard et al.'
    deps:
    - roscpp
    desc: Common messages for the AscTec AutoPilot
    license: GPL
    shortdesc: asctec_msgs
    source: http://robotics.ccny.cuny.edu/git/ccny-ros-pkg/asctec_drivers.git
    website: http://ros.org/wiki/asctec_msgs
  asctec_proc:
    author: !!python/unicode 'Ivan Dryanovski'
    deps:
    - roscpp
    - nodelet
    - mav_msgs
    - asctec_msgs
    - sensor_msgs
    - std_msgs
    - tf
    desc: The asctec_proc package is a bridge between the asctec_autopilot software
      and hardware-independent MAV tools.
    license: GPL
    shortdesc: asctec_proc
    source: http://robotics.ccny.cuny.edu/git/ccny-ros-pkg/asctec_drivers.git
    website: http://ros.org/wiki/asctec_proc
  pelican_urdf:
    author: !!python/unicode 'William Morris, Ivan Dryanovski'
    deps: []
    desc: STL and URDF files for the AscTec Pelican quadrotor.
    license: GPL
    shortdesc: pelican_urdf
    source: http://robotics.ccny.cuny.edu/git/ccny-ros-pkg/asctec_drivers.git
    website: http://ros.org/wiki/pelican_urdf
astromech-ros:
  astromech_base:
    author: "Bj\xC3\xB6rn Giesler bjoern-AT-giesler.de"
    deps:
    - roscpp
    - std_msgs
    - sensor_msgs
    - nav_msgs
    - robot_state_publisher
    - urdf
    - tf
    desc: 'astromech_base: Node to talk to an Astromech robot platform'
    license: BSD
    shortdesc: astromech_base
    source: https://astromech-ros.svn.sourceforge.net/svnroot/astromech-ros/astromech_base
    website: http://ros.org/wiki/astromech_base
  astromech_data:
    author: !!python/unicode ''
    deps: []
    desc: astromech_data
    license: BSD
    shortdesc: astromech_data
    source: https://astromech-ros.svn.sourceforge.net/svnroot/astromech-ros/astromech_data
    website: http://ros.org/wiki/astromech_data
  astromech_emo:
    author: !!python/unicode ''
    deps:
    - astromech_msg
    - sound_play
    desc: 'astromech_emo: Package to maintain the &quot;emotional state&quot; of an
      Astromech unit'
    license: BSD
    shortdesc: astromech_emo
    source: https://astromech-ros.svn.sourceforge.net/svnroot/astromech-ros/astromech_emo
    website: http://ros.org/wiki/astromech_emo
  astromech_msgs:
    author: "Bj\xC3\xB6rn Giesler"
    deps:
    - sensor_msgs
    desc: 'astromech_msgs: Common messages for the astromech-ros stack'
    license: BSD
    shortdesc: astromech_msgs
    source: https://astromech-ros.svn.sourceforge.net/svnroot/astromech-ros/astromech_msgs
    website: http://ros.org/wiki/astromech_msgs
  astromech_reason:
    author: !!python/unicode ''
    deps:
    - astromech_msgs
    - sound_play
    - std_msgs
    desc: astromech_reason
    license: BSD
    shortdesc: astromech_reason
    source: https://astromech-ros.svn.sourceforge.net/svnroot/astromech-ros/astromech_reason
    website: http://ros.org/wiki/astromech_reason
  astromech_samples:
    author: !!python/unicode ''
    deps:
    - rospy
    - joy
    - sensor_msgs
    - geometry_msgs
    desc: 'astromech_samples: Some simple samples'
    license: BSD
    shortdesc: astromech_samples
    source: https://astromech-ros.svn.sourceforge.net/svnroot/astromech-ros/astromech_samples
    website: http://ros.org/wiki/astromech_samples
  astromech_sense:
    author: "Bj\xC3\xB6rn Giesler"
    deps:
    - roscpp
    - sensor_msgs
    - visualization_msgs
    - astromech_msgs
    - cv_bridge
    - std_msgs
    - image_transport
    - camera_info_manager
    - pcl_ros
    desc: "astromech_cam: Nodes to access and display cameras. Camera access\n   \
      \  is handled by OpenCV."
    license: BSD
    shortdesc: astromech_cam
    source: https://astromech-ros.svn.sourceforge.net/svnroot/astromech-ros/astromech_sense
    website: http://ros.org/wiki/astromech_cam
au-automow:
  atomic_imu:
    author: !!python/unicode 'John Harrison'
    deps:
    - rospy
    - sensor_msgs
    - tf
    desc: Drivers for the Atomic IMU from SparkFun
    license: BSD
    shortdesc: atomic_imu
    source: http://github.com/wjwwood/au-automow.git
    website: http://ros.org/wiki/atomic_imu
  automow_ekf:
    author: !!python/unicode 'William Woodall'
    deps:
    - roscpp
    - roslib
    - geometry_msgs
    - nav_msgs
    - tf
    - eigen
    - ax2550
    - magellan_dg14
    desc: automow_ekf
    license: BSD
    shortdesc: automow_ekf
    source: http://github.com/wjwwood/au-automow.git
    website: http://ros.org/wiki/automow_ekf
  automow_image_processing:
    author: !!python/unicode 'Maintained by William Woodall'
    deps:
    - sensor_msgs
    - opencv2
    - cv_bridge
    - roscpp
    - std_msgs
    - image_transport
    - rospy
    - roslib
    - dynamic_reconfigure
    - driver_base
    - gencam_cu
    desc: Contains nodes related to processing information out of camera images.
    license: BSD
    shortdesc: automow_image_processing
    source: http://github.com/wjwwood/au-automow.git
    website: http://ros.org/wiki/automow_image_processing
  automow_launch:
    author: !!python/unicode 'Maintained by William Woodall'
    deps:
    - automow_robot_model
    - robot_pose_ekf
    - ax2550
    - atomic_imu
    - magellan_dg14
    - hokuyo_node
    - automow_image_processing
    - automow_navigation
    desc: Contains launch files for various components and run modes for the Auburn
      University Autonomous Lawnmower.
    license: BSD
    shortdesc: automow_launch
    source: http://github.com/wjwwood/au-automow.git
    website: http://ros.org/wiki/automow_launch
  automow_maps:
    author: !!python/unicode 'William Woodall'
    deps:
    - map_server
    desc: Contains maps and map_server configurations and launch files.
    license: BSD
    shortdesc: automow_maps
    source: http://github.com/wjwwood/au-automow.git
    website: http://ros.org/wiki/automow_maps
  automow_navigation:
    author: !!python/unicode 'William Woodall'
    deps:
    - move_base
    - amcl
    desc: 'Contains all elements related to 2D navigation, including: move_base configurations,
      AMCL launch scripts, and SLAM launch scripts.'
    license: BSD
    shortdesc: automow_navigation
    source: http://github.com/wjwwood/au-automow.git
    website: http://ros.org/wiki/automow_navigation
  automow_robot_model:
    author: !!python/unicode 'Maintained by William Woodall'
    deps:
    - urdf
    - sensor_msgs
    - tf
    desc: Contains configurations and state publishers for the Autonomous Lawnmower's
      robot model.
    license: BSD
    shortdesc: automow_robot_model
    source: http://github.com/wjwwood/au-automow.git
    website: http://ros.org/wiki/automow_robot_model
  automow_tests:
    author: !!python/unicode 'Mowbot'
    deps:
    - roscpp
    - geometry_msgs
    desc: tests
    license: BSD
    shortdesc: tests
    source: http://github.com/wjwwood/au-automow.git
    website: http://ros.org/wiki/tests
  ax2550:
    author: !!python/unicode 'William Woodall'
    deps:
    - roscpp
    - tf
    - geometry_msgs
    - nav_msgs
    - serial
    desc: ax2550
    license: BSD
    shortdesc: ax2550
    source: http://github.com/wjwwood/au-automow.git
    website: http://ros.org/wiki/ax2550
  ax2550_python:
    author: !!python/unicode 'William Woodall'
    deps:
    - rospy
    - roslib
    - std_msgs
    - geometry_msgs
    - nav_msgs
    - joy
    - tf
    desc: Controls the ax2550 motor controller.
    license: BSD
    shortdesc: Controls the ax2550 motor controller.
    source: http://github.com/wjwwood/au-automow.git
    website: http://ros.org/wiki/ax2550
  magellan_dg14:
    author: !!python/unicode 'William Woodall'
    deps:
    - rospy
    - roscpp
    - tf
    - nav_msgs
    - gps_common
    - serial
    desc: dg14
    license: BSD
    shortdesc: dg14
    source: http://github.com/wjwwood/au-automow.git
    website: http://ros.org/wiki/dg14
  microstrain_3dm_gx3:
    author: !!python/unicode 'Jeremy Leibs, Blaise Gassend, Patrick Beeson'
    deps:
    - sensor_msgs
    - self_test
    - diagnostic_updater
    - tf
    - std_srvs
    desc: "A driver for IMUs compatible the microstrain 3DM-GX3 protocol.\n    Based\
      \ on the microstrain_3dmgx2 driver from Willow Garage."
    license: LGPL
    shortdesc: Driver for 3DM-GX3 compatible IMUs.
    source: details.php?name=roscpp
    website: http://github.com/wjwwood/au-automow.git
  osc_monitor:
    author: !!python/unicode 'Michael Carroll'
    deps:
    - rospy
    - power_control_board
    desc: osc_monitor
    license: BSD
    shortdesc: osc_monitor
    source: http://github.com/wjwwood/au-automow.git
    website: http://ros.org/wiki/osc_monitor
  power_control_board:
    author: !!python/unicode 'Michael Carroll'
    deps:
    - rospy
    - avr_bridge
    desc: power_control_board
    license: BSD
    shortdesc: power_control_board
    source: http://github.com/wjwwood/au-automow.git
    website: http://ros.org/wiki/power_control_board
audiocommon:
  audio_capture:
    author: !!python/unicode 'Nate Koenig'
    deps:
    - roscpp
    - audio_msgs
    desc: "Transports audio from a source to a destination. Audio sources can come\n\
      \    from a microphone or file. The destination can play the audio or save it\n\
      \    to an mp3 file."
    license: BSD
    shortdesc: audio_capture
    source: https://kforge.ros.org/audiocommon/hg
    website: http://ros.org/wiki/audio_capture
  audio_msgs:
    author: !!python/unicode 'Nate Koenig'
    deps: []
    desc: audio_msgs
    license: BSD
    shortdesc: audio_msgs
    source: https://kforge.ros.org/audiocommon/hg
    website: http://ros.org/wiki/audio_msgs
  audio_play:
    author: !!python/unicode 'Nate Koenig'
    deps:
    - roscpp
    - audio_msgs
    desc: audio_play
    license: BSD
    shortdesc: audio_play
    source: https://kforge.ros.org/audiocommon/hg
    website: http://ros.org/wiki/audio_play
behavior_engine:
  actionlib_lua:
    author: !!python/unicode 'Tim Niemueller'
    deps:
    - roslua
    - actionlib_msgs
    desc: Lua modules to deal with actionlib.
    license: BSD
    shortdesc: actionlib_lua
    source: https://github.com/timn/ros-actionlib_lua.git
    website: http://ros.org/wiki/actionlib_lua
  fawkes_lua:
    author: !!python/unicode 'Tim Niemueller'
    deps:
    - roslua
    desc: Lua modules imported and synced with Fawkes (http://www.fawkesrobotics.org)
    license: GPLv2+
    shortdesc: fawkes_lua
    source: https://github.com/timn/ros-fawkes_lua.git
    website: http://ros.org/wiki/fawkes_lua
  herb_agents:
    author: !!python/unicode 'Tim Niemueller'
    deps:
    - roslua
    - actionlib_lua
    - lua_utils
    - fawkes_lua
    - skiller
    desc: Agent scripts for HERB.
    license: BSD
    shortdesc: herb_agents
    source: https://github.com/timn/ros-herb_agents.git
    website: http://ros.org/wiki/herb_agents
  herb_skills:
    author: !!python/unicode 'Tim Niemueller'
    deps:
    - skiller
    - roslua
    - actionlib_lua
    - actionlib_msgs
    - fawkes_lua
    desc: Skills used for the HERB robot at Intel Research Pittsburgh.
    license: BSD
    shortdesc: herb_skills
    source: https://github.com/timn/ros-herb_skills.git
    website: http://ros.org/wiki/herb_skills
  lua_utils:
    author: !!python/unicode 'Tim Niemueller'
    deps:
    - roscpp
    - roslib
    desc: "This package provides utility classes to integrate Lua into a C++ program.\n\
      \   The code is copied from Fawkes (http://www.fawkesrobotics.org)."
    license: GPLv2+
    shortdesc: "This package provides utility classes to integrate Lua into a C++\
      \ program.\n   The code is copied..."
    source: https://github.com/timn/ros-lua_utils.git
    website: http://ros.org/wiki/lua_utils
  luaagent:
    author: !!python/unicode 'Tim Niemueller'
    deps:
    - roscpp
    - roslib
    - lua_utils
    - skiller
    - roslua
    - actionlib_lua
    desc: Behavior Engine Lua agent.
    license: GPLv2+
    shortdesc: Behavior Engine Lua agent.
    source: https://github.com/timn/ros-luaagent.git
    website: http://ros.org/wiki/luaagent
berkeley_misc_packages:
  rll_utils:
    author: !!python/unicode 'Stephen Miller'
    deps:
    - rospy
    - tf
    - geometry_msgs
    - opencv2
    - cv_bridge
    - sensor_msgs
    - visualization_msgs
    desc: rll_utils
    license: BSD
    shortdesc: rll_utils
    source: http://ros.berkeley.edu/svn/berkeley-ros-pkg/misc_packages/rll_utils/trunk/rll_utils
    website: http://ros.org/wiki/rll_utils
  shape_window:
    author: !!python/unicode 'Stephen Miller'
    deps:
    - rospy
    - opencv2
    desc: shape_window
    license: BSD
    shortdesc: shape_window
    source: http://ros.berkeley.edu/svn/berkeley-ros-pkg/misc_packages/shape_window/trunk/shape_window
    website: http://ros.org/wiki/shape_window
  smach_utils:
    author: !!python/unicode 'Stephen Miller'
    deps:
    - rospy
    - actionlib
    - pr2_simple_motions_apps
    - pr2_simple_arm_motions
    - smach
    - smach_ros
    - geometry_msgs
    desc: smach_utils
    license: BSD
    shortdesc: smach_utils
    source: http://ros.berkeley.edu/svn/berkeley-ros-pkg/misc_packages/smach_utils/trunk/smach_utils
    website: http://ros.org/wiki/smach_utils
  stereo_click:
    author: !!python/unicode 'Stephen Miller'
    deps:
    - rospy
    - opencv2
    - cv_bridge
    - sensor_msgs
    - std_msgs
    - std_srvs
    - tf
    - geometry_msgs
    - image_geometry
    desc: stereo_click
    license: BSD
    shortdesc: stereo_click
    source: http://ros.berkeley.edu/svn/berkeley-ros-pkg/misc_packages/stereo_click/trunk/stereo_click
    website: http://ros.org/wiki/stereo_click
bilibot-ros-pkg:
  bilibot_bringup:
    author: !!python/unicode 'Jeff Rousseau'
    deps:
    - turtlebot_node
    - openni_camera
    - pointcloud_to_laserscan
    - tf
    desc: bilibot_bringup provides roslaunch scripts for starting the bilibot base
      functionality.
    license: BSD
    shortdesc: bilibot_bringup
    source: http://bilibot-ros-pkg.googlecode.com/svn/trunk/bilibot/bilibot_bringup
    website: http://ros.org/wiki/bilibot_bringup
  bilibot_navigation:
    author: !!python/unicode 'garratt'
    deps: []
    desc: bilibot_navigation
    license: BSD
    shortdesc: bilibot_navigation
    source: http://bilibot-ros-pkg.googlecode.com/svn/trunk/bilibot/bilibot_navigation
    website: http://ros.org/wiki/bilibot_navigation
bosch-ros-pkg:
  amtec:
    author: !!python/unicode 'Charles DuHadway and Benjamin Pitzer'
    deps:
    - std_msgs
    - tf
    desc: A driver for the Schunk(formerly Amtec) pan-tilt unit. Provides a library,
      ROS wrapper, test program and ROS node for sweeping the unit.
    license: BSD
    shortdesc: driver for Schunk(formerly Amtec) pan-tilt unit
    source: details.php?name=roscpp
    website: https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg/trunk/stacks/bosch_drivers/amtec
  augmented_grasp_planner:
    author: !!python/unicode 'Charles DuHadway'
    deps:
    - roscpp
    - object_manipulation_msgs
    - geometry_msgs
    - object_manipulator
    - interactive_rviz_helper
    - interactive_rviz_msgs
    - tf
    - visualization_msgs
    desc: Uses human feedback to sort results of any automatic grasp planner.
    license: BSD
    shortdesc: augmented_grasp_planner
    source: https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg/trunk/stacks/shared_autonomy/augmented_grasp_planner
    website: http://ros.org/wiki/augmented_grasp_planner
  augmented_object_detector:
    author: !!python/unicode 'Benjamin Pitzer'
    deps:
    - actionlib
    - object_manipulation_msgs
    - tabletop_object_detector
    - tabletop_collision_map_processing
    - std_msgs
    - sensor_msgs
    - geometry_msgs
    - visualization_msgs
    - geometric_shapes_msgs
    - household_objects_database_msgs
    - tf
    - pcl
    - pcl_ros
    - pcl_tf
    - opencv2
    - image_proc
    - cv_bridge
    - image_transport
    - household_objects_database
    - tabletop_object_detector
    - grabcut_3d
    desc: augmented_object_detector
    license: BSD
    shortdesc: augmented_object_detector
    source: https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg/trunk/stacks/shared_autonomy/augmented_object_detector
    website: http://ros.org/wiki/augmented_object_detector
  bma180:
    author: !!python/unicode 'mil1pal'
    deps:
    - roscpp
    - std_msgs
    - sub20
    desc: bma180
    license: BSD
    shortdesc: bma180
    source: https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg/trunk/stacks/bosch_drivers/bma180
    website: http://ros.org/wiki/bma180
  bosch_maps:
    author: !!python/unicode 'Charles DuHadway'
    deps: []
    license: BSD
    shortdesc: bosch-ros-pkg maps
    source: list.php
    website: https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg/trunk/stacks/bosch_demos/bosch_maps
  bosch_worlds:
    author: !!python/unicode 'Charles DuHadway'
    deps: []
    license: BSD
    shortdesc: bosch-ros-pkg worlds
    source: list.php
    website: https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg/trunk/stacks/bosch_demos/bosch_worlds
  camera_self_filter:
    author: !!python/unicode 'Christian Bersch'
    deps:
    - roscpp
    - image_geometry
    - image_transport
    - opencv2
    - cv_bridge
    - sensor_msgs
    - urdf
    - vcglib
    - tf
    - message_filters
    desc: camera_self_filter
    license: GPL
    shortdesc: camera_self_filter
    source: https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg/trunk/stacks/bosch_image_proc/camera_self_filter
    website: http://ros.org/wiki/camera_self_filter
  explore:
    author: !!python/unicode 'Charles DuHadway'
    deps:
    - roscpp
    - std_msgs
    - costmap_2d
    - actionlib
    - move_base_msgs
    - tf
    - roslib
    - navfn
    - visualization_msgs
    - geometry_msgs
    - nav_msgs
    desc: A node that provides frontier based exploration.
    license: BSD
    shortdesc: frontier based exploration
    source: https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg/trunk/stacks/exploration/explore
    website: http://ros.org/wiki/explore
  explore_pr2:
    author: !!python/unicode 'Charles DuHadway'
    deps:
    - explore
    - pr2_2dnav_slam
    - gmapping
    desc: Demo for running explore stack on PR2
    license: BSD
    shortdesc: explore_pr2
    source: https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg/trunk/stacks/pr2_exploration/explore_pr2
    website: http://ros.org/wiki/explore_pr2
  explore_stage:
    author: !!python/unicode 'Charles DuHadway'
    deps:
    - stage
    - explore
    - move_base
    - gmapping
    - tf
    desc: Demos for explore package in bosch-ros-pkg
    license: BSD
    shortdesc: Explore demos
    source: https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg/trunk/stacks/exploration/explore_stage
    website: http://ros.org/wiki/explore_stage
  grabcut_3d:
    author: !!python/unicode 'Benjamin Pitzer'
    deps:
    - roscpp
    - opencv2
    - pcl
    - pcl_ros
    - pcl_tf
    desc: ''
    license: BSD
    shortdesc: augmented_rviz
    source: https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg/trunk/stacks/shared_autonomy/grabcut_3d
    website: http://ros.org/wiki/grabcut_3d
  interactive_rviz_msgs:
    author: !!python/unicode 'Charles DuHadway'
    deps:
    - geometry_msgs
    desc: Defines messages used for communication between our custom interactive rviz
      and the augmented_grasp_planner.
    license: BSD
    shortdesc: interactive_rviz_msgs
    source: https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg/trunk/stacks/shared_autonomy/interactive_rviz_msgs
    website: http://ros.org/wiki/interactive_rviz_msgs
  leptonica:
    author: !!python/unicode 'Benjamin Pitzer'
    deps: []
    desc: ROS wrapper for leptonica.
    license: BSD
    shortdesc: ROS wrapper for leptonica.
    source: https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg/trunk/stacks/ocr/leptonica
    website: http://ros.org/wiki/leptonica
  mjpeg_server:
    author: !!python/unicode 'Benjamin Pitzer'
    deps:
    - roscpp
    - std_msgs
    - roslib
    - cv_bridge
    - image_transport
    - opencv2
    desc: A node that provides a mjpeg server which is able to subscribe to any ros
      image stream.
    license: BSD
    shortdesc: mjpeg_server
    source: https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg/trunk/stacks/remote_lab/mjpeg_server
    website: http://ros.org/wiki/mjpeg_server
  ocr_server:
    author: !!python/unicode 'Benjamin Pitzer'
    deps:
    - roscpp
    - sensor_msgs
    - opencv2
    - image_transport
    - cv_bridge
    - tesseract
    desc: ocr_server
    license: BSD
    shortdesc: ocr_server
    source: https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg/trunk/stacks/ocr/ocr_server
    website: http://ros.org/wiki/ocr_server
  photo:
    author: !!python/unicode 'Benjamin Pitzer'
    deps:
    - std_msgs
    - sensor_msgs
    - opencv2
    - self_test
    desc: ''
    license: BSD
    shortdesc: A generic driver for digital cameras based on gphoto2
    source: details.php?name=roscpp
    website: https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg/trunk/stacks/bosch_drivers/photo
  ping:
    author: !!python/unicode 'Benjamin Pitzer'
    deps:
    - roscpp
    - std_msgs
    - roslib
    desc: A node to measure roundtrip delays.
    license: BSD
    shortdesc: A node to measure roundtrip delays.
    source: https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg/trunk/stacks/remote_lab/ping
    website: http://ros.org/wiki/ping
  pr2_camera_self_filter:
    author: !!python/unicode 'Christian Bersch'
    deps:
    - rospy
    - camera_self_filter
    desc: pr2_camera_self_filter
    license: BSD
    shortdesc: pr2_camera_self_filter
    source: https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg/trunk/stacks/bosch_image_proc/pr2_camera_self_filter
    website: http://ros.org/wiki/pr2_camera_self_filter
  pr2_pick_and_place_service:
    author: !!python/unicode 'Sarah Osentoski'
    deps:
    - rospy
    - roscpp
    - actionlib
    - actionlib_msgs
    - geometry_msgs
    - object_manipulation_msgs
    - object_manipulator
    - tabletop_object_detector
    - tabletop_collision_map_processing
    - household_objects_database
    - pr2_gripper_reactive_approach
    - simple_Jtranspose_controller
    - pr2_tabletop_manipulation_launch
    desc: Provides much of the functionality of the pick_and_place_demo through a
      set of services.
    license: BSD
    shortdesc: pr2_pick_and_place_service
    source: https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg/trunk/stacks/remote_lab/pr2_pick_and_place_service
    website: http://ros.org/wiki/pr2_pick_and_place_service
  rosjs_common:
    author: !!python/unicode 'Benjamin Pitzer'
    deps: []
    desc: rosjs common.
    license: BSD
    shortdesc: rosjs_common
    source: https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg/trunk/stacks/remote_lab/rosjs_common
    website: http://ros.org/wiki/rosjs_common
  rosjs_pr2interaction:
    author: !!python/unicode 'Sarah Osentoski'
    deps:
    - rosjs_common
    desc: rosjs_pr2interaction
    license: BSD
    shortdesc: rosjs_pr2interaction
    source: https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg/trunk/stacks/remote_lab/rosjs_pr2interaction
    website: http://ros.org/wiki/rosjs_pr2interaction
  rosjs_remotelabwidgets:
    author: !!python/unicode 'Benjamin Pitzer'
    deps:
    - rosjs_common
    desc: rosjs common.
    license: BSD
    shortdesc: rosjs_widgets
    source: https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg/trunk/stacks/remote_lab/rosjs_remotelabwidgets
    website: http://ros.org/wiki/rosjs_widgets
  rosjs_tests:
    author: !!python/unicode 'Benjamin Pitzer'
    deps:
    - rosjs_common
    - rosjs_visualization
    - rosjs_remotelabwidgets
    desc: rosjs tests.
    license: BSD
    shortdesc: rosjs_tests
    source: https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg/trunk/stacks/remote_lab/rosjs_tests
    website: http://ros.org/wiki/rosjs_tests
  rosjs_tutorials:
    author: !!python/unicode 'Benjamin Pitzer'
    deps:
    - rosjs_common
    - rosjs_visualization
    - rosjs_remotelabwidgets
    desc: rosjs tutorials.
    license: BSD
    shortdesc: rosjs_tutorials
    source: https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg/trunk/stacks/remote_lab/rosjs_tutorials
    website: http://ros.org/wiki/rosjs_tutorials
  rosjs_visualization:
    author: !!python/unicode 'Benjamin Pitzer'
    deps:
    - rosjs_common
    desc: rosjs common.
    license: BSD
    shortdesc: rosjs_visualization
    source: https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg/trunk/stacks/remote_lab/rosjs_visualization
    website: http://ros.org/wiki/rosjs_visualization
  safe_base_controller:
    author: !!python/unicode 'Sebastian Haug, Sachin Chita, John Hsu, Melonee Wise'
    deps:
    - geometry_msgs
    - roscpp
    - realtime_tools
    - pluginlib
    - angles
    - pr2_mechanism_controllers
    - pr2_controller_interface
    - filters
    - std_msgs
    desc: The safe_base_controller only moves/turns the base if movement/turning in
      this direction is allowed. It subscribes to the command_limits topic where max
      and min velocities greater than zero must be published in order for the controller
      to allow movement.
    license: BSD
    shortdesc: Safe Base Controller
    source: https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg/trunk/stacks/bosch_skin/safe_base_controller
    website: http://www.ros.org/wiki/safe_base_controller
  safe_teleop_base:
    author: !!python/unicode 'Charles DuHadway'
    deps:
    - roscpp
    - base_local_planner
    - costmap_2d
    desc: This package provides automatic collision avoidance and is intended to be
      used for safer teleoperation of a robot base.
    license: BSD
    shortdesc: safe_teleop_base
    source: https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg/trunk/stacks/shared_autonomy/safe_teleop_base
    website: http://ros.org/wiki/safe_teleop_base
  safe_teleop_pr2:
    author: !!python/unicode 'Charles DuHadway'
    deps:
    - safe_teleop_base
    - pr2_teleop
    - joy
    desc: Launch files for running safe_teleop_base on pr2
    license: BSD
    shortdesc: safe_teleop_pr2
    source: https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg/trunk/stacks/shared_autonomy/safe_teleop_pr2
    website: http://ros.org/wiki/safe_teleop_pr2
  safe_teleop_stage:
    author: !!python/unicode 'Charles DuHadway'
    deps:
    - safe_teleop_base
    - stage
    - joy
    desc: Demo of safe_teleop in stage
    license: BSD
    shortdesc: safe_teleop_stage
    source: https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg/trunk/stacks/shared_autonomy/safe_teleop_stage
    website: http://ros.org/wiki/safe_teleop_stage
  simple_robot_control:
    author: !!python/unicode 'Christian Bersch, Sebastian Haug'
    deps:
    - roscpp
    - rospy
    - actionlib
    - sensor_msgs
    - kinematics_msgs
    - geometry_msgs
    - trajectory_msgs
    - std_msgs
    - pr2_controllers_msgs
    - move_arm_msgs
    - tf
    - tf_conversions
    - pr2_common_action_msgs
    desc: Simple C++ and python interface to move the arms, head, base, torso and
      grippers of a PR2 robot.
    license: BSD
    shortdesc: interface to PR2 controllers
    source: https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg/trunk/stacks/bosch_manipulation_utils/simple_robot_control
    website: http://ros.org/wiki/simple_robot_control
  skin_config:
    author: !!python/unicode 'Joerg Wagner'
    deps:
    - roslib
    - roscpp
    - std_msgs
    - skin_driver
    desc: skin_config
    license: BSD
    shortdesc: skin_config
    source: https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg/trunk/stacks/bosch_skin/skin_config
    website: http://ros.org/wiki/skin_config
  skin_dashboard:
    author: !!python/unicode 'Joerg Wagner'
    deps:
    - roslib
    - roscpp
    - std_msgs
    - skin_driver
    desc: skin_dashboard
    license: BSD
    shortdesc: skin_dashboard
    source: https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg/trunk/stacks/bosch_skin/skin_dashboard
    website: http://ros.org/wiki/skin_dashboard
  skin_demo_movebase:
    author: !!python/unicode 'Sebastian Haug'
    deps:
    - roscpp
    - geometry_msgs
    - tf
    - skin_driver
    desc: The skin_demo_movebase package allows users to teleop the PR2's base using
      the Bosch Skin.
    license: BSD
    shortdesc: Touchless teleop of PR2 using the Bosch Skin
    source: https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg/trunk/stacks/bosch_skin/skin_demo_movebase
    website: http://ros.org/wiki/skin_demo_movebase
  skin_driver:
    author: !!python/unicode 'Joerg Wagner'
    deps:
    - roslib
    - roscpp
    - std_msgs
    - dynamic_reconfigure
    - sub20
    desc: skin_driver
    license: BSD
    shortdesc: skin_driver
    source: https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg/trunk/stacks/bosch_skin/skin_driver
    website: http://ros.org/wiki/skin_driver
  skin_safe_base:
    author: !!python/unicode 'Sebastian Haug'
    deps:
    - roscpp
    - geometry_msgs
    - skin_driver
    - safe_base_controller
    desc: The skin_safe_base node uses skin patches mounted to the robot's base to
      determine in which directions the robot can drive without hitting obstacles.
      The node constantly publishes command_limits messages and prevents driving/truning
      in a specific direction if something blocks a sensor in that direction. The
      command_limits are enforced by using the safe_base_controller instead of the
      PR2's regular base_controller. The mapping of the patch ids to their location
      on the robots base is done using the skin_safe_base.yaml file.
    license: BSD
    shortdesc: Prevent robot base from driving into objects using Bosch Skin
    source: https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg/trunk/stacks/bosch_skin/skin_safe_base
    website: http://ros.org/wiki/skin_safe_base
  smi540:
    author: !!python/unicode 'Lukas Marti'
    deps:
    - std_msgs
    - roscpp
    - sub20
    desc: smi540
    license: BSD
    shortdesc: smi540
    source: https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg/trunk/stacks/bosch_drivers/smi540
    website: http://ros.org/wiki/smi540
  sub20:
    author: !!python/unicode 'Sebastian Haug'
    deps: []
    desc: The driver enables communication with a XDIMAX SUB-20 device via USB. The
      SUB-20 sources are downloaded from XDIMAX during build.
    license: LGPL
    shortdesc: ROS driver for the SUB-20 device from XDIMAX.
    source: https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg/trunk/stacks/bosch_drivers/sub20
    website: http://ros.org/wiki/sub20
  tesseract:
    author: !!python/unicode 'Benjamin Pitzer'
    deps: []
    desc: ''
    license: BSD
    shortdesc: A ROS wrapper for tesseract
    source: details.php?name=leptonica
    website: https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg/trunk/stacks/ocr/tesseract
  usb_cam:
    author: !!python/unicode 'Benjamin Pitzer'
    deps:
    - roscpp
    - std_msgs
    - sensor_msgs
    - self_test
    desc: ''
    license: BSD
    shortdesc: A generic driver for USB camera that are supported by V4L
    source: details.php?name=image_transport
    website: https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg/trunk/stacks/bosch_drivers/usb_cam
  vcglib:
    author: !!python/unicode 'Christian Bersch'
    deps:
    - roscpp
    desc: vcglib
    license: GPL
    shortdesc: vcglib
    source: https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg/trunk/stacks/bosch_image_proc/vcglib
    website: http://ros.org/wiki/vcglib
  wviz:
    author: !!python/unicode 'Benjamin Pitzer'
    deps:
    - rosjs_common
    - rosjs_visualization
    - rosjs_remotelabwidgets
    - visualization_msgs
    - pr2_pick_and_place_service
    desc: Web visualization tool based on  webgl and websockets.
    license: BSD
    shortdesc: Web visualization tool based on  webgl and websockets.
    source: https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg/trunk/stacks/remote_lab/wviz
    website: http://ros.org/wiki/wviz
  wviz_scene_manager:
    author: !!python/unicode 'Benjamin Pitzer'
    deps:
    - roscpp
    - std_msgs
    - roslib
    - visualization_msgs
    desc: A node maintains the scene state for web based visualization (wviz).
    license: BSD
    shortdesc: wviz_scene_manager
    source: https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg/trunk/stacks/remote_lab/wviz_scene_manager
    website: http://ros.org/wiki/wviz_scene_manager
  wviz_tf_manager:
    author: !!python/unicode 'Benjamin Pitzer'
    deps:
    - roscpp
    - std_msgs
    - roslib
    - tf
    desc: A node that buffers tf messages and publishes only changes.
    license: BSD
    shortdesc: wviz_tf_manager
    source: https://bosch-ros-pkg.svn.sourceforge.net/svnroot/bosch-ros-pkg/trunk/stacks/remote_lab/wviz_tf_manager
    website: http://ros.org/wiki/wviz_tf_manager
brown-experimental:
  BrownJoyControlBase:
    author: !!python/unicode 'Alex Tarvo'
    deps:
    - joy
    desc: BrownJoyControlBase
    license: BSD
    shortdesc: BrownJoyControlBase
    source: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/pr2develop/BrownJoyControlBase
    website: http://ros.org/wiki/BrownJoyControlBase
  NAOcontrol:
    author: !!python/unicode 'Graylin Trevor Jay'
    deps:
    - roscpp
    desc: NAOcontrol provides message types to be used by NAO control nodes.
    license: BSD
    shortdesc: NAOcontrol
    source: details.php?name=rospy
    website: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/aldebaran_nao_p/NAOcontrol
  NaoIK:
    author: !!python/unicode ''
    deps:
    - NAOcontrol
    desc: NaoIK
    license: BSD
    shortdesc: NaoIK
    source: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/aldebaran_nao_p/NaoIK
    website: http://ros.org/wiki/NaoIK
  NaoImageTransport:
    author: !!python/unicode 'Graylin Trevor Jay'
    deps:
    - cv_bridge
    - image_transport
    desc: 'NaoImageTransport takes the native NAO video stream (/eyes) and republishes

      it as a ROS compatible image transport.'
    license: BSD
    shortdesc: NaoImageTransport
    source: details.php?name=opencv2
    website: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/aldebaran_nao_p/NaoImageTransport
  NaoJoyControl:
    author: !!python/unicode 'Alex Tarvo'
    deps:
    - joy
    - BrownJoyControlBase
    - std_msgs
    - roscpp
    - NAOcontrol
    desc: "NaoJoyControl - a ROS node to control Aldebaran Nao using a joystick or\
      \ \n     a joystick-like controller (e.g. XBOX controller)\n     \n     Please\
      \ see README for details and documentation"
    license: BSD
    shortdesc: NaoJoyControl
    source: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/pr2develop/NaoJoyControl
    website: http://ros.org/wiki/NaoJoyControl
  NaoSim:
    author: !!python/unicode ''
    deps:
    - NAOcontrol
    desc: NaoSim is a package for simulating the nao in ros using aldebaran's naoqi
      and choreagraphe software. Check out the README for details.
    license: BSD
    shortdesc: NaoSim is a package for simulating the nao in ros using aldebaran's
      naoqi and choreagraphe so...
    source: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/aldebaran_nao_p/NaoSim
    website: http://ros.org/wiki/NaoSim
  PR2JointController:
    author: !!python/unicode 'Alex Tarvo'
    deps:
    - pr2_controller_interface
    - pr2_mechanism_model
    - pluginlib
    desc: PR2JoyControl
    license: BSD
    shortdesc: PR2JointController
    source: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/pr2develop/pr2_joy_control/PR2JointController
    website: http://ros.org/wiki/PR2JoyControl
  PR2JoyControl:
    author: !!python/unicode 'Alex Tarvo'
    deps:
    - joy
    - BrownJoyControlBase
    - PR2JointController
    - pr2_controllers_msgs
    - actionlib
    - std_msgs
    - roscpp
    desc: PR2JoyControl
    license: BSD
    shortdesc: PR2JoyControl
    source: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/pr2develop/pr2_joy_control/PR2JoyControl
    website: http://ros.org/wiki/PR2JoyControl
  WiiTeleop:
    author: !!python/unicode 'Graylin Trevor Jay'
    deps:
    - NAOcontrol
    - ar_alpha
    desc: 'WiiTeleop demonstrates the use of the NAOcontrol messages. It is a small

      client program that allows the user to drive the NAO via WiiMote.'
    license: BSD
    shortdesc: 'WiiTeleop demonstrates the use of the NAOcontrol messages. It is a
      small

      client program that a...'
    source: details.php?name=wiimote
    website: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/aldebaran_nao_p/WiiTeleop
  action_sequencer:
    author: !!python/unicode 'Brian Thomas'
    deps:
    - rospy
    - smach
    - smach_ros
    - actionlib
    - actionlib_msgs
    - move
    desc: action_sequencer
    license: BSD
    shortdesc: action_sequencer
    source: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/robot_dialog/action_sequencer
    website: http://ros.org/wiki/action_sequencer
  ar_localizer:
    author: !!python/unicode 'Christopher Crick'
    deps:
    - rospy
    - sensor_msgs
    - geometry_msgs
    - ar_recog
    - position_tracker
    desc: ar_localizer
    license: BSD
    shortdesc: ar_localizer
    source: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/ar_localizer
    website: http://ros.org/wiki/ar_localizer
  ar_map_navigate_bumpers:
    author: !!python/unicode 'human'
    deps:
    - std_msgs
    - roscpp
    - ar_recog
    - ar_localizer
    - position_tracker
    - nav_msgs
    - irobot_create_2_1
    desc: ar_map_navigate_bumpers
    license: BSD
    shortdesc: ar_map_navigate_bumpers
    source: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/meshnet/ar_map_navigate_bumpers
    website: http://ros.org/wiki/ar_map_navigate_bumpers
  ar_map_navigate_bumpers_dijkstra:
    author: !!python/unicode 'human'
    deps:
    - std_msgs
    - rospy
    - roscpp
    - ar_recog
    - ar_localizer
    - position_tracker
    - nav_msgs
    - irobot_create_2_1
    desc: ar_map_navigate_bumpers_dijkstra
    license: BSD
    shortdesc: ar_map_navigate_bumpers_dijkstra
    source: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/meshnet/ar_map_navigate_bumpers_dijkstra
    website: http://ros.org/wiki/ar_map_navigate_bumpers_dijkstra
  ar_map_navigate_bumpers_explore:
    author: !!python/unicode 'human'
    deps:
    - std_msgs
    - roscpp
    - ar_recog
    - ar_localizer
    - position_tracker
    - nav_msgs
    - irobot_create_2_1
    desc: ar_map_navigate_bumpers_explore
    license: BSD
    shortdesc: ar_map_navigate_bumpers_explore
    source: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/meshnet/ar_map_navigate_bumpers_explore
    website: http://ros.org/wiki/ar_map_navigate_bumpers_explore
  ar_recog:
    author: !!python/unicode 'Graylin Trevor Jay and Christopher Crick'
    deps:
    - cv_bridge
    - image_transport
    desc: ar_recog processes ROS image-transports with ARToolkit.
    license: GPL
    shortdesc: ar_recog processes ROS image-transports with ARToolkit.
    source: details.php?name=opencv2
    website: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/ar_recog
  ardrone_brown:
    author: !!python/unicode 'Paul Kernfeld and Christopher Crick'
    deps:
    - roscpp
    - image_transport
    - sensor_msgs
    desc: A driver for the Parrot AR Drone developed by Brown University.  It includes
      furll ROS support for both motion control and video.
    license: BSD
    shortdesc: ardrone_brown
    source: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/ardrone_brown
    website: http://ros.org/wiki/ardrone_brown
  arwen:
    author: !!python/unicode ''
    deps:
    - sensor_msgs
    - rospy
    - cv_bridge
    - opencv2
    desc: Simple program to convert swiss ranger data to ROS depth maps
    license: ''
    shortdesc: Simple program to convert swiss ranger data to ROS depth maps
    source: details.php?name=image_transport
    website: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/arwen
  bag_and_tag:
    author: !!python/unicode 'obot'
    deps:
    - rospy
    - roscpp
    - geometry_msgs
    - ar_recog
    - irobot_create_2_1
    desc: bag_and_tag
    license: BSD
    shortdesc: bag_and_tag
    source: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/bag_and_tag
    website: http://ros.org/wiki/bag_and_tag
  bashcommand:
    author: !!python/unicode 'Graylin Trevor jay'
    deps: []
    desc: A extremely simple wrapper that allows you to launch arbitrary bash commands
      from within launch files. When launched it will execute the command located
      in the COMMAND environment variable and then exit.
    license: BSD
    shortdesc: bashcommand
    source: details.php?name=rospy
    website: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/bashcommand
  batman_mesh_info:
    author: !!python/unicode 'human'
    deps:
    - std_msgs
    - roscpp
    desc: batman_mesh_info
    license: BSD
    shortdesc: batman_mesh_info
    source: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/meshnet/batman_mesh_info
    website: http://ros.org/wiki/batman_mesh_info
  coordination_client:
    author: !!python/unicode 'human'
    deps:
    - std_msgs
    - roscpp
    - position_tracker
    - batman_mesh_info
    desc: coordination_client
    license: BSD
    shortdesc: coordination_client
    source: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/meshnet/coordination_client
    website: http://ros.org/wiki/coordination_client
  coordination_server:
    author: !!python/unicode 'human'
    deps:
    - std_msgs
    - roscpp
    - position_tracker
    - nav_msgs
    - irobot_create_2_1
    desc: coordination_server
    license: BSD
    shortdesc: coordination_server
    source: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/meshnet/coordination_server
    website: http://ros.org/wiki/coordination_server
  create_supervisor:
    author: !!python/unicode 'Galatea'
    deps:
    - roscpp
    - rospy
    - irobot_create_2_1
    desc: create_supervisor
    license: BSD
    shortdesc: create_supervisor
    source: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/create_supervisor
    website: http://ros.org/wiki/create_supervisor
  discreteMove_0_0_1:
    author: !!python/unicode 'Graylin Trevor Jay'
    deps:
    - roscpp
    - rospy
    - geometry_msgs
    - tf
    - nav_msgs
    desc: 'Provides a services with three discrete actions: left(1), forward(2), and
      right(3).'
    license: BSD
    shortdesc: discreteMove_0_0_1
    source: details.php?name=irobot_create_2_1
    website: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/rlrobot/discreteMove_0_0_1
  drone_teleop:
    author: !!python/unicode ''
    deps:
    - geometry_msgs
    desc: drone_teleop
    license: BSD
    shortdesc: drone_teleop
    source: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/drone_teleop
    website: http://ros.org/wiki/drone_teleop
  exampleClient:
    author: !!python/unicode 'obot'
    deps:
    - discreteMove
    desc: exampleClient
    license: BSD
    shortdesc: exampleClient
    source: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/rlrobot/exampleClient
    website: http://ros.org/wiki/exampleClient
  faces:
    author: !!python/unicode 'Christopher Crick'
    deps:
    - roscpp
    - rospy
    - opencv2
    - cv_bridge
    - sensor_msgs
    - gscam
    - NAOcontrol
    desc: faces
    license: BSD
    shortdesc: faces
    source: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/faces
    website: http://ros.org/wiki/faces
  fakeMsg:
    author: !!python/unicode 'Jihoon'
    deps:
    - rospy
    - std_msgs
    - sensor_msgs
    - geometry_msgs
    desc: fakeMsg
    license: BSD
    shortdesc: fakeMsg
    source: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/fakeMsg
    website: http://ros.org/wiki/fakeMsg
  hbase:
    author: !!python/unicode 'Jesse Butterfield and Basia Korel'
    deps:
    - rospy
    desc: A node for logging data in hbase.
    license: BSD
    shortdesc: A node for logging data in hbase.
    source: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/hbase
    website: http://ros.org/wiki/hbase
  head_gripper:
    author: !!python/unicode ''
    deps:
    - roscpp
    - actionlib
    - pr2_controllers_msgs
    desc: head_gripper
    license: BSD
    shortdesc: head_gripper
    source: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/pr2develop/head_gripper
    website: http://ros.org/wiki/head_gripper
  icreate_nav:
    author: !!python/unicode 'Sarah Osentoski'
    deps:
    - roscpp
    - discreteMove_0_0_1
    - position_tracker
    desc: icreate_nav
    license: BSD
    shortdesc: icreate_nav
    source: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/rlrobot/icreate_nav
    website: http://ros.org/wiki/icreate_nav
  ik_control:
    author: !!python/unicode 'Sarah Osentoski'
    deps:
    - rospy
    - kinematics_msgs
    - pr2_arm_navigation_kinematics
    - pr2_arm_move_ik
    - pr2_arm_kinematics_constraint_aware
    - move_arm
    - actionlib
    - pr2_controllers_msgs
    - motion_planning_msgs
    - trajectory_filter_server
    - pcl
    - geometry_msgs
    - image_geometry
    desc: ik_control
    license: BSD
    shortdesc: ik_control
    source: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/pr2_remotelab/ik_control
    website: http://ros.org/wiki/ik_control
  irobot_test:
    author: !!python/unicode 'Sosentos'
    deps: []
    desc: irobot_test
    license: BSD
    shortdesc: irobot_test
    source: details.php?name=discreteMove_0_0_1
    website: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/rlrobot/irobot_test
  kinematics_tutorials:
    author: !!python/unicode ''
    deps:
    - kinematics_msgs
    desc: kinematics_tutorials
    license: BSD
    shortdesc: kinematics_tutorials
    source: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/pr2develop/kinematics_tutorials
    website: http://ros.org/wiki/kinematics_tutorials
  launcher:
    author: !!python/unicode 'Graylin Trevor Jay'
    deps:
    - roslaunch
    desc: ROS Service that can launch ROS launch files
    license: BSD
    shortdesc: ROS Service that can launch ROS launch files
    source: details.php?name=rospy
    website: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/launcher
  leader_follower_v1:
    author: !!python/unicode 'human'
    deps:
    - std_msgs
    - rospy
    - roscpp
    - geometry_msgs
    - tf
    - nav_msgs
    - opencv2
    - cv_bridge
    - image_transport
    - ar_recog
    desc: leader_follower_v1
    license: BSD
    shortdesc: leader_follower_v1
    source: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/meshnet/leader_follower_v1
    website: http://ros.org/wiki/leader_follower_v1
  line_follower:
    author: !!python/unicode 'Brian Thomas'
    deps:
    - geometry_msgs
    - irobot_create_2_1
    desc: Follows a line using cliffFrontLeftSignal as a guide.  Will stop if it bumps
      into anything.  Calibrates initially using cliffFrontLeftSignal (on line) and
      cliffFrontRightSignal (off line).  You'll probably want a teleop to steer the
      robot onto the line after calibration (or, you can place it by hand).
    license: BSD
    shortdesc: line_follower
    source: details.php?name=rospy
    website: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/line_follower
  link_position:
    author: !!python/unicode 'Sarah Osentoski'
    deps:
    - kinematics_msgs
    desc: link_position
    license: BSD
    shortdesc: link_position
    source: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/pr2_remotelab/link_position
    website: http://ros.org/wiki/link_position
  mesh_teleop2:
    author: !!python/unicode 'human'
    deps:
    - std_msgs
    - roscpp
    - rospy
    - geometry_msgs
    - tf
    - nav_msgs
    - cv_bridge
    - image_transport
    - opencv2
    desc: mesh_teleop2
    license: BSD
    shortdesc: mesh_teleop2
    source: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/meshnet/mesh_teleop2
    website: http://ros.org/wiki/mesh_teleop2
  mesh_teleop2_client:
    author: !!python/unicode 'human'
    deps:
    - std_msgs
    - roscpp
    - rospy
    - geometry_msgs
    - tf
    - nav_msgs
    - cv_bridge
    - image_transport
    - opencv2
    desc: mesh_teleop2
    license: BSD
    shortdesc: mesh_teleop2
    source: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/meshnet/mesh_teleop2_client
    website: http://ros.org/wiki/mesh_teleop2
  move:
    author: !!python/unicode 'Brian Thomas'
    deps:
    - rospy
    - geometry_msgs
    - actionlib
    - actionlib_msgs
    desc: move
    license: BSD
    shortdesc: move
    source: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/robot_dialog/move
    website: http://ros.org/wiki/move
  multirobot_coordination:
    author: !!python/unicode 'sosentos'
    deps: []
    desc: multirobot_coordination
    license: BSD
    shortdesc: multirobot_coordination
    source: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/multirobot_coordination
    website: http://ros.org/wiki/multirobot_coordination
  nao2pr2:
    author: !!python/unicode ''
    deps:
    - trajectory_msgs
    - pr2_mechanism_msgs
    - pr2_controllers_msgs
    - NAOcontrol
    - rospy
    desc: A node for converting the commands for the nao into pr2 commands.
    license: BSD
    shortdesc: A node for converting the commands for the nao into pr2 commands.
    source: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/pr2develop/nao2pr2
    website: http://ros.org/wiki/nao2pr2
  naoExpmnt:
    author: !!python/unicode 'Trevor Jay'
    deps:
    - '                                                                              !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!    This
      package is experimental. Please see README.TXT for building instructions !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!        '
    - roscpp
    - rospy
    - std_msgs
    desc: naoExpmnt
    license: BSD
    shortdesc: naoExpmnt
    source: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/naoExpmnt
    website: http://ros.org/wiki/naoExpmnt
  naoTalk:
    author: !!python/unicode 'Graylin Trevor Jay'
    deps:
    - rospy
    desc: naoTalk demonstrates the use of String messages to make use of the NAO's
      text-to-speech capabilities.
    license: BSD
    shortdesc: naoTalk demonstrates the use of String messages to make use of the
      NAO's text-to-speech capabi...
    source: details.php?name=std_msgs
    website: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/aldebaran_nao_p/naoTalk
  nao_camera_tele:
    author: !!python/unicode 'jbutterf'
    deps:
    - ar_recog
    - NAOcontrol
    desc: nao_camera_tele
    license: BSD
    shortdesc: nao_camera_tele
    source: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/aldebaran_nao_p/nao_camera_tele
    website: http://ros.org/wiki/nao_camera_tele
  nolan:
    author: !!python/unicode 'Graylin Trevor Jay'
    deps:
    - ar_recog
    - geometry_msgs
    desc: Simple PID based follower. Follows ARTags. Actuates on /cmd_vel at speeds
      appropriate to a small robot.
    license: BSD
    shortdesc: Simple PID based follower. Follows ARTags. Actuates on /cmd_vel at
      speeds appropriate to a small ro...
    source: details.php?name=rospy
    website: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/nolan
  nolan3d:
    author: !!python/unicode 'obot'
    deps: []
    desc: nolan3d
    license: BSD
    shortdesc: nolan3d
    source: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/nolan3d
    website: http://ros.org/wiki/nolan3d
  nxt_robot_mindstorms2_quickstart:
    author: !!python/unicode 'Brian Thomas'
    deps:
    - nxt_controllers
    - robot_pose_ekf
    - nxt_description
    - robot_state_publisher
    desc: 'This is the &quot;quickstart&quot; robot design specified in the Lego Mindstorms
      2.0 NXT (8547) kit user guide.  I am unsure what robot.ldr, robot.lxf, and robot.urdf
      do, so they remain unchanged from nxt_robot_sensor_car.  However, the robot
      appears to do fine with teleoperation as-is.  Sensors are attached as recommended
      in the user guide.


      (Many thanks to Melonee Wise for the nxt_robot_sensor_car node, which I modified
      to create this node.)'
    license: BSD
    shortdesc: nxt_robot_mindstorms2_quickstart
    source: details.php?name=nxt_ros
    website: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/nxt_robot_mindstorms2_quickstart
  object_reach:
    author: !!python/unicode ''
    deps:
    - cmvision
    - std_msgs
    - roscpp
    - kinematics_msgs
    desc: object_reach
    license: BSD
    shortdesc: object_reach
    source: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/pr2develop/object_reach
    website: http://ros.org/wiki/object_reach
  odom_calibration:
    author: !!python/unicode 'Christopher Crick'
    deps:
    - rospy
    - geometry_msgs
    - position_tracker
    desc: odom_calibration
    license: BSD
    shortdesc: odom_calibration
    source: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/odom_calibration
    website: http://ros.org/wiki/odom_calibration
  om_msgs:
    author: !!python/unicode 'Brian Thomas'
    deps: []
    desc: om_msgs is the set of messages used for overhead_map.
    license: BSD
    shortdesc: om_msgs is the set of messages used for overhead_map.
    source: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/om_msgs
    website: http://ros.org/wiki/om_msgs
  omclock:
    author: !!python/unicode 'Brian Thomas'
    deps:
    - rospy
    - om_msgs
    desc: clock for overhead_map
    license: BSD
    shortdesc: clock for overhead_map
    source: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/omclock
    website: http://ros.org/wiki/omclock
  omdc:
    author: !!python/unicode 'Brian Thomas'
    deps:
    - rospy
    - planar_tracker
    - om_msgs
    desc: overhead_map display controller
    license: BSD
    shortdesc: overhead_map display controller
    source: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/omdc
    website: http://ros.org/wiki/omdc
  pcl_filter:
    author: !!python/unicode 'Jihoon'
    deps:
    - roscpp
    - pcl_ros
    - sensor_msgs
    - std_msgs
    desc: pcl_filter
    license: BSD
    shortdesc: pcl_filter
    source: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/pcl_filter
    website: http://ros.org/wiki/pcl_filter
  pcl_split:
    author: !!python/unicode 'Jihoon'
    deps:
    - rospy
    - pcl_ros
    - roscpp
    - std_msgs
    - sensor_msgs
    desc: pcl_split
    license: BSD
    shortdesc: pcl_split
    source: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/pcl_split
    website: http://ros.org/wiki/pcl_split
  planar_tracker:
    author: !!python/unicode 'Christopher Crick'
    deps:
    - roscpp
    - rospy
    - ar_recog
    - opencv2
    desc: planar_tracker
    license: BSD
    shortdesc: planar_tracker
    source: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/planar_tracker
    website: http://ros.org/wiki/planar_tracker
  position_tracker:
    author: !!python/unicode 'Christopher Crick'
    deps:
    - roscpp
    - rospy
    - geometry_msgs
    - nav_msgs
    - tf
    desc: position_tracker
    license: BSD
    shortdesc: position_tracker
    source: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/position_tracker
    website: http://ros.org/wiki/position_tracker
  position_tracker_web:
    author: !!python/unicode 'tjay, chrisscrick'
    deps:
    - position_tracker
    desc: position_tracker_web
    license: ''
    shortdesc: position_tracker_web
    source: details.php?name=rospy
    website: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/position_tracker_web
  pr2_camera_tele:
    author: !!python/unicode ''
    deps:
    - std_msgs
    - roscpp
    - ar_recog
    - kinematics_msgs
    - trajectory_msgs
    - pr2_arm_kinematics
    desc: pr2_camera_tele
    license: BSD
    shortdesc: pr2_camera_tele
    source: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/pr2develop/pr2_camera_tele
    website: http://ros.org/wiki/pr2_camera_tele
  pr2_drinkserving:
    author: !!python/unicode 'Sarah Osentoski'
    deps:
    - convex_decomposition
    - ivcon
    - ogre_tools
    - gazebo_tools
    - gazebo_plugins
    desc: Gazebo world and model files for drink serving task (some were copied from
      gazebo_simulator).
    license: BSD
    shortdesc: Gazebo world and model files for drink serving task (some were copied
      from gazebo_simulator).
    source: details.php?name=xacro
    website: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/pr2develop/pr2_drinkserving
  pr2_tuckarm_brown:
    author: !!python/unicode 'Gal Peleg'
    deps:
    - trajectory_msgs
    - pr2_mechanism_msgs
    desc: First attempt at a basic, individual joint teleoperator for the PR2 Simulator's
      arms
    license: BSD
    shortdesc: PR2 Arms Teleoperator
    source: details.php?name=rospy
    website: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/pr2develop/pr2_tuckarm_brown
  reduced_joint_state_publisher:
    author: !!python/unicode 'Sarah Osentoski'
    deps:
    - rospy
    - roscpp
    - sensor_msgs
    desc: reduced_joint_state_publisher
    license: BSD
    shortdesc: reduced_joint_state_publisher
    source: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/pr2_remotelab/reduced_joint_state_publisher
    website: http://ros.org/wiki/reduced_joint_state_publisher
  ros_scratch:
    author: !!python/unicode 'Brian Thomas'
    deps:
    - rospy
    - geometry_msgs
    - ar_recog
    - irobot_create_2_1
    desc: ros_scratch
    license: BSD
    shortdesc: ros_scratch
    source: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/ros_scratch
    website: http://ros.org/wiki/ros_scratch
  rosglue:
    author: !!python/unicode 'Sarah Osentoski'
    deps:
    - discreteMove_0_0_1
    - position_tracker
    desc: ROSGlue
    license: BSD
    shortdesc: ROSGlue
    source: details.php?name=rospy
    website: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/rlrobot/rosglue
  rosjs:
    author: !!python/unicode 'Graylin Trevor Jay'
    deps:
    - opencv2
    - cv_bridge
    - rospy
    - std_msgs
    desc: rosjs is a lightweight Javascript binding allowing ROS use from any websocket-capable
      web browser. See http://code.google.com/p/brown-ros-pkg/wiki/rosjs for documentation.
    license: BSD
    shortdesc: rosjs is a lightweight Javascript binding allowing ROS use from any
      websocket-capable web browser. ...
    source: details.php?name=sensor_msgs
    website: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/rosjs
  simple_trajectory:
    author: !!python/unicode ''
    deps:
    - actionlib
    - roscpp
    - pr2_controllers_msgs
    desc: simple_trajectory
    license: BSD
    shortdesc: simple_trajectory
    source: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/pr2develop/simple_trajectory
    website: http://ros.org/wiki/simple_trajectory
  sogp:
    author: !!python/unicode 'Alex Tarvo'
    deps:
    - roscpp
    - std_msgs
    desc: Uses Sparse Online Gaussian Processes for multi-dimensional function regression.
    license: BSD
    shortdesc: Uses Sparse Online Gaussian Processes for multi-dimensional function
      regression.
    source: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/sogp
    website: http://brown-robotics.org/index.php?title=Internal:SOGP_Instructions
  sogp_node:
    author: !!python/unicode 'Alex Tarvo'
    deps:
    - roscpp
    - std_msgs
    desc: sogp_node
    license: BSD
    shortdesc: sogp_node
    source: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/sogp_node
    website: http://ros.org/wiki/sogp_node
  tf_test:
    author: !!python/unicode 'Sarah Osentoski'
    deps:
    - tf
    - rospy
    - roscpp
    desc: tf_test
    license: BSD
    shortdesc: tf_test
    source: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/pr2_remotelab/tf_test
    website: http://ros.org/wiki/tf_test
  twistTranslate:
    author: !!python/unicode 'sosentos'
    deps:
    - rospy
    - geometry_msgs
    - NAOcontrol
    desc: twistTranslate
    license: BSD
    shortdesc: twistTranslate
    source: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/aldebaran_nao/twistTranslate
    website: http://ros.org/wiki/twistTranslate
  virtual_border:
    author: !!python/unicode 'Brian Thomas'
    deps:
    - geometry_msgs
    - irobot_create_2_1
    desc: "Receives velocity commands and relays that information along, so long as\
      \ the robot is not touching a (high light intensity) border.  When a border\
      \ is reached, this controller reverses the last issued velocity command until\
      \ the robot is off of the high-intensity line, thereby preventing its escape.\n\
      \    A threshold is passed in as a command-line argument.  Any intensity reading\
      \ of at least this threshold will be counted as on the border."
    license: BSD
    shortdesc: virtual_border
    source: details.php?name=rospy
    website: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/virtual_border
  wiimote_twist:
    author: !!python/unicode 'Brian Thomas'
    deps:
    - wiimote
    - joy
    - geometry_msgs
    desc: wiimote_twist is a wiimote-to-twist teleoperator
    license: Creative Commons Attribution
    shortdesc: wiimote_twist
    source: details.php?name=rospy
    website: http://brown-ros-pkg.googlecode.com/svn/trunk/experimental/wiimote_twist
brown-ros-pkg:
  gscam:
    author: !!python/unicode 'Graylin Trevor Jay, Christopher Crick'
    deps:
    - image_transport
    - sensor_msgs
    - camera_calibration_parsers
    desc: A ROS camera driver that uses gstreamer to connect to devices such as webcams.
    license: BSD
    shortdesc: A ROS camera driver that uses gstreamer to connect to devices such
      as webcams.
    source: details.php?name=roscpp
    website: http://brown-ros-pkg.googlecode.com/svn/trunk/distribution/brown_perception/gscam
  irobot_create_2_1:
    author: !!python/unicode 'Graylin Trevor Jay'
    deps:
    - rospy
    - geometry_msgs
    - tf
    - nav_msgs
    desc: irobot_create_2_1 is a ROS driver for the iRobot iCreate.
    license: BSD
    shortdesc: irobot_create_2_1
    source: details.php?name=roscpp
    website: http://brown-ros-pkg.googlecode.com/svn/trunk/distribution/brown_drivers/irobot_create_2_1
  pr2_keyboard_teleoperator:
    author: !!python/unicode 'Gal Peleg, Sarah Osentoski, Jesse Butterfield'
    deps:
    - geometry_msgs
    - trajectory_msgs
    - pr2_mechanism_msgs
    - pr2_controllers_msgs
    desc: Keyboard teleoperator for the PR2 Simulator
    license: BSD
    shortdesc: PR2 Keyboard Teleoperator
    source: details.php?name=rospy
    website: http://brown-ros-pkg.googlecode.com/svn/trunk/distribution/brown_remotelab/pr2_keyboard_teleoperator
  rosbridge:
    author: !!python/unicode 'Graylin Trevor Jay'
    deps:
    - opencv2
    - cv_bridge
    - rospy
    - std_msgs
    desc: rosbridge allows dynamic socket and web-socket based access to the full
      capabilities of ROS. A lightweight binding to Javascript for websocket-capable
      web browsers is included, but access from any language supporting sockets and
      JSON is easy.
    license: BSD
    shortdesc: rosbridge allows dynamic socket and web-socket based access to the
      full capabilities of ROS. A ligh...
    source: details.php?name=sensor_msgs
    website: http://brown-ros-pkg.googlecode.com/svn/trunk/distribution/brown_remotelab/rosbridge
  teleop_twist_keyboard:
    author: !!python/unicode 'Graylin Trevor Jay'
    deps: []
    desc: Simple keyboard teleoping for Twist based robots.
    license: BSD
    shortdesc: teleop_twist_keyboard
    source: details.php?name=geometry_msgs
    website: http://brown-ros-pkg.googlecode.com/svn/trunk/distribution/brown_remotelab/teleop_twist_keyboard
camera_pose:
  camera_pose_calibration:
    author: !!python/unicode 'Vijay Pradeep, Wim Meeussen'
    deps:
    - geometry_msgs
    - calibration_msgs
    - sensor_msgs
    - image_cb_detector
    - monocam_settler
    - interval_intersection
    - joint_states_settler
    - kdl
    - tf_conversions
    - tf2_ros
    - tf2_kdl
    - message_filters
    - opencv2
    desc: "This package provides the pipeline to calibrate the relative 6D\n    poses\
      \ between multiple camera's. The calibration can be preformed\n    online, and\
      \ the results are published to tf in realtime."
    license: BSD
    shortdesc: camera_pose_calibration
    source: https://kforge.ros.org/calibration/camera_pose
    website: http://ros.org/wiki/camera_pose_calibration
ccny_experimental:
  asctec_ctrl:
    author: !!python/unicode 'Lucid One'
    deps:
    - rospy
    - std_msgs
    - asctec_msgs
    desc: asctec_ctrl
    license: BSD
    shortdesc: asctec_ctrl
    source: http://robotics.ccny.cuny.edu/git/ccny-ros-pkg/ccny_experimental.git
    website: http://ros.org/wiki/asctec_ctrl
  asctec_height_control:
    author: !!python/unicode 'Ivan Dryanovski'
    deps:
    - roscpp
    - asctec_msgs
    desc: asctec_height_control
    license: BSD
    shortdesc: asctec_height_control
    source: http://robotics.ccny.cuny.edu/git/ccny-ros-pkg/ccny_experimental.git
    website: http://ros.org/wiki/asctec_height_control
  asctec_keyboard_teleop:
    author: !!python/unicode 'Ivan Dryanovski'
    deps:
    - roscpp
    - asctec_msgs
    desc: asctec_keyboard_teleop
    license: BSD
    shortdesc: asctec_keyboard_teleop
    source: http://robotics.ccny.cuny.edu/git/ccny-ros-pkg/ccny_experimental.git
    website: http://ros.org/wiki/asctec_keyboard_teleop
  canonical_scan_matcher2:
    author: !!python/unicode 'Ivan Dryanovski'
    deps:
    - tf
    - roscpp
    - sensor_msgs
    - geometry_msgs
    - laser_geometry
    - csm_install
    - pcl
    - pcl_ros
    desc: "A wrapper around Andrea Censi's Canonical Scan Matcher implementation,\
      \ used for laser scan registration.\n     More about CSM: http://www.cds.caltech.edu/~andrea/research/sw/csm.html"
    license: GPL
    shortdesc: canonical_scan_matcher2
    source: http://robotics.ccny.cuny.edu/git/ccny-ros-pkg/ccny_experimental.git
    website: http://ros.org/wiki/ccny_csm
  ccny_karto:
    author: !!python/unicode 'Ivan Dryanovski'
    deps:
    - tf
    - nav_msgs
    - geometry_msgs
    - sensor_msgs
    - roscpp
    - karto_scan_matcher
    desc: ccny_karto
    license: BSD
    shortdesc: ccny_karto
    source: http://robotics.ccny.cuny.edu/git/ccny-ros-pkg/ccny_experimental.git
    website: http://ros.org/wiki/ccny_karto
  ccny_karto_mapper:
    author: !!python/unicode 'Ivan Dryanovski'
    deps:
    - tf
    - geometry_msgs
    - sensor_msgs
    - roscpp
    - karto
    desc: ccny_karto_mapper
    license: BSD
    shortdesc: ccny_karto_mapper
    source: http://robotics.ccny.cuny.edu/git/ccny-ros-pkg/ccny_experimental.git
    website: http://ros.org/wiki/ccny_karto_mapper
  ccny_pcl:
    author: !!python/unicode 'Ivan Dryanovski, William Morris'
    deps:
    - roscpp
    - pcl
    - pcl_visualization
    - pcl_ros
    - tf
    - dynamic_reconfigure
    - driver_base
    - cv_bridge
    - sensor_msgs
    - opencv2
    desc: ccny_pcl
    license: BSD
    shortdesc: ccny_pcl
    source: http://robotics.ccny.cuny.edu/git/ccny-ros-pkg/ccny_experimental.git
    website: http://ros.org/wiki/ccny_pcl
  city_flyer_launch:
    author: !!python/unicode 'Ivan Dryanovski'
    deps: []
    desc: city_flyer_launch
    license: BSD
    shortdesc: city_flyer_launch
    source: http://robotics.ccny.cuny.edu/git/ccny-ros-pkg/ccny_experimental.git
    website: http://ros.org/wiki/city_flyer_launch
  cye8_opticalflow:
    author: !!python/unicode 'William Morris'
    deps:
    - roscpp
    desc: cye8_opticalflow
    license: BSD
    shortdesc: cye8_opticalflow
    source: http://robotics.ccny.cuny.edu/git/ccny-ros-pkg/ccny_experimental.git
    website: http://ros.org/wiki/cye8_opticalflow
  kinect_pose_est:
    author: !!python/unicode 'Ivan Dryanovski'
    deps:
    - roscpp
    - pcl
    - pcl_ros
    - tf
    - dynamic_reconfigure
    - driver_base
    - cv_bridge
    - sensor_msgs
    - geometry_msgs
    - opencv2
    - nodelet
    desc: kinect_pose_est
    license: BSD
    shortdesc: kinect_pose_est
    source: http://robotics.ccny.cuny.edu/git/ccny-ros-pkg/ccny_experimental.git
    website: http://ros.org/wiki/kinect_pose_est
  laser_proj:
    author: !!python/unicode 'Ivan Dryanovski'
    deps:
    - roscpp
    - pcl
    - pcl_ros
    - tf
    - sensor_msgs
    - nodelet
    desc: laser_proj
    license: BSD
    shortdesc: laser_proj
    source: http://robotics.ccny.cuny.edu/git/ccny-ros-pkg/ccny_experimental.git
    website: http://ros.org/wiki/laser_proj
  pelican_launch:
    author: !!python/unicode 'Ivan Dryanovski'
    deps: []
    desc: pelican_launch
    license: BSD
    shortdesc: pelican_launch
    source: http://robotics.ccny.cuny.edu/git/ccny-ros-pkg/ccny_experimental.git
    website: http://ros.org/wiki/pelican_launch
  pid_control:
    author: !!python/unicode 'Ivan Dryanovski'
    deps:
    - roscpp
    - nodelet
    - std_msgs
    desc: pid_control
    license: BSD
    shortdesc: pid_control
    source: http://robotics.ccny.cuny.edu/git/ccny-ros-pkg/ccny_experimental.git
    website: http://ros.org/wiki/pid_control
  pose_estimation:
    author: !!python/unicode 'Ivan Dryanovski'
    deps:
    - geometry_msgs
    - sensor_msgs
    - asctec_msgs
    - std_msgs
    - roscpp
    - bullet
    - bfl
    - tf
    desc: PoseEstimation
    license: BSD
    shortdesc: pose_estimation
    source: http://robotics.ccny.cuny.edu/git/ccny-ros-pkg/ccny_experimental.git
    website: http://ros.org/wiki/PoseEstimation
  pose_generator:
    author: !!python/unicode 'William Morris'
    deps:
    - rospy
    - geometry_msgs
    - ua_controller_msgs
    - tf
    desc: Generates PoseStamped messages
    license: BSD
    shortdesc: pose_generator
    source: http://robotics.ccny.cuny.edu/git/ccny-ros-pkg/ccny_experimental.git
    website: http://ros.org/wiki/pose_generator
  quad_joy_teleop:
    author: !!python/unicode 'Ivan Dryanovski'
    deps:
    - roscpp
    - nodelet
    - joy
    - std_msgs
    - mav_msgs
    - geometry_msgs
    - quad_pose_control
    desc: quad_joy_teleop
    license: BSD
    shortdesc: quad_joy_teleop
    source: http://robotics.ccny.cuny.edu/git/ccny-ros-pkg/ccny_experimental.git
    website: http://ros.org/wiki/quad_joy_teleop
  quad_pose_control:
    author: !!python/unicode 'Ivan Dryanovski'
    deps:
    - roscpp
    - tf
    - nodelet
    - std_msgs
    - mav_msgs
    - geometry_msgs
    - pid_control
    - dynamic_reconfigure
    - driver_base
    desc: quad_pose_control
    license: BSD
    shortdesc: quad_pose_control
    source: http://robotics.ccny.cuny.edu/git/ccny-ros-pkg/ccny_experimental.git
    website: http://ros.org/wiki/quad_pose_control
  quad_pose_ekf:
    author: !!python/unicode 'Ivan Dryanovski'
    deps:
    - roscpp
    - nodelet
    - tf
    - bfl
    - std_msgs
    - mav_msgs
    - sensor_msgs
    - geometry_msgs
    desc: quad_pose_ekf
    license: BSD
    shortdesc: quad_pose_ekf
    source: http://robotics.ccny.cuny.edu/git/ccny-ros-pkg/ccny_experimental.git
    website: http://ros.org/wiki/quad_pose_ekf
  quad_pose_est:
    author: !!python/unicode 'Ivan Dryanovski'
    deps:
    - roscpp
    - nodelet
    - tf
    - std_msgs
    - mav_msgs
    - sensor_msgs
    - geometry_msgs
    desc: quad_pose_est
    license: BSD
    shortdesc: quad_pose_est
    source: http://robotics.ccny.cuny.edu/git/ccny-ros-pkg/ccny_experimental.git
    website: http://ros.org/wiki/quad_pose_est
  serial_reader:
    author: !!python/unicode 'Ivan Dryanovski'
    deps:
    - tf
    - roscpp
    - std_msgs
    - sensor_msgs
    - bullet
    desc: serial_reader
    license: BSD
    shortdesc: serial_reader
    source: http://robotics.ccny.cuny.edu/git/ccny-ros-pkg/ccny_experimental.git
    website: http://ros.org/wiki/serial_reader
ccny_ground_station:
  gpsd_viewer:
    author: !!python/unicode 'Gautier Dumonteil, William Morris'
    deps:
    - roscpp
    - nav_msgs
    - gps_common
    - osmgpsmap
    desc: Map Viewer for GPS position data provided by gpsd_client
    license: GPL
    shortdesc: gpsd_viewer
    source: http://robotics.ccny.cuny.edu/git/ccny-ros-pkg/ccny_ground_station.git
    website: http://ros.org/wiki/gpsd_viewer
  ground_station:
    author: !!python/unicode 'Gautier Dumonteil'
    deps:
    - roscpp
    - geometry_msgs
    - sensor_msgs
    - asctec_msgs
    - osmgpsmap
    - rosbag
    - std_msgs
    - gps_common
    - tf
    desc: "ground_station is a package for ROS that typicaly subscribe to several\
      \ topics and update an Gtk+ based GUI.\n     It is made for the CityFlyer research\
      \ project of the CCNY Robotics lab."
    license: GPL
    shortdesc: ground_station
    source: http://robotics.ccny.cuny.edu/git/ccny-ros-pkg/ccny_ground_station.git
    website: http://ros.org/wiki/ground_station
  osmgpsmap:
    author: !!python/unicode 'Gautier Dumonteil'
    deps: []
    desc: osmgpsmap
    license: GPL
    shortdesc: osmgpsmap
    source: http://robotics.ccny.cuny.edu/git/ccny-ros-pkg/ccny_ground_station.git
    website: http://nzjrs.github.com/osm-gps-map/
ccny_slam_gmapping:
  ccny_gmapping:
    author: !!python/unicode 'Giorgio Grisetti, Cyrill Stachniss, Wolfram Burgard;
      ROS wrapper by

      Brian Gerkey'
    deps:
    - roscpp
    - rosconsole
    - std_msgs
    - nav_msgs
    - geometry_msgs
    - sensor_msgs
    - laser_ortho_projector
    - tf
    - message_filters
    - map_server
    desc: 'This package contains GMapping, from OpenSlam, and a ROS wrapper. The gmapping
      package provides laser-based SLAM (Simultaneous Localization and Mapping), as
      a ROS node called slam_gmapping. Using slam_gmapping, you can create a 2-D occupancy
      grid map (like a building floorplan) from laser and pose data collected by a
      mobile robot.


      This package uses r39 from GMapping SVN repsitory at openslam.org, with

      minor patches applied to support newer versions of GCC and OSX.'
    license: CreativeCommons-by-nc-sa-2.0
    shortdesc: This package contains GMapping, from OpenSlam, and a ROS wrapper. The
      gmapping package provides la...
    source: http://robotics.ccny.cuny.edu/git/ccny-ros-pkg/ccny_slam_gmapping.git
    website: http://openslam.org/
ccny_vision:
  ar_pose:
    author: !!python/unicode 'Ivan Dryanovski, William Morris, Gautier Dumonteil et
      al.'
    deps:
    - visualization_msgs
    - artoolkit
    - geometry_msgs
    - tf
    - resource_retriever
    - opencv2
    - image_transport
    - cv_bridge
    desc: Augmented Reality Marker Pose Estimation using ARToolkit
    license: GPL
    shortdesc: Augmented Reality Marker Pose Estimation using ARToolkit
    source: http://robotics.ccny.cuny.edu/git/ccny-ros-pkg/ccny_vision.git
    website: http://www.ros.org/wiki/ar_pose
  artoolkit:
    author: !!python/unicode 'Gautier Dumonteil'
    deps: []
    desc: Artoolkit Library
    license: GPL
    shortdesc: Artoolkit Library
    source: http://robotics.ccny.cuny.edu/git/ccny-ros-pkg/ccny_vision.git
    website: http://www.ros.org/wiki/artoolkit
clearpath-ros-pkg:
  clearpath_base:
    author: !!python/unicode 'Mike Purvis'
    deps:
    - rospy
    - std_msgs
    - geometry_msgs
    desc: clearpath_base
    license: BSD
    shortdesc: clearpath_base
    source: http://clearpath-ros-pkg.googlecode.com/svn/trunk/clearpath_platform/clearpath_base
    website: http://ros.org/wiki/clearpath_base
  clearpath_sensors:
    author: !!python/unicode 'Ryan Gariepy'
    deps:
    - rospy
    - geometry_msgs
    desc: clearpath_sensors
    license: BSD
    shortdesc: clearpath_sensors
    source: http://clearpath-ros-pkg.googlecode.com/svn/trunk/clearpath_platform/clearpath_sensors
    website: http://ros.org/wiki/clearpath_sensors
  clearpath_teleop:
    author: !!python/unicode 'Mike Purvis'
    deps:
    - rospy
    - joy
    - geometry_msgs
    - std_msgs
    desc: clearpath_teleop
    license: BSD
    shortdesc: clearpath_teleop
    source: http://clearpath-ros-pkg.googlecode.com/svn/trunk/clearpath_platform/clearpath_teleop
    website: http://ros.org/wiki/clearpath_teleop
client_rosjava:
  rosjava:
    author: !!python/unicode 'Jason Wolfe (jawolfe@willowgarage.com), Nicholas Butko
      (nbutko@cogsci.ucsd.edu), Lorenz Moesenlechner (moesenle@in.tum.de)'
    deps:
    - roslib
    - roscpp
    - roslang
    - rospack
    desc: "<p> \n        rosjava is a partial implementation of the ROS NodeHandle\
      \ API for Java. The current implementation works by calling roscpp behind the\
      \ scenes using JNI, although the intention is to eventually rewrite it in pure\
      \ Java. The interfaces in the &quot;ros&quot; package are intended to be independent\
      \ of the implementation, so that this change can be made transparently when\
      \ the pure Java implementation has been written.\n    </p>\n    <p>\n      \
      \  rosjava is currently in an early alpha state; the core functionality it provides\
      \ has been fairly well tested, but many more advanced features are missing.\
      \ Its API has not yet been reviewed, and is likely to change in the future.\
      \ \n    </p>\n\t<p>\n\t\trosjava is currently maintained by Nicholas Butko.\
      \ Contact nbutko at ucsd dot edu with issues and fixes. \n\t</p>"
    license: BSD
    shortdesc: A Java ROS client library
    source: http://code.in.tum.de/git/client-rosjava.git
    website: http://ros.org/wiki/rosjava
  test_rosjava:
    author: !!python/unicode 'Jason Wolfe (jawolfe@willowgarage.com)'
    deps:
    - roslib
    - rosjava
    - roscpp
    - std_msgs
    desc: Tests for rosjava
    license: BSD
    shortdesc: test_rosjava
    source: http://code.in.tum.de/git/client-rosjava.git
    website: http://pr.willowgarage.com/wiki/test_rosjava
  tfjava:
    author: !!python/unicode 'Sjoerd van den Dries'
    deps:
    - rosjava
    - tf
    desc: tfjava
    license: BSD
    shortdesc: tfjava
    source: http://code.in.tum.de/git/client-rosjava.git
    website: http://ros.org/wiki/tfjava
clj_planning:
  angelic_planning:
    author: !!python/unicode 'Jason Wolfe (jawolfe@cs.berkeley.edu)'
    deps:
    - rosclj
    desc: "<p>\n     Clojure library including angelic planning algorithms\n     </p>"
    license: BSD
    shortdesc: angelic_planning
    source: http://ros.berkeley.edu/svn/berkeley-ros-pkg/stacks/clj_planning/trunk/clj_planning/angelic_planning
    website: http://ros.org/wiki/angelic_planning
  clj_pr2:
    author: !!python/unicode 'Jason Wolfe (jawolfe@cs.berkeley.edu)'
    deps:
    - roscpp
    - rosconsole
    - pr2_msgs
    - geometry_msgs
    - sensor_msgs
    - pr2_controllers_msgs
    - pr2_navigation_global
    - pr2_navigation_perception
    - move_base_msgs
    - pr2_3dnav
    - tf
    - rosclj
    - dynamic_reconfigure
    - tabletop_object_detector
    desc: "<p> A small library of useful Clojure utilities for interacting with \n\
      \     ROS and the PR2.  Includes an action client, some geometric utilities,\n\
      \     a ROS node wrapper for TF, and a large amount of functionality for \n\
      \     querying and controlling the state of many of the components of the PR2.\n\
      \   </p>"
    license: BSD
    shortdesc: Clojure utilities for interacting with ROS and the PR2
    source: http://ros.berkeley.edu/svn/berkeley-ros-pkg/stacks/clj_planning/trunk/clj_planning/clj_pr2
    website: http://pr.willowgarage.com/wiki/clj_pr2
  pr2_hierarchical_planning:
    author: !!python/unicode 'Jason Wolfe (jawolfe@cs.berkeley.edu)'
    deps:
    - rosclj
    - clj_pr2
    - angelic_planning
    - kinematics_msgs
    - planning_environment
    - planning_models
    - geometry_msgs
    - gazebo
    - nav_msgs
    desc: "<p>  This package builds upon clj_pr2, adding the capability to represent,\n\
      \      reason, plan, and execute sequences of actions to solve simple \n   \
      \   manipulation planning problems.  In particular, it defines a world\n   \
      \   representation that enables concrete planning for the base and arms\n  \
      \    in future environments, a library of primitive and high-level actions\n\
      \      for manipulation planning problems, and an HTN planning algorithm that\n\
      \      can relatively quickly find &quot;resolution-optimal&quot; solutions\
      \ to these\n      problems.\n    </p>"
    license: BSD
    shortdesc: Clojure hierarchical task planning
    source: http://ros.berkeley.edu/svn/berkeley-ros-pkg/stacks/clj_planning/trunk/clj_planning/pr2_hierarchical_planning
    website: http://pr.willowgarage.com/wiki/pr2_hierarchical_planning
  rosclj:
    author: !!python/unicode 'Jason Wolfe (jawolfe@cs.berkeley.edu)'
    deps:
    - rosjava
    - roslang
    desc: "<p>\n    rosclj contains Clojure code to assist in writing ROS nodes in\
      \ Clojure. Since Clojure users can use rosjava directly, the focus is on making\
      \ certain aspects of interacting with <a href=\"http://www.ros.org/wiki/rosjava\"\
      >rosjava</a> more convenient or ideomatic, not duplicating existing functionality.\n\
      </p>\n<p>\n    The bulk of the provided code is related to handling of <a href=\"\
      http://www.ros.org/wiki/Messages\">Messages</a> and <a href=\"http://www.ros.org/wiki/Services\"\
      >Services</a>. In particular, a mechanism is provided (as map-&gt;msg and msg-&gt;map)\
      \ for translating back and forth between Java Message objects and native Clojure\
      \ maps, which allows for more convenient and ideomatic manipulation of message\
      \ data (at greater computational cost). Convenience functions are also provided\
      \ for managing node handles, publishing and subscribing to topics, calling services,\
      \ and creating callbacks.\n</p>"
    license: BSD
    shortdesc: Clojure utilities for working with rosjava
    source: http://ros.berkeley.edu/svn/berkeley-ros-pkg/stacks/clj_planning/trunk/clj_planning/rosclj
    website: http://ros.org/wiki/rosclj
cmr-ros-pkg:
  icreate_OR_sim:
    author: !!python/unicode 'Nick Hillier'
    deps:
    - rospy
    - roscpp
    - openrave
    - openrave_sensors
    - nav_msgs
    - tf
    desc: An OpenRave Simulator for the iCreate.
    license: BSD
    shortdesc: icreate_OR_sim
    source: lp:cmr
    website: http://ros.org/wiki/icreate_OR_sim
  icreate_navigation:
    author: !!python/unicode 'Steve'
    deps:
    - rospy
    - roscpp
    - hokuyo_node
    - irobot_create_2_1
    - gmapping
    - amcl
    desc: Launch files and configuration to launch the navigation stack on the irobot_create.
    license: BSD
    shortdesc: icreate_navigation
    source: lp:cmr
    website: http://ros.org/wiki/icreate_navigation
  icreate_sensorListen:
    author: !!python/unicode 'QUT-Roomba'
    deps:
    - rospy
    - roscpp
    - irobot_create_2_1
    desc: icreate_sensorListen
    license: BSD
    shortdesc: icreate_sensorListen
    source: lp:cmr
    website: http://ros.org/wiki/icreate_sensorListen
  icreate_waypoints:
    author: !!python/unicode ''
    deps:
    - rospy
    - roscpp
    - actionlib_msgs
    - actionlib
    - geometry_msgs
    - move_base_msgs
    - irobot_create_2_1
    desc: icreate_waypoints
    license: BSD
    shortdesc: icreate_waypoints
    source: lp:cmr
    website: http://ros.org/wiki/icreate_waypoints
  pursuit:
    author: !!python/unicode ''
    deps:
    - base_local_planner
    - roscpp
    - rospy
    - costmap_2d
    - geometry_msgs
    - nav_msgs
    - tf
    - voxel_grid
    - angles
    - visualization_msgs
    - geometry_msgs
    - nav_core
    desc: pursuit
    license: BSD
    shortdesc: pursuit
    source: lp:cmr
    website: http://ros.org/wiki/pursuit
cmu-ros-pkg:
  ann2:
    author: !!python/unicode 'David M. Mount and Sunil Arya'
    deps: []
    license: LGPL
    shortdesc: Approximate Nearest Neighbor Searching (ANN)
    source: list.php
    website: https://cmu-ros-pkg.svn.sourceforge.net/svnroot/cmu-ros-pkg/trunk/3rdparty/ann2
  cliquer:
    author: "Sampo Niskanen and Patric R. J. \xC3\x96sterg\xC3\xA5rd"
    deps: []
    desc: !!python/str "Cliquer is a set of C routines for finding cliques in an arbitrary\
      \ weighted graph. It uses an exact branch-and-bound algorithm recently developed\
      \ by Patric \xD6sterg\xE5rd. It is designed with the aim of being efficient\
      \ while still being flexible and easy to use."
    license: GPL
    shortdesc: Finds Cliques in a graph
    source: https://cmu-ros-pkg.svn.sourceforge.net/svnroot/cmu-ros-pkg/trunk/3rdparty/cliquer
    website: http://users.tkk.fi/pat/cliquer.html
  imagesift:
    author: !!python/unicode 'Rosen Diankov (rdiankov@cs.cmu.edu), Kei Okada'
    deps:
    - sensor_msgs
    - posedetection_msgs
    - image_transport
    - opencv2
    - cv_bridge
    - libsiftfast
    desc: "For every image, computes its sift features and send a new message with\
      \ the image, its intrinsic parameters, and the features.\n    Parameters include:\n\
      \    display - shows the image on the local computer"
    license: LGPL
    shortdesc: Computes SIFT Features
    source: details.php?name=roscpp
    website: https://cmu-ros-pkg.svn.sourceforge.net/svnroot/cmu-ros-pkg/trunk/imagesift
  kdetoolbox:
    author: !!python/unicode 'Alexander Ihler and python wrapper by Rosen Diankov'
    deps:
    - rospy
    - openrave
    desc: The KDE class is a general matlab class for k-dimensional kernel density
      estimation.
    license: LGPL
    shortdesc: Kernel Density Estimation Toolbox for C++ and MATLAB/Octave
    source: https://cmu-ros-pkg.svn.sourceforge.net/svnroot/cmu-ros-pkg/trunk/3rdparty/kdetoolbox
    website: http://www.ics.uci.edu/~ihler/code/kde.html
  libsiftfast:
    author: !!python/unicode 'zerofrog'
    deps: []
    license: LGPL
    shortdesc: libsiftfast
    source: list.php
    website: https://cmu-ros-pkg.svn.sourceforge.net/svnroot/cmu-ros-pkg/trunk/3rdparty/libsiftfast
  maxondrivers:
    author: !!python/unicode 'Rosen Diankov (rdiankov@cs.cmu.edu)'
    deps:
    - openrave_robot_control
    desc: Robot controller communicating with EPOS controllers through the CAN network
      using Orocos RTT and OCL. Uses OpenRAVE for kinematics and other information.
    license: Apache License 2.0
    shortdesc: EPOS Maxon Controller using OpenRAVE and Orocos
    source: details.php?name=roscpp
    website: https://cmu-ros-pkg.svn.sourceforge.net/svnroot/cmu-ros-pkg/trunk/maxondrivers
  pa10controller:
    author: !!python/unicode 'Rosen Diankov (rdiankov@cs.cmu.edu), Garth Zeglin'
    deps: []
    desc: "Contains a server to communicate with the ROS network and move the PA10.\n\
      \    The server uses openrave-core to extract the PA-10 kinematics and tool\
      \ information.\n\n    First the PA10 driver and libraries must be installed.\
      \ Unfortunately the libraries are proprietary, so cannot be distributed with\
      \ this controller."
    license: The Apache License 2.0
    shortdesc: Mitsubishi PA10 Drivers and Controllers
    source: details.php?name=openrave_robot_control
    website: https://cmu-ros-pkg.svn.sourceforge.net/svnroot/cmu-ros-pkg/trunk/pa10controller
  pa10demo:
    author: !!python/unicode 'Rosen Diankov (rdiankov@cs.cmu.edu)'
    deps:
    - std_msgs
    - rospy
    - checkerboard_detector
    - cameradc1394
    - pa10controller
    - openrave
    - openraveros
    - orrosplanning
    - imagesift
    - posedetectiondb
    - openrave_robot_control
    - openrave_calibration
    - openrave_sensors
    - rvision
    - tf
    desc: ''
    license: Apache License, Version 2.0
    shortdesc: Manipulation demo with OpenRAVE using PA-10 arm
    source: https://cmu-ros-pkg.svn.sourceforge.net/svnroot/cmu-ros-pkg/trunk/pa10demo
    website: http://openrave.programmingvision.com/
  posedetectiondb:
    author: !!python/unicode 'Rosen Diankov (rdiankov@cs.cmu.edu)'
    deps:
    - posedetection_msgs
    - sensor_msgs
    - geometry_msgs
    - rospy
    - libsiftfast
    - opencv2
    - openrave
    - cv_bridge
    - tf
    desc: ''
    license: The Apache License 2.0
    shortdesc: Vision-based Pose Detection Database Scripts
    source: details.php?name=std_msgs
    website: https://cmu-ros-pkg.svn.sourceforge.net/svnroot/cmu-ros-pkg/trunk/posedetectiondb
  pycv:
    author: !!python/unicode 'Minh-Tri Pham (mtpham@ntu.edu.sg), Viet-Dung D. Hoang
      (hken@pmail.ntu.edu.sg), Tat-Jen Cham (astjcham@ntu.edu.sg)'
    deps: []
    desc: PyCV is a Python package of modules useful for computer vision tasks. Its
      current focus is on boosting techniques, Haar-like features, and face detection.
      PyCV provides the world's fastest method for training a face detector, in a
      few hours.
    license: GPL
    shortdesc: 'PyCV: A Computer Vision Package for Python Incorporating Fast Training
      of Face Detection'
    source: https://cmu-ros-pkg.svn.sourceforge.net/svnroot/cmu-ros-pkg/trunk/3rdparty/pycv
    website: http://sourceforge.net/projects/pycv
  rvision:
    author: !!python/unicode 'Rosen Diankov (rdiankov@cs.cmu.edu)'
    deps:
    - ann2
    desc: "Various functions for vision processing.\n    If using Matlab, make sure\
      \ to extract one of the OpenTSTOOL archives and build the package."
    license: The Apache License 2.0
    shortdesc: Rosen Vision Functions
    source: details.php?name=rospy
    website: https://cmu-ros-pkg.svn.sourceforge.net/svnroot/cmu-ros-pkg/trunk/rvision
  schunk_motion_controllers:
    author: !!python/unicode 'Rosen Diankov (rdiankov@cs.cmu.edu)'
    deps: []
    desc: "Implements the Schunk Motion communication protocol as described at http://www.schunk.com.\n\
      \    The protocol can function on RS232 serial, CAN, and Profibus. This package\
      \ implements the serial communications."
    license: The Apache License 2.0
    shortdesc: Schunk Motion Controller Server
    source: details.php?name=openrave_robot_control
    website: https://cmu-ros-pkg.svn.sourceforge.net/svnroot/cmu-ros-pkg/trunk/schunk_motion_controllers
  schunk_powercube_controllers:
    author: !!python/unicode 'Garratt Gallagher(garratt@ieee.org)'
    deps: []
    desc: "Implements the Schunk Powercube communication protocol as described at\
      \ http://www.schunk.com.\n    The protocol can function on RS232 serial, CAN,\
      \ and Profibus. This package implements the CAN communications."
    license: The Apache License 2.0
    shortdesc: Schunk Powercube Controller Server
    source: details.php?name=openrave_robot_control
    website: https://cmu-ros-pkg.svn.sourceforge.net/svnroot/cmu-ros-pkg/trunk/schunk_powercube_controllers
cob_apps:
  cob_2dnav:
    author: !!python/unicode 'Florian Weisshardt'
    deps:
    - move_base
    - cob_base
    - cob_teleop
    - cob_sick_s300
    - cob_hokuyo
    desc: This Package provides launch files for running Care-O-bot with the ROS navigation
      stack.
    license: LGPL
    shortdesc: This Package provides launch files for running Care-O-bot with the
      ROS navigation stack.
    source: https://github.com/ipa320/cob_apps.git
    website: http://ros.org/wiki/cob_2dnav
  cob_2dslam:
    author: !!python/unicode 'Florian Weisshardt'
    deps:
    - gmapping
    - cob_bringup
    desc: This Package provides launch files for running Care-O-bot with the gmapping
      slam package of ROS.
    license: LGPL
    shortdesc: cob_2dslam
    source: https://github.com/ipa320/cob_apps.git
    website: http://ros.org/wiki/cob_2dslam
  cob_arm_navigation:
    author: !!python/unicode 'Felix Messmer'
    deps:
    - pr2_arm_navigation_tutorials
    - actionlib
    - pr2_controllers_msgs
    - tinyxml
    - planning_models
    - planning_environment
    - assimp
    - bullet
    - tf
    - gazebo
    desc: This package contains necessary files to start up planners for the Care-O-bot
      3.
    license: LGPL
    shortdesc: cob_arm_navigation
    source: https://github.com/ipa320/cob_apps.git
    website: http://ros.org/wiki/cob_arm_nagivation
  cob_bringup:
    author: !!python/unicode 'Florian Weisshardt'
    deps:
    - cob_machine
    - cob_tray
    - cob_torso
    - cob_arm
    - cob_sdh
    - cob_head_axis
    - cob_camera_sensors
    - cob_base
    - cob_relayboard
    - cob_sick_s300
    - cob_hokuyo
    - cob_joint_state_aggregator
    - cob_gazebo
    - cob_light
    - cob_manipulator
    - cob_teleop
    - sound_play
    desc: This package launches all nodes for operating either a real Care-O-bot or
      a simulated one.
    license: LGPL
    shortdesc: cob_bringup
    source: https://github.com/ipa320/cob_apps.git
    website: http://ros.org/wiki/cob_bringup
  cob_dashboard:
    author: !!python/unicode 'Florian Weisshardt'
    deps:
    - rospy
    - cob_script_server
    - cob_relayboard
    desc: This package provides a simple GUI for operating Care-O-bot.
    license: LGPL
    shortdesc: cob_dashboard
    source: https://github.com/ipa320/cob_apps.git
    website: http://www.ros.org/wiki/cob_dashboard
  cob_generic_states:
    author: !!python/unicode ''
    deps:
    - rospy
    - smach
    - smach_ros
    - cob_script_server
    desc: cob_generic_states
    license: BSD
    shortdesc: cob_generic_states
    source: https://github.com/ipa320/cob_apps.git
    website: http://ros.org/wiki/cob_generic_states
  cob_mmcontroller:
    author: !!python/unicode 'Alexander Bubeck'
    deps:
    - roscpp
    - rospy
    - geometry_msgs
    - trajectory_msgs
    - kinematics_msgs
    - visualization_msgs
    - nav_msgs
    - kdl_parser
    - cob_srvs
    - pr2_controllers_msgs
    - tf_conversions
    - tf
    - kdl
    - actionlib
    - cob_srvs
    desc: cob_mmcontroller
    license: LGPL
    shortdesc: cob_mmcontroller
    source: https://github.com/ipa320/cob_apps.git
    website: http://ros.org/wiki/cob_mmcontroller
  cob_script_server:
    author: !!python/unicode 'Florian Weisshardt'
    deps:
    - rospy
    - actionlib
    - actionlib_msgs
    - tf
    - std_msgs
    - cob_default_config
    - cob_msgs
    - cob_srvs
    - trajectory_msgs
    - geometry_msgs
    - pr2_controllers_msgs
    - move_base_msgs
    - move_arm_msgs
    - motion_planning_msgs
    - cob_light
    - cob_sound
    desc: The cob_script_server package provides a simple interface to operate Care-O-bot.
      It can be used via the python API or the actionlib interface.
    license: LGPL
    shortdesc: cob_script_server
    source: https://github.com/ipa320/cob_apps.git
    website: http://ros.org/wiki/cob_script_server
  cob_simpledrive:
    author: !!python/unicode 'Christian Connette'
    deps:
    - roscpp
    - cob_base_drive_chain
    - cob_srvs
    - sensor_msgs
    - cob_utilities
    desc: cob_simpledrive
    license: LGPL
    shortdesc: cob_simpledrive
    source: https://github.com/ipa320/cob_apps.git
    website: http://ros.org/wiki/cob_simpledrive
  cob_simpletrajectories:
    author: !!python/unicode 'Alexander Bubeck'
    deps:
    - roscpp
    - kdl
    - visualization_msgs
    - pr2_controllers_msgs
    - tf_conversions
    - cob_mmcontroller
    desc: cob_simpletrajectories
    license: LGPL
    shortdesc: cob_simpletrajectories
    source: https://github.com/ipa320/cob_apps.git
    website: http://ros.org/wiki/cob_simpletrajectories
  cob_tactiletools:
    author: !!python/unicode 'Alexander Bubeck'
    deps:
    - rospy
    - cob_msgs
    - cob_srvs
    - std_msgs
    - cob_sdh
    desc: cob_tactiletools
    license: LGPL
    shortdesc: cob_tactiletools
    source: https://github.com/ipa320/cob_apps.git
    website: http://ros.org/wiki/cob_tactiletools
  cob_teleop:
    author: !!python/unicode 'Florian Weisshardt'
    deps:
    - roscpp
    - geometry_msgs
    - sensor_msgs
    - trajectory_msgs
    - cob_srvs
    - brics_actuator
    - cob_joy
    desc: This Package enables remote controll of Care-O-bot via a joystick or keyboard.
      Currently tray, torso, arm and base are supported.
    license: LGPL
    shortdesc: cob_teleop
    source: https://github.com/ipa320/cob_apps.git
    website: http://www.ros.org/wiki/cob_teleop
  cob_webportal:
    author: !!python/unicode 'Ulrich Reiser'
    deps:
    - robot_state_publisher
    desc: This package contain special launch files used by the web interface
    license: LGPL
    shortdesc: cob_webportal
    source: https://github.com/ipa320/cob_apps.git
    website: http://ros.org/wiki/cob_webportal
cob_common:
  brics_actuator:
    author: !!python/unicode 'Alexander Bubeck'
    deps:
    - roslib
    - std_msgs
    - geometry_msgs
    desc: brics_actuator
    license: BSD
    shortdesc: brics_actuator
    source: git://github.com/ipa320/brics-interfaces.git
    website: http://ros.org/wiki/brics_actuator
  cob_default_config:
    author: !!python/unicode 'Alexander Bubeck'
    deps: []
    desc: "Default configurtation of the different robots supported by the care-o-bot-research\
      \ stacks in standard environments.\n     Preconfigured jointpositions, navigation\
      \ goals and dashboard buttons can be configured here. The different configurations\
      \ are selected by the ROBOT and ROBOT_ENV environment variables."
    license: LGPL
    shortdesc: cob_default_config
    source: https://github.com/ipa320/cob_common.git
    website: http://ros.org/wiki/cob_default_config
  cob_description:
    author: !!python/unicode 'Florian Weisshardt'
    deps:
    - convex_decomposition
    - ivcon
    - urdf
    desc: "This package contains the description (mechanical, kinematic, visual,\n\
      \  etc.) of the Care-O-bot robot. The files in this package are parsed and used\
      \ by\n  a variety of other components. Most users will not interact directly\n\
      \  with this package."
    license: LGPL
    shortdesc: cob_description
    source: https://github.com/ipa320/cob_common.git
    website: http://ros.org/wiki/cob_description
  cob_goco:
    author: !!python/unicode 'Winfried Baum'
    deps: []
    desc: cob_goco
    license: LGPL
    shortdesc: cob_goco
    source: https://github.com/ipa320/cob_common.git
    website: http://ros.org/wiki/cob_goco
  cob_machine:
    author: !!python/unicode 'Florian Weisshardt'
    deps: []
    desc: This package contains the xxx.machine files that describe the different
      hosts a node can be spawned on. Currently there are machine files for each Care-O-bot,
      and one for the simulated Care-O-bot.
    license: LGPL
    shortdesc: cob_machine
    source: https://github.com/ipa320/cob_common.git
    website: http://ros.org/wiki/cob_machine
  cob_msgs:
    author: !!python/unicode 'Florian Weisshardt'
    deps:
    - roslib
    - std_msgs
    - sensor_msgs
    - geometry_msgs
    - actionlib_msgs
    desc: This Package contains Care-O-bot specific message definitions.
    license: LGPL
    shortdesc: This Package contains Care-O-bot specific message definitions.
    source: https://github.com/ipa320/cob_common.git
    website: http://ros.org/wiki/cob_msgs
  cob_srvs:
    author: !!python/unicode 'Florian Weisshardt'
    deps:
    - std_srvs
    - std_msgs
    - cob_msgs
    - sensor_msgs
    - geometry_msgs
    - trajectory_msgs
    - motion_planning_msgs
    - kinematics_msgs
    desc: This Package contains Care-O-bot specific service definitions.
    license: LGPL
    shortdesc: This Package contains Care-O-bot specific service definitions.
    source: https://github.com/ipa320/cob_common.git
    website: http://ros.org/wiki/cob_srvs
  cob_utilities:
    author: !!python/unicode 'Christian Connette'
    deps:
    - roscpp
    desc: "Deprecated\n    &quot;cob_utilities&quot; subsumes a number of classes,\
      \ which are used in the original COb3 software. E.g. &quot;IniFile.h&quot; supports\
      \ the original inifile structure of Care-O-bot 3. &quot;MathSup.h&quot; provides\
      \ some basic functions like conversion from degree to radion or norming of angles\
      \ within +/- PI. The package is currently used while the drivers are ported\
      \ to ROS and Orocos respectively. Midterm it shall be removed and the ROS structures\
      \ shall be used for reading parameters during initialization. So, don't use\
      \ this package in new code!"
    license: LGPL
    shortdesc: cob_utilities
    source: https://github.com/ipa320/cob_common.git
    website: http://ros.org/wiki/cob_utilities
  cob_vision_utils:
    author: !!python/unicode 'Jan Fischer'
    deps:
    - roscpp
    - opencv2
    - tinyxml
    desc: cob_vision_utils
    license: LGPL
    shortdesc: cob_vision_utils
    source: https://github.com/ipa320/cob_common.git
    website: http://ros.org/wiki/cob_vision_utils
  desire_description:
    author: !!python/unicode 'Florian Weisshardt'
    deps:
    - convex_decomposition
    - ivcon
    - urdf
    - cob_description
    desc: "This package contains the description (mechanical, kinematic, visual,\n\
      \  etc.) of the Desire robot. The files in this package are parsed and used\
      \ by\n  a variety of other components. Most users will not interact directly\n\
      \  with this package."
    license: LGPL
    shortdesc: desire_description
    source: https://github.com/ipa320/cob_common.git
    website: http://ros.org/wiki/desire_description
cob_driver:
  cob_arm:
    author: !!python/unicode 'Florian Weisshardt'
    deps:
    - cob_powercube_chain
    - cob_manipulator
    desc: Launch files to configure and startup the Care-O-bot arm (lwa 3 from Schunk)
      based on the cob_powercube_chain.
    license: LGPL
    shortdesc: Launch files to configure and startup the Care-O-bot arm (lwa 3 from
      Schunk) based on the cob...
    source: https://github.com/ipa320/cob_driver.git
    website: http://ros.org/wiki/cob_arm
  cob_base:
    author: !!python/unicode 'Florian Weisshardt'
    deps:
    - cob_undercarriage_ctrl
    - cob_base_drive_chain
    desc: This packages provides a wrapper for the Care-O-bot base controller and
      offers a cartesian velocity interface.
    license: LGPL
    shortdesc: This packages provides a wrapper for the Care-O-bot base controller
      and offers a cartesian ve...
    source: https://github.com/ipa320/cob_driver.git
    website: http://ros.org/wiki/cob_base
  cob_base_drive_chain:
    author: !!python/unicode 'Christian Connette'
    deps:
    - roscpp
    - sensor_msgs
    - diagnostic_msgs
    - cob_srvs
    - cob_generic_can
    - cob_canopen_motor
    - cob_utilities
    - libpcan
    desc: This package contains classes that are able to control the platform of the
      Care-O-Bot. This means to establish a CAN communication to drive and steering
      motors of the platform and later send motion commands and receive motor information.
    license: LGPL
    shortdesc: cob_base_drive_chain
    source: https://github.com/ipa320/cob_driver.git
    website: http://ros.org/wiki/cob_base_drive_chain
  cob_battery:
    author: !!python/unicode 'Alexander Bubeck'
    deps:
    - rospy
    - diagnostic_msgs
    desc: This package provides information about the battery state.
    license: LGPL
    shortdesc: cob_battery
    source: https://github.com/ipa320/cob_driver.git
    website: http://ros.org/wiki/cob_battery
  cob_camera_sensors:
    author: !!python/unicode 'Jan Fischer'
    deps:
    - roscpp
    - sensor_msgs
    - tinyxml
    - opencv2
    - image_transport
    - polled_camera
    - prosilica_camera
    - cv_bridge
    - cob_vision_utils
    - cob_srvs
    - libmesasr
    - nodelet
    - pcl
    - pcl_ros
    desc: For more information read the readme.htm file located in <i>cob_driver/cob_camera_sensors</i>.
    license: LGPL
    shortdesc: cob_camera_sensors
    source: https://github.com/ipa320/cob_driver.git
    website: http://ros.org/wiki/cob_camera_sensors
  cob_canopen_motor:
    author: !!python/unicode 'Christian Connette'
    deps:
    - roscpp
    - cob_generic_can
    - cob_utilities
    desc: The package cob_canopen_motor implements a controller-drive component which
      is connected to a can-bus and works with a canopen-interface. &quot;CanDriveItf&quot;
      provides a - more or less - generic interface to the controller-drive components.
      &quot;CanDrvie...&quot; then implements a specific setup, e.g. an ELMO Harmonica
      Controller in case of the &quot;CanDriveHarmonica&quot;.
    license: LGPL
    shortdesc: cob_canopen_motor
    source: https://github.com/ipa320/cob_driver.git
    website: http://ros.org/wiki/cob_canopen_motor
  cob_forcetorque:
    author: !!python/unicode 'Alexander Bubeck'
    deps:
    - roscpp
    - eigen
    - tf
    - cob_srvs
    - std_msgs
    - libntcan
    - visualization_msgs
    desc: Driver for the Schunk LWA 3 Force Torque Controller based on ATI Mini 45.
    license: LGPL
    shortdesc: cob_forcetorque
    source: https://github.com/ipa320/cob_driver.git
    website: http://ros.org/wiki/cob_forcetorque
  cob_generic_can:
    author: !!python/unicode 'Christian Connette'
    deps:
    - roscpp
    - cob_utilities
    - libpcan
    - libntcan
    desc: The package cob_generic_can provides an interface for nodes on a can-bus
      and examplary wrappers for two PeakSys-can-libs. When a can-bus-device is generated
      (for an example see base_dirve_chain) you can use generic_can to create as many
      itfs as there will be components communicating via this can-bus. Assign type
      of the can communication device (e.g. usb-to-can or can-card of a specific vendor)
      and can-address of the target device. This package comes with wrappers for PeakSys
      and PeakSysUSB adapters.
    license: LGPL
    shortdesc: cob_generic_can
    source: https://github.com/ipa320/cob_driver.git
    website: http://ros.org/wiki/cob_generic_can
  cob_head_axis:
    author: !!python/unicode 'Ulrich Reiser'
    deps:
    - roscpp
    - sensor_msgs
    - cob_srvs
    - actionlib
    - cob_generic_can
    - cob_canopen_motor
    - cob_utilities
    - urdf
    - libntcan
    - pr2_controllers_msgs
    desc: cob_head_axis
    license: LGPL
    shortdesc: cob_head_axis
    source: https://github.com/ipa320/cob_driver.git
    website: http://ros.org/wiki/cob_head_axis
  cob_hokuyo:
    author: !!python/unicode 'Florian Weisshardt'
    deps:
    - hokuyo_node
    desc: This Package is simply a Care-O-bot specific setup for the hokuyo scanner.
    license: LGPL
    shortdesc: cob_hokuyo
    source: https://github.com/ipa320/cob_driver.git
    website: http://ros.org/wiki/cob_hokuyo
  cob_joint_state_aggregator:
    author: !!python/unicode 'Alexander Bubeck'
    deps:
    - roscpp
    - sensor_msgs
    desc: The cob_joint_state_aggregator package aggregates joint_states from multiple
      components and publishes it as one single joint_state message.
    license: LGPL
    shortdesc: cob_joint_state_aggregator
    source: https://github.com/ipa320/cob_driver.git
    website: http://ros.org/wiki/cob_joint_state_aggregator
  cob_joy:
    author: !!python/unicode 'Florian Weisshardt'
    deps:
    - joy
    desc: This Package is simply a Care-O-bot specific setup for joysticks.
    license: LGPL
    shortdesc: This Package is simply a Care-O-bot specific setup for joysticks.
    source: https://github.com/ipa320/cob_driver.git
    website: http://ros.org/wiki/cob_joy
  cob_light:
    author: !!python/unicode 'Florian Weisshardt'
    deps:
    - rospy
    - std_msgs
    desc: This package contains scripts to operate the LED lights on Care-O-bot.
    license: LGPL
    shortdesc: This package contains scripts to operate the LED lights on Care-O-bot.
    source: https://github.com/ipa320/cob_driver.git
    website: http://ros.org/wiki/cob_light
  cob_manipulator:
    author: !!python/unicode 'Alexander Bubeck'
    deps:
    - roscpp
    - rospy
    - actionlib
    - pr2_controllers_msgs
    - trajectory_msgs
    - geometry_msgs
    - kinematics_msgs
    - cob_srvs
    - cob_msgs
    - tf_conversions
    - tf
    - kdl
    - kdl_parser
    - pr2_arm_kinematics
    - cob_description
    desc: cob_manipulator
    license: LGPL
    shortdesc: cob_manipulator
    source: https://github.com/ipa320/cob_driver.git
    website: http://ros.org/wiki/cob_manipulator
  cob_oodl_scanner:
    author: !!python/unicode 'Alexander Bubeck'
    deps:
    - roscpp
    - brics_oodl_scanner_libs
    - sensor_msgs
    desc: cob_oodl_scanner
    license: BSD
    shortdesc: cob_oodl_scanner
    source: https://github.com/ipa320/cob_driver.git
    website: http://ros.org/wiki/cob_oodl_scanner
  cob_powercube_chain:
    author: !!python/unicode 'Florian Weisshardt'
    deps:
    - roscpp
    - sensor_msgs
    - urdf
    - trajectory_msgs
    - actionlib
    - cob_srvs
    - pr2_controllers_msgs
    - cob_description
    - libpcan
    - libm5api
    - libntcan
    - diagnostic_updater
    - rostest
    desc: "This packages provides a configurable driver of a chain \n  of Schunk powercubes.\
      \ The powercube chain is configured \n  through parameters. Most users will\
      \ not directly interact \n  with this package but with the corresponding launch\
      \ files \n  in other packages, e.g. cob_tray, cob_torso, ..."
    license: LGPL
    shortdesc: cob_powercube_chain
    source: https://github.com/ipa320/cob_driver.git
    website: http://ros.org/wiki/cob_powercube_chain
  cob_relayboard:
    author: !!python/unicode 'Christian Connette'
    deps:
    - roscpp
    - std_msgs
    - cob_utilities
    desc: cob_relayboard
    license: LGPL
    shortdesc: cob_relayboard
    source: https://github.com/ipa320/cob_driver.git
    website: http://ros.org/wiki/cob_relayboard
  cob_sdh:
    author: !!python/unicode 'Florian Weisshardt'
    deps:
    - roscpp
    - urdf
    - sensor_msgs
    - trajectory_msgs
    - actionlib
    - cob_msgs
    - cob_srvs
    - pr2_controllers_msgs
    - libntcan
    - libpcan
    - diagnostic_updater
    - rostest
    desc: This package provides an interface for operating the schunk dexterous hand
      (SDH), including the tactile sensors.
    license: LGPL
    shortdesc: This package provides an interface for operating the schunk dexterous
      hand (SDH), including t...
    source: https://github.com/ipa320/cob_driver.git
    website: http://ros.org/wiki/cob_sdh
  cob_sick_s300:
    author: !!python/unicode 'Florian Weisshardt'
    deps:
    - roscpp
    - sensor_msgs
    desc: This package published a laser scan message out of a Sick S300 laser scanner.
    license: LGPL
    shortdesc: cob_sick_s300
    source: https://github.com/ipa320/cob_driver.git
    website: http://ros.org/wiki/cob_sick_s300
  cob_sound:
    author: !!python/unicode 'Florian Weisshardt'
    deps:
    - rospy
    - roscpp
    - actionlib
    desc: This package implements a sound play module using text2wave and aplay through
      python.
    license: LGPL
    shortdesc: This package implements a sound play module using text2wave and aplay
      through python.
    source: https://github.com/ipa320/cob_driver.git
    website: http://ros.org/wiki/cob_sound
  cob_torso:
    author: !!python/unicode 'Florian Weisshardt'
    deps:
    - cob_powercube_chain
    desc: Launch files to configure and startup the Care-O-bot torso.
    license: LGPL
    shortdesc: Launch files to configure and startup the Care-O-bot torso.
    source: https://github.com/ipa320/cob_driver.git
    website: http://ros.org/wiki/cob_torso
  cob_touch:
    author: !!python/unicode 'Ulrich Reiser'
    deps: []
    desc: cob_touch
    license: LGPL
    shortdesc: cob_touch
    source: https://github.com/ipa320/cob_driver.git
    website: http://ros.org/wiki/cob_touch
  cob_trajectory_controller:
    author: !!python/unicode 'Alexander Bubeck'
    deps:
    - roscpp
    - brics_actuator
    - sensor_msgs
    - pr2_controllers_msgs
    - actionlib
    - kdl
    desc: cob_trajectory_controller
    license: LGPL
    shortdesc: cob_trajectory_controller
    source: https://github.com/ipa320/cob_driver.git
    website: http://ros.org/wiki/cob_trajectory_controller
  cob_tray:
    author: !!python/unicode 'Florian Weisshardt'
    deps:
    - cob_powercube_chain
    desc: Launch files to configure and startup the Care-O-bot tray.
    license: LGPL
    shortdesc: Launch files to configure and startup the Care-O-bot tray.
    source: https://github.com/ipa320/cob_driver.git
    website: http://ros.org/wiki/cob_tray
  cob_undercarriage_ctrl:
    author: !!python/unicode 'Christian Connette'
    deps:
    - roscpp
    - nav_msgs
    - sensor_msgs
    - geometry_msgs
    - diagnostic_msgs
    - tf
    - cob_srvs
    - cob_msgs
    - cob_relayboard
    - cob_utilities
    - diagnostic_updater
    - rostest
    - pr2_controllers_msgs
    - cob_base_drive_chain
    desc: cob_undercarriage_ctrl implements a controller for the omnidirectional base
      of Care-O-bot 3 on joint level. For a given Pltf-Twist the according wheel steering
      angles and linear wheel velocities are calculated based on the principle of
      rigid body motion. Each joint is than controlled individually to achieve the
      computed position and velocity
    license: LGPL
    shortdesc: cob_undercarriage_ctrl
    source: https://github.com/ipa320/cob_driver.git
    website: http://ros.org/wiki/cob_undercarriage_ctrl
cob_extern:
  brics_oodl_scanner_libs:
    author: !!python/unicode 'Alexander Bubeck'
    deps:
    - libhokuyo_urg
    desc: brics_oodl_scanner_libs
    license: BSD
    shortdesc: brics_oodl_scanner_libs
    source: https://github.com/ipa320/cob_extern.git
    website: http://ros.org/wiki/brics_oodl_scanner_libs
  libhokuyo_urg:
    author: !!python/unicode 'Alexander Bubeck'
    deps: []
    desc: libhokuyo_urg
    license: proprietary
    shortdesc: libhokuyo_urg
    source: https://github.com/ipa320/cob_extern.git
    website: http://ros.org/wiki/libhokuyo_urg
  libm5api:
    author: !!python/unicode 'Florian Weisshardt'
    deps: []
    desc: libm5api for interacting with powercubes
    license: LGPL
    shortdesc: libm5api for interacting with powercubes
    source: https://github.com/ipa320/cob_extern.git
    website: http://www.schunk.com
  libmesasr:
    author: !!python/unicode 'Florian Weisshardt'
    deps: []
    desc: libmesasr
    license: LGPL
    shortdesc: libmesasr
    source: https://github.com/ipa320/cob_extern.git
    website: http://ros.org/wiki/libmesasr
  libntcan:
    author: !!python/unicode 'Florian Weisshardt'
    deps: []
    desc: libntcan
    license: proprietary
    shortdesc: libntcan
    source: https://github.com/ipa320/cob_extern.git
    website: http://www.esd-electronics.com
  libpcan:
    author: !!python/unicode 'Florian Weisshardt'
    deps: []
    desc: libpcan
    license: LGPL
    shortdesc: libpcan
    source: https://github.com/ipa320/cob_extern.git
    website: http://p103112.typo3server.info/fileadmin/media/linux/index.htm
  libphidgets:
    author: !!python/unicode 'Florian Weisshardt'
    deps: []
    desc: libphidgets
    license: LGPL
    shortdesc: libphidgets
    source: https://github.com/ipa320/cob_extern.git
    website: http://ros.org/wiki/libphidgets
cob_simulation:
  cob_controller_configuration_gazebo:
    author: !!python/unicode 'Florian Weisshardt'
    deps:
    - pr2_controller_manager
    - cob_sick_s300
    desc: This packages provides the controller configuration for simulating Care-O-bot
      in the gazebo simulator.
    license: LGPL
    shortdesc: cob_controller_configuration_gazebo
    source: https://github.com/ipa320/cob_simulation.git
    website: http://ros.org/wiki/cob_controller_configuration_gazebo
  cob_gazebo:
    author: !!python/unicode 'Florian Weisshardt'
    deps:
    - gazebo
    - gazebo_plugins
    - gazebo_worlds
    - gazebo_tools
    - tf
    - robot_state_publisher
    - joint_trajectory_action
    - single_joint_position_action
    - actionlib
    - actionlib_msgs
    - move_base_msgs
    - cob_srvs
    - cob_description
    - cob_ogre
    - cob_gazebo_worlds
    - cob_controller_configuration_gazebo
    - pr2_gazebo
    - pr2_gazebo_plugins
    - point_cloud_converter
    desc: Launch scpipts for 3D simulation of Care-O-bot in gazebo simulator.
    license: LGPL
    shortdesc: cob_gazebo
    source: https://github.com/ipa320/cob_simulation.git
    website: http://ros.org/wiki/cob_gazebo
  cob_gazebo_worlds:
    author: !!python/unicode 'Florian Weisshardt'
    deps:
    - xacro
    - convex_decomposition
    - ivcon
    - ogre_tools
    - gazebo
    - gazebo_tools
    - gazebo_plugins
    desc: This package provides some worlds for gazebo simulation.
    license: LGPL
    shortdesc: cob_gazebo_worlds
    source: https://github.com/ipa320/cob_simulation.git
    website: http://ros.org/wiki/cob_gazebo_worlds
  cob_ogre:
    author: !!python/unicode 'Florian Weisshardt'
    deps:
    - cob_description
    - ogre_tools
    - ivcon
    - convex_decomposition
    desc: This package contains Care-O-bot Ogre mesh files used for visualization
      and collision.
    license: LGPL
    shortdesc: This package contains Care-O-bot Ogre mesh files used for visualization
      and collision.
    source: https://github.com/ipa320/cob_simulation.git
    website: http://ros.org/wiki/cob_ogre
colbot-ros-pkg:
  colbotcanon:
    author: !!python/unicode 'fpesquet@gmail.com'
    deps:
    - rosjava
    - sensor_msgs
    desc: A controller for the canon of the Colbot hobby robot
    license: BSD
    shortdesc: colbotcanon
    source: http://colbot.googlecode.com/svn/trunk/colbot-ros-pkg/colbotcanon
    website: http://ros.org/wiki/colbotcanon
  lasertracker:
    author: !!python/unicode 'Frederic Pesquet'
    deps:
    - cv_bridge
    - sensor_msgs
    - image_transport
    - geometry_msgs
    - rosqwerk
    desc: A tracker for laser pointer dot in images
    license: BSD
    shortdesc: lasertracker
    source: details.php?name=opencv2
    website: http://colbot.googlecode.com/svn/trunk/colbot-ros-pkg/lasertracker
  roscolbot:
    author: !!python/unicode 'fpesquet@gmail.com'
    deps:
    - roslib
    - rospy
    - rosservice
    - joy
    - wiimote
    - std_msgs
    - std_srvs
    - sensor_msgs
    - rosqwerk
    desc: Services and launch files for Colbot (hobby robot)
    license: BSD
    shortdesc: Services and launch files for Colbot (hobby robot)
    source: http://colbot.googlecode.com/svn/trunk/colbot-ros-pkg/roscolbot
    website: none
  rosqwerk:
    author: !!python/unicode 'fpesquet@gmail.com'
    deps:
    - roslib
    - rospy
    - rosservice
    - std_msgs
    - std_srvs
    - sensor_msgs
    desc: ROS node to control Qwerk board (servos, motors, etc.) from Charmed Labs
      (http://www.charmedlabs.com)
    license: BSD
    shortdesc: ROS node to control Qwerk board (servos, motors, etc.) from Charmed
      Labs (http://www.charmedla...
    source: http://colbot.googlecode.com/svn/trunk/colbot-ros-pkg/rosqwerk
    website: none
colincsl-kinect:
  kinect_anaglyph:
    author: !!python/unicode 'colin'
    deps:
    - roscpp
    - rospy
    - std_msgs
    - sensor_msgs
    - cv_bridge
    - image_view
    desc: kinect_anaglyph
    license: BSD
    shortdesc: kinect_anaglyph
    source: https://github.com/colincsl/Colins-Kinect-Demos
    website: http://ros.org/wiki/kinect_anaglyph
continuous_ops:
  continuous_ops_alerts:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - rospy
    - roslib
    - tf2
    - tf2_ros
    - geometry_msgs
    - tf2_geometry_msgs
    - pr2_msgs
    desc: continuous_ops_alerts
    license: BSD
    shortdesc: continuous_ops_alerts
    source: https://kforge.ros.org/contops/hg
    website: http://ros.org/wiki/continuous_ops_alerts
  continuous_ops_executive:
    author: !!python/unicode 'Wim Meeussen'
    deps:
    - rospy
    - roslib
    - smach
    - smach_ros
    - std_msgs
    - pr2_plugs_msgs
    - continuous_ops_msgs
    - pr2_plugs_executive
    - pr2_msgs
    - actionlib_msgs
    desc: continuous_ops_executive
    license: BSD
    shortdesc: continuous_ops_executive
    source: https://kforge.ros.org/contops/hg
    website: http://ros.org/wiki/continuous_ops_executive
  continuous_ops_msgs:
    author: !!python/unicode 'Wim Meeussen'
    deps:
    - std_msgs
    - actionlib_msgs
    desc: continuous_ops_msgs
    license: BSD
    shortdesc: continuous_ops_msgs
    source: https://kforge.ros.org/contops/hg
    website: http://ros.org/wiki/continuous_ops_msgs
  continuous_ops_task_manager:
    author: !!python/unicode 'Wim Meeussen'
    deps:
    - actionlib
    - rospy
    - roslib
    - continuous_ops_msgs
    desc: task_manager
    license: BSD
    shortdesc: task_manager
    source: https://kforge.ros.org/contops/hg
    website: http://ros.org/wiki/task_manager
  continuous_ops_test_task:
    author: !!python/unicode 'Wim Meeussen'
    deps:
    - continuous_ops_task_manager
    - rospy
    desc: continuous_ops_test_task
    license: BSD
    shortdesc: continuous_ops_test_task
    source: https://kforge.ros.org/contops/hg
    website: http://ros.org/wiki/continuous_ops_test_task
  continuous_ops_web:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - webui
    - roslib
    - rospy
    - continuous_ops_msgs
    - pr2_base_recovery
    desc: continuous_ops_web
    license: BSD
    shortdesc: continuous_ops_web
    source: https://kforge.ros.org/contops/hg
    website: http://ros.org/wiki/continuous_ops_web
  motor_resetter:
    author: !!python/unicode ''
    deps:
    - rospy
    - std_msgs
    - std_srvs
    - rosbag
    - diagnostic_msgs
    desc: motor_resetter
    license: BSD
    shortdesc: motor_resetter
    source: https://kforge.ros.org/contops/hg
    website: http://ros.org/wiki/motor_resetter
  navigation_task:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - move_base_msgs
    - actionlib
    - actionlib_msgs
    - continuous_ops_msgs
    - continuous_ops_task_manager
    - smach
    - smach_ros
    - roslib
    - rospy
    - pr2_common_action_msgs
    desc: navigation_task
    license: BSD
    shortdesc: navigation_task
    source: https://kforge.ros.org/contops/hg
    website: http://ros.org/wiki/navigation_task
  pr2_base_recovery:
    author: !!python/unicode ''
    deps:
    - sensor_msgs
    - geometry_msgs
    - rospy
    - kdl
    - pr2_mechanism_controllers
    desc: pr2_base_recovery
    license: BSD
    shortdesc: pr2_base_recovery
    source: https://kforge.ros.org/contops/hg
    website: http://ros.org/wiki/pr2_base_recovery
  task_image_server:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - rosweb
    - rospy
    - continuous_ops_msgs
    desc: task_image_server
    license: BSD
    shortdesc: task_image_server
    source: https://kforge.ros.org/contops/hg
    website: http://ros.org/wiki/task_image_server
control:
  control_msgs:
    author: !!python/unicode 'Stuart Glaser'
    deps:
    - actionlib_msgs
    - geometry_msgs
    - trajectory_msgs
    desc: "control_msgs contains base messages and actions useful for\n    controlling\
      \ robots.  It provides representations for controller\n    setpoints and joint\
      \ and cartesian trajectories."
    license: BSD
    shortdesc: control_msgs
    source: https://bitbucket.org/sglaser/control
    website: http://ros.org/wiki/control_msgs
cram_highlevel:
  cl_json_pl_client:
    author: !!python/unicode 'Lorenz Moesenlechner'
    deps:
    - roslisp_runtime
    - json_prolog
    - yason
    - cram_utilities
    - cram_reasoning
    - alexandria
    desc: cl_json_pl_client
    license: BSD
    shortdesc: cl_json_pl_client
    source: http://code.in.tum.de/git/cram-highlevel.git
    website: http://ros.org/wiki/cl_json_pl_client
  cl_json_pl_server:
    author: !!python/unicode 'Lorenz Moesenlechner'
    deps:
    - roslisp_runtime
    - cram_reasoning
    - cl_json_pl_client
    desc: cl_json_pl_server
    license: BSD
    shortdesc: cl_json_pl_server
    source: http://code.in.tum.de/git/cram-highlevel.git
    website: http://ros.org/wiki/cl_json_pl_server
  cljlo:
    author: !!python/unicode 'Lorenz Moesenlechner'
    deps:
    - vision_srvs
    - alexandria
    - trivial_garbage
    desc: ''
    license: BSD
    shortdesc: cljlo, a jlo interface for common lisp
    source: details.php?name=roslisp
    website: http://code.in.tum.de/git/cram-highlevel.git
  cljlo_utils:
    author: !!python/unicode 'Lorenz Moesenlechner'
    deps:
    - cljlo
    - cl_tf
    desc: cljlo_utils
    license: BSD
    shortdesc: cljlo_utils
    source: http://code.in.tum.de/git/cram-highlevel.git
    website: http://ros.org/wiki/cljlo_utils
  cram_plan_actionserver:
    author: !!python/unicode 'Lorenz Moesenlechner'
    deps:
    - actionlib
    - actionlib_msgs
    - roslisp_runtime
    - actionlib_lisp
    - cram_language
    - cram_roslisp_common
    - cram_execution_trace
    desc: cram_plan_actionserver
    license: BSD
    shortdesc: cram_plan_actionserver
    source: http://code.in.tum.de/git/cram-highlevel.git
    website: http://ros.org/wiki/cram_plan_actionserver
  cram_plan_failures:
    author: !!python/unicode 'Lorenz Moesenlechner'
    deps:
    - cram_language
    desc: cram_plan_failures
    license: BSD
    shortdesc: cram_plan_failures
    source: http://code.in.tum.de/git/cram-highlevel.git
    website: http://ros.org/wiki/cram_plan_failures
  cram_plan_knowledge:
    author: !!python/unicode 'Lorenz Moesenlechner'
    deps:
    - cram_reasoning
    - cram_language
    - cram_utilities
    - cram_execution_trace
    - alexandria
    - designators
    desc: cram_occasions
    license: BSD
    shortdesc: cram_plan_knowledge
    source: http://code.in.tum.de/git/cram-highlevel.git
    website: http://ros.org/wiki/cram_occasions
  cram_plan_library:
    author: !!python/unicode 'Lorenz Moesenlechner'
    deps:
    - cram_language
    - cram_utilities
    - process_modules
    - cram_reasoning
    - designators
    - cram_roslisp_common
    - cram_plan_knowledge
    - cram_plan_failures
    - alexandria
    desc: cram_plan_library
    license: BSD
    shortdesc: cram_plan_library
    source: http://code.in.tum.de/git/cram-highlevel.git
    website: http://ros.org/wiki/cram_plan_library
  cram_roslisp_common:
    author: !!python/unicode 'Lorenz Moesenlechner'
    deps:
    - roslisp_runtime
    - cram_utilities
    - cl_tf
    desc: cram_roslisp_common
    license: BSD
    shortdesc: cram_roslisp_common
    source: http://code.in.tum.de/git/cram-highlevel.git
    website: http://ros.org/wiki/cram_roslisp_common
  designators_ros:
    author: !!python/unicode 'Lorenz Moesenlechner'
    deps:
    - designators
    - cl_tf
    - cram_utilities
    - cram_reasoning
    - cram_roslisp_common
    desc: designators_ros
    license: BSD
    shortdesc: designators_ros
    source: http://code.in.tum.de/git/cram-highlevel.git
    website: http://ros.org/wiki/designators_ros
  fake_process_modules:
    author: !!python/unicode 'Lorenz Moesenlechner'
    deps:
    - process_modules
    - designators
    desc: fake_process_modules
    license: BSD
    shortdesc: fake_process_modules
    source: http://code.in.tum.de/git/cram-highlevel.git
    website: http://ros.org/wiki/fake_process_modules
  ias_map_annotations:
    author: !!python/unicode 'Lorenz Moesenlechner'
    deps:
    - map_annotation
    desc: ias_map_annotations
    license: BSD
    shortdesc: ias_map_annotations
    source: http://code.in.tum.de/git/cram-highlevel.git
    website: http://ros.org/wiki/ias_map_annotations
  location_costmap:
    author: !!python/unicode 'Lorenz Moesenlechner'
    deps:
    - alexandria
    - cram_utilities
    - cram_roslisp_common
    - cl_transforms
    - cram_math
    - cram_language
    - cram_reasoning
    - designators_ros
    - nav_msgs
    - mapping_msgs
    - visualization_msgs
    desc: location_costmap
    license: BSD
    shortdesc: location_costmap
    source: http://code.in.tum.de/git/cram-highlevel.git
    website: http://ros.org/wiki/location_costmap
  map_annotation:
    author: !!python/unicode 'Lorenz Moesenlechner'
    deps:
    - geometry_msgs
    - rospy
    - cram_reasoning
    - cram_roslisp_common
    - cl_transforms
    desc: map_annotation
    license: BSD
    shortdesc: map_annotation
    source: http://code.in.tum.de/git/cram-highlevel.git
    website: http://ros.org/wiki/map_annotation
  perception_process_module:
    author: !!python/unicode 'Lorenz Moesenlechner'
    deps:
    - cram_roslisp_common
    - process_modules
    - vision_msgs
    - vision_srvs
    - cram_reasoning
    - designators
    - designators_ros
    - cljlo
    - cljlo_utils
    - cl_json_pl_client
    - cram_utilities
    - cram_language
    - std_msgs
    - actionlib_lisp
    - alexandria
    - table_costmap
    - cram_plan_failures
    - pr2_msgs
    desc: perception_process_module
    license: BSD
    shortdesc: perception_process_module
    source: http://code.in.tum.de/git/cram-highlevel.git
    website: http://ros.org/wiki/perception_process_module
  semantic_map_costmap:
    author: !!python/unicode 'Lorenz Moesenlechner'
    deps:
    - cl_json_pl_client
    - cl_transforms
    - cram_roslisp_common
    - location_costmap
    desc: semantic_map_costmap
    license: BSD
    shortdesc: semantic_map_costmap
    source: http://code.in.tum.de/git/cram-highlevel.git
    website: http://ros.org/wiki/semantic_map_costmap
  table_costmap:
    author: !!python/unicode 'Lorenz Moesenlechner'
    deps:
    - rospy
    - std_srvs
    - nav_msgs
    - geometry_msgs
    - sensor_msgs
    - pcl
    - pcl_ros
    - point_cloud_converter
    - map_annotation
    - cram_language
    - location_costmap
    - pr2_laser_snapshotter
    - laser_assembler
    desc: table_costmap
    license: BSD
    shortdesc: table_costmap
    source: http://code.in.tum.de/git/cram-highlevel.git
    website: http://ros.org/wiki/polygonal_costmap
  yason:
    author: "Hans H\xC3\xBCbner"
    deps: []
    license: BSD
    shortdesc: YASON is a Common Lisp library for encoding and decoding data in the
      JSON (JavaScript Object Notati...
    source: list.php
    website: http://code.in.tum.de/git/cram-highlevel.git
cram_pl:
  alexandria:
    author: !!python/unicode 'Many'
    deps: []
    license: Public domain
    shortdesc: alexandria
    source: list.php
    website: http://code.in.tum.de/git/cram-pl.git
  babel:
    author: !!python/unicode 'Luis Oliveira'
    deps:
    - trivial_features
    desc: "Babel\n      http://common-lisp.net/project/babel/"
    license: babel
    shortdesc: "Babel\n      http://common-lisp.net/project/babel/"
    source: details.php?name=alexandria
    website: http://code.in.tum.de/git/cram-pl.git
  cffi:
    author: !!python/unicode 'James Bielman'
    deps:
    - trivial_features
    - babel
    desc: "CFFI - The Common Foreign Function Interface\n      http://common-lisp.net/project/cffi/"
    license: cffi
    shortdesc: "CFFI - The Common Foreign Function Interface\n      http://common-lisp.net/project/cffi/"
    source: details.php?name=alexandria
    website: http://code.in.tum.de/git/cram-pl.git
  cl_store:
    author: !!python/unicode 'Sean Ross'
    deps: []
    license: MIT
    shortdesc: "CL-STORE\n      http://common-lisp.net/project/cl-store/"
    source: list.php
    website: http://code.in.tum.de/git/cram-pl.git
  cl_utilities:
    author: !!python/unicode 'Peter Scott'
    deps: []
    license: Public domain
    shortdesc: cl-utilities
    source: list.php
    website: http://code.in.tum.de/git/cram-pl.git
  cram_execution_trace:
    author: !!python/unicode 'Nikolaus Demmel'
    deps:
    - sbcl
    - cl_store
    - cram_utilities
    - cram_test_utilities
    - cram_language
    desc: "The execution trace provides facilities for tracing and all state changes\n\
      \    during plan execution, serializing this episode information and accessing\n\
      \    it in various ways."
    license: BSD
    shortdesc: Execution trace for CRAM.
    source: http://code.in.tum.de/git/cram-pl.git
    website: http://ros.org/wiki/cram_execution_trace
  cram_language:
    author: !!python/unicode 'Lorenz Moesenlechner'
    deps:
    - alexandria
    - trivial_garbage
    - cram_utilities
    - cram_test_utilities
    - synchronization_tools
    desc: "The CRAM plan language is the core of the CRAM framework. It\n    provides\
      \ the basic functionality to write flexible and robust\n    robot control programs."
    license: BSD
    shortdesc: The CRAM plan language.
    source: http://code.in.tum.de/git/cram-pl.git
    website: http://ros.org/wiki/cram_language
  cram_math:
    author: !!python/unicode 'Lorenz Moesenlechner'
    deps:
    - sbcl
    - alexandria
    - gsll
    desc: "Math utilities. This includes functions for sampling from\n    arbitrary\
      \ probability distributions and utilities to work with\n    poses, vectors and\
      \ quaternions."
    license: BSD
    shortdesc: CRAM math utilities.
    source: http://code.in.tum.de/git/cram-pl.git
    website: http://ros.org/wiki/cram_math
  cram_reasoning:
    author: !!python/unicode 'Lorenz Moesenlechner'
    deps:
    - sbcl
    - alexandria
    - cram_utilities
    - cram_test_utilities
    desc: "This package implements a simple interpreter for a Prolog-like\n    language\
      \ and an implementation of the RETE algorithm."
    license: BSD
    shortdesc: CRAM reasoning package.
    source: http://code.in.tum.de/git/cram-pl.git
    website: http://ros.org/wiki/cram_reasoning
  cram_test_utilities:
    author: !!python/unicode 'Lorenz Moesenlechner'
    deps:
    - sbcl
    - alexandria
    desc: "Some utilities to make writing unit tests for various cram packages\n \
      \   easier. This should not depend on any other cram package so package\n  \
      \  specific stuff should not go here."
    license: BSD
    shortdesc: CRAM test utilities.
    source: http://code.in.tum.de/git/cram-pl.git
    website: http://ros.org/wiki/cram_test_utilities
  cram_utilities:
    author: !!python/unicode 'Lorenz Moesenlechner'
    deps:
    - sbcl
    - alexandria
    - synchronization_tools
    - cram_test_utilities
    desc: "This packages contains some basic lisp utilities. This includes\n    pattern\
      \ matching and lazy lists."
    license: BSD
    shortdesc: CRAM utilities.
    source: http://code.in.tum.de/git/cram-pl.git
    website: http://ros.org/wiki/cram_utilities
  designators:
    author: !!python/unicode 'Lorenz Moesenlechner'
    deps:
    - sbcl
    - alexandria
    - cram_utilities
    - cram_reasoning
    desc: "This package contains the designators class and defines the\n    protocol\
      \ to work with designators."
    license: BSD
    shortdesc: The designators class and protocol.
    source: http://code.in.tum.de/git/cram-pl.git
    website: http://ros.org/wiki/designators
  gsd:
    author: !!python/unicode 'Liam Healy'
    deps: []
    desc: "GSD\n      http://repo.or.cz/w/gsd.git"
    license: GPL
    shortdesc: "GSD\n      http://repo.or.cz/w/gsd.git"
    source: details.php?name=split_sequence
    website: http://code.in.tum.de/git/cram-pl.git
  gsll:
    author: !!python/unicode ''
    deps:
    - trivial_garbage
    - cl_utilities
    - cffi
    desc: "GSLL a GSL wrapper for common lisp\n      http://common-lisp.net/project/gsll/"
    license: GPL
    shortdesc: "GSLL a GSL wrapper for common lisp\n      http://common-lisp.net/project/gsll/"
    source: details.php?name=gsd
    website: http://code.in.tum.de/git/cram-pl.git
  liswip:
    author: !!python/unicode 'Lorenz Moesenlechner'
    deps:
    - trivial_garbage
    - sbcl
    - cffi
    - cram_utilities
    desc: "This package provides a bridge between SWI Prolog and common\n    lisp.\
      \ It allows for evaluating arbitrary Prolog queries in common\n    lisp programs,\
      \ and the implementation of predicates in lisp."
    license: BSD
    shortdesc: A bridge between SWI Prolog and Common Lisp.
    source: http://code.in.tum.de/git/cram-pl.git
    website: http://ros.org/wiki/liswip
  process_modules:
    author: !!python/unicode 'Lorenz Moesenlechner'
    deps:
    - sbcl
    - alexandria
    - designators
    - cram_language
    desc: ''
    license: BSD
    shortdesc: A common interface definition for lower level control routines.
    source: http://code.in.tum.de/git/cram-pl.git
    website: http://ros.org/wiki/process_modules
  split_sequence:
    author: !!python/unicode 'James Bielman'
    deps: []
    license: ''
    shortdesc: split-sequence
    source: list.php
    website: http://code.in.tum.de/git/cram-pl.git
  synchronization_tools:
    author: !!python/unicode 'Tobias C. Rittweiler'
    deps: []
    license: BSD
    shortdesc: synchronization-tools
    source: list.php
    website: http://code.in.tum.de/git/cram-pl.git
  trivial_features:
    author: !!python/unicode 'Luis Oliveira'
    deps: []
    license: trivial-features
    shortdesc: trivial_features
    source: list.php
    website: http://code.in.tum.de/git/cram-pl.git
  trivial_garbage:
    author: !!python/unicode 'Luis Oliveira'
    deps: []
    license: Public domain
    shortdesc: trivial-garbage
    source: list.php
    website: http://code.in.tum.de/git/cram-pl.git
cram_pr2:
  cram_pr2_executive:
    author: !!python/unicode 'Lorenz Moesenlechner'
    deps:
    - cram_language
    - cram_execution_trace
    - cram_reasoning
    - cram_utilities
    - cram_math
    - designators_ros
    - cram_roslisp_common
    - cram_plan_library
    - cram_plan_knowledge
    - location_costmap
    - table_costmap
    - cram_plan_actionserver
    - pr2_navigation_process_module
    - perception_process_module
    - point_head_process_module
    - pr2_manipulation_process_module
    desc: cram_pr2_executive
    license: BSD
    shortdesc: cram_pr2_executive
    source: http://code.in.tum.de/git/cram-pr2.git
    website: http://ros.org/wiki/cram_pr2_executive
  point_head_process_module:
    author: !!python/unicode 'Lorenz Moesenlechner'
    deps:
    - pr2_controllers_msgs
    - actionlib_lisp
    - process_modules
    - designators
    - cram_reasoning
    - cram_roslisp_common
    - alexandria
    desc: point_head_process_module
    license: BSD
    shortdesc: point_head_process_module
    source: http://code.in.tum.de/git/cram-pr2.git
    website: http://ros.org/wiki/point_head_process_module
  pr2_manipulation_process_module:
    author: !!python/unicode 'Lorenz Moesenlechner'
    deps:
    - ias_drawer_executive
    - process_modules
    - designators_ros
    - actionlib_lisp
    - cram_roslisp_common
    - cram_reasoning
    - cram_plan_failures
    - cram_plan_knowledge
    - table_costmap
    - perception_process_module
    - pr2_controllers_msgs
    - kinematics_msgs
    - kdl_arm_kinematics
    - move_arm_msgs
    desc: pr2_manipulation_process_module
    license: BSD
    shortdesc: pr2_manipulation_process_module
    source: http://code.in.tum.de/git/cram-pr2.git
    website: http://ros.org/wiki/pr2_manipulation_process_module
  pr2_navigation_process_module:
    author: !!python/unicode 'Lorenz Moesenlechner'
    deps:
    - move_base_msgs
    - actionlib_lisp
    - process_modules
    - designators
    - cram_reasoning
    - cram_roslisp_common
    - cram_plan_failures
    desc: pr2_navigation_process_module
    license: BSD
    shortdesc: pr2_navigation_process_module
    source: http://code.in.tum.de/git/cram-pr2.git
    website: http://ros.org/wiki/pr2_navigation_process_module
cram_rosie:
  jlo_navp_process_module:
    author: !!python/unicode 'Lorenz Moesenlechner'
    deps:
    - process_modules
    - cljlo
    - actionlib_lisp
    - cram_roslisp_common
    - designators_ros
    - navp_action
    - cljlo_utils
    - cram_plan_failures
    desc: jlo_navp_process_module
    license: BSD
    shortdesc: jlo_navp_process_module
    source: http://code.in.tum.de/git/cram-rosie.git
    website: http://ros.org/wiki/jlo_navp_process_module
  kuka_arm_hand_process_module:
    author: !!python/unicode 'Lorenz Moesenlechner'
    deps:
    - cogman_msgs
    - process_modules
    - designators_ros
    - actionlib_lisp
    - cljlo_utils
    - cljlo
    - cram_roslisp_common
    - cram_reasoning
    - cram_plan_failures
    - cram_plan_knowledge
    - perception_process_module
    desc: kuka_arm_hand_process_module
    license: BSD
    shortdesc: kuka_arm_hand_process_module
    source: http://code.in.tum.de/git/cram-rosie.git
    website: http://ros.org/wiki/kuka_arm_hand_process_module
  powercube_ptu_process_module:
    author: !!python/unicode 'Lorenz Moesenlechner'
    deps:
    - process_modules
    - designators
    - cram_reasoning
    - cram_roslisp_common
    - cogman_msgs
    - cljlo
    - cljlo_utils
    - actionlib_lisp
    desc: powercube_ptu_process_module
    license: BSD
    shortdesc: powercube_ptu_process_module
    source: http://code.in.tum.de/git/cram-rosie.git
    website: http://ros.org/wiki/powercube_ptu_process_module
  rosie_executive:
    author: !!python/unicode 'Lorenz Moesenlechner'
    deps:
    - cram_execution_trace
    - cram_reasoning
    - cram_utilities
    - cram_math
    - designators_ros
    - cram_roslisp_common
    - cram_plan_library
    - cram_plan_knowledge
    - cl_json_pl_client
    - location_costmap
    - table_costmap
    - semantic_map_costmap
    - cram_plan_actionserver
    - jlo_navp_process_module
    - kuka_arm_hand_process_module
    - perception_process_module
    - powercube_ptu_process_module
    desc: ''
    license: BSD
    shortdesc: Cram based executive for the TUM Rosie robot.
    source: details.php?name=cram_language
    website: http://code.in.tum.de/git/cram-rosie.git
csiro-asl-ros-pkg:
  odephysics_ORplugin:
    author: !!python/unicode 'Nick Hillier'
    deps:
    - openrave
    - roscpp
    - opende
    desc: "Modified oderave plugins for OpenRAVE.\n     This is not dependant on ROS,\
      \ but ROS\n     provides a convenient method to package\n     the content.\n\
      \     \n     API is experimental. See OpenRAVE Trac\n     ticket #53 for a more\
      \ likely future \n     xml API."
    license: BSD
    shortdesc: odephysics_ORplugin
    source: lp:csiro-asl-ros-pkg
    website: http://ros.org/wiki/odephysics_ORplugin
  sick_ldmrs:
    author: !!python/unicode 'Brett Grandbois/Brett.Grandbois@csiro.au, Fred Pauling/Frederick.Pauling@csiro.au'
    deps:
    - rospy
    - roslib
    - rostest
    - sensor_msgs
    - std_msgs
    - dynamic_reconfigure
    - driver_base
    desc: Driver node for Sick LD-MRS
    license: BSD
    shortdesc: Driver for Sick LD-MRS
    source: details.php?name=std_msgs
    website: lp:csiro-asl-ros-pkg
cu-ros-pkg:
  Staubli:
    author: !!python/unicode 'Soonhac Hong'
    deps:
    - std_msgs
    - roscpp
    desc: This is staubli TX60L package for ROS.
    license: BSD
    shortdesc: This is staubli TX60L package for ROS.
    source: http://cu-ros-pkg.googlecode.com/svn/trunk/Staubli
    website: http://code.google.com/p/cu-ros-pkg/
  bumblebee2:
    author: !!python/unicode 'Soonhac Hong'
    deps:
    - image_transport
    - tf
    - camera_info_manager
    - dynamic_reconfigure
    - libdc1394v2
    desc: "bumblebee2 package is based on camera1394 package.\n     When bumblebee2.launch\
      \ is run, left and right mono image which is formatted by sensor_msgs/image\
      \ will be published."
    license: BSD
    shortdesc: bumblebee2
    source: http://cu-ros-pkg.googlecode.com/svn/trunk/bumblebee2
    website: http://code.google.com/p/cu-ros-pkg/
  columbot:
    author: !!python/unicode 'Soonhac Hong'
    deps:
    - std_msgs
    - roscpp
    - staubli
    desc: Columbot package is the main controller package in order to test or use
      Staubli package.
    license: BSD
    shortdesc: Columbot package is the main controller package in order to test or
      use Staubli package.
    source: http://cu-ros-pkg.googlecode.com/svn/trunk/columbot
    website: http://code.google.com/p/cu-ros-pkg/
  icreate:
    author: !!python/unicode 'Xuwen Cao and Morgan Quigley'
    deps:
    - roscpp
    - joy
    - deprecated_msgs
    - tf
    - turtlesim
    desc: A library, utility standalone executables, and ROS node for the iRobot Create
    license: BSD
    shortdesc: A library, utility standalone executables, and ROS node for the iRobot
      Create
    source: details.php?name=serial_port
    website: http://cu-ros-pkg.googlecode.com/svn/trunk/icreate
  wireless_camera:
    author: !!python/unicode 'Soonhac Hong'
    deps:
    - std_msgs
    - roscpp
    - rospy
    - image_transport
    - opencv2
    - cv_bridge
    desc: This package publishes sensor_msgs/image from wireless camera which provides
      a MJPEG stream file.
    license: BSD
    shortdesc: wireless_camera
    source: http://cu-ros-pkg.googlecode.com/svn/trunk/wireless_camera
    website: http://ros.org/wiki/wireless_camera
cwru-ros-pkg:
  cwru_base:
    author: !!python/unicode 'Eric Perko, Jesse Fish'
    deps:
    - std_msgs
    - std_srvs
    - rospy
    - roscpp
    - tf
    - geometry_msgs
    - nav_msgs
    - sicktoolbox_wrapper
    - diagnostic_updater
    desc: This package is the interface between ROS and the CWRU specific robot stuff.
      Specifically, this package handles translating inputs to the cRIO and outputs
      from the cRIO into things that are more friendly to ROS.
    license: LGPL
    shortdesc: This package is the interface between ROS and the CWRU specific robot
      stuff. Specifically, th...
    source: http://github.com/cwru-robotics/cwru-ros-pkg.git
    website: http://ros.org/wiki/cwru_base
  cwru_configs:
    author: !!python/unicode 'Roberto'
    deps: []
    desc: cwru_configs
    license: BSD
    shortdesc: cwru_configs
    source: http://github.com/cwru-robotics/cwru-ros-pkg.git
    website: http://ros.org/wiki/cwru_configs
  cwru_goal_planner:
    author: !!python/unicode 'Eric Perko'
    deps:
    - rospy
    - roscpp
    - cwru_nav
    desc: cwru_goal_planner
    license: LGPL
    shortdesc: cwru_goal_planner
    source: http://github.com/cwru-robotics/cwru-ros-pkg.git
    website: http://ros.org/wiki/cwru_goal_planner
  cwru_jaus:
    author: !!python/unicode 'Eric Perko, Beom Koh'
    deps:
    - roscpp
    - cwru_base
    - actionlib_msgs
    - cwru_nav
    - std_msgs
    - nav_msgs
    - std_msgs
    - geometry_msgs
    - actionlib
    - tf
    - cwru_goal_planner
    desc: cwru_jaus
    license: LGPL
    shortdesc: cwru_jaus
    source: http://github.com/cwru-robotics/cwru-ros-pkg.git
    website: http://ros.org/wiki/jaus
  cwru_maps:
    author: !!python/unicode 'Eric Perko'
    deps: []
    desc: cwru_maps
    license: LGPL
    shortdesc: cwru_maps
    source: http://github.com/cwru-robotics/cwru-ros-pkg.git
    website: http://ros.org/wiki/cwru_maps
  cwru_nav:
    author: !!python/unicode 'Eric Perko, Jesse Fish'
    deps:
    - rospy
    - roscpp
    - cwru_base
    - move_base
    - amcl
    - playsound_recovery
    - tf
    - tf_conversions
    - sensor_msgs
    - nav_msgs
    - filters
    - pluginlib
    desc: cwru_nav
    license: BSD, LGPL
    shortdesc: cwru_nav
    source: http://github.com/cwru-robotics/cwru-ros-pkg.git
    website: http://ros.org/wiki/cwru_nav
  cwru_obstacle_planner:
    author: !!python/unicode 'Ben Ballard'
    deps:
    - actionlib
    - geometry_msgs
    - nav_msgs
    - std_msgs
    - rosmsg
    - rospy
    - roscpp
    - tf
    - move_base_msgs
    - move_base
    desc: cwru_obstacle_planner
    license: LGPL
    shortdesc: cwru_obstacle_planner
    source: http://github.com/cwru-robotics/cwru-ros-pkg.git
    website: http://ros.org/wiki/cwru_obstacle_planner
  cwru_sim_stage:
    author: !!python/unicode 'Eric Perko'
    deps:
    - stage
    - cwru_nav
    - map_server
    - cwru_maps
    desc: cwru_sim_stage
    license: LGPL
    shortdesc: cwru_sim_stage
    source: http://github.com/cwru-robotics/cwru-ros-pkg.git
    website: http://ros.org/wiki/cwru_sim_stage
  cwru_teleop:
    author: !!python/unicode 'Eric Perko'
    deps:
    - cwru_base
    - joy
    - roscpp
    - rospy
    - geometry_msgs
    - std_msgs
    desc: cwru_teleop
    license: LGPL
    shortdesc: cwru_teleop
    source: http://github.com/cwru-robotics/cwru-ros-pkg.git
    website: http://ros.org/wiki/cwru_teleop
  cwru_vision:
    author: !!python/unicode 'Eric Perko'
    deps:
    - rospy
    - roscpp
    - std_msgs
    - cwru_base
    - opencv2
    - image_transport
    - image_geometry
    - tf
    - cv_bridge
    - geometry_msgs
    - image_proc
    desc: cwru_vision
    license: LGPL
    shortdesc: cwru_vision
    source: http://github.com/cwru-robotics/cwru-ros-pkg.git
    website: http://ros.org/wiki/cwru_vision
  cwru_voice:
    author: !!python/unicode 'Tony'
    deps:
    - roscpp
    - rospy
    - std_msgs
    - roslib
    - joy
    desc: cwru_voice
    license: BSD
    shortdesc: cwru_voice
    source: http://github.com/cwru-robotics/cwru-ros-pkg.git
    website: http://ros.org/wiki/cwru_voice
  cwru_wsn_steering:
    author: !!python/unicode 'Eric Perko, Ben Ballard, Wyatt Newman'
    deps:
    - tf
    - nav_msgs
    - std_msgs
    - geometry_msgs
    - roscpp
    - base_local_planner
    - costmap_2d
    desc: cwru_wsn_steering
    license: LGPL
    shortdesc: cwru_wsn_steering
    source: http://github.com/cwru-robotics/cwru-ros-pkg.git
    website: http://ros.org/wiki/cwru_wsn_steering
  playsound_recovery:
    author: !!python/unicode 'Eric Perko'
    deps:
    - roscpp
    - pluginlib
    - costmap_2d
    - tf
    - nav_core
    - sound_play
    desc: playsound_recovery
    license: LGPL
    shortdesc: playsound_recovery
    source: http://github.com/cwru-robotics/cwru-ros-pkg.git
    website: http://ros.org/wiki/playsound_recovery
  tour_guide_base:
    author: !!python/unicode 'Jesse'
    deps: []
    desc: tour_guide_base
    license: BSD
    shortdesc: tour_guide_base
    source: http://github.com/cwru-robotics/cwru-ros-pkg.git
    website: http://ros.org/wiki/tour_guide_base
  tour_guide_executive:
    author: !!python/unicode 'Jesse'
    deps:
    - roscpp
    - std_msgs
    - rospy
    - tf
    - cwru_nav
    desc: tour_guide_executive
    license: BSD
    shortdesc: tour_guide_executive
    source: http://github.com/cwru-robotics/cwru-ros-pkg.git
    website: http://ros.org/wiki/tour_guide_executive
  tour_guide_vision:
    author: !!python/unicode 'Jesse Fish'
    deps:
    - roscpp
    - std_msgs
    - opencv2
    - image_transport
    - cv_bridge
    - tf
    - camera_info_manager
    - image_geometry
    - geometry_msgs
    desc: tour_guide_vision
    license: BSD
    shortdesc: tour_guide_vision
    source: http://github.com/cwru-robotics/cwru-ros-pkg.git
    website: http://ros.org/wiki/tour_guide_vision
  wagon_handle_steering:
    author: !!python/unicode 'Eric Perko'
    deps:
    - std_msgs
    - tf
    - nav_msgs
    - base_local_planner
    - nav_core
    - pluginlib
    - roscpp
    desc: wagon_handle_steering
    license: BSD
    shortdesc: wagon_handle_steering
    source: http://github.com/cwru-robotics/cwru-ros-pkg.git
    website: http://ros.org/wiki/wagon_handle_steering
  xv_11_laser_driver:
    author: !!python/unicode 'Eric Perko, Chad Rockey'
    deps:
    - roscpp
    - sensor_msgs
    desc: Neato XV-11 Laser Driver. This driver works with the laser when it is removed
      from the XV-11 Robot as opposed to reading scans from the Neato's USB port.
    license: BSD
    shortdesc: xv_11_laser_driver
    source: http://github.com/cwru-robotics/cwru-ros-pkg.git
    website: http://ros.org/wiki/xv_11_laser_driver
cyphy:
  cyphy_mk_falcon:
    author: !!python/unicode 'Inkyu Sa'
    deps:
    - sensor_msgs
    - control_toolbox
    - geometry_msgs
    - joy
    desc: cyphy Falcon control with Mikrokopter.
    license: GPL
    shortdesc: cyphy_mk_falcon
    source: details.php?name=roscpp
    website: lp:cyphy
  cyphy_serial_driver:
    author: !!python/unicode 'Inkyu Sa'
    deps:
    - sensor_msgs
    - control_toolbox
    desc: 'cyphy serial driver for mikrokopter.

      Simple test.'
    license: GPL
    shortdesc: cyphy_serial_driver
    source: details.php?name=roscpp
    website: lp:cyphy
  rcRos:
    author: !!python/unicode ''
    deps:
    - roscpp
    - rospy
    - nav_msgs
    - geometry_msgs
    - sensor_msgs
    - tf
    desc: Package to communicate with a low level avr over serial to generate/receive
      RC pulses.
    license: BSD
    shortdesc: Package to communicate with a low level avr over serial to generate/receive
      RC pulses.
    source: lp:cyphy
    website: http://ros.org/wiki/temp
  rosfalcon:
    author: !!python/unicode 'Steven Martin'
    deps:
    - roscpp
    - rospy
    - joy
    - geometry_msgs
    desc: rosfalcon
    license: BSD
    shortdesc: rosfalcon
    source: lp:cyphy
    website: http://ros.org/wiki/rosfalcon
  xsens_mtig:
    author: !!python/unicode 'Steven Martin'
    deps:
    - sensor_msgs
    - roscpp
    - cereal_port
    - tf
    desc: !!python/str "A modified version of the  lse_xsens_mti package with added\
      \ functionalitly to work with the mti-g sensor.\n\n     Xsens MTi node. The\
      \ existing xsens_mti node is distributed in the form of a library and requires\
      \ the MTi to be set to a determined configuration to work. We had some old code\
      \ laying around so we just ported it to ROS. This sends the MTi to configuration\
      \ mode at start and sets it to the propper mode of operation.\n\n  Original\
      \ Author: Gon\xE7alo Cabrita"
    license: BSD
    shortdesc: xsens_mtig
    source: lp:cyphy
    website: http://ros.org/wiki/lse_xsens_mti
darpa_arm_clients/darm_dashboard:
  darm_dashboard:
    author: !!python/unicode 'DARPA ARM GFE Team'
    deps:
    - joy
    - std_msgs
    - sensor_msgs
    - image_transport
    - SR4000_msgs
    - Bumblebee2_msgs
    - DPPanTilt_msgs
    - audio_msgs
    - prosilica_msgs
    - WAM_msgs
    - BHand_msgs
    - TestExecution_msgs
    - SafetyLight_msgs
    - re2logger
    - PressureSensor_msgs
    - ForceTorque_msgs
    desc: darm_dashboard
    license: GPL
    shortdesc: darm_dashboard
    source: details.php?name=roscpp
    website: http://svn.thearmrobot.com/darm_dashboard
darpa_arm_msgs:
  BHand_msgs:
    author: !!python/unicode 'DARPA ARM GFE Team'
    deps: []
    desc: BHand_msgs
    license: GPL
    shortdesc: BHand_msgs
    source: details.php?name=roscpp
    website: http://svn.thearmrobot.com/darpa_arm_msgs/BHand_msgs
  Bumblebee2_msgs:
    author: !!python/unicode 'DARPA ARM GFE Team'
    deps: []
    desc: Bumblebee2_msgs
    license: GPL
    shortdesc: Bumblebee2_msgs
    source: details.php?name=roscpp
    website: http://svn.thearmrobot.com/darpa_arm_msgs/Bumblebee2_msgs
  DPPanTilt_msgs:
    author: !!python/unicode 'DARPA ARM GFE Team'
    deps: []
    desc: DPPanTilt_msgs
    license: GPL
    shortdesc: DPPanTilt_msgs
    source: details.php?name=roscpp
    website: http://svn.thearmrobot.com/darpa_arm_msgs/DPPanTilt_msgs
  ForceTorque_msgs:
    author: !!python/unicode 'DARPA ARM GFE Team'
    deps: []
    license: GPL
    shortdesc: ForceTorque_msgs
    source: list.php
    website: http://svn.thearmrobot.com/darpa_arm_msgs/ForceTorque_msgs
  PressureSensor_msgs:
    author: !!python/unicode 'DARPA ARM GFE Team'
    deps: []
    desc: PressureSensor_msgs
    license: GPL
    shortdesc: PressureSensor_msgs
    source: details.php?name=roscpp
    website: http://svn.thearmrobot.com/darpa_arm_msgs/PressureSensor_msgs
  SR4000_msgs:
    author: !!python/unicode 'DARPA ARM GFE Team'
    deps: []
    desc: SR4000_msgs
    license: GPL
    shortdesc: SR4000_msgs
    source: details.php?name=roscpp
    website: http://svn.thearmrobot.com/darpa_arm_msgs/SR4000_msgs
  SafetyLight_msgs:
    author: !!python/unicode 'DARPA ARM GFE Team'
    deps: []
    desc: SafetyLight_msgs
    license: GPL
    shortdesc: SafetyLight_msgs
    source: details.php?name=roscpp
    website: http://svn.thearmrobot.com/darpa_arm_msgs/SafetyLight_msgs
  TestExecution_msgs:
    author: !!python/unicode 'DARPA ARM GFE Team'
    deps: []
    desc: TestExecution_msgs
    license: GPL
    shortdesc: TestExecution_msgs
    source: details.php?name=roscpp
    website: http://svn.thearmrobot.com/darpa_arm_msgs/TestExecution_msgs
  WAM_msgs:
    author: !!python/unicode 'DARPA ARM GFE Team'
    deps: []
    desc: WAM_msgs
    license: GPL
    shortdesc: WAM_msgs
    source: details.php?name=roscpp
    website: http://svn.thearmrobot.com/darpa_arm_msgs/WAM_msgs
  prosilica_msgs:
    author: !!python/unicode 'DARPA ARM GFE Team'
    deps: []
    desc: prosilica_msgs
    license: GPL
    shortdesc: prosilica_msgs
    source: details.php?name=roscpp
    website: http://svn.thearmrobot.com/darpa_arm_msgs/prosilica_msgs
  triclops_msgs:
    author: !!python/unicode 'DARPA ARM GFE Team'
    deps: []
    desc: triclops_msgs
    license: GPL
    shortdesc: triclops_msgs
    source: details.php?name=roscpp
    website: http://svn.thearmrobot.com/darpa_arm_msgs/triclops_msgs
darpa_arm_sim_servers:
  BarrettCompat:
    author: !!python/unicode 'DARPA ARM GFE Team'
    deps:
    - WAM_msgs
    - BHand_msgs
    - PressureSensor_msgs
    - ForceTorque_msgs
    - std_msgs
    - sensor_msgs
    - geometry_msgs
    - pr2_controllers_msgs
    - pr2_mechanism_model
    - pr2_mechanism_diagnostics
    - pr2_controller_interface
    - pr2_mechanism_msgs
    - pr2_mechanism_model
    - control_toolbox
    - gazebo_plugins
    - SimGazeboControllers
    - gazebo
    desc: BarrettCompat
    license: GPLv(3 or greater)
    shortdesc: BarrettCompat
    source: details.php?name=roscpp
    website: http://svn.thearmrobot.com/darpa_arm_sim_servers/BarrettCompat
  Bumblebee2_sim_server:
    author: !!python/unicode 'DARPA ARM GFE Team'
    deps:
    - std_msgs
    - sensor_msgs
    - Bumblebee2_msgs
    - image_transport
    - re2logger
    desc: Bumblebee2_sim_server
    license: private
    shortdesc: Bumblebee2_sim_server
    source: details.php?name=roscpp
    website: http://svn.thearmrobot.com/darpa_arm_sim_servers/Bumblebee2_sim_server
  DPPanTiltCompat:
    author: !!python/unicode 'DARPA ARM GFE Team'
    deps:
    - DPPanTilt_msgs
    - re2logger
    - pr2_mechanism_msgs
    - SimGazeboControllers
    desc: DPPanTiltCompat
    license: GPLv3
    shortdesc: DPPanTiltCompat
    source: details.php?name=roscpp
    website: http://svn.thearmrobot.com/darpa_arm_sim_servers/DPPanTiltCompat
  DPPanTilt_sim_server:
    author: !!python/unicode 'DARPA ARM GFE Team'
    deps:
    - DPPanTilt_msgs
    - re2logger
    - pr2_mechanism_msgs
    - SimGazeboControllers
    - DPPanTiltCompat
    desc: DPPanTilt_sim_server
    license: private
    shortdesc: DPPanTilt_sim_server
    source: details.php?name=roscpp
    website: http://svn.thearmrobot.com/darpa_arm_sim_servers/DPPanTilt_sim_server
  RobotModel:
    author: !!python/unicode 'RE2'
    deps:
    - roscpp
    - gazebo
    desc: RobotModel
    license: GPL
    shortdesc: RobotModel
    source: details.php?name=opencv2
    website: http://svn.thearmrobot.com/darpa_arm_sim_servers/RobotModel
  SafetyLight_sim_server:
    author: !!python/unicode 'DARPA ARM GFE Team'
    deps:
    - SafetyLight_msgs
    desc: SafetyLight_sim_server
    license: private
    shortdesc: SafetyLight_sim_server
    source: details.php?name=roscpp
    website: http://svn.thearmrobot.com/darpa_arm_sim_servers/SafetyLight_sim_server
  SimGazeboControllers:
    author: !!python/unicode 'AM'
    deps:
    - roscpp
    - angles
    - filters
    - tf
    - tf_conversions
    - kdl
    - pluginlib
    - actionlib
    - std_msgs
    - geometry_msgs
    - diagnostic_msgs
    - trajectory_msgs
    - pr2_controllers_msgs
    - pr2_controller_interface
    - pr2_controller_manager
    - kdl_parser
    - pr2_mechanism_model
    - control_toolbox
    - realtime_tools
    - message_filters
    - std_srvs
    - TestExecution_msgs
    desc: ''
    license: GPL
    shortdesc: DARPA ARM PROJECT Track C Mechanism Controller Library
    source: details.php?name=rospy
    website: http://svn.thearmrobot.com/darpa_arm_sim_servers/SimGazeboControllers
  SimRobot:
    author: !!python/unicode 'Andrew Somerville'
    deps:
    - WAM_sim_server
    - DPPanTilt_sim_server
    - SafetyLight_sim_server
    - Bumblebee2_sim_server
    - audio_sim_server
    - darm_dashboard
    - re2darmGazeboPlugins
    desc: SimRobot
    license: GLPv3
    shortdesc: SimRobot
    source: details.php?name=re2gazeboPatch
    website: http://svn.thearmrobot.com/darpa_arm_sim_servers/SimRobot
  WAM_sim_server:
    author: !!python/unicode 'DARPA ARM GFE Team'
    deps:
    - WAM_msgs
    - geometry_msgs
    - BHand_msgs
    - PressureSensor_msgs
    - ForceTorque_msgs
    - BarrettCompat
    desc: WAM_server
    license: GPL
    shortdesc: WAM_server
    source: details.php?name=roscpp
    website: http://svn.thearmrobot.com/darpa_arm_sim_servers/WAM_sim_server
  audio_sim_server:
    author: !!python/unicode 'DARPA ARM GFE Team'
    deps:
    - audio_msgs
    - re2logger
    desc: darm_audio_sim
    license: private
    shortdesc: darm_audio_sim
    source: details.php?name=roscpp
    website: http://svn.thearmrobot.com/darpa_arm_sim_servers/audio_sim_server
  prosilica_sim_server:
    author: !!python/unicode 'DARPA ARM GFE Team'
    deps:
    - sensor_msgs
    - image_transport
    - prosilica_msgs
    - re2logger
    desc: prosilica_sim_server
    license: private
    shortdesc: prosilica_sim_server
    source: details.php?name=roscpp
    website: http://svn.thearmrobot.com/darpa_arm_sim_servers/prosilica_sim_server
  re2darmCollisionPreventer:
    author: !!python/unicode 'Andrew Somerville'
    deps:
    - planning_environment_msgs
    - WAM_msgs
    - BHand_msgs
    - DPPanTilt_msgs
    - TestExecution_msgs
    desc: re2darmCollisionPreventer
    license: BSD
    shortdesc: re2darmCollisionPreventer
    source: http://svn.thearmrobot.com/darpa_arm_sim_servers/re2darmCollisionPreventer
    website: http://ros.org/wiki/re2darmCollisionPreventer
  re2darmGazeboPlugins:
    author: !!python/unicode 'Andrew Somerville, Rorry Brenner'
    deps:
    - bullet
    - Bumblebee2_msgs
    - cv_bridge
    - diagnostic_updater
    - diagnostic_msgs
    - driver_base
    - gazebo
    - gazebo_tools
    - geometry_msgs
    - image_transport
    - nav_msgs
    - opende
    - opencv2
    - polled_camera
    - pr2_msgs
    - pr2_hardware_interface
    - pr2_controller_manager
    - pr2_mechanism_model
    - prosilica_msgs
    - roscpp
    - rospy
    - sensor_msgs
    - std_msgs
    - std_srvs
    - tinyxml
    - tf
    - urdf
    - polled_camera
    - prosilica_msgs
    - Bumblebee2_msgs
    - SR4000_msgs
    - image_transport
    desc: Gazebo Plugins for Darm Sim.
    license: BSD
    shortdesc: Gazebo Plugins for DarmSim
    source: details.php?name=angles
    website: http://svn.thearmrobot.com/darpa_arm_sim_servers/re2darmGazeboPlugins
  re2darmSimExampleController:
    author: !!python/unicode 'Andrew B. Mor'
    deps:
    - gazebo_plugins
    - gazebo_tools
    - std_msgs
    - pr2_controllers_msgs
    - pr2_mechanism_model
    - pr2_mechanism_diagnostics
    - pr2_controller_interface
    - pr2_mechanism_msgs
    - roscpp
    - SimGazeboControllers
    desc: Sample joint control for DARPA ARM Track C.
    license: GLPv3
    shortdesc: Example for DARPA ARM Track C
    source: details.php?name=pr2_gazebo_plugins
    website: http://svn.thearmrobot.com/darpa_arm_sim_servers/re2darmSimExampleController
  re2darmSimExampleIK:
    author: !!python/unicode 'RE2'
    deps:
    - roscpp
    - std_msgs
    - geometry_msgs
    - kinematics_msgs
    - pr2_controller_interface
    - pr2_mechanism_model
    - kdl_parser
    - WAM_msgs
    - BHand_msgs
    - DPPanTilt_msgs
    - TestExecution_msgs
    - gazebo
    - tf
    - tf_conversions
    - simple_sphere_detector
    - point_cloud_converter
    desc: darm_example_ik
    license: GPL
    shortdesc: Example application to get inverse kinematics of the WAM
    source: http://svn.thearmrobot.com/darpa_arm_sim_servers/re2darmSimExampleIK
    website: http://ros.org/wiki/darm_example_ik
  re2gazeboPatch:
    author: !!python/unicode 'Andrew Somerville, Rorry Brenner'
    deps: []
    license: BSD
    shortdesc: Gazebo Patcher
    source: list.php
    website: http://svn.thearmrobot.com/darpa_arm_sim_servers/re2gazeboPatch
  simple_sphere_detector:
    author: !!python/unicode ''
    deps:
    - roslib
    - roscpp
    - std_msgs
    - sensor_msgs
    - pcl
    - opencv2
    desc: simple_sphere_detector
    license: BSD
    shortdesc: SimpleSphereDetector
    source: http://svn.thearmrobot.com/darpa_arm_sim_servers/simple_sphere_detector
    website: http://ros.org/wiki/mimic_arm
darpa_arm_sim_servers/re2logger:
  re2logger:
    author: !!python/unicode 'DARPA ARM GFE Team'
    deps: []
    desc: re2logger
    license: GPL
    shortdesc: re2logger
    source: details.php?name=roscpp
    website: http://svn.thearmrobot.com/re2logger
dfki-sks-ros-pkg:
  rod4_node:
    author: !!python/unicode 'Rene Wagner'
    deps:
    - roscpp
    - sensor_msgs
    - timeutils
    desc: "Leuze rotoScan ROD-4 laser rangefinder driver.  The driver\n     currently\
      \ supports ROD-4 models connected via Ethernet only but\n     could be extended\
      \ to interface with RS422 models."
    license: BSD
    shortdesc: "Leuze rotoScan ROD-4 laser rangefinder driver.  The driver\n     currently\
      \ supports ROD-4 mode..."
    source: https://svn-agbkb.informatik.uni-bremen.de/dfki-sks-ros-pkg/trunk/dfki_sks_laser_drivers/rod4_node
    website: http://ros.org/wiki/rod4_node
  timeutils:
    author: !!python/unicode 'Rene Wagner'
    deps: []
    license: BSD
    shortdesc: timeutils contains utility code related to time(stamps) on *NIX.
    source: list.php
    website: https://svn-agbkb.informatik.uni-bremen.de/dfki-sks-ros-pkg/trunk/dfki_sks_laser_drivers/timeutils
drh-robotics-ros:
  ardros:
    author: !!python/unicode 'Dr. Rainer Hessmer'
    deps:
    - std_msgs
    - rospy
    - roscpp
    - geometry_msgs
    - nav_msgs
    - tf
    - joy
    desc: 'Arduino based robot controlled via ROS: Ard(uino)Ros'
    license: BSD
    shortdesc: 'Arduino based robot controlled via ROS: Ard(uino)Ros'
    source: http://drh-robotics-ros.googlecode.com/svn/trunk/ros/ardros
    website: http://ros.org/wiki/ardros
  playground:
    author: !!python/unicode 'Dr. Rainer Hessmer'
    deps:
    - std_msgs
    - rospy
    - roscpp
    - geometry_msgs
    - nav_msgs
    - tf
    desc: playground
    license: BSD
    shortdesc: playground
    source: http://drh-robotics-ros.googlecode.com/svn/trunk/ros/playground
    website: http://ros.org/wiki/playground
elektron_robot:
  elektron_base:
    author: !!python/unicode 'Konrad Banachowicz'
    deps:
    - roscpp
    - geometry_msgs
    - nav_msgs
    - tf
    desc: A ROS node which provides access to the Elektron mobile robot.
    license: GPL
    shortdesc: elektron_base
    source: https://github.com/RCPRG-ros-pkg/elektron_robot.git
    website: http://ros.org/wiki/elektron_base
  elektron_defs:
    author: !!python/unicode 'Konrad Banachowicz'
    deps:
    - xacro
    desc: "This package contains XML (and xacro macros) descriptions of robot kinematics\
      \ in the format\n  defined at Willow Garage for the erratic robot."
    license: GPL
    shortdesc: elektron_defs
    source: https://github.com/RCPRG-ros-pkg/elektron_robot.git
    website: http://ros.org/wiki/elektron_defs
eohan:
  fastrak_mocap_driver:
    author: !!python/unicode 'eohan'
    deps:
    - tf
    desc: fastrak_mocap_driver
    license: BSD
    shortdesc: fastrak_mocap_driver
    source: http://tools.pushkar.name/ext/ros/packages/fastrak_mocap_driver
    website: http://ros.org/wiki/fastrak_mocap_driver
  python_tutorial:
    author: !!python/unicode 'eohan'
    deps:
    - std_msgs
    - rospy
    - roscpp
    - rosbag
    - tf
    - kdl
    desc: python_tutorial
    license: BSD
    shortdesc: python_tutorial
    source: http://tools.pushkar.name/ext/ros/packages/python_tutorial
    website: http://ros.org/wiki/python_tutorial
eros:
  code_sourcery_arm_gnueabi:
    author: !!python/unicode 'Daniel Stonier (d.stonier@gmail.com)'
    deps:
    - eros_license
    - eros_build
    desc: "Installer script for code sourcery's g++ lite arm-none-linux-gnueabi toolchain.\n\
      \     As this downloads a binary version of the toolchain, it only works on\
      \ \n     x86. To work for amd64, need to automate a download and compile of\
      \ the toolchain's source.\n     for 64 bit machines."
    license: BSD
    shortdesc: Build recipe to install code sourcery's g++ lite toolchain for arm-gnueabi
    source: https://code.ros.org/svn/eros/trunk/packages/toolchains/arm/code_sourcery_arm_gnueabi
    website: http://ros.org/wiki/code_sourcery
  eros_apr:
    author: !!python/unicode 'Daniel Stonier (d.stonier@gmail.com)'
    deps:
    - eros_license
    - eros_build
    desc: "This provides a source package for compiling the apache runtime.\n\tOrdinarily\
      \ this is not useful as you would install via your system's\n\tinstallation\
      \ method (e.g. apt-get for ubuntu), but for cross-compiling \n    it provides\
      \ the recipe needed to make a toolchain ros-ready."
    license: BSD
    shortdesc: Build recipe for cross-compiling the apache runtime
    source: https://code.ros.org/svn/eros/trunk/packages/rosdeps/core/eros_apr
    website: http://ros.org/wiki/eros_apr
  eros_apr_util:
    author: !!python/unicode 'Daniel Stonier (d.stonier@gmail.com)'
    deps:
    - eros_license
    - eros_apr
    - eros_build
    desc: "This provides a source package for compiling the apache runtime utilities.\n\
      \tOrdinarily this is not useful as you would install via your system's\n\tinstallation\
      \ method (e.g. apt-get for ubuntu), but for cross-compiling \n    it provides\
      \ the recipe needed to make a toolchain ros-ready."
    license: BSD
    shortdesc: Build recipe for cross-compiling the apache runtime utilities
    source: https://code.ros.org/svn/eros/trunk/packages/rosdeps/core/eros_apr_util
    website: http://ros.org/wiki/eros_apr_util
  eros_boost:
    author: !!python/unicode 'Daniel Stonier (d.stonier@gmail.com)'
    deps:
    - eros_license
    - eros_build
    desc: "This provides a source package for compiling a minimal boost ideally\n\t\
      targetting embedded systems.\n\t\n\tOrdinarily this is not useful as you would\
      \ install via your system's\n\tinstallation method (e.g. apt-get for ubuntu),\
      \ but for cross-compiling \n    it provides the recipe needed to make a toolchain\
      \ ros-ready."
    license: BSD
    shortdesc: Build recipe for cross-compiling a minimal boost for embedded systems
    source: https://code.ros.org/svn/eros/trunk/packages/rosdeps/core/eros_boost
    website: http://ros.org/wiki/eros_boost
  eros_build:
    author: !!python/unicode 'Daniel Stonier (d.stonier@gmail.com)'
    deps:
    - eros_license
    - rosbuild
    desc: "This includes both makefiles and cmake macro libraries to assist in the\
      \ build\n     of 3rd party packages for use with a toolchain."
    license: BSD
    shortdesc: make/cmake utilities to assist 3rd party builds
    source: https://code.ros.org/svn/eros/trunk/tools/eros_build
    website: http://ros.org/wiki/eros_build
  eros_bzip2:
    author: !!python/unicode 'Daniel Stonier (d.stonier@gmail.com)'
    deps:
    - eros_license
    - eros_build
    desc: "This provides a source package for compiling bzip2 (needed by boost).\n\
      \t\n\tOrdinarily this is not useful as you would install via your system's\n\
      \tinstallation method (e.g. apt-get for ubuntu), but for cross-compiling \n\
      \    it provides the recipe needed to make a toolchain ros-ready."
    license: BSD
    shortdesc: Build recipe for cross-compiling bzip2
    source: https://code.ros.org/svn/eros/trunk/packages/other/eros_bzip2
    website: http://ros.org/wiki/eros_bzip2
  eros_cpp_tutorials:
    author: !!python/unicode 'Daniel Stonier'
    deps:
    - roscpp
    - std_srvs
    - std_msgs
    desc: This was primarily made for testing the mingw cross compiles.
    license: BSD
    shortdesc: Simple cpp tests for cross-compiling
    source: https://code.ros.org/svn/eros/trunk/tests/eros_cpp_tutorials
    website: http://ros.org/wiki/eros_cpp_tutorials
  eros_gdbserver:
    author: !!python/unicode 'Daniel Stonier (d.stonier@gmail.com)'
    deps:
    - eros_license
    - eros_build
    desc: "This provides a source package for cross-compiling a gdb/gdbserver combo.\n\
      \t\n\tThis pair of tools allows you to do remote debugging without having\n\t\
      to run the debugger itself (nor libs with debugging symbols) on the\n\ttarget.\
      \ Very useful for embedded boards with limited memory or oomph."
    license: BSD
    shortdesc: Build recipe for cross-compiling gdb/gdbserver
    source: https://code.ros.org/svn/eros/trunk/packages/utilities/eros_gdbserver
    website: http://ros.org/wiki/eros_gdbserver
  eros_license:
    author: !!python/unicode 'Daniel Stonier (d.stonier@gmail.com)'
    deps: []
    desc: "<p>\n     Maintains the eros license details.\n  </p>"
    license: BSD
    shortdesc: Licensing details for eros
    source: https://code.ros.org/svn/eros/trunk/eros_license
    website: http://ros.org/wiki/eros_license
  eros_log4cxx:
    author: !!python/unicode 'Daniel Stonier (d.stonier@gmail.com)'
    deps:
    - eros_license
    - eros_apr_util
    - eros_build
    desc: "This provides a source package for compiling the apache c++ logging library.\n\
      \tOrdinarily this is not useful as you would install via your system's\n\tinstallation\
      \ method (e.g. apt-get for ubuntu), but for cross-compiling \n    it provides\
      \ the recipe needed to make a toolchain ros-ready."
    license: BSD
    shortdesc: Build recipe for cross-compiling the apache c++ logging library
    source: https://code.ros.org/svn/eros/trunk/packages/rosdeps/core/eros_log4cxx
    website: http://ros.org/wiki/eros_log4cxx
  eros_msg_latency:
    author: !!python/unicode 'Daniel Stonier'
    deps:
    - roscpp
    - std_msgs
    desc: Generates statistical data providing a benchmark for msg latencies.
    license: BSD
    shortdesc: Test utility for benchmarking topic latencies
    source: https://code.ros.org/svn/eros/trunk/tests/eros_msg_latency
    website: http://ros.org/wiki/eros_msg_latency
  eros_nodelet_latency:
    author: !!python/unicode 'Daniel Stonier'
    deps:
    - nodelet
    - std_msgs
    desc: "Generates statistical data providing a benchmark for nodelet latencies,\
      \ both internally\n     (via the boost shared pointer mechanism) and externally\
      \ (via copies)."
    license: BSD
    shortdesc: Test utility for benchmarking nodelet latencies
    source: https://code.ros.org/svn/eros/trunk/tests/eros_nodelet_latency
    website: http://ros.org/wiki/eros_nodelet_latency
  eros_opencv:
    author: !!python/unicode 'Daniel Stonier (d.stonier@gmail.com)'
    deps:
    - eros_license
    - eros_build
    desc: "This is the trimmed down version of ros' opencv we use for embedded boards.\n\
      \n    Warning: this conflicts with ros' opencv2 package which builds the kitchen\
      \ sink."
    license: BSD
    shortdesc: Embedded version of ros' opencv package
    source: https://code.ros.org/svn/eros/trunk/packages/other/eros_opencv
    website: http://ros.org/wiki/eros_opencv
  eros_platforms:
    author: !!python/unicode 'Daniel Stonier (d.stonier@gmail.com)'
    deps:
    - eros_license
    desc: "eros_platforms is a library of preconfigured cmake modules\n  for popular\
      \ platform/cpu configurations."
    license: BSD
    shortdesc: cmake modules for popular platform configurations
    source: https://code.ros.org/svn/eros/trunk/tools/eros_platforms
    website: http://ros.org/wiki/eros_platforms
  eros_python_tools:
    author: !!python/unicode 'Daniel Stonier (d.stonier@gmail.com)'
    deps:
    - roslib
    - eros_license
    desc: "<p>\n  Provides python tools to aid in embedded development with the ros.\n\
      \  </p>"
    license: BSD
    shortdesc: Ros embedded development python tools.
    source: https://code.ros.org/svn/eros/trunk/tools/eros_python_tools
    website: http://ros.org/wiki/eros_python_tools
  eros_qt_tutorials:
    author: !!python/unicode 'Daniel Stonier'
    deps:
    - eros_build
    - roscpp
    - std_msgs
    desc: eros_qt_tutorials
    license: BSD
    shortdesc: eros_qt_tutorials
    source: https://code.ros.org/svn/eros/trunk/tests/eros_qt_tutorials
    website: http://ros.org/wiki/eros_qt_tutorials
  eros_rpc_latency:
    author: !!python/unicode 'Daniel Stonier'
    deps:
    - roscpp
    - std_srvs
    desc: Generates statistical data providing a benchmark for rpc messaging latencies.
    license: BSD
    shortdesc: Test utility for benchmarking rpc latencies
    source: https://code.ros.org/svn/eros/trunk/tests/eros_rpc_latency
    website: http://ros.org/wiki/eros_rpc_latency
  eros_toolchains:
    author: !!python/unicode 'Daniel Stonier'
    deps:
    - eros_license
    desc: "eros_toolchains is a library of preconfigured cmake toolchain modules\n\
      \  for popular/standard toolchain configurations on various platforms."
    license: BSD
    shortdesc: cmake toolchain modules for popular toolchains
    source: https://code.ros.org/svn/eros/trunk/tools/eros_toolchains
    website: http://ros.org/wiki/eros_toolchains
  eros_zlib:
    author: !!python/unicode 'Daniel Stonier (d.stonier@gmail.com)'
    deps:
    - eros_license
    - eros_build
    desc: "This provides a source package for compiling zlib (needed by boost).\n\t\
      \n\tOrdinarily this is not useful as you would install via your system's\n\t\
      installation method (e.g. apt-get for ubuntu), but for cross-compiling \n  \
      \  it provides the recipe needed to make a toolchain ros-ready."
    license: BSD
    shortdesc: Build recipe for cross-compiling zlib
    source: https://code.ros.org/svn/eros/trunk/packages/other/eros_zlib
    website: http://ros.org/wiki/eros_zlib
  mingw_cross:
    author: !!python/unicode 'Daniel Stonier (d.stonier@gmail.com)'
    deps:
    - eros_license
    - eros_build
    desc: "Installer script for the mingw cross environment. This will install to\
      \ /opt/mingw\n\t and immediately begin cross-compiling gcc, boost and qt. Other\
      \ libraries can be added by\n\t simply cd'ing to /opt/mingw and running make\
      \ for the desired target."
    license: BSD
    shortdesc: Build recipe to install the mingw cross environment
    source: https://code.ros.org/svn/eros/trunk/packages/toolchains/mingw_cross
    website: http://mingw-cross-env.nongnu.org/
  roscpplight:
    author: "Morten Kj\xC3\xA6rgaard"
    deps:
    - xmlrpcpp
    - std_msgs
    - roscpp_serialization
    desc: "roscpplight is a simple implementation of a part of the ROS communication\
      \ layer, allowing a component to publish and subscribe to ROS messages.\n  \
      \  The purpose is to provide a library for interfacing simple nodes e.g. sensors,\
      \ actuators or other robot control systems to ROS with a minimum set of dependencies\
      \ and threading model constraints.\n    The current version is a test of the\
      \ concept and thus not meant for serious use.\n    It uses boost asio for network\
      \ communication to improve portability.\n    XmlRpc++ has been used for convenience,\
      \ but a different xmlrpc implementation would improve the threading constraints."
    license: BSD
    shortdesc: Simple implementation of roscpp
    source: https://code.ros.org/svn/eros/trunk/packages/rosdeps/core/roscpplight
    website: http://ros.org/wiki/roscpplight
erratic_robot:
  erratic_description:
    author: !!python/unicode 'Maintained by Antons Rebguns'
    deps:
    - convex_decomposition
    - ivcon
    - urdf
    - xacro
    - gazebo
    - gazebo_tools
    - fake_localization
    - erratic_gazebo_plugins
    - map_server
    - gazebo_worlds
    - robot_state_publisher
    - laser_filters
    - robot_self_filter
    - pr2_gazebo_plugins
    - point_cloud_converter
    desc: URDF description files for the ERA-MOBI (Erratic) mobile robot base from
      Videre.
    license: BSD
    shortdesc: URDF for Erratic mobile base
    source: https://ua-ros-pkg.googlecode.com/svn/stacks/erratic_robot/trunk/erratic_description
    website: http://ros.org/wiki/erratic_description
  erratic_gazebo_plugins:
    author: !!python/unicode 'Daniel Hewlett'
    deps:
    - roscpp
    - gazebo
    - gazebo_plugins
    desc: "Contains a differential drive plugin that works with the erratic robot\
      \ model provided\n    in the erratic_description package. The plugin may also\
      \ work for other differential drive \n    robots. The purpose of this custom\
      \ plugin is to build the ROS functionality directly into a \n    proper Gazebo\
      \ plugin, rather than a node that communicates with Gazebo."
    license: BSD
    shortdesc: erratic_gazebo_plugins
    source: https://ua-ros-pkg.googlecode.com/svn/stacks/erratic_robot/trunk/erratic_gazebo_plugins
    website: http://ros.org/wiki/erratic_gazebo_plugins
  erratic_navigation:
    author: !!python/unicode 'Antons Rebguns'
    deps:
    - move_base
    - amcl
    - gmapping
    - topic_tools
    desc: "This package contains configuration and launch files necessary to run\n\
      \        ROS navigation stack on the Erratic robot."
    license: BSD
    shortdesc: Navigation stack configuration for Erratic robot
    source: https://ua-ros-pkg.googlecode.com/svn/stacks/erratic_robot/trunk/erratic_navigation
    website: http://ros.org/wiki/erratic_navigation
  erratic_navigation_apps:
    author: !!python/unicode 'Antons Rebguns'
    deps:
    - map_server
    - costmap_2d
    - erratic_navigation
    - erratic_description
    desc: erratic_navigation_apps
    license: BSD
    shortdesc: erratic_navigation_apps
    source: https://ua-ros-pkg.googlecode.com/svn/stacks/erratic_robot/trunk/erratic_navigation_apps
    website: http://ros.org/wiki/erratic_navigation_apps
  erratic_teleop:
    author: !!python/unicode 'Antons Rebguns'
    deps:
    - roscpp
    - geometry_msgs
    desc: "This package contains keyboard teleoperation node used to drive the\n \
      \       Erratic robot."
    license: BSD
    shortdesc: Teleoperation for Erratic robot
    source: https://ua-ros-pkg.googlecode.com/svn/stacks/erratic_robot/trunk/erratic_teleop
    website: http://ros.org/wiki/erratic_teleop
ethzasl_aseba:
  asebaros:
    author: "St\xC3\xA9phane Magnenat"
    deps:
    - std_msgs
    - roscpp
    desc: "Bridge to access an ASEBA network from ROS.\n    For more information about\
      \ aseba, see: http://mobots.epfl.ch/aseba.html"
    license: BSD
    shortdesc: "Bridge to access an ASEBA network from ROS.\n    For more information\
      \ about aseba, see: http://m..."
    source: https://github.com/ethz-asl/ros-aseba.git
    website: http://ros.org/wiki/asebaros
ethzasl_drivers:
  canon_vbc50i:
    author: !!python/unicode 'Cedric Pradalier'
    deps:
    - roscpp
    - sensor_msgs
    - dynamic_reconfigure
    - image_transport
    - driver_base
    desc: canon_vbc50i
    license: BSD
    shortdesc: canon_vbc50i
    source: https://github.com/ethz-asl/ros-drivers.git
    website: http://ros.org/wiki/canon_vbc50i
  panasonic_blc111:
    author: !!python/unicode 'Cedric Pradalier'
    deps:
    - rospy
    - gscam
    desc: panasonic_blc111
    license: BSD
    shortdesc: panasonic_blc111
    source: https://github.com/ethz-asl/ros-drivers.git
    website: http://ros.org/wiki/panasonic_blc111
ethzasl_mapping:
  extrinsic_calibration:
    author: "Fran\xC3\xA7ois Pomerleau, Francis Colas, and St\xC3\xA9phane Magnenat"
    deps:
    - rospy
    - roscpp
    - tf
    - eigen
    desc: "Calibration of 3D transform of a depth sensor given two sets of TFs, one\
      \ from the odometry and one from the sensor pose.\n\tUses modular_cloud_matcher\
      \ to provide the sensor pose using ICP."
    license: BSD
    shortdesc: extrinsic_calibration
    source: https://github.com/ethz-asl/ros-mapping.git
    website: http://ros.org/wiki/extrinsic_calibration
  kinect_exp_logger:
    author: "St\xC3\xA9phane Magnenat"
    deps:
    - roscpp
    - std_msgs
    - geometry_msgs
    - sensor_msgs
    - nav_msgs
    - tf
    - tf_conversions
    - eigen
    desc: kinect_exp_logger
    license: BSD
    shortdesc: kinect_exp_logger
    source: https://github.com/ethz-asl/ros-mapping.git
    website: http://ros.org/wiki/kinect_exp_logger
  libnabo:
    author: "St\xC3\xA9phane Magnenat"
    deps:
    - eigen
    desc: Fetches and compiles (http://github.com/ethz-asl/libnabo)
    license: BSD
    shortdesc: Fetches and compiles (http://github.com/ethz-asl/libnabo)
    source: https://github.com/ethz-asl/ros-mapping.git
    website: http://ros.org/wiki/libnabo
  modular_cloud_matcher:
    author: "Fran\xC3\xA7ois Pomerleau and St\xC3\xA9phane Magnenat"
    deps:
    - roscpp
    - rospy
    - std_msgs
    - geometry_msgs
    - sensor_msgs
    - nav_msgs
    - tf
    - tf_conversions
    - eigen
    - pcl
    desc: 3D point cloud matcher based on libpointmatcher (http://github.com/ethz-asl/libpointmatcher)
    license: BSD
    shortdesc: modular_cloud_matcher
    source: https://github.com/ethz-asl/ros-mapping.git
    website: http://ros.org/wiki/modular_cloud_matcher
ethzasl_message_transport:
  compressed_imagem_transport:
    author: !!python/unicode 'Cedric Pradalier'
    deps:
    - sensor_msgs
    - message_transport_common
    - imagem_transport
    - opencv2
    - cv_bridge
    desc: compressed_imagem_transport
    license: BSD
    shortdesc: compressed_imagem_transport
    source: https://github.com/ethz-asl/ros-message-transport.git
    website: http://pr.willowgarage.com/wiki/compressed_imagem_transport
  imagem_transport:
    author: !!python/unicode 'Cedric Pradalier'
    deps:
    - pluginlib
    - message_transport_common
    - sharedmem_transport
    - sensor_msgs
    - opencv2
    - cv_bridge
    - message_filters
    desc: "imagem_transport (the m is here to avoid the confusion with the\n\t image_transport\
      \ package)"
    license: BSD
    shortdesc: imagem_transport
    source: https://github.com/ethz-asl/ros-message-transport.git
    website: http://ros.org/wiki/imagem_transport
  message_transport_common:
    author: !!python/unicode 'Cedric Pradalier'
    deps:
    - pluginlib
    - message_filters
    desc: "message_transport is a generic architecture for writing object transport,\n\
      \t  similar to the message_transport architecture."
    license: BSD
    shortdesc: message_transport_common
    source: https://github.com/ethz-asl/ros-message-transport.git
    website: http://ros.org/wiki/message_transport_common
  pointcloud_transport:
    author: !!python/unicode 'Cedric Pradalier'
    deps:
    - pluginlib
    - message_transport_common
    - sharedmem_transport
    - udpmulti_transport
    - sensor_msgs
    desc: pointcloud_transport
    license: BSD
    shortdesc: pointcloud_transport
    source: https://github.com/ethz-asl/ros-message-transport.git
    website: http://ros.org/wiki/pointcloud_transport_base
  sharedmem_transport:
    author: !!python/unicode 'Cedric Pradalier'
    deps:
    - message_transport_common
    desc: sharedmem_transport
    license: BSD
    shortdesc: sharedmem_transport
    source: https://github.com/ethz-asl/ros-message-transport.git
    website: http://pr.willowgarage.com/wiki/sharedmem_transport
  theora_imagem_transport:
    author: !!python/unicode 'Ethan Dreyfuss, Cedric Pradalier'
    deps:
    - sensor_msgs
    - message_transport_common
    - sharedmem_transport
    - imagem_transport
    - opencv2
    - cv_bridge
    - pluginlib
    desc: theora_imagem_transport
    license: BSD
    shortdesc: theora_imagem_transport
    source: https://github.com/ethz-asl/ros-message-transport.git
    website: http://pr.willowgarage.com/wiki/theora_imagem_transport
  udpmulti_transport:
    author: !!python/unicode 'Cedric Pradalier'
    deps:
    - std_msgs
    - message_transport_common
    desc: udpmulti_transport
    license: BSD
    shortdesc: udpmulti_transport
    source: https://github.com/ethz-asl/ros-message-transport.git
    website: http://ros.org/wiki/udpmulti_transport
euRobotics_orocos_ws:
  calculateDistanceToWall:
    author: !!python/unicode 'Tinne De Laet'
    deps:
    - ocl
    - tf
    - rtt_ros_integration
    - rtt_ros_integration_geometry_msgs
    - rtt_ros_integration_sensor_msgs
    - geometry_msgs
    - std_msgs
    - sensor_msgs
    - rtt_tf
    - polar_scan_matcher
    desc: This package contains the components of the calculateDistanceToWall package
    license: LGPL, BSD
    shortdesc: Orocos calculateDistanceToWall Component package
    source: details.php?name=rtt
    website: https://github.com/bellenss/euRobotics_orocos_ws.git
  extendedKalmanFilterComponentRobot:
    author: !!python/unicode 'Tinne De Laet'
    deps:
    - ocl
    - orocos_bfl
    - bfl_typekit
    - tf
    - rtt_ros_integration
    - rtt_ros_integration_geometry_msgs
    - rtt_ros_integration_sensor_msgs
    - geometry_msgs
    - std_msgs
    desc: "This package contains the components of the extendedKalmanFilterComponent\
      \ package\n        It is a generic component estimated the state with a n'th\
      \ (configurable) order system model and a linear analytic measurement model\
      \ with additive gaussian noise."
    license: LGPLv2.1 / BSD
    shortdesc: Orocos extendedKalmanFilterComponentRobot package
    source: details.php?name=rtt
    website: https://github.com/bellenss/euRobotics_orocos_ws.git
  remote_simulation:
    author: !!python/unicode 'Tinne De Laet, Ruben Smits, Steven Bellens, first.last@mech.kuleuven.be'
    deps:
    - youbot_description
    - calculateDistanceToWall
    - rtt_tf
    - polar_scan_matcher
    - tf
    desc: 'remote_simulator: this package contains the code to launch the remote (morse
      and gazebo) simulator'
    license: LGPLv2.1 / BSD
    shortdesc: remote_simulator
    source: details.php?name=youbot_supervisor
    website: https://github.com/bellenss/euRobotics_orocos_ws.git
  youbot_controller:
    author: !!python/unicode 'Steven Bellens - steven.bellens@mech.kuleuven.be'
    deps:
    - orocos_bfl
    - bfl_typekit
    - orocos_kdl
    - rtt_ros_param
    - rtt_ros_integration
    - geometry_msgs
    - rtt_ros_integration_geometry_msgs
    desc: This package contains the components of the youbot_controller package
    license: LGPLv2.1 / BSD
    shortdesc: Orocos youbot_controller Component package
    source: details.php?name=rtt
    website: https://github.com/bellenss/euRobotics_orocos_ws.git
  youbot_simulator:
    author: !!python/unicode 'Steven Bellens - steven.bellens@mech.kuleuven.be'
    deps:
    - orocos_bfl
    - bfl_typekit
    - rtt_ros_param
    - rtt_ros_integration
    - geometry_msgs
    - std_msgs
    - rtt_ros_integration_geometry_msgs
    - extendedKalmanFilterComponentRobot
    desc: This package contains the components of the youbot_simulator package
    license: LGPLv2.1 / BSD
    shortdesc: Orocos youbot_simulator Component package
    source: details.php?name=rtt
    website: https://github.com/bellenss/euRobotics_orocos_ws.git
  youbot_supervisor:
    author: !!python/unicode 'Steven Bellens, steven.bellens@mech.kuleuven.be'
    deps:
    - youbot_simulator
    - extendedKalmanFilterComponentRobot
    desc: "youbot_supervisor: this package contains deploy scripts to launch the demo\n\
      \     application. It does not contain any source code"
    license: LGPLv2.1 / BSD
    shortdesc: youbot_supervisor
    source: details.php?name=youbot_controller
    website: https://github.com/bellenss/euRobotics_orocos_ws.git
  youbot_teleop:
    author: !!python/unicode 'Peter Soetens'
    deps:
    - joy
    - geometry_msgs
    desc: youbot_teleop
    license: BSD
    shortdesc: youbot_teleop
    source: https://github.com/bellenss/euRobotics_orocos_ws.git
    website: http://ros.org/wiki/youbot_teleop
executive_smach:
  smach:
    author: !!python/unicode 'Jonathan Bohren'
    deps: []
    desc: "SMACH, which stands for 'state machine', is a task-level\n    architecture\
      \ for rapidly creating complex robot behavior. At its\n    core, SMACH is a\
      \ ROS-independent Python library to build\n    hierarchical state machines.\
      \  SMACH is a new library that takes\n    advantage of very old concepts in\
      \ order to quickly create robust\n    robot behavior with maintainable and modular\
      \ code."
    license: BSD
    shortdesc: "SMACH, which stands for 'state machine', is a task-level\n    architecture\
      \ for rapidly creating ..."
    source: https://kforge.ros.org/smach/executive_smach
    website: http://ros.org/wiki/smach
  smach_msgs:
    author: !!python/unicode 'Jonathan Bohren'
    deps: []
    desc: "This package contains a set of messages that are used in the\n    internal\
      \ debugging interface of a SMACH state\n    machine. The <a href=\"http://www.ros.org/wiki/smach_viewer\"\
      >smach\n    viewer</a> uses this debugging interface to visualize complete\n\
      \    hierarchical state machines."
    license: BSD
    shortdesc: smach_msgs
    source: https://kforge.ros.org/smach/executive_smach
    website: http://ros.org/wiki/smach_msgs
  smach_ros:
    author: !!python/unicode 'Jonathan Bohren'
    deps:
    - smach
    - rospy
    - rostest
    - rostopic
    - actionlib
    - actionlib_msgs
    - smach_msgs
    - std_msgs
    desc: "The smach_ros package contains extensions for the SMACH library to\n  \
      \  integrate it tightly with ROS.  For example, SMACH-ROS can call\n    ROS\
      \ services, listen to ROS topics, and integrate\n    with <a href=\"http://www.ros.org/wiki/actionlib\"\
      >actionlib</a>\n    both as a client, and a provider of action servers.  SMACH\
      \ is a\n    new library that takes advantage of very old concepts in order to\n\
      \    quickly create robust robot behavior with maintainable and modular\n  \
      \  code."
    license: BSD
    shortdesc: "The smach_ros package contains extensions for the SMACH library to\n\
      \    integrate it tightly wit..."
    source: https://kforge.ros.org/smach/executive_smach
    website: http://ros.org/wiki/smach_ros
executive_smach_visualization:
  smach_viewer:
    author: !!python/unicode 'Jon Bohren'
    deps:
    - smach_ros
    - xdot
    - smach_msgs
    desc: "The smach viewer is a GUI that shows the state of hierarchical\n    SMACH\
      \ state machines. It can visualize the possible transitions\n    between states,\
      \ as well as the currently active state and the\n    values of user data that\
      \ is passed around between states. The\n    smach viewer uses the SMACH debugging\
      \ interface based on\n    the <a href=\"http://www.ros.org/wiki/smach_msgs\"\
      >smach\n    messages</a> to gather information from running state machines."
    license: BSD
    shortdesc: smach_viewer
    source: https://kforge.ros.org/smach/visualization
    website: http://ros.org/wiki/smach_viewer
flyatar:
  camera1394v2:
    author: !!python/unicode "Patrick Beeson, Nate Koenig, Andrew Howard,\n    Damien\
      \ Douxchamps, Dan Dennedy, Jack O'Quin"
    deps:
    - image_transport
    - tf
    - camera_info_manager
    - dynamic_reconfigure
    - driver_base
    - image_proc
    desc: "This is a ROS driver for devices supporting the IEEE 1394 Digital\n   \
      \ Camera (IIDC) protocol. It supports the ROS image_pipeline, using\n    libdc1394\
      \ for device access."
    license: GPL
    shortdesc: IEEE 1394 Digital Camera driver
    source: http://github.com/peterpolidoro/Flyatar.git
    website: http://ros.org/wiki/camera1394
  camera_firewire:
    author: !!python/unicode 'Rosen Diankov (rdiankov@cs.cmu.edu) with Jeremy Liebs,
      Kurt Konolige for dcam1394 files'
    deps:
    - opencv2
    - cv_bridge
    - image_transport
    - sensor_msgs
    - std_msgs
    - tf
    desc: "Customizable camera streaming using dc1394 ROS driver. Parameters it uses:\n\
      \n    display - shows the image on the local computer\n    cameraguid - hex\
      \ string, if specified will only open a camera with this guid\n    cameraindex\
      \ - index of the camera to start if cameraguid is not present\n    mode - any\
      \ one of opencv modes to set, for example: &quot;MODE_640x480_YUV422&quot;\n\
      \    framerate - number of frames a second to publish\n    KK_fx,KK_fy,KK_cx,KK_cy\
      \ - intrinsic parameters such that KK = [fx 0 cx; 0 fy cy; 0 0 1]\n    kc_k1,kc_k2,kc_p1,kc_2\
      \ - radial distortion coefficients to undistort the image\n    colorfilter -\
      \ color conversion for debayering, can be\n               &quot;COLOR_FILTER_RGGB&quot;,\
      \ &quot;COLOR_FILTER_GBRG&quot;, &quot;COLOR_FILTER_GRBG&quot;, &quot;COLOR_FILTER_BGGR&quot;\n\
      \    brightness\n    contrast\n    whitebalance_blueu\n    whitebalance_redv\n\
      \    exposure\n    compression - how to compress the data before sending, can\
      \ be &quot;none&quot;, &quot;png&quot;, &quot;jpg&quot;, &quot;jpeg&quot;\n\
      \    gain - the gain on the camera values"
    license: Apache License 2.0
    shortdesc: DC1394 Calibrated Camera Driver
    source: details.php?name=roscpp
    website: http://github.com/peterpolidoro/Flyatar.git
  flyatar_action_client:
    author: !!python/unicode 'Peter Polidoro'
    deps:
    - rospy
    - actionlib
    - actionlib_msgs
    - stage_action_server
    desc: flyatar_action_client
    license: BSD
    shortdesc: flyatar_action_client
    source: http://github.com/peterpolidoro/Flyatar.git
    website: http://ros.org/wiki/flyatar_action_client
  flyatar_avatar:
    author: !!python/unicode 'Peter Polidoro'
    deps:
    - rospy
    - tf
    - joystick_commands
    - image_gui
    - stage_message_interface
    - pythonmodules
    desc: flyatar_avatar
    license: BSD
    shortdesc: flyatar_avatar
    source: http://github.com/peterpolidoro/Flyatar.git
    website: http://ros.org/wiki/avatar
  flyatar_calibration:
    author: !!python/unicode 'Peter Polidoro'
    deps:
    - joystick_commands
    - camera1394v2
    - pythonmodules
    - track_image_contours
    - plate_tf
    desc: flyatar_calibration
    license: BSD
    shortdesc: flyatar_calibration
    source: details.php?name=rospy
    website: http://github.com/peterpolidoro/Flyatar.git
  flyatar_experiments:
    author: !!python/unicode 'Peter Polidoro'
    deps:
    - rospy
    - smach
    - smach_ros
    - stage_action_server
    - image_gui
    - plate_tf
    - save_data
    - geometry_msgs
    desc: flyatar_experiments
    license: BSD
    shortdesc: flyatar_experiments
    source: http://github.com/peterpolidoro/Flyatar.git
    website: http://ros.org/wiki/flyatar_experiments
  flyatar_manual:
    author: !!python/unicode 'Peter Polidoro'
    deps:
    - rospy
    - joystick_commands
    - stage_message_interface
    desc: flyatar_manual
    license: BSD
    shortdesc: flyatar_manual
    source: http://github.com/peterpolidoro/Flyatar.git
    website: http://ros.org/wiki/manual
  flysim:
    author: !!python/unicode 'Josh Faust / Peter Polidoro'
    deps:
    - roslib
    - rosconsole
    - std_srvs
    desc: flysim is a tool made from turtlesim...
    license: BSD
    shortdesc: flysim is a tool made from turtlesim...
    source: details.php?name=roscpp
    website: http://github.com/peterpolidoro/Flyatar.git
  flysim_teleop:
    author: !!python/unicode 'Melonee Wise / Peter Polidoro'
    deps:
    - roscpp
    - rospy
    - flysim
    - joystick_commands
    desc: flysim_teleop is a simple package to demonstrate how to write a teleoperation
      node in ROS using the flysim.
    license: BSD
    shortdesc: flysim_teleop
    source: http://github.com/peterpolidoro/Flyatar.git
    website: http://ros.org/wiki/turtlesim_teleop
  flysim_tf:
    author: !!python/unicode 'James Bowman / Peter Polidoro'
    deps:
    - roscpp
    - rospy
    - flysim_teleop
    - flysim
    - tf
    desc: flysim_tf demonstrates how to write a tf broadcaster and listener with the
      flysim. The tutle_tf_listener commands robot to follow fly around as you drive
      fly using the keyboard.
    license: BSD
    shortdesc: flysim_tf demonstrates how to write a tf broadcaster and listener with
      the flysim. The tutle_...
    source: http://github.com/peterpolidoro/Flyatar.git
    website: http://ros.org/wiki/turtlesim_tf
  image_gui:
    author: !!python/unicode 'XYFly'
    deps:
    - rospy
    - track_image_contours
    - stage
    - tf
    - plate_tf
    - rosbag
    desc: image_gui
    license: BSD
    shortdesc: image_gui
    source: http://github.com/peterpolidoro/Flyatar.git
    website: http://ros.org/wiki/image_gui
  joystick_commands:
    author: !!python/unicode 'Peter Polidoro'
    deps:
    - joystick_ps3
    desc: stage_teleop is...
    license: BSD
    shortdesc: stage_teleop
    source: details.php?name=rospy
    website: http://github.com/peterpolidoro/Flyatar.git
  joystick_ps3:
    author: !!python/unicode 'Peter Polidoro'
    deps:
    - roscpp
    - joy
    desc: joystick_ps3
    license: BSD
    shortdesc: joystick_ps3
    source: details.php?name=rospy
    website: http://github.com/peterpolidoro/Flyatar.git
  plate_tf:
    author: !!python/unicode 'Peter Polidoro'
    deps:
    - rospy
    - tf
    - pythonmodules
    - geometry_msgs
    - opencv2
    desc: plate_tf
    license: BSD
    shortdesc: plate_tf
    source: http://github.com/peterpolidoro/Flyatar.git
    website: http://ros.org/wiki/plate_tf
  pythonmodules:
    author: !!python/unicode 'XYFly'
    deps:
    - rospy
    desc: pythonmodules
    license: BSD
    shortdesc: pythonmodules
    source: http://github.com/peterpolidoro/Flyatar.git
    website: http://ros.org/wiki/pythonmodules
  save_data:
    author: !!python/unicode 'Peter Polidoro'
    deps:
    - opencv2
    - cv_bridge
    - joystick_commands
    - plate_tf
    desc: save_data
    license: BSD
    shortdesc: save_data
    source: details.php?name=rospy
    website: http://github.com/peterpolidoro/Flyatar.git
  stage_action_server:
    author: !!python/unicode 'Peter Polidoro'
    deps:
    - rospy
    - roslib
    - actionlib
    - actionlib_msgs
    - tf
    - stage
    - plate_tf
    desc: stage_action_server
    license: BSD
    shortdesc: stage_action_server
    source: http://github.com/peterpolidoro/Flyatar.git
    website: http://ros.org/wiki/stage_action_server
  stage_message_interface:
    author: !!python/unicode 'Peter Polidoro'
    deps:
    - rospy
    - roslib
    - tf
    - stage
    desc: stage_message_interface
    license: BSD
    shortdesc: stage_message_interface
    source: http://github.com/peterpolidoro/Flyatar.git
    website: http://ros.org/wiki/stage_message_interface
  track_image_contours:
    author: !!python/unicode 'Peter Polidoro'
    deps:
    - opencv2
    - cv_bridge
    - rospy
    - std_msgs
    - camera1394v2
    - plate_tf
    desc: track_image_points
    license: BSD
    shortdesc: track_image_points
    source: details.php?name=sensor_msgs
    website: http://github.com/peterpolidoro/Flyatar.git
folding:
  folding_apps:
    author: !!python/unicode 'Stephen Miller'
    deps:
    - stereo_click
    - folding_gui
    - folding_execution
    - pr2_arm_navigation_perception
    - pr2_arm_navigation_actions
    - pr2_arm_navigation_filtering
    - pr2_arm_navigation_kinematics
    - ompl_planning
    - ompl_search
    - pr2_mechanism_controllers
    - laser_filters
    - planning_environment
    - laser_assembler
    desc: folding_apps
    license: BSD
    shortdesc: folding_apps
    source: http://ros.berkeley.edu/svn/berkeley-ros-pkg/stacks/folding/trunk/folding/folding_apps
    website: http://ros.org/wiki/folding_apps
  folding_execution:
    author: !!python/unicode 'Stephen Miller'
    deps:
    - move_arm_msgs
    - pr2_common_action_msgs
    - pr2_controllers_msgs
    - actionlib
    - motion_planning_msgs
    - geometric_shapes_msgs
    - pr2_arm_navigation_perception
    - pr2_arm_navigation_planning
    - pr2_arm_navigation_actions
    - pr2_arm_navigation_filtering
    - pr2_arm_navigation_kinematics
    - geometry_msgs
    - tf
    - folding_msgs
    - folding_srvs
    - pr2_simple_motions_msgs
    - pr2_simple_motions_srvs
    - pr2_simple_motions_apps
    desc: This package is responsible for executing a given fold trajectory. It interfaces
      with the pr2.
    license: BSD
    shortdesc: folding_execution
    source: http://ros.berkeley.edu/svn/berkeley-ros-pkg/stacks/folding/trunk/folding/folding_execution
    website: http://ros.org/wiki/folding_execution
  folding_execution_ICRA:
    author: !!python/unicode 'Stephen Miller'
    deps:
    - move_arm_msgs
    - pr2_common_action_msgs
    - pr2_controllers_msgs
    - actionlib
    - motion_planning_msgs
    - geometric_shapes_msgs
    - pr2_arm_navigation_perception
    - pr2_arm_navigation_planning
    - pr2_arm_navigation_actions
    - pr2_arm_navigation_filtering
    - pr2_arm_navigation_kinematics
    - geometry_msgs
    - tf
    - folding_msgs
    - folding_srvs
    - pr2_simple_motions_msgs
    - pr2_simple_motions_srvs
    - pr2_simple_motions_apps
    desc: This package is responsible for executing a given fold trajectory. It interfaces
      with the pr2.
    license: BSD
    shortdesc: folding_execution
    source: http://ros.berkeley.edu/svn/berkeley-ros-pkg/stacks/folding/trunk/folding/folding_execution_ICRA
    website: http://ros.org/wiki/folding_execution
  folding_gui:
    author: !!python/unicode 'Stephen Miller'
    deps:
    - rospy
    - shape_window
    - geometry_msgs
    - geometric_shapes_msgs
    - tf
    - folding_msgs
    - folding_srvs
    desc: folding_gui
    license: BSD
    shortdesc: folding_gui
    source: http://ros.berkeley.edu/svn/berkeley-ros-pkg/stacks/folding/trunk/folding/folding_gui
    website: http://ros.org/wiki/folding_gui
  folding_msgs:
    author: !!python/unicode 'Stephen Miller'
    deps:
    - geometry_msgs
    - geometric_shapes_msgs
    - move_arm_msgs
    - motion_planning_msgs
    - pr2_controllers_msgs
    - pr2_common_action_msgs
    desc: folding_msgs
    license: BSD
    shortdesc: folding_msgs
    source: http://ros.berkeley.edu/svn/berkeley-ros-pkg/stacks/folding/trunk/folding/folding_msgs
    website: http://ros.org/wiki/folding_msgs
  folding_srvs:
    author: !!python/unicode 'Stephen Miller'
    deps:
    - folding_msgs
    - geometry_msgs
    - geometric_shapes_msgs
    desc: folding_srvs
    license: BSD
    shortdesc: folding_srvs
    source: http://ros.berkeley.edu/svn/berkeley-ros-pkg/stacks/folding/trunk/folding/folding_srvs
    website: http://ros.org/wiki/folding_srvs
foote-nxt:
  nxt_assisted_teleop:
    author: !!python/unicode 'Wim Meeussen'
    deps:
    - nxt_ros
    - nxt_robot_sensor_car
    - nxt_robot_gyro_car
    - costmap_2d
    - base_local_planner
    desc: nxt_assisted_teleop
    license: BSD
    shortdesc: nxt_assisted_teleop
    source: https://nxt.foote-ros-pkg.googlecode.com/hg/
    website: http://ros.org/wiki/nxt_assisted_teleop
  nxt_controllers:
    author: !!python/unicode 'Wim Meeussen'
    deps:
    - rospy
    - sensor_msgs
    - tf
    - tf_conversions
    - nxt_msgs
    - nav_msgs
    - kdl
    desc: "The nxt_controllers package provides a number of Python-based\n     controllers\
      \ for two-wheeled diff drive robots. The base\n     controllers allows you to\
      \ send velocity commands to a diff drive\n     base, while the base odometry\
      \ tracks the pose of a diff drive\n     robot. The nxt_controllers package also\
      \ contains a general\n     purpose joint position controller that commnads a\
      \ joint to a\n     desired position by sending effort commands to the joint\
      \ and\n     reading the joint encoders."
    license: BSD
    shortdesc: nxt_controllers
    source: https://nxt.foote-ros-pkg.googlecode.com/hg/
    website: http://ros.org/wiki/nxt_controllers
  nxt_description:
    author: !!python/unicode 'Melonee Wise'
    deps: []
    desc: "nxt_description contains the nxt collada models for nxt_ros. The collada\
      \ models are created from  \n     ldraw.org part models and are named by part\
      \ number."
    license: BSD
    shortdesc: nxt_description
    source: https://nxt.foote-ros-pkg.googlecode.com/hg/
    website: http://ros.org/wiki/nxt_description
  nxt_lxf2urdf:
    author: !!python/unicode 'Melonee Wise'
    deps: []
    desc: "nxt_lxf2urdf converts a <a href=\"http://ldd.lego.com/\">LEGO\n     Digital\
      \ Design file (*.lxf)</a> \n     to <a href=\"http://ros.org/wiki/urdf\">urdf\
      \ </a>.  nxt_lxf2urdf\n     needs a (*.lxf) and a (*.ldr) file for completing\
      \ the conversion\n     from lxf to urdf.  It also has the ldraw.xml file that\
      \ is in the\n     assests folder of the LEGO Digital Designer which has been\n\
      \     modified to add more parts."
    license: BSD
    shortdesc: nxt_lxf2urdf
    source: https://nxt.foote-ros-pkg.googlecode.com/hg/
    website: http://ros.org/wiki/nxt_lxf2urdf
  nxt_msgs:
    author: !!python/unicode 'Wim Meeussen'
    deps:
    - std_msgs
    - geometry_msgs
    desc: The nxt_msgs package contains a set of messages to publish data coming from
      various NXT sensor.
    license: BSD
    shortdesc: The nxt_msgs package contains a set of messages to publish data coming
      from various NXT sensor....
    source: https://nxt.foote-ros-pkg.googlecode.com/hg/
    website: http://ros.org/wiki/nxt_msgs
  nxt_python:
    author: !!python/unicode 'Douglas P Lau.'
    deps:
    - rospy
    desc: "This package automatically downloads version 1.1.2 of the\n    <a href=\"\
      http://code.google.com/p/nxt-python\">NXT-python</a>\n    library. We intend\
      \ to upgrade to the 2.0.x version of this library\n    when it becomes available.\
      \ NXT-python is a libraray for\n    controlling a LEGO NXT robot using the Python\
      \ programming\n    language. It can communicate using either USB or Bluetooth.\
      \ It is\n    available under the Free Software Foundation's GPL license."
    license: BSD
    shortdesc: nxt_python
    source: https://nxt.foote-ros-pkg.googlecode.com/hg/
    website: http://ros.org/wiki/nxt_python
  nxt_robot_gyro_car:
    author: !!python/unicode 'Melonee Wise'
    deps:
    - nxt_ros
    - nxt_controllers
    - robot_pose_ekf
    - nxt_description
    - robot_state_publisher
    desc: "The nxt_robot_gyro_car package provides a starting nxt robot. For instructions\
      \ on building\n     the nxt robot load the gyro_car.lxf into the LEGO Digital\
      \ Designer \n     <a href=\"http://ldd.lego.com/\">(ldd.lego.com)</a> and select\
      \ the building guide mode. This robot \n     uses the <a href=\"http://mindstorms.lego.com/en-us/Products/Ultrasonic+Sensor/9846.aspx\"\
      > nxt lego ultrasonic sensor</a>,\n     the <a href=\"http://www.hitechnic.com/cgi-bin/commerce.cgi?preadd=action&amp;key=NGY1044\"\
      > hitechnic gryo sensor</a>,\n     and the <a href=\"http://www.hitechnic.com/cgi-bin/commerce.cgi?preadd=action&amp;key=NAC1040\"\
      > hitechnic acclerometer sensor</a>."
    license: BSD
    shortdesc: nxt_robot_gryo_car
    source: https://nxt.foote-ros-pkg.googlecode.com/hg/
    website: http://ros.org/wiki/nxt_robot_gyro_car
  nxt_robot_kit_test:
    author: !!python/unicode 'Melonee Wise'
    deps:
    - robot_state_publisher
    - nxt_ros
    - nxt_msgs
    - nxt_description
    desc: nxt_robot_kit_test provides a simple birkc with sensors attached to get
      a feel for ROS and NXT.
    license: BSD
    shortdesc: nxt_robot_kit_test
    source: https://nxt.foote-ros-pkg.googlecode.com/hg/
    website: http://ros.org/wiki/nxt_robot_kit_test
  nxt_robot_sensor_car:
    author: !!python/unicode 'Melonee Wise'
    deps:
    - nxt_ros
    - nxt_controllers
    - robot_pose_ekf
    - nxt_description
    - robot_state_publisher
    desc: "The nxt_robot_sensor_car package provides a nxt robot with four sensors.\
      \ For instructions on building\n     the nxt robot load the sensor_car.lxf into\
      \ the LEGO Digital Designer\n     <a href=\"http://ldd.lego.com/\">(ldd.lego.com)</a>\
      \ and select the building guide mode. This robot\n     uses the <a href=\"http://mindstorms.lego.com/en-us/Products/Ultrasonic+Sensor/9846.aspx\"\
      > nxt lego ultrasonic sensor</a>,\n     the <a href=\"http://www.ldraw.org/cgi-bin/ptdetail.cgi?f=parts/64892.dat\"\
      > nxt lego color sensor</a>,\n     the <a href=\"http://www.hitechnic.com/cgi-bin/commerce.cgi?preadd=action&amp;key=NGY1044\"\
      > hitechnic gryo sensor</a>,\n     and the <a href=\"http://www.hitechnic.com/cgi-bin/commerce.cgi?preadd=action&amp;key=NAC1040\"\
      > hitechnic acclerometer sensor</a>."
    license: BSD
    shortdesc: nxt_robot_sensor_car
    source: https://nxt.foote-ros-pkg.googlecode.com/hg/
    website: http://ros.org/wiki/nxt_robot_sensor_car
  nxt_ros:
    author: !!python/unicode 'Wim Meeussen'
    deps:
    - rospy
    - nxt_python
    - kdl
    - sensor_msgs
    - nxt_msgs
    desc: "The nxt_ros package provides the bindings between the NXT world\n     and\
      \ the ROS world.  This package will create a ROS topic for each\n     NXT sensor,\
      \ and publish the sensor's data on this topic. The\n     package also creates\
      \ a topic for each NXT motor, which allows you\n     to command the motor from\
      \ ROS. The nxt_ros bindings talk directly\n     to the NXT brick, either over\
      \ USB or over Bluetooth (note that\n     the Bluetooth connection is currently\
      \ too slow to be very\n     useful).  Binding an NXT robot to ROS only requires\
      \ a single\n     configuration file."
    license: BSD
    shortdesc: "The nxt_ros package provides the bindings between the NXT world\n\
      \     and the ROS world.  This ..."
    source: https://nxt.foote-ros-pkg.googlecode.com/hg/
    website: http://ros.org/wiki/nxt_ros
  nxt_rviz_plugin:
    author: !!python/unicode 'Melonee Wise'
    deps:
    - rviz
    - roscpp
    - nxt_msgs
    - tf
    desc: nxt_rviz_plugin provides plugins for rviz for visualizing data coming from
      the nxt sensors.
    license: BSD
    shortdesc: nxt_rviz_plugin
    source: https://nxt.foote-ros-pkg.googlecode.com/hg/
    website: http://ros.org/wiki/nxt_rviz_plugin
  nxt_teleop:
    author: !!python/unicode 'Wim Meeussen'
    deps:
    - nxt_ros
    - geometry_msgs
    - joy
    desc: nxt_teleop provides keyboard and joystick interfaces for some of nxt robots
      provided in the nxt_robots stack.
    license: BSD
    shortdesc: nxt_teleop
    source: https://nxt.foote-ros-pkg.googlecode.com/hg/
    website: http://ros.org/wiki/nxt_teleop
foote-phidget:
  phidget_rfid:
    author: !!python/unicode 'Tully Foote'
    deps: []
    desc: This package provides a way to display text to the rfid phidget.
    license: BSD
    shortdesc: A simple package for rfid phidget
    source: details.php?name=phidgetspp
    website: https://phidget.foote-ros-pkg.googlecode.com/hg/
  phidget_text:
    author: !!python/unicode 'Tully Foote'
    deps:
    - phidgetspp
    - roscpp
    - std_msgs
    desc: This package provides a way to display text to the text LCD phidget.
    license: BSD
    shortdesc: A simple package to display text on a phidget LCD
    source: https://phidget.foote-ros-pkg.googlecode.com/hg/
    website: http://code.google.com/p/phidgetspp-ros-pkg/
  phidgetspp:
    author: !!python/unicode 'Tully Foote'
    deps: []
    desc: This is an object oriented C++ wrapper for the Phidgets C API
    license: BSD
    shortdesc: A C++ Wrapper for the Phidgets C API
    source: details.php?name=phidgetspp_c_api
    website: https://phidget.foote-ros-pkg.googlecode.com/hg/
  phidgetspp_c_api:
    author: !!python/unicode 'Phidgets, Inc.'
    deps: []
    desc: This package contains the Official Phidgets C API
    license: LGPL
    shortdesc: The Phidgets C API
    source: https://phidget.foote-ros-pkg.googlecode.com/hg/
    website: http://www.phidgets.com/downloads.php?example_id=30
geometry:
  angles:
    author: !!python/unicode 'John Hsu, Ioan Sucan'
    deps: []
    desc: "This package provides a set of simple math utilities to work\n        with\
      \ angles. The utilities cover simple things like\n        normalizing an angle\
      \ and conversion between degrees and\n        radians. But even if you're trying\
      \ to calculate things like\n        the shortest angular distance between two\
      \ joinst space\n        positions of your robot, but the joint motion is constrained\n\
      \        by joint limits, this package is what you need. The code in\n     \
      \   this packge is stable and well tested. There are no plans for\n        major\
      \ changes in the near future."
    license: BSD
    shortdesc: Simple Angular Math Utilities
    source: https://kforge.ros.org/geometry/geometry
    website: http://ros.org/wiki/angles
  bullet:
    author: !!python/unicode 'Erwin Coumans, ROS package maintained by Tully Foote'
    deps:
    - rostest
    desc: "<p>\n    This package contains version 2.76 of the Bullet professional\n\
      \    free 3D Game Multiphysics Library.  The ROS package automatically\n   \
      \ downloads, extracts and compiles a tarball.  For each major\n    release of\
      \ the Bullet library, the tarball will get updated.  The\n    Bullet library\
      \ provided by this ROS package is slightly different\n    from the official\
      \ Bullet release.\n    </p>\n    <ul>\n    <li>\n    To eliminate ambiguity\
      \ about which API is active the btQuaternion\n    constructor from Euler angles\
      \ is deprecated. Please explicitly \n    construct it and populate it seperately\
      \ from euler angles, \n    otherwise it is ambiguous\n    as to what convention\
      \ is being used.  \n    </li>\n    <li>\n    The btMatrix3x3 and btQuaternion\
      \ setEulerZYX and getEulerZYX\n    methods are deprecated.  The goal of these\
      \ deprecations is to\n    remove the existing patch against Bullet which makes\
      \ them\n    consistent.  They will be deprecated for a few releases, then\n\
      \    patched out for a few releases before being reintroduced in their\n   \
      \ native form.  setEulerYPR and getEulerYPR are drop in replacements.\n    Also\
      \ available is getRPY setRPY which use fixed axis notation about\n    XYZ axes.\
      \  \n    </li>\n    <li>\n    There are a few errors in documentation and\n\
      \    btMatrix3x3::getEulerYPR has been changed to be a pass through to\n   \
      \ getEulerZYX for it is a better implementation of the same method.\n    These\
      \ are filed under \n    <a href=\"http://code.google.com/p/bullet/issues/detail?id=282\"\
      >issue 282</a>.\n    </li>\n    <li>\n    For standardization and continuity\
      \ Fixed Axis getRPY and setRPY\n    methods have been added to btQuaternion\
      \ and btMatrix3x3.  These\n    will be pushed back to Bullet, and hopefully\
      \ accepted.  These are\n    the same format as used by kdl and gazebo. Standardization\
      \ survey\n    and decision at\n    <a href=\"http://www.ros.org/wiki/tf/Reviews/Euler_Angle_Usage_2009-09-02_API_Review\"\
      >on\n    the ROS wiki</a>.  These patches have been pushed back\n    in <a href=\"\
      http://code.google.com/p/bullet/issues/detail?id=285\">issue\n    285</a> This\
      \ patch will be maintained in parallel if Bullet does\n    not accept it.\n\
      \    </li>\n    <li>\n    There is a patch against the btQuaternion angle and\
      \ getAngle\n    methods to clamp floating point errors to prevent nan results.\n\
      \    See <a href=\"http://code.google.com/p/bullet/issues/detail?id=98\">issue\
      \ 98</a>.\n    </li>\n    <li>\n    We have the intention to move towards the\
      \ official version of\n    Bullet; this however will take some time because\
      \ it involves a\n    number of deprecation cycles for the conflicting quaternion\n\
      \    constructor.\n    </li>\n    <li>\n      This usage of bullet compiles\
      \ with the flags\n      -DBT_USE_DOUBLE_PRECISION -DBT_EULER_DEFAULT_ZYX set.\n\
      \    </li>\n    </ul>"
    license: ZLib
    shortdesc: Bullet Physics Engine
    source: https://kforge.ros.org/geometry/geometry
    website: http://code.google.com/p/bullet/
  eigen:
    author: !!python/unicode 'Gaeal Guennebaud and Benoit Jacob'
    deps: []
    desc: "This package contains version 3 of the Eigen C++ template\n    library\
      \ for linear algebra. It automatically downloads, extracts\n    a tarball. For\
      \ each major release of the Eigen\n    library, the tarball will get updated.\
      \ This ROS package does not\n    intend to modify Eigen in any way, it simply\
      \ provides a convenient\n    way to download and compile the Eigen library.\
      \ When Eigen becomes\n    available from the major OS package managers, this\
      \ ROS package is\n    likely to be replaced by a system dependency.\n\n    This\
      \ package contains Eigen3 with EIGEN2_SUPPORT enabled.  In\n    future versions\
      \ EIGEN2_SUPPORT will be removed."
    license: LGPL
    shortdesc: "This package contains version 3 of the Eigen C++ template\n    library\
      \ for linear algebra. It au..."
    source: https://kforge.ros.org/geometry/geometry
    website: http://eigen.tuxfamily.org/
  kdl:
    author: !!python/unicode 'Ruben Smits, Erwin Aertbelien, Wim Meeussen (package)'
    deps:
    - eigen
    - rostest
    desc: 'This package contains a recent version of the Kinematics and Dynamics

      Library (KDL), distributed by the Orocos Project.  For stability

      reasons, this package is currently locked to revision 31715 of April

      26 2010 (C-turtle) and revision 30401 of August 8 2009 (Boxturtle),

      but this revision will be updated on a regular basis to the latest

      available KDL trunk.  This ROS package does not intend to modify KDL

      in any way, it simply provides a convenient way to download and

      compile the library, because KDL is not available from an OS package

      manager. However, this package might contain some temporary patches to

      KDL while they are being applied upstream, or while a permanent fix

      for a problem is being discussed by the KDL community.'
    license: LGPL
    shortdesc: The Kinematics and Dynamics Library (latest)
    source: https://kforge.ros.org/geometry/geometry
    website: http://ros.org/wiki/kdl
  tf:
    author: !!python/unicode 'Tully Foote, Eitan Marder-Eppstein, Wim Meeussen'
    deps:
    - geometry_msgs
    - sensor_msgs
    - roscpp
    - rosconsole
    - bullet
    - angles
    - rospy
    - rostest
    - roswtf
    - message_filters
    desc: 'tf is a package that lets the user keep track of multiple coordinate

      frames over time. tf maintains the relationship between coordinate

      frames in a tree structure buffered in time, and lets the user

      transform points, vectors, etc between any two coordinate frames at

      any desired point in time.'
    license: BSD
    shortdesc: Transform Library
    source: https://kforge.ros.org/geometry/geometry
    website: http://www.ros.org/wiki/tf
  tf_conversions:
    author: !!python/unicode 'Tully Foote'
    deps:
    - tf
    - kdl
    - eigen
    - geometry_msgs
    desc: 'This package contains a set of conversion functions to convert

      common tf datatypes (point, vector, pose, etc) into semantically

      identical datatypes used by other libraries. The conversion functions

      make it easier for users of the transform library (tf) to work with

      the datatype of their choice. Currently this package has support for

      the Kinematics and Dynamics Library (KDL) and the Eigen matrix

      library. This package is stable, and will get integrated into tf in

      the next major release cycle (see roadmap).'
    license: BSD
    shortdesc: Transform Library Conversions
    source: https://kforge.ros.org/geometry/geometry
    website: http://www.ros.org/wiki/tf_conversions
geometry_experimental:
  test_tf2:
    author: !!python/unicode 'Tully Foote, Eitan Marder-Eppstein'
    deps:
    - rostest
    - tf
    - tf2
    - tf2_bullet
    - tf2_ros
    - tf2_geometry_msgs
    - tf2_kdl
    - tf2_msgs
    - roscpp
    - roslib
    desc: test_tf2
    license: BSD
    shortdesc: test_tf2
    source: https://kforge.ros.org/geometry/experimental
    website: http://ros.org/wiki/test_tf2
  tf2:
    author: !!python/unicode 'Tully Foote, Wim Meeussen, Eitan Marder-Eppstein'
    deps:
    - geometry_msgs
    - tf2_msgs
    - rospy
    - roscpp
    desc: "tf2 is the second generation of the transform libraray, which lets\n  \
      \  the user keep track of multiple coordinate frames over time. tf2\n    maintains\
      \ the relationship between coordinate frames in a tree\n    structure buffered\
      \ in time, and lets the user transform points,\n    vectors, etc between any\
      \ two coordinate frames at any desired\n    point in time."
    license: BSD
    shortdesc: "tf2 is the second generation of the transform libraray, which lets\n\
      \    the user keep track of m..."
    source: https://kforge.ros.org/geometry/experimental
    website: http://ros.org/wiki/tf2
  tf2_bullet:
    author: !!python/unicode 'Wim Meeussen'
    deps:
    - tf2_ros
    - bullet
    - geometry_msgs
    desc: tf2_bullet
    license: BSD
    shortdesc: tf2_bullet
    source: https://kforge.ros.org/geometry/experimental
    website: http://ros.org/wiki/tf2_bullet
  tf2_geometry_msgs:
    author: !!python/unicode 'Wim Meeussen'
    deps:
    - geometry_msgs
    - tf2_ros
    - kdl
    desc: tf2_geometry_msgs
    license: BSD
    shortdesc: tf2_geometry_msgs
    source: https://kforge.ros.org/geometry/experimental
    website: http://ros.org/wiki/tf2_geometry_msgs
  tf2_kdl:
    author: !!python/unicode 'Wim Meeussen'
    deps:
    - tf2_ros
    - kdl
    - geometry_msgs
    desc: tf2_kdl
    license: BSD
    shortdesc: tf2_kdl
    source: https://kforge.ros.org/geometry/experimental
    website: http://ros.org/wiki/tf2_kdl
  tf2_msgs:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - geometry_msgs
    - actionlib_msgs
    desc: tf2_msgs
    license: BSD
    shortdesc: tf2_msgs
    source: https://kforge.ros.org/geometry/experimental
    website: http://ros.org/wiki/tf2_msgs
  tf2_ros:
    author: !!python/unicode 'Wim Meeussen, Eitan Marder-Eppstein'
    deps:
    - tf2
    - tf2_msgs
    - roscpp
    - rospy
    - geometry_msgs
    - actionlib
    - actionlib_msgs
    - rosgraph
    desc: This package contains the ROS bindings for the tf2 library, for both Python
      and C++.
    license: BSD
    shortdesc: This package contains the ROS bindings for the tf2 library, for both
      Python and C++.
    source: https://kforge.ros.org/geometry/experimental
    website: http://ros.org/wiki/tf2_ros
  tf2_tools:
    author: !!python/unicode 'Wim Meeussen'
    deps:
    - tf2_msgs
    - tf2
    - tf2_ros
    desc: tf2_tools
    license: BSD
    shortdesc: tf2_tools
    source: https://kforge.ros.org/geometry/experimental
    website: http://ros.org/wiki/tf2_tools
geometry_visualization:
  tf2_visualization:
    author: !!python/unicode 'Wim Meeussen'
    deps:
    - tf2_msgs
    - tf2
    - tf2_ros
    - xdot
    - rxbag
    desc: tf2_visualization
    license: BSD
    shortdesc: tf2_visualization
    source: https://kforge.ros.org/geometry/visualization
    website: http://ros.org/wiki/tf2_visualization
gt-ros-pkg:
  2009_humanoids_epc_pull:
    author: !!python/unicode 'Advait Jain, Charles C. Kemp (Healthcare Robotics Lab,
      Georgia Tech)'
    deps:
    - hrl_lib
    - hrl_hokuyo
    - hrl_tilting_hokuyo
    - zenither
    desc: "This package contains code associated with the following\n        publication:\
      \ \n        Pulling Open Novel Doors and Drawers with Equilibrium Point Control.\n\
      \        Advait Jain and Charles C. Kemp. IEEE-RAS International Conference\
      \ on\n        Humanoid Robots (Humanoids), 2009."
    license: New BSD
    shortdesc: 2009_humanoids_epc_pull
    source: details.php?name=rospy
    website: http://gt-ros-pkg.googlecode.com/svn/trunk/hrl/code_publications/2009_humanoids_epc_pull
  2010_biorob_everyday_mechanics:
    author: !!python/unicode 'Advait Jain, Hai Nguyen, Charles C. Kemp (Healthcare
      Robotics Lab, Georgia Tech)'
    deps:
    - hrl_lib
    - force_torque
    - opencv2
    - cv_bridge
    - hrl_camera
    - checkerboard_detector
    - hrl_tilting_hokuyo
    - equilibrium_point_control
    desc: "This package contains code associated with the following publication:\n\
      \        The Complex Structure of Simple Devices: A Survey of Trajectories and\
      \ Forces that Open Doors and Drawers.\n        Advait Jain, Hai Nguyen, Mrinal\
      \ Rath, Jason Okerman and Charles C. Kemp. IEEE RAS and EMBS International Conference\
      \ on Biomedical Robotics and Biomechatronics (BioRob) 2010"
    license: New BSD
    shortdesc: "This package contains code associated with the following publication:\n\
      \        The Complex S..."
    source: details.php?name=rospy
    website: http://gt-ros-pkg.googlecode.com/svn/trunk/hrl/code_publications/2010_biorob_everyday_mechanics
  2010_icra_epc_pull:
    author: !!python/unicode 'Advait Jain, Charles C. Kemp (Healthcare Robotics Lab,
      Georgia Tech)'
    deps:
    - geometry_msgs
    - hrl_lib
    - hrl_hokuyo
    - hrl_tilting_hokuyo
    - zenither
    - segway_vo
    - vis_odometry_feat
    - segway_omni
    desc: "This package contains code associated with the following\n        publication:\
      \ \n        Pulling Open Doors and Drawers: Coordinating an Omni-directional\
      \ Base and a Compliant Arm with Equilibrium Point Control.\n        Advait Jain\
      \ and Charles C. Kemp. IEEE International Conference on Robotics and Automation\
      \ (ICRA), 2010."
    license: New BSD
    shortdesc: 2010_icra_epc_pull
    source: details.php?name=rospy
    website: http://gt-ros-pkg.googlecode.com/svn/trunk/hrl/code_publications/2010_icra_epc_pull
  UI_segment_object:
    author: !!python/unicode 'Marc Killpack / mkillpack3@gatech.edu,  Advisor: Prof.
      Charlie Kemp, Lab: Healthcare Robotics Lab at Georgia Tech'
    deps:
    - opencv2
    - image_transport
    - sensor_msgs
    - openni
    - roslib
    - roscpp
    - pcl
    - pcl_ros
    - geometry_msgs
    desc: This nodes provides a simple user interface to designate a surface or point
      from a 2D image for which we want 3D data from the Kinect.  The main functionality
      is available via service calls.
    license: new BSD
    shortdesc: UI_segment_object
    source: details.php?name=cv_bridge
    website: http://gt-ros-pkg.googlecode.com/svn/trunk/hrl/UI_segment_object
  actuator_array_driver:
    author: !!python/unicode 'Stephen Williams'
    deps:
    - roscpp
    - sensor_msgs
    - std_srvs
    - urdf
    desc: "<p>\t\n\tThis package contains a base class for an ActuatorArrayDriver.\
      \ This is intended for use with chains of R/C Servos or other\n\tsimilar devices\
      \ where position (and velocity) commands are sent at irregular intervals, as\
      \ opposed to the tight, real-time\n\tcontrol loop of the <a href=\"http://www.ros.org/wiki/pr2_controller_manager\"\
      >PR2 Controller Manager</a> system. \n    </p>\n    <p>\n    This base class\
      \ performs some standard functionality, such as parsing joint limits out of\
      \ the robot_description, subscribing to \n    a 'command' topic, publishing\
      \ on the 'joint_states' topic, and setting up a 'stop' and 'home' service call.\
      \ This is designed to \n    work as a stand-alone driver for controlling/tele-operating\
      \ a chain of servos, or in conjunction with the \n    <a href=\"http://www.ros.org/wiki/actuator_array_trajectory_controller\"\
      >ActuatoryArrayTrajectoryController</a>. However, this is \n    provided as\
      \ a convenience only, and is not required for successful operation with the\
      \ ActuatoryArrayTrajectoryController.\n    </p>"
    license: BSD
    shortdesc: A base class for an ActuatorArrayDriver node
    source: http://gt-ros-pkg.googlecode.com/svn/trunk/humans/actuator_array/actuator_array_driver
    website: http://ros.org/wiki/actuator_array_driver
  actuator_array_driver_gui:
    author: !!python/unicode 'Stephen Williams'
    deps:
    - rospy
    - sensor_msgs
    - std_srvs
    desc: "This package provides a simple GUI for viewing and controlling the state\
      \ of an actuator array.\n     The joint names to be controlled are read from\
      \ the parameter server. Joint limits are extracted\n     from the &quot;robot_description.&quot;"
    license: BSD
    shortdesc: Simple GUI for viewing and controlling the state of an actuator array
    source: http://gt-ros-pkg.googlecode.com/svn/trunk/humans/actuator_array/actuator_array_driver_gui
    website: http://ros.org/wiki/actuator_array_driver_gui
  actuator_array_gazebo_plugin:
    author: !!python/unicode 'Stephen Williams'
    deps:
    - roscpp
    - gazebo
    - angles
    - sensor_msgs
    - std_srvs
    - control_toolbox
    - urdf
    - actuator_array_driver
    desc: "This package provides a Gazebo Plugin to control an array of position-controlled\
      \ actuators, \n     such as RC Servos. In addition to the standard parameters\
      \ for update rate and robot namespace,\n     a series of &quot;joint&quot; elements\
      \ are provided. Each &quot;joint&quot; element must provide a &quot;name&quot;\
      \ and, \n     optionally, a &quot;home&quot; position and a set of PID parameters\
      \ that control the joint stiffness\n     inside Gazebo. Joint limits, max velocities,\
      \ etc. are read from the &quot;robot_description&quot; parameter."
    license: BSD
    shortdesc: Gazebo Plugin to control an array of position-controlled actuators
    source: http://gt-ros-pkg.googlecode.com/svn/trunk/humans/actuator_array/actuator_array_gazebo_plugin
    website: http://ros.org/wiki/actuator_array_gazebo_plugin
  arm_navigation_tutorials:
    author: !!python/unicode 'Advait Jain'
    deps:
    - pr2_arm_navigation_tutorials
    - rospy
    - hrl_lib
    desc: arm_navigation_tutorials
    license: BSD
    shortdesc: arm_navigation_tutorials
    source: http://gt-ros-pkg.googlecode.com/svn/trunk/hrl/advait_sandbox/arm_navigation_tutorials
    website: http://ros.org/wiki/arm_navigation_tutorials
  clutter_segmentation:
    author: !!python/unicode 'Jason Okerman, Martin Schuster, Advisors: Prof. Charlie
      Kemp and Jim Regh, Lab: Healthcare Robotics Lab at Georgia Tech'
    deps:
    - rospy
    - std_msgs
    - sensor_msgs
    - geometry_msgs
    - message_filters
    - opencv2
    - hrl_lib
    - pr2_clutter_helper
    desc: "Segmentation of 3d pointclouds in clutter vs. table surface\n     Uses\
      \ classifiers trained from 104 hand-labeled clutter table\n     scans combing\
      \ 3d LIDAR and camera color information.\n     \n     The original training\
      \ data is at: www.hrl.gatech.edu/data/clutter\n     \n     Brunt of the work\
      \ is done by: processor.py\n     Main file is: run_segmentation_PR2.py"
    license: BSD
    shortdesc: clutter_segmentation
    source: http://gt-ros-pkg.googlecode.com/svn/trunk/hrl/clutter_segmentation
    website: http://ros.org/wiki/clutter_segmentation
  collision_detection:
    author: !!python/unicode 'Daniel Hennes'
    deps:
    - roscpp
    - rospy
    - sensor_msgs
    - wbc_core
    - pr2_controller_interface
    - pr2_mechanism_model
    - actionlib
    - control_toolbox
    - filters
    - std_srvs
    - realtime_tools
    - trajectory_msgs
    - pr2_controllers_msgs
    - pluginlib
    desc: This package provides tools to create a nonparametric inverse dynamics model
      for the PR2 using Gaussion Process Regression. Interfaces to the KDL and Stanford
      WBC Newton-Euler ID models are included as are tools for motion generation.
    license: BSD
    shortdesc: Inverse dynamics model for the PR2
    source: http://gt-ros-pkg.googlecode.com/svn/trunk/hrl/collision_detection
    website: http://ros.org/wiki/inverse_dynamics
  cpl_superpixels:
    author: !!python/unicode 'Tucker Hermans'
    deps:
    - roscpp
    - opencv2
    - cv_bridge
    - image_transport
    - std_msgs
    - pcl_ros
    - pcl
    - sensor_msgs
    desc: cpl_superpixels
    license: GPLv2
    shortdesc: cpl_superpixels
    source: http://gt-ros-pkg.googlecode.com/svn/trunk/cpl/cpl_superpixels
    website: http://ros.org/wiki/cpl_superpixels
  cpl_visual_features:
    author: !!python/unicode 'Tucker Hermans'
    deps:
    - opencv2
    - roscpp
    - roslib
    desc: cpl_visual_features
    license: BSD
    shortdesc: cpl_visual_features
    source: http://gt-ros-pkg.googlecode.com/svn/trunk/cpl/cpl_visual_features
    website: http://ros.org/wiki/cpl_visual_features
  doors_forces_kinematics:
    author: !!python/unicode 'Advait Jain. Advisor: Prof. Charlie Kemp (Healthcare
      Robotics Lab)'
    deps:
    - rospy
    - hrl_lib
    desc: "Python code related to estimating and using the kinematics and\n      \
      \  forces required to open doors and drawers."
    license: New BSD
    shortdesc: doors_forces_kinematics
    source: http://gt-ros-pkg.googlecode.com/svn/trunk/hrl/doors_forces_kinematics
    website: http://ros.org/wiki/doors_forces_kinematics
  epc_core:
    author: !!python/unicode 'Advait Jain (Healthcare Robotics Lab, Georgia Tech)'
    deps:
    - geometry_msgs
    - std_srvs
    - sensor_msgs
    - visualization_msgs
    - actionlib
    - pr2_controllers_msgs
    - trajectory_msgs
    - teleop_controllers
    - kdl
    - hrl_lib
    desc: ''
    license: New BSD
    shortdesc: ''
    source: details.php?name=rospy
    website: http://gt-ros-pkg.googlecode.com/svn/trunk/hrl/equilibrium_point_control/epc_core
  epc_door_opening:
    author: !!python/unicode 'Advait Jain. Advisor: Prof. Charlie Kemp. Healthcare
      Robotics Lab, Georgia Tech'
    deps:
    - rospy
    - geometry_msgs
    - hrl_lib
    - force_torque
    - epc_core
    - doors_forces_kinematics
    desc: Door opening using equilibrium point control.
    license: New BSD
    shortdesc: epc_door_opening
    source: http://gt-ros-pkg.googlecode.com/svn/trunk/hrl/equilibrium_point_control/epc_door_opening
    website: http://ros.org/wiki/epc_door_opening
  explore_hrl:
    author: !!python/unicode 'Travis Deyle'
    deps:
    - std_msgs
    - costmap_2d
    - actionlib
    - move_base_msgs
    - tf
    - actionlib_msgs
    - roslib
    - navfn
    - visualization_msgs
    - geometry_msgs
    - nav_msgs
    desc: explore_hrl
    license: BSD
    shortdesc: explore_hrl
    source: details.php?name=roscpp
    website: http://gt-ros-pkg.googlecode.com/svn/trunk/hrl/explore_hrl
  explore_rfid:
    author: !!python/unicode 'Travis Deyle'
    deps:
    - pr2_navigation_slam
    - pr2_navigation_perception
    - pr2_navigation_teleop
    - pr2_machine
    desc: explore_rfid
    license: BSD
    shortdesc: explore_rfid
    source: details.php?name=explore_hrl
    website: http://gt-ros-pkg.googlecode.com/svn/trunk/hrl/explore_rfid
  face_reinterpret:
    author: !!python/unicode 'haidai'
    deps:
    - sensor_msgs
    - visualization_msgs
    desc: face_reinterpret
    license: BSD
    shortdesc: face_reinterpret
    source: http://gt-ros-pkg.googlecode.com/svn/trunk/hrl/face_reinterpret
    website: http://ros.org/wiki/face_reinterpret
  feature_extractor_fpfh:
    author: !!python/unicode 'Hai Nguyen'
    deps:
    - pcl
    - pcl_ros
    - eigen
    - sensor_msgs
    - message_filters
    desc: feature_extractor_fpfh
    license: BSD
    shortdesc: feature_extractor
    source: http://gt-ros-pkg.googlecode.com/svn/trunk/hrl/feature_extractor_fpfh
    website: http://ros.org/wiki/feature_extractor
  force_torque:
    author: !!python/unicode 'Advait Jain, Cressel Anderson, Hai Nguyen, Advisor:
      Prof. Charlie Kemp, Lab: Healthcare Robotics Lab at Georgia Tech'
    deps:
    - rospy
    desc: force_torque
    license: new BSD
    shortdesc: force_torque
    source: details.php?name=hrl_lib
    website: http://gt-ros-pkg.googlecode.com/svn/trunk/hrl/hrl_hardware_drivers/force_torque
  gt_pr2:
    author: !!python/unicode 'Hai Nguyen, Advisor: Prof. Charlie Kemp, Lab: Healthcare
      Robotics Lab at Georgia Tech'
    deps: []
    desc: gt_pr2
    license: BSD
    shortdesc: gt_pr2
    source: http://gt-ros-pkg.googlecode.com/svn/trunk/hrl/gt_pr2
    website: http://ros.org/wiki/gt_pr2
  hai_sandbox:
    author: !!python/unicode 'Hai Nguyen'
    deps:
    - rospy
    - std_msgs
    - hrl_lib
    - hrl_camera
    - cv_bridge
    - opencv2
    - geometry_msgs
    - sensor_msgs
    - pr2_controllers_msgs
    - move_base_msgs
    - trajectory_msgs
    - actionlib
    - pr2_mechanism_msgs
    - visualization_msgs
    - kinematics_msgs
    - hrl_pr2_lib
    - ml_lib
    - actionlib_msgs
    - planning_environment_msgs
    - laser_interface
    - interpolated_ik_motion_planner
    - pr2_gripper_reactive_approach
    - pr2_msgs
    - libsvm3
    - feature_extractor_fpfh
    - message_filters
    desc: hai_sandbox
    license: BSD
    shortdesc: hai_sandbox
    source: http://gt-ros-pkg.googlecode.com/svn/trunk/hrl/hai_sandbox
    website: http://ros.org/wiki/hai_sandbox
  hrl_camera:
    author: !!python/unicode 'Hai Nguyen, Advait Jain, Cressel Anderson, Marc Killpack'
    deps:
    - hrl_lib
    - opencv2
    - hrl_opencv
    - cv_bridge
    - sensor_msgs
    - polled_camera
    desc: hrl_camera
    license: BSD
    shortdesc: hrl_camera
    source: details.php?name=rospy
    website: http://gt-ros-pkg.googlecode.com/svn/trunk/hrl/hrl_camera
  hrl_clickable_world:
    author: !!python/unicode 'kelsey'
    deps:
    - rospy
    - roscpp
    - hrl_table_detect
    - face_detector
    - pr2_overhead_grasping
    - laser_interface
    - actionlib
    - smach
    - move_base
    - roslib
    desc: hrl_clickable_world
    license: BSD
    shortdesc: hrl_clickable_world
    source: http://gt-ros-pkg.googlecode.com/svn/trunk/hrl/hrl_clickable_world
    website: http://ros.org/wiki/hrl_clickable_world
  hrl_cvblobslib:
    author: !!python/unicode 'kelsey'
    deps:
    - roscpp
    - opencv2
    desc: hrl_cvblobslib
    license: BSD
    shortdesc: hrl_cvblobslib
    source: http://gt-ros-pkg.googlecode.com/svn/trunk/hrl/hrl_cvblobslib
    website: http://ros.org/wiki/hrl_cvblobslib
  hrl_hokuyo:
    author: !!python/unicode 'Advait Jain, Advisor: Prof. Charlie Kemp, Lab: Healthcare
      Robotics Lab at Georgia Tech'
    deps:
    - sensor_msgs
    - rospy
    - hrl_lib
    desc: "Python class that uses hokuyo_node from ros-pkg to get scans from\n  UTMs\
      \ and player to get scans from URGs."
    license: New BSD
    shortdesc: hrl_hokuyo
    source: details.php?name=hokuyo_node
    website: http://gt-ros-pkg.googlecode.com/svn/trunk/hrl/hrl_hardware_drivers/hrl_hokuyo
  hrl_lib:
    author: !!python/unicode 'Cressel Anderson, Travis Deyle, Advait Jain, Hai Nguyen,
      Advisor: Prof. Charlie Kemp, Lab: Healthcare Robotics Lab at Georgia Tech'
    deps:
    - geometry_msgs
    - sensor_msgs
    - visualization_msgs
    - tf
    - dynamic_reconfigure
    - kdl
    - hrl_opencv
    desc: hrl_lib
    license: New BSD
    shortdesc: hrl_lib
    source: details.php?name=std_srvs
    website: http://gt-ros-pkg.googlecode.com/svn/trunk/hrl/hrl_lib
  hrl_object_fetching:
    author: !!python/unicode 'kelsey'
    deps:
    - pr2_overhead_grasping
    - hrl_rfid
    - rospy
    - roslaunch
    - rosnode
    - spline_smoother
    - tf
    - bullet
    - pcl_ros
    - pcl
    - opencv2
    - cv_bridge
    - image_transport
    - hrl_cvblobslib
    desc: hrl_object_fetching
    license: BSD
    shortdesc: hrl_object_fetching
    source: http://gt-ros-pkg.googlecode.com/svn/trunk/hrl/hrl_object_fetching
    website: http://ros.org/wiki/hrl_object_fetching
  hrl_opencv:
    author: !!python/unicode 'Hai Nguyen, Advait Jain (Healthcare Robotics Lab, Georgia
      Tech)'
    deps:
    - sensor_msgs
    - rospy
    - opencv2
    desc: Helper functions for use with OpenCV.
    license: New BSD
    shortdesc: hrl_opencv
    source: details.php?name=std_msgs
    website: http://gt-ros-pkg.googlecode.com/svn/trunk/hrl/hrl_opencv
  hrl_pr2_door_opening:
    author: !!python/unicode 'Advait Jain. Advisor: Prof. Charlie Kemp. Healthcare
      Robotics Lab, Georgia Tech'
    deps:
    - rospy
    - hrl_lib
    - geometry_msgs
    desc: Door opening on the PR2.
    license: New BSD
    shortdesc: hrl_pr2_door_opening
    source: http://gt-ros-pkg.googlecode.com/svn/trunk/hrl/advait_sandbox/hrl_pr2_door_opening
    website: http://ros.org/wiki/hrl_pr2_door_opening
  hrl_pr2_gains:
    author: !!python/unicode 'Advait Jain'
    deps:
    - pr2_controller_configuration
    - robot_mechanism_controllers
    - rospy
    desc: hrl_pr2_gains
    license: BSD
    shortdesc: hrl_pr2_gains
    source: http://gt-ros-pkg.googlecode.com/svn/trunk/hrl/hrl_pr2_gains
    website: http://ros.org/wiki/hrl_pr2_gains
  hrl_pr2_kinematics_tutorials:
    author: !!python/unicode 'Advait Jain (Healthcare Robotics Lab)'
    deps:
    - kinematics_msgs
    - geometry_msgs
    - visualization_msgs
    - pr2_arm_kinematics
    - pr2_controllers_msgs
    - rospy
    - actionlib
    - tf
    - hrl_lib
    desc: "Looking at the different PR2 arm tutorials and trying to come up\n    with\
      \ equivalent python versions."
    license: New BSD
    shortdesc: hrl_pr2_kinematics_tutorials
    source: http://gt-ros-pkg.googlecode.com/svn/trunk/hrl/advait_sandbox/hrl_pr2_kinematics_tutorials
    website: http://ros.org/wiki/hrl_pr2_kinematics_tutorials
  hrl_pr2_lib:
    author: !!python/unicode 'haidai'
    deps:
    - rospy
    - tf
    - pr2_laser_snapshotter
    - kinematics_msgs
    - hrl_lib
    - actionlib
    - actionlib_msgs
    - move_base_msgs
    - sensor_msgs
    - pr2_controllers_msgs
    - trajectory_msgs
    - pr2_mechanism_msgs
    - std_msgs
    - geometry_msgs
    - sound_play
    - kinematics_msgs
    - geometry_msgs
    - visualization_msgs
    - pr2_arm_kinematics
    - pr2_controllers_msgs
    - actionlib
    - pr2_gripper_reactive_approach
    - pr2_msgs
    - dynamic_reconfigure
    - teleop_controllers
    - kdl
    - object_manipulator
    - pr2_gripper_sensor_msgs
    - planning_environment_msgs
    desc: "Collection of small useful utilities for interlab use of\n      the PR2."
    license: BSD
    shortdesc: hrl_pr2_lib
    source: http://gt-ros-pkg.googlecode.com/svn/trunk/hrl/hrl_pr2_lib
    website: http://ros.org/wiki/hrl_pr2_lib
  hrl_rfid:
    author: !!python/unicode "Travis Deyle, Advisor: Prof. Charlie Kemp (Healthcare\
      \ Robotics Lab\n    at Georgia Tech) and Prof. Matt Reynolds (Duke University)"
    deps: []
    desc: "UHF RFID (Ultra-High Frequency Radio Frequency Identification)\n    reader\
      \ based on ThingMagic Mercury5e (M5e) and Mercury5e-Compact\n    (M5e-C) modules.\
      \  ThingMagic's highly-capable Gen2 UHF RFID\n    modules interact with low-cost\
      \ &quot;smart labels&quot; (tags) at distances\n    up to 6 meters depending\
      \ on choice of antennas (distances over 100\n    meters possible using highly-directive\
      \ antennas!) even without\n    line-of-sight visibility, as RF penetrates most\
      \ non-conducting\n    materials.  The reader can simultaneously query for hundreds\
      \ of\n    tags in the environment at once or query for presence / absence of\n\
      \    a individual tag among a sea of others.  A stand-alone Python\n    library\
      \ is provided as well as ROS wrappers."
    license: new BSD
    shortdesc: "UHF RFID (Ultra-High Frequency Radio Frequency Identification)\n \
      \   reader based on ThingMagic M..."
    source: details.php?name=rospy
    website: http://gt-ros-pkg.googlecode.com/svn/trunk/hrl/hrl_rfid
  hrl_segway_omni:
    author: !!python/unicode 'Cressel Anderson, Hai Nguyen, Marc Killpack, Advait
      Jain Advisor: Prof. Charlie Kemp, Lab: Healthcare Robotics Lab at Georgia Tech'
    deps:
    - zenither
    - hrl_lib
    - geometry_msgs
    - tf
    - joy
    desc: A package for commanding omnidirectional Segway bases.
    license: new BSD
    shortdesc: segway_omni
    source: details.php?name=rospy
    website: http://gt-ros-pkg.googlecode.com/svn/trunk/hrl/hrl_hardware_drivers/hrl_segway_omni
  hrl_simple_arm_goals:
    author: !!python/unicode 'Advait Jain, Advisor: Prof. Charlie Kemp, Lab: Healthcare
      Robotics Lab at Georgia Tech'
    deps:
    - move_arm_msgs
    - actionlib
    - rospy
    - roscpp
    desc: "Python equivalents for move_Arm tutorials. (For example,\n    http://www.ros.org/wiki/move_arm/Tutorials/MoveArmPoseGoalComplex)"
    license: New BSD
    shortdesc: hrl_simple_arm_goals
    source: http://gt-ros-pkg.googlecode.com/svn/trunk/hrl/advait_sandbox/hrl_simple_arm_goals
    website: http://ros.org/wiki/simple_armstack_goals
  hrl_table_detect:
    author: !!python/unicode 'kelsey'
    deps:
    - pr2_overhead_grasping
    - hrl_rfid
    - rospy
    - roslaunch
    - rosnode
    - spline_smoother
    - tf
    - bullet
    - pcl_ros
    - pcl
    - opencv2
    - cv_bridge
    - image_transport
    - hrl_cvblobslib
    - nav_core
    - move_base
    desc: hrl_table_detection
    license: BSD
    shortdesc: hrl_table_detection
    source: http://gt-ros-pkg.googlecode.com/svn/trunk/hrl/hrl_table_detect
    website: http://ros.org/wiki/hrl_table_detection
  hrl_tilting_hokuyo:
    author: !!python/unicode 'Advait Jain, Advisor: Prof. Charlie Kemp, Lab: Healthcare
      Robotics Lab at Georgia Tech'
    deps:
    - rospy
    - hrl_lib
    - hrl_hokuyo
    - robotis
    desc: Python code to use a Robotis servo to tilt a Hokuyo to get 3D point clouds.
    license: New BSD
    shortdesc: hrl_tilting_hokuyo
    source: http://gt-ros-pkg.googlecode.com/svn/trunk/hrl/hrl_hardware_drivers/hrl_tilting_hokuyo
    website: http://www.ros.org/wiki/hrl_tilting_hokuyo
  hrl_trajectory_playback:
    author: !!python/unicode 'Travis Deyle and Kelsey Hawkins'
    deps:
    - hrl_lib
    - hrl_pr2_lib
    - pr2_controllers_msgs
    - motion_planning_msgs
    desc: hrl_trajectory_playback
    license: BSD
    shortdesc: hrl_trajectory_playback
    source: http://gt-ros-pkg.googlecode.com/svn/trunk/hrl/hrl_trajectory_playback
    website: http://ros.org/wiki/hrl_trajectory_playback
  kelsey_sandbox:
    author: !!python/unicode 'kelsey'
    deps:
    - rospy
    - roscpp
    - std_msgs
    - sensor_msgs
    - pr2_msgs
    - hrl_lib
    - pr2_overhead_grasping
    - hrl_pr2_lib
    - laser_interface
    - hrl_tilting_hokuyo
    - pcl
    desc: kelsey_sandbox
    license: BSD
    shortdesc: kelsey_sandbox
    source: http://gt-ros-pkg.googlecode.com/svn/trunk/hrl/kelsey_sandbox
    website: http://ros.org/wiki/kelsey_sandbox
  laser_camera_segmentation:
    author: !!python/unicode 'Martin Schuster, Advisor: Prof. Charlie Kemp, Lab: Healthcare
      Robotics Lab at Georgia Tech'
    deps:
    - std_msgs
    - sensor_msgs
    - geometry_msgs
    - hrl_hokuyo
    - hrl_tilting_hokuyo
    - hokuyo
    - tf
    desc: Segmentation of 3d pointclouds in clutter vs. table
    license: New BSD
    shortdesc: Pointcloud segmentation
    source: details.php?name=rospy
    website: http://gt-ros-pkg.googlecode.com/svn/trunk/hrl/laser_camera_segmentation
  laser_interface:
    author: !!python/unicode 'Hai Nguyen and Travis Deyle. Advisor: Prof. Charlie
      Kemp, Lab: Healthcare Robotics Lab at Georgia Tech'
    deps:
    - std_msgs
    - geometry_msgs
    - sensor_msgs
    - visualization_msgs
    - cv_bridge
    - opencv2
    - hrl_opencv
    - hrl_lib
    desc: Detector that finds laser points in the world representing clicks.
    license: BSD
    shortdesc: Detect laser points in the world.
    source: details.php?name=rospy
    website: http://gt-ros-pkg.googlecode.com/svn/trunk/hrl/laser_interface
  libsvm3:
    author: !!python/unicode 'various'
    deps: []
    license: BSD
    shortdesc: libsvm3
    source: list.php
    website: http://gt-ros-pkg.googlecode.com/svn/trunk/hrl/libsvm3
  misc_behaviors:
    author: !!python/unicode 'Travis Deyle'
    deps:
    - rospy
    - actionlib
    - actionlib_msgs
    - smach
    - smach_ros
    - pr2_controllers_msgs
    - trajectory_msgs
    desc: Misc. PR2 behaviors that are either actionlib, ROS service, or just smach-ready.
    license: BSD
    shortdesc: misc_behaviors
    source: http://gt-ros-pkg.googlecode.com/svn/trunk/hrl/misc_behaviors
    website: http://ros.org/wiki/misc_behaviors
  ml_lib:
    author: !!python/unicode 'haidai'
    deps:
    - hrl_lib
    desc: ml_lib
    license: BSD
    shortdesc: ml_lib
    source: http://gt-ros-pkg.googlecode.com/svn/trunk/hrl/ml_lib
    website: http://ros.org/wiki/ml_lib
  move_arm_tutorials:
    author: !!python/unicode 'Advait Jain'
    deps:
    - rospy
    - move_arm
    - move_arm_msgs
    - actionlib
    desc: move_arm_tutorials
    license: BSD
    shortdesc: move_arm_tutorials
    source: http://gt-ros-pkg.googlecode.com/svn/trunk/hrl/advait_sandbox/move_arm_tutorials
    website: http://ros.org/wiki/move_arm_tutorials
  p2os_with_arm_driver:
    author: !!python/unicode 'Stephen Williams'
    deps:
    - roscpp
    - std_msgs
    - nav_msgs
    - sensor_msgs
    - std_srvs
    - tf
    - diagnostic_updater
    - angles
    - p2os_driver
    - urdf
    desc: "<p>\t\n\tThis package contains a patch file for the <a href=\"http://www.ros.org/wiki/p2os_driver\"\
      >p2os_driver</a> from USC that\n\tenables control of the 5-dof Pioneer Arm.\
      \ The build script automatically downloads the p2os_driver package internally,\
      \ \n\tpatches it, and builds a new driver called p2os_with_arm. This package\
      \ does not rebuild the custom p2os_driver messages, \n\tand thus requires the\
      \ original p2os_driver package to be installed and operational first.\n    </p>\n\
      \    <p>\n    This patch will be sent upstream to the maintainer of the p2os_driver\
      \ package for possible inclusion in a future release.\n    </p>"
    license: BSD
    shortdesc: Patch for p2os_driver to control the 5-dof Pioneer Arm
    source: http://gt-ros-pkg.googlecode.com/svn/trunk/humans/pioneer_arm/p2os_with_arm_driver
    website: http://ros.org/wiki/p2os_with_arm_driver
  pan_tilt_robotis:
    author: !!python/unicode 'Advait Jain, Advisor: Prof. Charlie Kemp, Lab: Healthcare
      Robotics Lab at Georgia Tech'
    deps:
    - rospy
    - robotis
    - hrl_lib
    desc: "Code to combine two Robotis servos to form a Pan Tilt Unit (for a\n   \
      \ stereo camera.)"
    license: New BSD
    shortdesc: pan_tilt_robotis
    source: http://gt-ros-pkg.googlecode.com/svn/trunk/hrl/hrl_hardware_drivers/pan_tilt_robotis
    website: http://ros.org/wiki/pan_tilt_robotis
  pfilter:
    author: !!python/unicode 'Travis Deyle, Hai Nguyen, Advisor: Prof. Charlie Kemp,
      Lab: Healthcare Robotics Lab at Georgia Tech'
    deps:
    - rospy
    desc: A general particle filter implementation written in Python.  Modeled off
      Probabilistic Robotics.
    license: BSD
    shortdesc: A general particle filter implementation written in Python.  Modeled
      off Probabilistic Robotic...
    source: http://gt-ros-pkg.googlecode.com/svn/trunk/hrl/pfilter
    website: http://ros.org/wiki/pfilter
  phantom_omni:
    author: !!python/unicode 'Hai Nguyen, Marc Killpack, Chi-Hung King, Advisor: Prof.
      Charlie Kemp, Lab: Healthcare Robotics Lab at Georgia Tech'
    deps:
    - rospy
    - geometry_msgs
    - tf
    - hrl_lib
    desc: ROS Node for Sensable Phantom Omni devices.
    license: new BSD
    shortdesc: phantom_omni
    source: details.php?name=roscpp
    website: http://gt-ros-pkg.googlecode.com/svn/trunk/hrl/hrl_hardware_drivers/phantom_omni
  pioneer_arm_description:
    author: !!python/unicode 'Stephen Williams'
    deps:
    - xacro
    - gazebo
    - gazebo_plugins
    - actuator_array_gazebo_plugin
    - p2os_urdf
    - rospy
    desc: "This package contains the URDF for a Pioneer 5-DOF robotic arm. Because\
      \ this modular \n     arm may be attached to any existing robot (e.g. a Pioneer\
      \ 3DX, a Pioneer 3AT, ...), \n     some amount of indirection is required to\
      \ a viable URDF. A custom Python script is \n     included that reads an existing\
      \ robot URDF/Xacro file, inserts the Pioneer Arm URDF,\n     then loads the\
      \ result into the standard &quot;robot_description&quot; parameter. The original\
      \ \n     robot description is not modified by this process."
    license: BSD
    shortdesc: URDF for a Pioneer 5-DOF robotic arm
    source: http://gt-ros-pkg.googlecode.com/svn/trunk/humans/pioneer_arm/pioneer_arm_description
    website: http://ros.org/wiki/pioneer_arm_description
  pioneer_arm_launch:
    author: !!python/unicode 'Stephen Williams'
    deps:
    - robot_state_publisher
    - p2os_urdf
    - pioneer_arm_description
    - p2os_with_arm_driver
    desc: Launch files for simulating and controlling a Pioneer 5-DOF robotic arm.
    license: BSD
    shortdesc: Launch files for simulating and controlling a Pioneer 5-DOF robotic
      arm
    source: http://gt-ros-pkg.googlecode.com/svn/trunk/humans/pioneer_arm/pioneer_arm_launch
    website: http://ros.org/wiki/pioneer_arm_launch
  point_cloud_ros:
    author: !!python/unicode 'Advait Jain (Healthcare Robotics Lab, Georgia Tech)'
    deps:
    - std_srvs
    - std_msgs
    - geometry_msgs
    - pcl
    - hrl_lib
    - hrl_tilting_hokuyo
    - visualization_msgs
    desc: ''
    license: New BSD
    shortdesc: Using PCL, interfacing it with python etc.
    source: details.php?name=rospy
    website: http://gt-ros-pkg.googlecode.com/svn/trunk/hrl/advait_sandbox/point_cloud_ros
  pr2_arms_kdl:
    author: !!python/unicode 'Advait Jain'
    deps:
    - rospy
    - kdl
    - hrl_lib
    desc: pr2_arms_kdl
    license: BSD
    shortdesc: pr2_arms_kdl
    source: http://gt-ros-pkg.googlecode.com/svn/trunk/hrl/advait_sandbox/pr2_arms_kdl
    website: http://ros.org/wiki/pr2_arms_kdl
  pr2_clutter_helper:
    author: !!python/unicode 'Jason Okerman, Advisors: Prof. Charlie Kemp and Jim
      Regh, Lab: Healthcare Robotics Lab at Georgia Tech'
    deps:
    - sensor_msgs
    - geometry_msgs
    - tf
    - rospy
    - opencv2
    - cv_bridge
    - image_geometry
    desc: "pr2_clutter_helper\n     \n     Helpful short functions for trapping an\
      \ image, pointcloud,\n       transforms from tf, camera_info from the PR2.\n\
      \     Used to grab data for the package &quot;gt-ros-pkg/hrl/clutter_segmentation&quot;\n\
      \       \n     Works on bagged data as well (if --clock is published).\n   \
      \  \n     Main source file: acquire_pr2_data.py\n     \n     This collects and\
      \ formats everythin needed by clutter_svm_segmentation.\n     Also has code\
      \ to map camera coloring into pointcloud and republish\n        for easy viewing\
      \ in ROS (Active if run stand-alone).\n     \n     Also helpful launch files."
    license: BSD
    shortdesc: pr2_clutter_helper
    source: http://gt-ros-pkg.googlecode.com/svn/trunk/hrl/pr2_clutter_helper
    website: http://ros.org/wiki/pr2_clutter_helper
  pr2_laser_follow_behavior:
    author: !!python/unicode 'Hai Nguyen, Advisor: Prof. Charlie Kemp, Lab: Healthcare
      Robotics Lab at Georgia Tech'
    deps:
    - actionlib
    - pr2_controllers_msgs
    - geometry_msgs
    - laser_interface
    - move_base_msgs
    desc: "A example for how the laser pointer interface works the PR2.  In this\n\
      \      demo behavior, the PR2 tracks the detected point using its pan-tilt then\n\
      \      navigates towards it when the user double clicks the selected point."
    license: BSD
    shortdesc: pr2_laser_follow_behavior
    source: http://gt-ros-pkg.googlecode.com/svn/trunk/hrl/pr2_laser_follow_behavior
    website: http://ros.org/wiki/laser_pointer_action
  pr2_omni_teleop:
    author: !!python/unicode 'Hai Nguyen, Marc Killpack  Advisor: Prof. Charlie Kemp,
      Lab: Healthcare Robotics Lab at Georgia Tech'
    deps:
    - pr2_controllers_msgs
    - actionlib
    - phantom_omni
    - geometry_msgs
    - hrl_camera
    - pr2_msgs
    - teleop_controllers
    - polled_camera
    - opencv2
    - pr2_laser_snapshotter
    desc: "Integrated package that allows PR2 teleoperation with force feedback using\
      \ two Phantom Omni devices\n    and the stereo_anaglyph viewer."
    license: BSD
    shortdesc: pr2_omni_teleop
    source: http://gt-ros-pkg.googlecode.com/svn/trunk/hrl/pr2_omni_teleop
    website: http://ros.org/wiki/pr2_omni_teleop
  pr2_overhead_grasping:
    author: !!python/unicode "Kelsey Hawkins, Advisor: Prof. Charlie Kemp (Healthcare\
      \ Robotics Lab\n    at Georgia Tech)"
    deps:
    - rospy
    - rosbag
    - tf
    - actionlib_msgs
    - eigen
    - kinematics_msgs
    - hrl_lib
    - hrl_pr2_lib
    - actionlib
    - actionlib_msgs
    - sensor_msgs
    - trajectory_msgs
    - pr2_mechanism_msgs
    - std_msgs
    - cv_bridge
    - opencv2
    - geometry_msgs
    - ml_lib
    - smach
    - smach_ros
    - visualization_msgs
    - pr2_arm_kinematics
    - pr2_controllers_msgs
    - pr2_gripper_reactive_approach
    - tabletop_object_detector
    - laser_interface
    - face_detector
    - nodelet
    - libsvm3
    desc: "Quick overhead grasping for the PR2. Objects are percieved using\n    \
      \  the tabletop_object_detector package and grasped from above using\n     \
      \ interpolated IK, modified to keep the elbows up.  Collisions with\n      either\
      \ the object or table are detected by monitoring all senses\n      available\
      \ on the arms.  When a collision is detected, the gripper\n      closes and\
      \ returns to its initial grasping position.  Functionality\n      is also provided\
      \ to implement the laser_interface package, allowing\n      a user to control\
      \ the manipulation using a laser pointer."
    license: BSD
    shortdesc: pr2_overhead_grasping
    source: http://gt-ros-pkg.googlecode.com/svn/trunk/hrl/pr2_overhead_grasping
    website: http://ros.org/wiki/pr2_overhead_grasping
  pr2_playpen:
    author: !!python/unicode 'Marc Killpack / mkillpack3@gatech.edu,  Advisor: Prof.
      Charlie Kemp, Lab: Healthcare Robotics Lab at Georgia Tech'
    deps:
    - robotis
    - actionlib
    - object_manipulation_msgs
    - tabletop_object_detector
    - tabletop_collision_map_processing
    - UI_segment_object
    - object_manipulator
    - rospy
    - tf
    - teleop_controllers
    desc: pr2_playpen
    license: New BSD
    shortdesc: pr2_playpen
    source: http://gt-ros-pkg.googlecode.com/svn/trunk/hrl/pr2_playpen
    website: http://ros.org/wiki/pr2_playpen
  robotis:
    author: !!python/unicode 'Travis Deyle, Advait Jain, Marc Killpack, Advisor: Prof.
      Charlie Kemp, Lab: Healthcare Robotics Lab at Georgia Tech'
    deps:
    - tf
    desc: "This package is designed to operate, query, and control Robotis\n    Dynamixel\
      \ 'smart' Servos using a USB2Dynamixel adaptor.  It has\n    been tested on\
      \ the RX-28 and RX-64 servo variants."
    license: New BSD
    shortdesc: "This package is designed to operate, query, and control Robotis\n\
      \    Dynamixel 'smart' Servos us..."
    source: details.php?name=std_srvs
    website: http://gt-ros-pkg.googlecode.com/svn/trunk/hrl/hrl_hardware_drivers/robotis
  room_explore:
    author: !!python/unicode 'Travis Deyle'
    deps:
    - rospy
    - tf
    - geometry_msgs
    - actionlib
    - actionlib_msgs
    - move_base_msgs
    - visualization_msgs
    - std_msgs
    - explore_hrl
    desc: room_explore
    license: BSD
    shortdesc: room_explore
    source: http://gt-ros-pkg.googlecode.com/svn/trunk/hrl/room_explore
    website: http://ros.org/wiki/room_explore
  sample_pkg:
    author: !!python/unicode 'Marc Killpack / mkillpack3@gatech.edu / Healthcare Robotics
      Lab, Georgia Tech'
    deps: []
    desc: ele_teleop
    license: new BSD
    shortdesc: ele_teleop
    source: details.php?name=rospy
    website: http://gt-ros-pkg.googlecode.com/svn/trunk/hrl/sample_pkg
  stereo_anaglyph:
    author: !!python/unicode 'Hai Nguyen, Advisor: Prof. Charlie Kemp, Lab: Healthcare
      Robotics Lab at Georgia Tech'
    deps:
    - opencv2
    - sensor_msgs
    - rospy
    - hrl_camera
    desc: Display images from stereo pairs in red-cyan anaglyph mode.
    license: BSD
    shortdesc: stereo-anaglyph
    source: http://gt-ros-pkg.googlecode.com/svn/trunk/hrl/stereo_anaglyph
    website: http://ros.org/wiki/stereo-anaglyph
  tabletop_pushing:
    author: !!python/unicode 'Tucker Hermans'
    deps:
    - roscpp
    - stereo_msgs
    - sensor_msgs
    - geometry_msgs
    - pcl
    - pcl_ros
    - tf
    - cpl_visual_features
    - opencv2
    - image_transport
    - cv_bridge
    - hrl_pr2_lib
    desc: tabletop_pushing
    license: BSD
    shortdesc: tabletop_pushing
    source: http://gt-ros-pkg.googlecode.com/svn/trunk/cpl/tabletop_pushing
    website: http://ros.org/wiki/tabletop_pushing
  tele_mobile:
    author: !!python/unicode 'Chih-Hung King, Advisor: Prof. Charlie Kemp, Lab: Healthcare
      Robotics Lab at Georgia Tech'
    deps:
    - zenither
    - hrl_lib
    - geometry_msgs
    - tf
    desc: A package for teleoperation controls of segway, zenither, and dynamixel
      servos.
    license: new BSD
    shortdesc: tele_mobile
    source: details.php?name=rospy
    website: http://gt-ros-pkg.googlecode.com/svn/trunk/hrl/tele_mobile
  zenither:
    author: !!python/unicode 'Cressel Anderson, Advait Jain, Hai Nguyen, Advisor:
      Prof. Charlie Kemp, Lab: Healthcare Robotics Lab at Georgia Tech'
    deps:
    - hrl_lib
    - std_srvs
    - tf
    desc: ''
    license: New BSD
    shortdesc: Code to control an Animatics Smart Servo. We use the Animatics servos
      to control Festo linear actuators.
    source: details.php?name=rospy
    website: http://gt-ros-pkg.googlecode.com/svn/trunk/hrl/hrl_hardware_drivers/zenither
haptic_event_detector:
  haptic_event_detector_msgs:
    author: !!python/unicode 'Joe Romano'
    deps:
    - roscpp
    - std_msgs
    desc: haptic_event_detector_msgs
    license: BSD
    shortdesc: haptic_event_detector_msgs
    source: https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs/haptic_event_detector/trunk/haptic_event_detector_msgs
    website: http://ros.org/wiki/haptic_event_detector_msgs
  pr2_haptic_event_detector:
    author: !!python/unicode 'Joe Romano'
    deps:
    - pr2_controller_interface
    - pr2_mechanism_model
    - realtime_tools
    - pluginlib
    - roscpp
    - rosrt
    - roslib
    - std_msgs
    - std_srvs
    - haptic_event_detector_msgs
    desc: pr2_haptic_event_detector discription
    license: BSD
    shortdesc: pr2_haptic_event_detector
    source: https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs/haptic_event_detector/trunk/pr2_haptic_event_detector
    website: http://ros.org/wiki/pr2_haptic_event_detector
hwu-osl-ros-pkg:
  auv_description:
    author: !!python/unicode 'Joel Cartwright'
    deps: []
    desc: auv_model
    license: BSD
    shortdesc: auv_description
    source: http://hwu-osl-ros-pkg.googlecode.com/svn/trunk/hwu_osl_software/auv_description
    website: http://ros.org/wiki/auv_description
  auv_joy:
    author: !!python/unicode 'Joel Cartwright'
    deps:
    - roscpp
    - rospy
    - geometry_msgs
    - osl_core
    desc: 'This node allows the control of real or simulated AUVs by sending 6 axis
      vehicle force messages based on input received from a Linux compatible joy pad
      with dual analogue sticks. Only 4/5 axes are actually controllable: x, y, z,
      and yaw by default, and pitch on a button press. Tested with Logitech joypads.
      TODO: Change to accept ROS joystick message as input rather than reading direct
      from joystick.'
    license: BSD
    shortdesc: Simple joypad remote control module for an AUV.
    source: http://hwu-osl-ros-pkg.googlecode.com/svn/trunk/hwu_osl_software/auv_joy
    website: TODO
  auv_msgs:
    author: !!python/unicode 'Joel Cartwright'
    deps:
    - std_msgs
    - geometry_msgs
    - sensor_msgs
    - actionlib_msgs
    desc: auv_msgs
    license: BSD
    shortdesc: auv_msgs
    source: http://hwu-osl-ros-pkg.googlecode.com/svn/trunk/hwu_osl_common/auv_msgs
    website: TODO
  auv_nav:
    author: !!python/unicode 'Joel Cartwright'
    deps:
    - rospy
    - roscpp
    - nav_msgs
    - tf
    - osl_core
    - auv_msgs
    desc: This simple navigator node serves as an example of hybrid use of Heriot-Watt
      Unversity's internal OceanSHELL/ALI messages for sensor data, and ROS messages
      for the higher levels.
    license: BSD
    shortdesc: A basic navigator node for an AUV.
    source: http://hwu-osl-ros-pkg.googlecode.com/svn/trunk/hwu_osl_software/auv_nav
    website: TODO
  auv_nav_sim:
    author: !!python/unicode 'Joel Cartwright'
    deps:
    - rospy
    - roscpp
    - geometry_msgs
    - nav_msgs
    - tf
    - osl_core
    - auv_msgs
    desc: This node produces very rough simulated navigation status of an AUV based
      on the vehicle force requests it receives. It simulates neither the hydrodynamics
      nor acceleration of the vehicle, but may serve as a good enough approximation
      for testing most pilot functionality and higher level nodes. It should not be
      used for tuning vehicle PID controllers.
    license: BSD
    shortdesc: A very basic navigator simulator node for AUVs.
    source: http://hwu-osl-ros-pkg.googlecode.com/svn/trunk/hwu_osl_software/auv_nav_sim
    website: TODO
  auv_pilot:
    author: !!python/unicode 'Joel Cartwright'
    deps:
    - rospy
    - roscpp
    - geometry_msgs
    - osl_core
    - auv_msgs
    desc: The AUV pilot subscribes to navigation status messages and waypoint and
      manual force request messages. Waypoint requests engage cascaded PID controllers
      to move the vehicle to the required point. Manual requests override the 'autopilot',
      and are passed straight on.
    license: BSD
    shortdesc: Waypoint based pilot node for an AUV.
    source: http://hwu-osl-ros-pkg.googlecode.com/svn/trunk/hwu_osl_software/auv_pilot
    website: TODO
  auv_sim:
    author: !!python/unicode 'Joel Cartwright'
    deps:
    - rviz
    - sim_clock
    - auv_nav_sim
    - auv_pilot
    - auv_joy
    desc: auv_sim
    license: BSD
    shortdesc: auv_sim
    source: http://hwu-osl-ros-pkg.googlecode.com/svn/trunk/hwu_osl_software/auv_sim
    website: http://ros.org/wiki/auv_sim
  osl_core:
    author: !!python/unicode 'Joel Cartwright'
    deps:
    - roscpp
    desc: osl_core
    license: BSD
    shortdesc: osl_core
    source: http://hwu-osl-ros-pkg.googlecode.com/svn/trunk/hwu_osl_common/osl_core
    website: http://ros.org/wiki/osl_core
  sim_clock:
    author: !!python/unicode 'Joel Cartwright'
    deps:
    - roscpp
    - osl_core
    desc: sim_clock
    license: BSD
    shortdesc: sim_clock
    source: http://hwu-osl-ros-pkg.googlecode.com/svn/trunk/hwu_osl_software/sim_clock
    website: http://ros.org/wiki/sim_clock
  transport_test:
    author: !!python/unicode 'Joel Cartwright'
    deps:
    - roscpp
    - nav_msgs
    - nodelet
    desc: transport_test
    license: BSD
    shortdesc: transport_test
    source: http://hwu-osl-ros-pkg.googlecode.com/svn/trunk/hwu_osl_common/transport_test
    website: http://ros.org/wiki/transport_test
ias_common:
  annotation_srvs:
    author: !!python/unicode 'Ulrich F Klank'
    deps:
    - std_msgs
    - triangle_mesh_msgs
    desc: no description
    license: GPL
    shortdesc: no description
    source: details.php?name=roscpp
    website: http://code.in.tum.de/git/ias-common.git
  cogman_msgs:
    author: !!python/unicode 'Alexis Maldonado'
    deps:
    - actionlib_msgs
    - actionlib
    - vision_msgs
    desc: ''
    license: GPLv3
    shortdesc: Messages related to Manipulation
    source: details.php?name=geometry_msgs
    website: http://code.in.tum.de/git/ias-common.git
  navp_action:
    author: !!python/unicode 'Ingo Kresse'
    deps:
    - geometry_msgs
    - actionlib
    - actionlib_msgs
    desc: simple P-Controller for a holonomic robot base.
    license: BSD
    shortdesc: nav_pcontroller
    source: details.php?name=std_msgs
    website: http://code.in.tum.de/git/ias-common.git
  triangle_mesh_msgs:
    author: !!python/unicode ''
    deps:
    - geometry_msgs
    - sensor_msgs
    desc: Messages for Triangle Meshes
    license: BSD
    shortdesc: triangle_mesh_msgs
    source: details.php?name=std_msgs
    website: http://code.in.tum.de/git/ias-common.git
  vision_msgs:
    author: !!python/unicode 'Ulrich F Klank'
    deps:
    - geometry_msgs
    desc: Cognitive Perception Server
    license: Closed
    shortdesc: Cognitive Perception Server
    source: details.php?name=roscpp
    website: http://code.in.tum.de/git/ias-common.git
  vision_srvs:
    author: !!python/unicode 'Ulrich F Klank'
    deps:
    - geometry_msgs
    - vision_msgs
    - geometric_shapes_msgs
    desc: Cognitive Perception Server
    license: Closed
    shortdesc: Cognitive Perception Server
    source: details.php?name=roscpp
    website: http://code.in.tum.de/git/ias-common.git
ias_perception:
  contracting_curve_density_algorithm:
    author: !!python/unicode 'Shulei Zhu, Dejan Pangercic'
    deps:
    - opencv2
    - cv_bridge
    - image_transport
    desc: "An extended and optimized implementation of the state-of-theart\n    local\
      \ curve fitting algorithm named Contracting Curve Density (CCD) algorithm, originally\n\
      \    developed by Hanek et al. \n    The CCD algorithm can be best described\
      \ as follows. Given one or multiple images as\n    input data and a parametric\
      \ curve model with a priori distribution of model parameters,\n    through curve-fitting\
      \ process, we estimate the model parameters which determine the approximation\n\
      \    of the posterior distribution in order to make the curve models best matching\n\
      \    the image data. In order to improve the stability, accuracy and robustness\
      \ over the original\n    implementation we introduce the following improvements.\
      \ Firstly, we use the logistic\n    sigmoid function instead of a Gaussian error\
      \ function which renders a curve-fitting problem\n    as a Gaussian logistic\
      \ regression problem known in the field of pattern recognition.\n    Secondly,\
      \ a quadratic or a cubic B-spline curve is used to model the parametric curve\
      \ to\n    avoid the Runge phenomenon without increasing the degree of the B-spline.\
      \ Thirdly, the\n    system supports both planar affine (6-DOF) and three-dimensional\
      \ affine (8-DOF) shapespace.\n    The latter affine space can avoid curve mismatching\
      \ caused by major viewpoint\n    changes. Lastly, in order to avoid manual intervention\
      \ by the user, the developed system\n    also supports robust global initial\
      \ curve initialization modules based on both keypoint\n    feature matching\
      \ and back-projections from the 3D point clouds."
    license: BSD
    shortdesc: "An extended and optimized implementation of the state-of-theart\n\
      \    local curve fitting algorit..."
    source: details.php?name=roscpp
    website: http://code.in.tum.de/git/ias-perception.git
ic2020:
  ic2020_loop:
    author: !!python/unicode 'Sean Anderson'
    deps:
    - sensor_msgs
    - roscpp
    - std_msgs
    - ic2020_vodom
    - ic2020_toro
    - geometry_msgs
    desc: ic2020_loop
    license: CC BY-NC-SA 2.5
    shortdesc: ic2020_loop
    source: details.php?name=roscpp
    website: http://ic2020.googlecode.com/svn/trunk/ic2020_loop
  ic2020_optflow:
    author: !!python/unicode 'Sean Anderson'
    deps:
    - sensor_msgs
    - cv_bridge
    - image_transport
    - std_msgs
    - ic2020_vodom
    desc: ic2020_optflow
    license: CC BY-NC-SA 2.5
    shortdesc: ic2020_optflow
    source: details.php?name=roscpp
    website: http://ic2020.googlecode.com/svn/trunk/ic2020_optflow
  ic2020_render:
    author: !!python/unicode 'Sean Anderson'
    deps:
    - roscpp
    - sensor_msgs
    - ic2020_vodom
    - geometry_msgs
    desc: ic2020_render
    license: CC BY-NC-SA 2.5
    shortdesc: ic2020_render
    source: details.php?name=std_msgs
    website: http://ic2020.googlecode.com/svn/trunk/ic2020_render
  ic2020_surf:
    author: !!python/unicode 'Sean Anderson'
    deps:
    - sensor_msgs
    - std_msgs
    - ic2020_vodom
    - geometry_msgs
    desc: ic2020_surf
    license: CC BY-NC-SA 2.5
    shortdesc: ic2020_surf
    source: details.php?name=roscpp
    website: http://ic2020.googlecode.com/svn/trunk/ic2020_surf
  ic2020_toro:
    author: !!python/unicode 'Sean Anderson'
    deps:
    - sensor_msgs
    - std_msgs
    - ic2020_vodom
    - ic2020_render
    - geometry_msgs
    desc: ic2020_toro
    license: CC BY-NC-SA 2.5
    shortdesc: ic2020_toro
    source: details.php?name=roscpp
    website: http://ic2020.googlecode.com/svn/trunk/ic2020_toro
  ic2020_vodom:
    author: !!python/unicode 'Sean Anderson'
    deps:
    - sensor_msgs
    - roscpp
    - cv_bridge
    - image_transport
    - std_msgs
    - geometry_msgs
    desc: ic2020_vodom
    license: CC BY-NC-SA 2.5
    shortdesc: ic2020_vodom
    source: details.php?name=roscpp
    website: http://ic2020.googlecode.com/svn/trunk/ic2020_vodom
iheart-ros-pkg:
  ihr_demo_bags:
    author: !!python/unicode 'I Heart Robotics'
    deps:
    - std_msgs
    desc: Bag files used in Demos
    license: Creative Commons BY-NC-SA
    shortdesc: ihr_demo_bags
    source: git://github.com/IHeartRobotics/iheart-ros-pkg.git
    website: http://ros.org/wiki/ihr_demo_bags
  ihr_opencv:
    author: !!python/unicode 'I Heart Robotics'
    deps:
    - sensor_msgs
    - opencv2
    - cv_bridge
    - roscpp
    - std_msgs
    - image_transport
    - ihr_demo_bags
    desc: I Heart Robotics ROS OpenCV Demos
    license: BSD
    shortdesc: ihr_demo_1
    source: git://github.com/IHeartRobotics/iheart-ros-pkg.git
    website: http://ros.org/wiki/ihr_opencv
  rind:
    author: !!python/unicode 'I Heart Robotics'
    deps:
    - roslib
    - rosgraph
    - rosmsg
    - rospy
    - rosrecord
    desc: Robot/ROS Status Indicator
    license: BSD
    shortdesc: Robot/ROS Status Indicator
    source: git://github.com/IHeartRobotics/iheart-ros-pkg.git
    website: http://ros.org/wiki/rind
  rovio_common:
    author: !!python/unicode 'I Heart Robotics'
    deps:
    - roscpp
    - rospy
    - rosbagmigration
    desc: rovio_common contains common messages and services related to the Rovio
      stack
    license: GPL
    shortdesc: rovio_common
    source: git://github.com/IHeartRobotics/iheart-ros-pkg.git
    website: http://ros.org/wiki/rovio_common
  rovio_controller:
    author: !!python/unicode 'I Heart Robotics'
    deps:
    - std_msgs
    - roscpp
    - geometry_msgs
    - rovio_common
    - resource_retriever
    desc: rovio_controller controls the motors and head position of the Rovio
    license: GPL
    shortdesc: rovio_controller
    source: git://github.com/IHeartRobotics/iheart-ros-pkg.git
    website: http://ros.org/wiki/rovio_controller
  rovio_teleop:
    author: !!python/unicode 'I Heart Robotics'
    deps:
    - std_msgs
    - roscpp
    - joy
    - geometry_msgs
    - rovio_common
    desc: The rovio_teleop package maps joystick commands to velocity commands. Joystick
      buttons are used to control the position of the head.
    license: GPL
    shortdesc: rovio_teleop
    source: git://github.com/IHeartRobotics/iheart-ros-pkg.git
    website: http://ros.org/wiki/rovio_teleop
  zeroconf:
    author: !!python/unicode 'I Heart Robotics'
    deps:
    - rospy
    - roslib
    - std_msgs
    desc: Zero Configuration tools for ROS
    license: BSD
    shortdesc: Zero Configuration tools for ROS
    source: git://github.com/IHeartRobotics/iheart-ros-pkg.git
    website: http://ros.org/wiki/zeroconf
irp6_robot:
  ati6284:
    author: !!python/unicode 'Konrad Banachowicz'
    deps:
    - rtt
    - ocl
    - kdl
    - geometry_msgs
    desc: Driver for ATI 6284 fource torque sensor, using NI 6034E DAQ card.
    license: BSD
    shortdesc: Driver for ATI 6284 fource torque sensor, using NI 6034E DAQ card.
    source: https://github.com/RCPRG-ros-pkg/irp6_robot.git
    website: http://ros.org/wiki/ati6284
  irp6_defs:
    author: !!python/unicode 'Konrad Banachowicz'
    deps:
    - xacro
    desc: irp6_defs
    license: BSD
    shortdesc: irp6_defs
    source: https://github.com/RCPRG-ros-pkg/irp6_robot.git
    website: http://ros.org/wiki/irp6_defs
  irp6_launch:
    author: !!python/unicode 'Konrad Banachowicz'
    deps:
    - xacro
    - irp6_defs
    - irp6_servo
    - oro_joint_state_publisher
    - fake_servo
    - oro_joint_trajectory_action
    - joint_spline_trajectory_generator
    desc: irp6_launch
    license: BSD
    shortdesc: irp6_launch
    source: https://github.com/RCPRG-ros-pkg/irp6_robot.git
    website: http://ros.org/wiki/irp6_launch
  irp6_servo:
    author: !!python/unicode 'Konrad Banachowicz'
    deps:
    - rtt
    - ocl
    - oro_servo_msgs
    desc: irp6_servo
    license: BSD
    shortdesc: irp6_servo
    source: https://github.com/RCPRG-ros-pkg/irp6_robot.git
    website: http://ros.org/wiki/irp6_servo
isi-ros-pkg:
  c3_hlac:
    author: !!python/unicode 'Asako Kanezaki'
    deps:
    - roscpp
    - pcl
    - c3_hlac_core
    desc: C3-HLAC feature extraction from RGB point cloud.
    license: BSD
    shortdesc: C3-HLAC feature extraction from RGB point cloud.
    source: http://github.com/kanezaki/isi-ros-pkg
    website: http://ros.org/wiki/c3_hlac
  c3_hlac_core:
    author: !!python/unicode 'Kanezaki Asako'
    deps:
    - roscpp
    desc: ROS wrapper for core functions in C3-HLAC feature extraction.
    license: BSD(non-commercial use)
    shortdesc: c3_hlac_core
    source: http://github.com/kanezaki/isi-ros-pkg
    website: http://ros.org/wiki/c3_hlac_core
  color_voxel_recognition:
    author: !!python/unicode 'kanezaki'
    deps:
    - roscpp
    - pcl
    - c3_hlac
    - visualization_msgs
    desc: Tools for object detection using C3-HLAC features and linear subspace method.
    license: BSD
    shortdesc: color_voxel_recognition
    source: http://github.com/kanezaki/isi-ros-pkg
    website: http://ros.org/wiki/color_voxel_recognition
isr-uc-ros-pkg:
  ardusim:
    author: "Gon\xC3\xA7alo Cabrita and Pedro Sousa"
    deps:
    - roscpp
    - std_msgs
    - cereal_port
    - lse_sensor_msgs
    desc: Ardusim (Arduino Sensor Interface Module) is a library for interfacing a
      wide range of sensors with ROS over the Arduino microcontroller.
    license: BSD
    shortdesc: Ardusim (Arduino Sensor Interface Module) is a library for interfacing
      a wide range of sensor...
    source: http://isr-uc-ros-pkg.googlecode.com/svn/trunk/unstable/lse_arduino/ardusim
    website: http://ros.org/wiki/ardusim
  cereal_port:
    author: "Gon\xC3\xA7alo Cabrita and Pedro Sousa"
    deps:
    - roscpp
    desc: Simple C++ serial port class for ROS.
    license: BSD
    shortdesc: cereal_port
    source: http://isr-uc-ros-pkg.googlecode.com/svn/trunk/unstable/lse_communication/cereal_port
    website: http://ros.org/wiki/cereal_port
  fctuc_open_day:
    author: "Gon\xC3\xA7alo Cabrita and Pedro Sousa"
    deps:
    - roscpp
    - tf
    - actionlib
    - actionlib_msgs
    - nav_msgs
    - geometry_msgs
    - move_base_msgs
    - lse_sensor_msgs
    - roomba_500_series
    - isr_maps
    desc: Small demo for the FCTUC open day.
    license: BSD
    shortdesc: fctuc_open_day
    source: http://isr-uc-ros-pkg.googlecode.com/svn/trunk/unstable/lse_experiments/fctuc_open_day
    website: http://ros.org/wiki/fctuc_open_day
  isr_maps:
    author: "Gon\xC3\xA7alo Cabrita and Pedro Sousa"
    deps: []
    desc: The isr_maps package contains maps of the ISR and arenas throughout the
      research labs. Centralized storage for commonly used maps for Stage world files
      and map_server nodes.
    license: BSD
    shortdesc: The isr_maps package contains maps of the ISR and arenas throughout
      the research labs. Centra...
    source: http://isr-uc-ros-pkg.googlecode.com/svn/trunk/unstable/lse_ressources/isr_maps
    website: http://ros.org/wiki/isr_maps
  laptop_battery:
    author: "Gon\xC3\xA7alo Cabrita"
    deps:
    - roscpp
    desc: laptop_battery
    license: BSD
    shortdesc: laptop_battery
    source: http://isr-uc-ros-pkg.googlecode.com/svn/trunk/unstable/lse_battery_drivers/laptop_battery
    website: http://ros.org/wiki/laptop_battery
  lse_roomba_2dnav:
    author: "Gon\xC3\xA7alo Cabrita and Pedro Sousa"
    deps: []
    desc: Parameters and launch files for using the 2D navigation stack on the Roomba
      robot.
    license: BSD
    shortdesc: lse_roomba_2dnav
    source: http://isr-uc-ros-pkg.googlecode.com/svn/trunk/unstable/lse_roomba_toolbox/lse_roomba_2dnav
    website: http://ros.org/wiki/lse_roomba_2dnav
  lse_roomba_stage:
    author: "Gon\xC3\xA7alo Cabrita and Pedro Sousa"
    deps: []
    desc: Stage world files for the Roomba robot. Also includes 2dnav launch files.
      An example for multiple roombas running in Stage with multiple move_bases running
      is also present.
    license: BSD
    shortdesc: roomba_stage
    source: http://isr-uc-ros-pkg.googlecode.com/svn/trunk/unstable/lse_roomba_toolbox/lse_roomba_stage
    website: http://ros.org/wiki/roomba_stage
  lse_roomba_tf_setup:
    author: "Gon\xC3\xA7alo Cabrita and Pedro Sousa"
    deps:
    - roscpp
    - tf
    - geometry_msgs
    desc: Typical tf setups for the Erratics used in LSE. Includes setups with the
      Hokuyo laser and the LSE two nostril MOX nose.
    license: BSD
    shortdesc: lse_roomba_tf_setup
    source: http://isr-uc-ros-pkg.googlecode.com/svn/trunk/unstable/lse_roomba_toolbox/lse_roomba_tf_setup
    website: http://ros.org/wiki/lse_roomba_tf_setup
  lse_sensor_msgs:
    author: "Gon\xC3\xA7alo Cabrita and Pedro Sousa"
    deps:
    - roscpp
    desc: 'This package defines messages for commonly used sensors at the LSE, including

      anemometers and odor sensors.'
    license: BSD
    shortdesc: lse_sensor_msgs
    source: http://isr-uc-ros-pkg.googlecode.com/svn/trunk/unstable/lse_messages/lse_sensor_msgs
    website: http://ros.org/wiki/lse_sensor_msgs
  lse_xsens_mti:
    author: "Gon\xC3\xA7alo Cabrita"
    deps:
    - sensor_msgs
    - roscpp
    - cereal_port
    desc: Xsens MTi node. The existing xsens_mti node is distributed in the form of
      a library and requires the MTi to be set to a determined configuration to work.
      We had some old code laying around so we just ported it to ROS. This sends the
      MTi to configuration mode at start and sets it to the propper mode of operation.
    license: BSD
    shortdesc: lse_xsens_mti
    source: http://isr-uc-ros-pkg.googlecode.com/svn/trunk/unstable/lse_imu_drivers/lse_xsens_mti
    website: http://ros.org/wiki/lse_xsens_mti
  odor_bar:
    author: !!python/unicode 'Pedro Sousa'
    deps:
    - roscpp
    - visualization_msgs
    - lse_sensor_msgs
    desc: Odor bar node. Publishes a group of visualization_msgs/Marker as a bar for
      visually monitoring odor concentrations in rviz.
    license: BSD
    shortdesc: Odor bar node. Publishes a group of visualization_msgs/Marker as a
      bar for visually monitorin...
    source: http://isr-uc-ros-pkg.googlecode.com/svn/trunk/unstable/odor_tools/odor_bar
    website: http://ros.org/wiki/odor_bar
  particle_plume:
    author: "Gon\xC3\xA7alo Cabrita and Pedro Sousa"
    deps:
    - roscpp
    - tf
    - lse_sensor_msgs
    - sensor_msgs
    - geometry_msgs
    - pcl_ros
    - nav_msgs
    - message_filters
    desc: Particle plume is a odor mapping algorithm based on the PCL allowing for
      a 3D representation of a chemical plume by means of a 3D point cloud.
    license: BSD
    shortdesc: particle_plume
    source: http://isr-uc-ros-pkg.googlecode.com/svn/trunk/unstable/odor_search/particle_plume
    website: http://ros.org/wiki/particle_plume
  plumesim:
    author: "Gon\xC3\xA7alo Cabrita and Pedro Sousa"
    deps:
    - roscpp
    - visualization_msgs
    - nav_msgs
    - lse_sensor_msgs
    desc: PlumeSim is an odor plume simulator for ROS. It is able to generate plumes
      for simulations or to real robots. Current plume sources include gaussian and
      meadering models, plumesim log files and CFD Fluent log files.
    license: BSD
    shortdesc: PlumeSim is an odor plume simulator for ROS. It is able to generate
      plumes for simulations or...
    source: http://isr-uc-ros-pkg.googlecode.com/svn/trunk/unstable/simulator_plumesim/plumesim
    website: http://ros.org/wiki/plumesim
  pp_explorer:
    author: "Gon\xC3\xA7alo Cabrita and Pedro Sousa"
    deps:
    - roscpp
    - lse_sensor_msgs
    - geometry_msgs
    - sensor_msgs
    - std_msgs
    - nav_msgs
    - actionlib
    - actionlib_msgs
    - move_base_msgs
    - pcl_ros
    - tf
    - visualization_msgs
    - angles
    - wifi_comm
    desc: Particle plume exploration algorithm.
    license: BSD
    shortdesc: pp_explorer
    source: http://isr-uc-ros-pkg.googlecode.com/svn/trunk/unstable/odor_search/pp_explorer
    website: http://ros.org/wiki/pp_explorer
  random_walk:
    author: "Gon\xC3\xA7alo Cabrita"
    deps:
    - roscpp
    - geometry_msgs
    - sensor_msgs
    - nav_msgs
    - actionlib
    - actionlib_msgs
    - move_base_msgs
    - tf
    - angles
    desc: ROS implementation of a random walk algorithm based on the navigation stack.
    license: BSD
    shortdesc: random_walk
    source: http://isr-uc-ros-pkg.googlecode.com/svn/trunk/unstable/odor_search/random_walk
    website: http://ros.org/wiki/random_walk
  roomba_500_series:
    author: "Gon\xC3\xA7alo Cabrita"
    deps:
    - roscpp
    - actionlib
    - actionlib_msgs
    - tf
    - nav_msgs
    - geometry_msgs
    - cereal_port
    desc: iRobot Roomba 500 package based on the iRobot Open Interface Specification.
      There are two nodes available, a light node which exposes odometry and velocity
      commands, and a full node which exposes all capabilities of the underlying library.
    license: BSD
    shortdesc: roomba_500_series
    source: http://isr-uc-ros-pkg.googlecode.com/svn/trunk/unstable/roomba_robot/roomba_500_series
    website: http://ros.org/wiki/roomba_500_series
  scout_ndirect:
    author: "Gon\xC3\xA7alo Cabrita and Pedro Sousa"
    deps:
    - roscpp
    - tf
    - nav_msgs
    - geometry_msgs
    - lse_sensor_msgs
    desc: Wraper for the Ndirect library, allowing control of a Scout robot on ROS.
    license: BSD
    shortdesc: scout_ndirect
    source: http://isr-uc-ros-pkg.googlecode.com/svn/trunk/unstable/scout_robot/scout_ndirect
    website: http://ros.org/wiki/scout_ndirect
  sensornet:
    author: "Gon\xC3\xA7alo Cabrita and Pedro Sousa"
    deps:
    - roscpp
    - cereal_port
    - lse_sensor_msgs
    desc: This package contains a node for connecting to the LSE SensorNet, a sensor
      network for monitoring odor and wind environmental data during odor search experiments.
    license: BSD
    shortdesc: This package contains a node for connecting to the LSE SensorNet, a
      sensor network for monito...
    source: http://isr-uc-ros-pkg.googlecode.com/svn/trunk/unstable/lse_sensor_network/sensornet
    website: http://ros.org/wiki/sensornet
  virtual_nose:
    author: "Gon\xC3\xA7alo Cabrita"
    deps:
    - roscpp
    - lse_sensor_msgs
    - plumesim
    desc: Reads data from PlumeSim and publishes it as a lse_sensor_msgs/Nostril message.
    license: BSD
    shortdesc: virtual_nose
    source: http://isr-uc-ros-pkg.googlecode.com/svn/trunk/unstable/odor_tools/virtual_nose
    website: http://ros.org/wiki/virtual_nose
  wifi_comm:
    author: "Gon\xC3\xA7alo Cabrita and Pedro Sousa"
    deps:
    - roscpp
    - std_msgs
    - foreign_relay
    desc: Multi robot communication library and discovery node. Needs foreign_relay
      and olsrd to work.
    license: BSD
    shortdesc: 'Multi robot communication library and discovery node. Needs foreign_relay
      and olsrd to work.

      ...'
    source: http://isr-uc-ros-pkg.googlecode.com/svn/trunk/unstable/lse_communication/wifi_comm
    website: http://ros.org/wiki/wifi_comm
  windsonic:
    author: "Gon\xC3\xA7alo Cabrita"
    deps:
    - roscpp
    - cereal_port
    - lse_sensor_msgs
    desc: A ROS node to provide access to Gill Instruments Windsonic, an ultrasonic
      wind sensor.
    license: BSD
    shortdesc: A ROS node to provide access to Gill Instruments Windsonic, an ultrasonic
      wind sensor.
    source: http://isr-uc-ros-pkg.googlecode.com/svn/trunk/unstable/lse_anemometer_drivers/windsonic
    website: http://ros.org/wiki/windsonic
jrl-ros-pkg:
  abstract-robot-dynamics:
    author: !!python/unicode 'See package AUTHORS file.'
    deps:
    - jrl-mal
    desc: FIXME
    license: LGPL
    shortdesc: LAAS robot dynamics interface
    source: https://github.com/jrl-umi3218/jrl-ros-pkg.git
    website: http://ros.org/wiki/abstract-robot-dynamics
  dg-middleware:
    author: !!python/unicode 'See package AUTHORS file.'
    deps:
    - dynamic-graph
    - jrl-mal
    desc: FIXME
    license: LGPL
    shortdesc: Dynamic graph CORBA bindings
    source: https://github.com/jrl-umi3218/jrl-ros-pkg.git
    website: http://ros.org/wiki/dg-middleware
  dynamic-graph:
    author: !!python/unicode 'See package AUTHORS file.'
    deps: []
    desc: FIXME
    license: LGPL
    shortdesc: Dynamic graph
    source: https://github.com/jrl-umi3218/jrl-ros-pkg.git
    website: http://ros.org/wiki/dynamic-graph
  dynamic_graph_bridge:
    author: !!python/unicode 'Thomas Moulard'
    deps:
    - std_msgs
    - roscpp
    - jrl-mal
    - dynamic-graph
    desc: ROS bindings for dynamic graph.
    license: BSD
    shortdesc: Dynamic graph ROS bridge
    source: git://github.com/jrl-umi3218/dynamic_graph_bridge-ros-pkg.git
    website: http://ros.org/wiki/dynamic-graph-bridge
  hrp2-10:
    author: !!python/unicode 'See package AUTHORS file.'
    deps: []
    license: Closed source
    shortdesc: HRP-2 10 model information
    source: list.php
    website: https://github.com/jrl-umi3218/jrl-ros-pkg.git
  hrp2-10-optimized:
    author: !!python/unicode 'See package AUTHORS file.'
    deps:
    - jrl-mal
    - jrl-dynamics
    desc: FIXME
    license: Closed source
    shortdesc: HRP-2 10 optimized dynamics
    source: details.php?name=abstract-robot-dynamics
    website: https://github.com/jrl-umi3218/jrl-ros-pkg.git
  hrp2-14:
    author: !!python/unicode 'See package AUTHORS file.'
    deps: []
    license: Closed source
    shortdesc: HRP-2 14 model information
    source: list.php
    website: https://github.com/jrl-umi3218/jrl-ros-pkg.git
  hrp2-dynamics:
    author: !!python/unicode 'See package AUTHORS file.'
    deps:
    - jrl-mal
    - jrl-dynamics
    desc: FIXME
    license: Closed source
    shortdesc: HRP-2 optimized dynamics
    source: details.php?name=abstract-robot-dynamics
    website: https://github.com/jrl-umi3218/jrl-ros-pkg.git
  jrl-dynamics:
    author: !!python/unicode 'See package AUTHORS file.'
    deps:
    - abstract-robot-dynamics
    - jrl-mal
    desc: FIXME
    license: LGPL
    shortdesc: JRL robot dynamics implementation
    source: https://github.com/jrl-umi3218/jrl-ros-pkg.git
    website: http://ros.org/wiki/jrl-dynamics
  jrl-mal:
    author: !!python/unicode 'See package AUTHORS file.'
    deps:
    - jrl-mathtools
    desc: FIXME
    license: LGPL
    shortdesc: JRL matrix abstraction layer
    source: https://github.com/jrl-umi3218/jrl-ros-pkg.git
    website: http://ros.org/wiki/jrl-mal
  jrl-mathtools:
    author: !!python/unicode 'See package AUTHORS file.'
    deps: []
    desc: FIXME
    license: LGPL
    shortdesc: JRL mathematical tools
    source: https://github.com/jrl-umi3218/jrl-ros-pkg.git
    website: http://ros.org/wiki/jrl-mathtools
  jrl-walkgen:
    author: !!python/unicode 'See package AUTHORS file.'
    deps:
    - abstract-robot-dynamics
    - jrl-dynamics
    - hrp2-dynamics
    desc: FIXME
    license: LGPL
    shortdesc: JRL humanoid robot pattern generator
    source: https://github.com/jrl-umi3218/jrl-ros-pkg.git
    website: http://ros.org/wiki/jrl-walkgen
  robot-viewer:
    author: !!python/unicode 'See package AUTHORS file.'
    deps:
    - dg-middleware
    desc: FIXME
    license: LGPL
    shortdesc: Simple Python viewer for dynamic-graph.
    source: https://github.com/jrl-umi3218/jrl-ros-pkg.git
    website: http://ros.org/wiki/robot-viewer
  sot-core:
    author: !!python/unicode 'See package AUTHORS file.'
    deps:
    - dynamic-graph
    - jrl-mal
    desc: FIXME
    license: LGPL
    shortdesc: Dynamics computation bindings for dynamic-graph
    source: https://github.com/jrl-umi3218/jrl-ros-pkg.git
    website: http://ros.org/wiki/sot-dynamic
  sot-dynamic:
    author: !!python/unicode 'See package AUTHORS file.'
    deps:
    - jrl-mal
    - hrp2-dynamics
    - hrp2-10-optimized
    - hrp2-10
    - dynamic-graph
    - sot-core
    desc: FIXME
    license: LGPL
    shortdesc: Dynamics bindings for dynamic-graph.
    source: https://github.com/jrl-umi3218/jrl-ros-pkg.git
    website: http://ros.org/wiki/sot-dynamic
  sot-gui:
    author: !!python/unicode 'See package AUTHORS file.'
    deps:
    - dg-middleware
    desc: FIXME
    license: LGPL
    shortdesc: dynamic graph GUI
    source: https://github.com/jrl-umi3218/jrl-ros-pkg.git
    website: http://ros.org/wiki/sot-gui
  sot-openhrp:
    author: !!python/unicode 'See package AUTHORS file.'
    deps:
    - jrl-walkgen
    - jrl-mal
    - sot-core
    - hrp2-10
    desc: FIXME
    license: LGPL
    shortdesc: dynamic graph OpenHRP plug-in.
    source: https://github.com/jrl-umi3218/jrl-ros-pkg.git
    website: http://ros.org/wiki/sot-openhrp
  sot-openhrp-scripts:
    author: !!python/unicode 'See package AUTHORS file.'
    deps:
    - sot-openhrp
    - sot-dynamic
    - sot-pattern-generator
    - dynamic-graph
    - dg-middleware
    - hrp2-10
    - hrp2-14
    desc: FIXME
    license: LGPL
    shortdesc: Dynamic graph initialization scripts.
    source: https://github.com/jrl-umi3218/jrl-ros-pkg.git
    website: http://ros.org/wiki/sot-openhrp-scripts
  sot-pattern-generator:
    author: !!python/unicode 'See package AUTHORS file.'
    deps:
    - jrl-walkgen
    - jrl-dynamics
    - sot-core
    - hrp2-dynamics
    - hrp2-10-optimized
    - hrp2-10
    desc: FIXME
    license: LGPL
    shortdesc: Pattern generator bindings for dynamic-graph.
    source: https://github.com/jrl-umi3218/jrl-ros-pkg.git
    website: http://ros.org/wiki/sot-pattern-generator
jsk-ros-pkg:
  2010_05_pr2_workshop:
    author: !!python/unicode 'Ryohei Ueda (ueda@jsk.t.u-tokyo.ac.jp)'
    deps:
    - setup_midbody_controller
    desc: pr2 workshop for pr2 beta program
    license: Apache License 2.0
    shortdesc: pr2 workshop for pr2 beta program
    source: details.php?name=pr2_controllers_msgs
    website: https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg/trunk/demos/2010_05_pr2_workshop
  aques_talk:
    author: !!python/unicode 'AQUEST Corp, ROS package maintained by Kei Okada'
    deps:
    - sound_play_jsk_patch
    desc: "aques_talk\n     r829 for old version"
    license: BSD
    shortdesc: aques_talk
    source: https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg/trunk/3rdparty/aques_talk
    website: http://ros.org/wiki/aques_talk
  collada_robots:
    author: !!python/unicode 'package maintainance: Rosen Diankov'
    deps: []
    desc: "COLLADA 1.5 Robot Models Repository\n\n    This repository is associated\
      \ with the Open Robotics Automation Virtual Environment (OpenRAVE). The open\
      \ and view them, install OpenRAVE and execute:\n    \n    openrave XXX.zae\n\
      \    \n    The robots are augmented with information as described by the &quot;OpenRAVE&quot;\
      \ profile here:\n    http://openrave.programmingvision.com/index.php/Started:COLLADA\n\
      \    \n    *.zae files are zip archives which contain the raw collada 1.5 xml\
      \ (dae)."
    license: ''
    shortdesc: COLLADA Robot Repository
    source: https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg/trunk/openrave_planning/collada_robots
    website: http://www.openrave.org/robots
  collada_urdf_jsk_patch:
    author: !!python/unicode 'Kei Okada'
    deps:
    - collada_urdf
    desc: unaccepted patch for collada_urdf
    license: BSD
    shortdesc: collada_urdf_jsk_patch
    source: https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg/trunk/jsk_ros_patch/collada_urdf_jsk_patch
    website: http://ros.org/wiki/collada_urdf_jsk_patch
  costmap_2d_jsk_patch:
    author: !!python/unicode 'saito'
    deps: []
    desc: costmap_2d_jsk_patch
    license: BSD
    shortdesc: costmap_2d_jsk_patch
    source: https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg/trunk/jsk_ros_patch/costmap_2d_jsk_patch
    website: http://ros.org/wiki/costmap_2d_jsk_patch
  cr_calibration:
    author: !!python/unicode 'youhei kakiuchi, JSK'
    deps:
    - rospy
    - sensor_msgs
    - geometry_msgs
    - message_filters
    - cv_bridge
    - opencv2
    - tf
    - tf_conversions
    - kdl
    - stereo_synchronizer
    desc: cr_calibration
    license: BSD
    shortdesc: cr_calibration
    source: https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg/trunk/cr_calibration
    website: http://ros.org/wiki/cr_calibration
  cr_capture:
    author: !!python/unicode 'youhei kakiuchi, JSK'
    deps:
    - roscpp
    - message_filters
    - opencv2
    - cv_bridge
    - sensor_msgs
    - geometry_msgs
    - image_transport
    - tf
    - dynamic_reconfigure
    - driver_base
    desc: cr_capture
    license: BSD
    shortdesc: cr_capture
    source: https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg/trunk/cr_capture
    website: http://ros.org/wiki/cr_capture
  crlibm:
    author: !!python/unicode 'Jean Michel Muller, Florent de Dinechin, Christoph Lauter,
      ROS package maintained by Rosen Diankov'
    deps: []
    desc: "CRlibm, an efficient and proven correctly-rounded mathematical library\
      \ (similar to libm) which provides:\n\n    * implementations of the double-precision\
      \ C99 standard elementary functions,\n\n    * correctly rounded in the four\
      \ IEEE-754 rounding modes,\n\n    * with a comprehensive proof of both the algorithms\
      \ used and their implementation,\n\n    * sufficiently efficient in average\
      \ time, worst-case time, and memory consumption to replace existing libms transparently"
    license: LGPL
    shortdesc: Correctly Rounded Mathematical Library v1.0beta4
    source: https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg/trunk/3rdparty/crlibm
    website: http://lipforge.ens-lyon.fr/www/crlibm/
  dynamic_tf_publisher:
    author: !!python/unicode 'Manabu Saito'
    deps:
    - tf
    - geometry_msgs
    desc: dynamic_tf_publisher
    license: BSD
    shortdesc: dynamic_tf_publisher
    source: https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg/trunk/jsk_coordination_system/dynamic_tf_publisher
    website: http://ros.org/wiki/dynamic_tf_publisher
  elevator_move_base_pr2:
    author: !!python/unicode 'saito'
    deps:
    - roseus
    - rospy
    - roscpp
    - pr2eus
    - roseus_smach
    - jsk_maps
    - move_base_jsk_patch
    - costmap_2d_jsk_patch
    - jsk_perception
    - move_base_msgs
    - sound_play
    - std_srvs
    - nav_msgs
    - image_geometry
    - image_transport
    - roseus_smach
    - opencv2
    - cv_bridge
    - virtual_camera
    desc: elevator_move_base_pr2
    license: BSD
    shortdesc: elevator_move_base_pr2
    source: https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg/trunk/elevator_move_base_pr2
    website: http://ros.org/wiki/elevator_move_base_pr2
  euscollada:
    author: !!python/unicode 'Kei Okada'
    deps:
    - colladadom
    - yaml_cpp
    - collada_urdf_jsk_patch
    - euslisp
    - roseus
    desc: uescollada
    license: BSD
    shortdesc: collada_eus
    source: https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg/trunk/euscollada
    website: http://ros.org/wiki/euscollada
  euslisp:
    author: !!python/unicode 'Toshihiro Matsui and JSK, ROS maintained by Kei Okada'
    deps: []
    desc: euslisp and irteus
    license: BSD
    shortdesc: euslisp and irteus
    source: https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg/trunk/euslisp
    website: http://ros.org/wiki/euslisp
  ff:
    author: !!python/unicode 'J.Hoffmann()'
    deps: []
    license: GPL
    shortdesc: 'ff: pddl planner'
    source: list.php
    website: https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg/trunk/3rdparty/ff
  ffha:
    author: !!python/unicode 'Emil Keyder, Hector Geffner'
    deps: []
    license: GPL
    shortdesc: 'ffha: pddl planner'
    source: list.php
    website: https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg/trunk/3rdparty/ffha
  image_view2:
    author: !!python/unicode 'Kei Okada'
    deps:
    - roscpp
    - opencv2
    - cv_bridge
    - std_msgs
    - sensor_msgs
    - geometry_msgs
    - image_transport
    - tf
    - image_geometry
    desc: A simple viewer for ROS image topics with draw-on features
    license: BSD
    shortdesc: A simple viewer for ROS image topics with draw-on features
    source: https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg/trunk/jsk_ros_patch/image_view2
    website: http://ros.org/wiki/image_view2
  jsk-rosemacs:
    author: !!python/unicode 'Ryohei Ueda(ueda@jsk.t.u-tokyo.ac.jp)'
    deps: []
    license: BSD
    shortdesc: a collection of emacs utility packages for ros.
    source: list.php
    website: https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg/trunk/jsk_ros_tools/jsk-rosemacs
  jsk_maps:
    author: !!python/unicode 'Manabu Saito, Haseru Chen'
    deps:
    - euslisp
    desc: jsk_maps
    license: BSD
    shortdesc: jsk_maps
    source: https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg/trunk/jsk_maps
    website: http://ros.org/wiki/jsk_maps
  jsk_perception:
    author: !!python/unicode 'Manabu Saito'
    deps:
    - rospy
    - roseus
    - imagesift
    - posedetectiondb
    - sensor_msgs
    - face_detector_mono
    - geometry_msgs
    - opencv2
    - cv_bridge
    - image_geometry
    - image_transport
    - driver_base
    - dynamic_reconfigure
    desc: jsk_perception
    license: BSD
    shortdesc: jsk_perception
    source: https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg/trunk/jsk_perception
    website: http://ros.org/wiki/jsk_perception
  jsk_pr2_accessories:
    author: !!python/unicode 'Haseru Chen, Masahiko Osada'
    deps: []
    desc: jsk_pr2_accessories
    license: BSD
    shortdesc: jsk_pr2_accessories
    source: https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg/trunk/jsk_pr2_accessories
    website: http://ros.org/wiki/jsk_pr2_accessories
  jtalk:
    author: !!python/unicode "Nagoya Institute of Technology, Department of Computer\n\
      \  Science. ROS package maintained by Kei Okada"
    deps:
    - sound_play
    desc: jtalk
    license: BSD
    shortdesc: jtalk
    source: https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg/trunk/3rdparty/jtalk
    website: http://ros.org/wiki/jtalk
  move_base_jsk_patch:
    author: !!python/unicode 'Manabu Saito'
    deps: []
    desc: move_base_jsk_patch
    license: BSD
    shortdesc: move_base_jsk_patch
    source: https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg/trunk/jsk_ros_patch/move_base_jsk_patch
    website: http://ros.org/wiki/move_base_jsk_patch
  openrave:
    author: !!python/unicode 'Rosen Diankov (rosen.diankov@gmail.com)'
    deps:
    - soqt
    - opende
    - bullet
    - std_msgs
    - collada_robots
    - assimp
    desc: For successful compilation, remove Qt3 development tools (qt3-dev-tools,libqt3-headers)
      to prevent conflict with Qt4.
    license: Lesser GPL and Apache License, Version 2.0
    shortdesc: Open Robotics Automation Virtual Environment
    source: https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg/trunk/openrave_planning/openrave
    website: http://openrave.programmingvision.com
  openrave_actionlib:
    author: !!python/unicode 'rdiankov'
    deps:
    - actionlib
    - sensor_msgs
    - pr2_controllers_msgs
    - openrave
    - rosparam
    - rospy
    desc: Bindings between openrave's controller interface and ROS's action lib interface
      for controlling robots.
    license: Apache License, Version 2.0
    shortdesc: openrave_actionlib
    source: https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg/trunk/openrave_planning/openrave_actionlib
    website: http://ros.org/wiki/openrave_actionlib
  openrave_calibration:
    author: !!python/unicode 'Rosen Diankov (rosen.diankov@gmail.com)'
    deps:
    - rospy
    - openrave
    - tf
    - sensor_msgs
    - resource_retriever
    - posedetection_msgs
    - roslaunch
    desc: Package uses openrave planning and the robot_calibration stacks to calibrate
      a robot's sensors. The calibration only depends on the openrave/collada descriptions,
      therefore it is meant to be a relatively simple way of calibrating new robots
      with one-click.
    license: Apache License, Version 2.0
    shortdesc: Sensor calibration routines using OpenRAVE's planning features
    source: https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg/trunk/openrave_planning/openrave_calibration
    website: http://openrave.programmingvision.com/index.php/ROS:openrave_calibration
  openrave_database:
    author: !!python/unicode 'Rosen Diankov (rosen.diankov@gmail.com)'
    deps:
    - openrave
    - rospy
    - roslaunch
    desc: Uses ROS to parallelize the database generation processes inside OpenRAVE.
    license: Apache License, Version 2.0
    shortdesc: OpenRAVE Robot/Object Database Generation
    source: https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg/trunk/openrave_planning/openrave_database
    website: http://openrave.programmingvision.com
  openrave_robot_control:
    author: !!python/unicode 'Rosen Diankov (rosen.diankov@gmail.com)'
    deps:
    - roscpp_sessions
    - openrave
    - std_msgs
    - sensor_msgs
    - tf
    desc: "Contains messages, services, and OpenRAVE clients to interface to robot\
      \ hardware.\n\n    - librobot_control - openrave plugin for ros client to talk\
      \ to robot services\n    - openravecontroller.h - base class for robot server\
      \ using services\n    - tfsender - given joint positions of the robot, sends\
      \ the correct tf frames\n\n    For more information on how to use this inside\
      \ the openrave framework, see:\n    http://openrave.programmingvision.com/index.php/ROS:ControllingRobots"
    license: Apache License, Version 2.0
    shortdesc: A Robot Control Interface for OpenRAVE
    source: https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg/trunk/openrave_planning/openrave_robot_control
    website: http://openrave.programmingvision.com/index.php/ROS:ControllingRobots
  openrave_robot_filter:
    author: !!python/unicode 'Rosen Diankov (rdiankov@cs.cmu.edu)'
    deps:
    - roscpp
    - tf
    - filters
    - sensor_msgs
    - resource_retriever
    - openrave
    desc: Utilities for filtering the robot out of sensor data
    license: BSD
    shortdesc: Robot Self Filtering
    source: https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg/trunk/openrave_planning/openrave_robot_filter
    website: http://pr.willowgarage.com/wiki/robot_self_filter
  openrave_sensors:
    author: !!python/unicode 'Rosen Diankov (rosen.diankov@gmail.com)'
    deps:
    - openrave
    - geometry_msgs
    - sensor_msgs
    - nav_msgs
    desc: Contains openrave plugins that connect send and recieve ROS messages allowing
      OpenRAVE to communicate with the ROS world better.
    license: Apache License, Version 2.0
    shortdesc: Connects ROS sensor messages to OpenRAVE
    source: details.php?name=roscpp
    website: https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg/trunk/openrave_planning/openrave_sensors
  openraveros:
    author: !!python/unicode 'Rosen Diankov (rdiankov@cs.cmu.edu)'
    deps:
    - roscpp
    - roscpp_sessions
    - openrave
    - std_msgs
    - sensor_msgs
    desc: Main openrave server that provides a session interface.
    license: BSD
    shortdesc: OpenRAVE Session for ROS
    source: https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg/trunk/openrave_planning/openraveros
    website: http://pr.willowgarage.com/wiki/openrave
  opt_camera:
    author: !!python/unicode 'Kei Okada'
    deps:
    - sensor_msgs
    - driver_base
    - image_proc
    - stereo_synchronizer
    - dynamic_reconfigure
    - camera_calibration_parsers
    - compressed_image_transport
    desc: opt_camera
    license: BSD
    shortdesc: opt_camera
    source: https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg/trunk/opt_camera
    website: http://ros.org/wiki/opt_camera
  orrosplanning:
    author: !!python/unicode 'Rosen Diankov (rosen.diankov@gmail.com)'
    deps:
    - openrave
    - posedetection_msgs
    - tf
    - mapping_msgs
    - geometry_msgs
    - sensor_msgs
    - motion_planning_msgs
    - object_manipulation_msgs
    - trajectory_msgs
    - kinematics_msgs
    - actionlib
    - move_base_msgs
    - std_msgs
    desc: Contains robot ik solvers, planners, and commonly used functions that integrate
      with the ROS framework.
    license: BSD
    shortdesc: OpenRAVE Plugin for ROS Planning
    source: details.php?name=roscpp
    website: https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg/trunk/openrave_planning/orrosplanning
  pddl_msgs:
    author: !!python/unicode 'Ryohei Ueda (ueda@jsk.t.u-tokyo.ac.jp)'
    deps:
    - actionlib_msgs
    desc: message for pddl planner
    license: Apache License 2.0
    shortdesc: message for pddl planner
    source: details.php?name=actionlib
    website: https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg/trunk/pddl/pddl_msgs
  pddl_planner:
    author: !!python/unicode 'Ryohei Ueda (ueda@jsk.t.u-tokyo.ac.jp)'
    deps:
    - ff
    - ffha
    - rospy
    - actionlib
    desc: pddl planner
    license: Apache License 2.0
    shortdesc: pddl planner
    source: details.php?name=pddl_msgs
    website: https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg/trunk/pddl/pddl_planner
  pddl_planner_viewer:
    author: !!python/unicode 'Ryohei Ueda (ueda@jsk.t.u-tokyo.ac.jp)'
    deps: []
    desc: a viewer of pddl_planner.
    license: Apache License 2.0
    shortdesc: a viewer of pddl_planner
    source: details.php?name=pddl_msgs
    website: https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg/trunk/pddl/pddl_planner_viewer
  pr2_teleop_general_jsk_patch:
    author: !!python/unicode 'Manabu Saito'
    deps: []
    desc: pr2_teleop_general_jsk_patch
    license: BSD
    shortdesc: pr2_teleop_general_jsk_patch
    source: https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg/trunk/jsk_ros_patch/pr2_teleop_general_jsk_patch
    website: http://ros.org/wiki/pr2_teleop_general_jsk_patch
  pr2eus:
    author: !!python/unicode 'Kei Okada'
    deps:
    - roseus
    - euscollada
    - pr2_controllers_msgs
    - move_base_msgs
    - nav_msgs
    desc: pr2eus
    license: BSD
    shortdesc: pr2eus
    source: https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg/trunk/pr2eus
    website: http://ros.org/wiki/pr2eus
  roscpp_sessions:
    author: !!python/unicode 'Rosen Diankov (rdiankov@cs.cmu.edu)'
    deps:
    - roscpp
    desc: Sessions offer execution synchronization between a persistent set of services.
      Each session maintains a state on the server side which is independent of the
      connection. This allows multiple clients to have the option of maintaining an
      independent workspace on the server side, or potentially to share the same workspace.
    license: BSD
    shortdesc: A small library for ROS sessions
    source: https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg/trunk/openrave_planning/roscpp_sessions
    website: http://pr.willowgarage.com/wiki/roscpp_sessions
  roseus:
    author: !!python/unicode 'Kei Okada (k-okada@jsk.t.u-tokyo.ac.jp)'
    deps:
    - roslang
    - roscpp
    - rospack
    - euslisp
    - actionlib
    - actionlib_msgs
    - visualization_msgs
    - bullet
    - tf
    - geometry_msgs
    - std_msgs
    - sensor_msgs
    - visualization_msgs
    desc: EusLisp implementation for Robot Operating System.
    license: BSD
    shortdesc: An EusLisp implementation of ROS using roscpp
    source: https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg/trunk/roseus
    website: http://pr.willowgarage.com/wiki/roseus
  roseus_smach:
    author: !!python/unicode 'Manabu Saito'
    deps:
    - euslisp
    - roseus
    - smach_viewer
    - smach_msgs
    desc: "roseus_smach\n\n     * Euslisp state machine class. it will be moved.\n\
      \     * Message publisher for visualizing current state by smach_viewer.\n \
      \    * Simple pickle dump script for debugging state machine.\n     * Execute\
      \ state machine as a action server."
    license: BSD
    shortdesc: roseus_roseus
    source: https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg/trunk/roseus_smach
    website: http://ros.org/wiki/roseus_smach
  roseus_tutorials:
    author: !!python/unicode 'Kei Okada, Tsukasa Ito, Manabu Saito'
    deps:
    - roseus
    - uvc_camera
    - saliency_tracking
    - cmvision
    - checkerboard_pose
    - face_detector_mono
    - aques_talk
    - checkerboard_detector
    - image_proc
    - image_view2
    - jsk_perception
    - visualization_msgs
    desc: roseus_tutorials
    license: BSD
    shortdesc: roseus_tutorials
    source: https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg/trunk/roseus_tutorials
    website: http://ros.org/wiki/roseus_tutorials
  rostool-alias-generator:
    author: !!python/unicode 'Ryohei Ueda(ueda@jsk.t.u-tokyo.ac.jp)'
    deps: []
    license: Apache License 2.0
    shortdesc: a simple script to generate alias command
    source: list.php
    website: https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg/trunk/jsk_ros_tools/rostool-alias-generator
  session_tutorials:
    author: !!python/unicode 'Rosen Diankov / rdiankov at cs.cmu.edu'
    deps:
    - roscpp
    - roscpp_sessions
    desc: session_tutorials
    license: BSD
    shortdesc: session_tutorials
    source: https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg/trunk/openrave_planning/session_tutorials
    website: http://pr.willowgarage.com/wiki/session_tutorials
  soqt:
    author: !!python/unicode 'See web page for a full credits llist.'
    deps: []
    desc: This package contains a Coin3D/Qt GUI interface.
    license: GPL
    shortdesc: This package contains a Coin3D/Qt GUI interface.
    source: https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg/trunk/openrave_planning/soqt
    website: http://www.coin3d.org/
  sound_play_jsk_patch:
    author: !!python/unicode 'Kei Okada'
    deps:
    - sound_play
    desc: sound_play_jsk_patch
    license: BSD
    shortdesc: sound_play_jsk_patch
    source: https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg/trunk/jsk_ros_patch/sound_play_jsk_patch
    website: http://ros.org/wiki/sound_play_jsk_patch
  stereo_synchronizer:
    author: !!python/unicode 'yohei kakiuchi, JSK'
    deps:
    - sensor_msgs
    - image_transport
    desc: stereo_synchronizer
    license: BSD
    shortdesc: stereo_synchronizer
    source: https://jsk-ros-pkg.svn.sourceforge.net/svnroot/jsk-ros-pkg/trunk/stereo_synchronizer
    website: http://ros.org/wiki/stereo_synchronizer
kinect:
  freenect:
    author: !!python/unicode 'Ivan Dryanovski'
    deps: []
    desc: Downloads, patches and compiles a libfreenect fork (originally written by
      Hector Martin).
    license: Apache 2.0
    shortdesc: Downloads, patches and compiles a libfreenect fork (originally written
      by Hector Martin).
    source: https://github.com/ros-pkg-git/kinect.git
    website: http://ros.org/wiki/freenect
  kinect_aux:
    author: "Ivan Dryanovski, William Morris, St\xC3\xA9phane Magnenat, Radu Bogdan\
      \ Rusu, Patrick Mihelich and the authors of libfreenect (see https://github.com/OpenKinect/libfreenect)"
    deps:
    - roscpp
    - std_msgs
    - sensor_msgs
    desc: A driver for the kinect accelerometers and tilt motor, to be used in conjunction
      with the NI driver.
    license: BSD
    shortdesc: kinect_aux
    source: https://github.com/ros-pkg-git/kinect.git
    website: http://ros.org/wiki/kinect_aux
  kinect_calibration:
    author: !!python/unicode 'Kurt Konolige, Patrick Mihelich'
    deps:
    - rospack
    - freenect
    - opencv2
    - eigen
    desc: "Utilities for calibrating the Microsoft Kinect sensor. After calibration,\n\
      \     the kinect_camera driver can produce point clouds with the depth and RGB\n\
      \     readings accurately registered to each other."
    license: BSD
    shortdesc: kinect_calibration
    source: https://github.com/ros-pkg-git/kinect.git
    website: http://ros.org/wiki/kinect_calibration
  kinect_camera:
    author: "Ivan Dryanovski, William Morris, St\xC3\xA9phane Magnenat, Radu Bogdan\
      \ Rusu, Patrick Mihelich"
    deps:
    - roscpp
    - nodelet
    - camera_info_manager
    - image_transport
    - image_geometry
    - sensor_msgs
    - freenect
    - dynamic_reconfigure
    - eigen
    - cv_bridge
    desc: "A general purpose ROS driver for the Microsoft XBOX 360 Kinect sensor.\
      \ The driver publishes:\n    <ul>\n      <li> RGB/IR image data</li>\n     \
      \ <li> depth data as PointCloud and PointCloud2</li>\n      <li> ... </li>\n\
      \    </ul>\n    \n    There are two versions of the driver: a standard ROS node,\
      \ and a nodelet."
    license: BSD
    shortdesc: A Microsoft Kinect camera ROS driver
    source: https://github.com/ros-pkg-git/kinect.git
    website: http://ros.org/wiki/kinect_camera
  kinect_pcl:
    author: !!python/unicode 'Radu Bogdan Rusu'
    deps:
    - pcl_ros
    - kinect_camera
    desc: "* A specific ROS PCL driver (node + nodelet) for the Microsoft XBOX 360\
      \ Kinect sensor, publishing depth data as pcl::PointCloud.\n\n    * PCL example\
      \ nodelet launch files for filtering, feature estimation, segmentation, etc..."
    license: BSD
    shortdesc: PCL (Point Cloud Library) interface to the Kinect sensor
    source: https://github.com/ros-pkg-git/kinect.git
    website: http://ros.org/wiki/kinect_pcl
knowrob:
  comp_cop:
    author: !!python/unicode 'Moritz Tenorth'
    deps:
    - rosjava
    - vision_srvs
    - ias_knowledge_base
    - jpl
    desc: "Interface between KnowRob and the CoP cognitive perception system\n   \
      \  that allows to query for objects to perceive and listens on the\n     cop_answers\
      \ topic for results, also for results of object perception\n     triggered by\
      \ someone else.\n\n     The results are asserted in the knowledge base and made\
      \ available for reasoning."
    license: GPL
    shortdesc: "Interface between KnowRob and the CoP cognitive perception system\n\
      \     that allows to query..."
    source: http://code.in.tum.de/pubsvn/knowrob/tags/latest/comp_cop
    website: http://ros.org/wiki/comp_cop
  comp_germandeli:
    author: !!python/unicode 'Moritz Tenorth'
    deps:
    - rosjava
    - ias_knowledge_base
    - comp_cop
    - jpl
    desc: "Interface between KnowRob and the ODUfinder perception system\n     for\
      \ recognizing objects from the GermanDeli online shop. The\n     package further\
      \ provides information about these objects in\n     form of an OWL ontology\
      \ and utilities for generating the OWL\n     representation given the XML log\
      \ file created by the GermanDeli\n     crawler."
    license: GPL
    shortdesc: comp_germandeli
    source: http://code.in.tum.de/pubsvn/knowrob/tags/latest/comp_germandeli
    website: http://www.ros.org/wiki/comp_germandeli
  comp_spatial:
    author: !!python/unicode 'Moritz Tenorth, Lars Kunze'
    deps:
    - ias_knowledge_base
    - comp_temporal
    desc: "Routines for spatial reasoning in Prolog.\n\n     Contains Prolog computables\
      \ for calculating qualitative spatial relations,\n     but also those for extracting\
      \ certain elements from the string representation\n     of a matrix."
    license: GPL
    shortdesc: comp_spatial
    source: http://code.in.tum.de/pubsvn/knowrob/tags/latest/comp_spatial
    website: http://ros.org/wiki/comp_spatial
  comp_temporal:
    author: !!python/unicode 'Moritz Tenorth'
    deps:
    - ias_knowledge_base
    desc: "Temporal reasoning methods for the knowledge base.\n\n     Time points\
      \ and intervals are supported, and the system can\n     calculate if one interval\
      \ subsumes another one, happens before\n     or after another, and how long\
      \ it takes."
    license: GPL
    shortdesc: comp_temporal
    source: http://code.in.tum.de/pubsvn/knowrob/tags/latest/comp_temporal
    website: http://ros.org/wiki/comp_temporal
  ias_knowledge_base:
    author: !!python/unicode 'Moritz Tenorth, Lars Kunze'
    deps:
    - thea
    - semweb
    - ias_prolog_addons
    desc: The KnowRob ontology and some other required OWL files (e.g. owl.owl defining
      the OWL language, and rdf-schema.xml defining the RDFS concepts).
    license: GPL
    shortdesc: ias_knowledge_base
    source: http://code.in.tum.de/pubsvn/knowrob/tags/latest/ias_knowledge_base
    website: http://www.ros.org/wiki/ias_knowledge_base
  ias_prolog_addons:
    author: !!python/unicode 'Bernhard Kirchlechner, Moritz Tenorth, Jakob Engel'
    deps:
    - jpl
    - rosjava
    - rosprolog
    desc: "Some utilities for Prolog:\n      * Interface to the Weka and Mallet machine\
      \ learning libraries, whose algorithms can be applied to instances in KnowRob\
      \ (in classifiers.pl)\n      * jython-interface for Prolog (in jython.pl, deprecated\
      \ for internal use)\n      * Several small utility scripts (in util.pl)\n  \
      \    * Methods for computing different semantic similarity values (comp_similarity.pl)"
    license: GPL
    shortdesc: ias_prolog_addons
    source: http://code.in.tum.de/pubsvn/knowrob/tags/latest/ias_prolog_addons
    website: http://www.ros.org/wiki/ias_prolog_addons
  ias_semantic_map:
    author: !!python/unicode 'Lars Kunze, Lorenz Moesenlechner, Moritz Tenorth'
    deps:
    - comp_spatial
    desc: "Semantic maps of different kitchens of the IAS group at TUM, created from\
      \ 3D laser scans,\n    represented as OWL file, plus additional predicates for\
      \ manipulating the map and reasoning on it."
    license: GPL
    shortdesc: ias_semantic_map
    source: http://code.in.tum.de/pubsvn/knowrob/tags/latest/ias_semantic_map
    website: http://www.ros.org/wiki/ias_semantic_map
  jpl:
    author: !!python/unicode 'Lorenz Moesenlechner'
    deps: []
    license: BSD
    shortdesc: JPL. A Java/Prolog bridge
    source: list.php
    website: http://code.in.tum.de/pubsvn/knowrob/tags/latest/3rdparty/jpl
  json_prolog:
    author: !!python/unicode 'Lorenz Moesenlechner, Moritz Tenorth'
    deps:
    - rosjava
    - rosprolog
    - jpl
    - rospy
    desc: "json_prolog provides an interface to SWI prolog through ROS\n    services.\
      \ It is implemented in Java by using rosjava and JPL."
    license: BSD
    shortdesc: json_prolog
    source: http://code.in.tum.de/pubsvn/knowrob/tags/latest/json_prolog
    website: http://ros.org/wiki/json_prolog
  mod_probcog:
    author: !!python/unicode 'Daniel Nyga, Moritz Tenorth'
    deps:
    - ias_knowledge_base
    - srldb
    - comp_temporal
    - comp_spatial
    - mod_vis
    desc: Integration of KnowRob with the ProbCog library providing statistical relational
      learning and reasoning methods.
    license: GPL
    shortdesc: mod_probcog
    source: http://code.in.tum.de/pubsvn/knowrob/tags/latest/mod_probcog
    website: http://ros.org/wiki/mod_probcog
  mod_srdl:
    author: !!python/unicode 'Tobias Roehm'
    deps:
    - ias_knowledge_base
    - urdf
    desc: "Implementation of the Semantic Robot Description Language (SRDL) that\n\
      \    provides model and reasoning tools to match prerequisites of actions\n\
      \    to the capabilities of a robot."
    license: GPL
    shortdesc: "Implementation of the Semantic Robot Description Language (SRDL) that\n\
      \    provides model and re..."
    source: http://code.in.tum.de/pubsvn/knowrob/tags/latest/mod_srdl
    website: http://ros.org/wiki/mod_srdl
  mod_vis:
    author: !!python/unicode 'Moritz Tenorth, Jakob Engel'
    deps:
    - ias_knowledge_base
    - jpl
    - rosjava
    desc: "Visualization module for the Prolog knowledge base.\n\n     Instances in\
      \ the knowledge base can be pushed to the visualization\n     canvas, are then\
      \ drawn and can be further inspected.\n\n     Currently supported: Action sequences,\
      \ linked to the resp. human pose\n     sequence, as well as most objects that\
      \ are relevant in the IAS kitchen."
    license: GPL
    shortdesc: "Visualization module for the Prolog knowledge base.\n\n     Instances\
      \ in the knowledge base can..."
    source: http://code.in.tum.de/pubsvn/knowrob/tags/latest/mod_vis
    website: http://ros.org/wiki/mod_vis
  rosprolog:
    author: !!python/unicode 'Lorenz Moesenlechner'
    deps:
    - rosbuild
    desc: "Script to execute prolog and set the prolog library paths\n    to other\
      \ ros prolog packages."
    license: BSD
    shortdesc: "Script to execute prolog and set the prolog library paths\n    to\
      \ other ros prolog packages."
    source: http://code.in.tum.de/pubsvn/knowrob/tags/latest/rosprolog
    website: http://www.ros.org/wiki/rosprolog
  semweb:
    author: !!python/unicode 'Bernhard Kirchlechner, Moritz Tenorth'
    deps:
    - rosprolog
    - jpl
    desc: Patched version of the swi-prolog semweb library.
    license: GPL
    shortdesc: Patched version of the swi-prolog semweb library.
    source: http://code.in.tum.de/pubsvn/knowrob/tags/latest/semweb
    website: http://ros.org/wiki/semweb
  srldb:
    author: !!python/unicode 'Dominik Jain, Stefan Waldherr, Moritz Tenorth'
    deps:
    - rosjava
    desc: Statistical relational learning package developed in the IAS group at TUM.
    license: BSD
    shortdesc: Statistical relational learning package developed in the IAS group
      at TUM.
    source: http://code.in.tum.de/pubsvn/knowrob/tags/latest/srldb
    website: http://ros.org/wiki/srldb
  thea:
    author: !!python/unicode 'Vangelis Vassiliadis'
    deps: []
    desc: "Owl parser and reasoner library for swi-prolog.\n\n      Taken from: http://www.semanticweb.gr/TheaOWLLib/"
    license: GPL
    shortdesc: "Owl parser and reasoner library for swi-prolog.\n\n      Taken from:\
      \ http://www.semanticweb.gr/..."
    source: http://code.in.tum.de/pubsvn/knowrob/tags/latest/thea
    website: http://ros.org/wiki/thea
kul-ros-pkg:
  MTTDMeasurementSimulator:
    author: !!python/unicode 'Tinne De Laet'
    deps:
    - rtt_1.10
    - ocl_1.10
    - bfl_dataAssociationBranch
    desc: "MTTDMeasurementSimulator\n\n    This is a class to simulate laser scanner\
      \ measurements for multiple circular\ntargets moving with a constant n'th order\
      \ derivative model (cte position, cte\nvelocity, ...)."
    license: LGPL
    shortdesc: MTTDMeasurementSimulator
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/stacks/twoLevelMTTD_stack/MTTDMeasurementSimulator
    website: http://ros.org/wiki/MTTDMeasurementSimulator
  MTTD_background_subtraction:
    author: !!python/unicode 'Enea Scioni enea.scioni@student.unife.it'
    deps:
    - roscpp
    - nav_msgs
    - sensor_msgs
    - map_server
    - laser_geometry
    desc: "This package is used in MTTD_interface for preprocessing laser measurements.\n\
      \     It extracts non-environment measurements."
    license: LGPL
    shortdesc: MTTD_background_subtraction
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/stacks/twoLevelMTTD_stack/MTTD_background_subtraction
    website: http://ros.org/wiki/MTTD_background_subtraction
  MTTD_interface:
    author: !!python/unicode 'Enea Scioni'
    deps:
    - roscpp
    - std_msgs
    - orocos_ros_integration
    - MTTD_msgs
    - bfl_dataAssociationBranch
    - twoLevelMTTD
    - sensor_msgs
    - ocl_1.10
    - MTTD_background_subtraction
    - MTTD_visualize
    desc: "MTTD_interface. This package is an interface from ROS and twoLevelMTTD\
      \ stack - algorithm,\n     using a modified version of orocos_ros_integration\
      \ package."
    license: LGPL
    shortdesc: MTTD_interface
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/stacks/twoLevelMTTD_stack/MTTD_interface
    website: http://ros.org/wiki/MTTD_interface
  MTTD_msgs:
    author: !!python/unicode 'Enea Scioni'
    deps:
    - roscpp
    - geometry_msgs
    - std_msgs
    desc: "MTTD_msgs. This package contains messages (ROS) used in MTTD_interface.\n\
      \     These messages are compatible with people stack but at the moment (17th\
      \ June) people stack\n     is not stable, so I preferred to create another package.\
      \ In the future, \n     I think is better use directly people_msgs instead this\
      \ one.\n     NOTE: EXPERIMENTAL!"
    license: LGPL
    shortdesc: "MTTD_msgs. This package contains messages (ROS) used in MTTD_interface.\n\
      \     These messages a..."
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/stacks/twoLevelMTTD_stack/MTTD_msgs
    website: http://ros.org/wiki/MTTD_msgs
  MTTD_simulation:
    author: !!python/unicode 'Enea Scioni enea.scioni@student.unife.it, Tinne De Laet
      Tinne.DeLaet@mech.kuleuven.be'
    deps:
    - roscpp
    - nav_msgs
    - sensor_msgs
    - move_base_msgs
    - actionlib
    - amcl
    - move_base
    - stage
    - rviz
    - tf
    desc: This package contains configuration files to simulate twoLevelMTTD algorithm
      using stageros.
    license: LGPL
    shortdesc: MTTD_simulation
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/stacks/twoLevelMTTD_stack/MTTD_simulation
    website: http://ros.org/wiki/MTTD_simulation
  MTTD_visualize:
    author: !!python/unicode 'Enea Scioni enea.scioni@student.unife.it'
    deps:
    - roscpp
    - geometry_msgs
    - std_msgs
    - visualization_msgs
    - MTTD_msgs
    - rviz
    desc: "This package is used in order to visualize in rviz MTTD_msgs/peopledata\
      \ information, incoming\n     from twoLevelMTTD algorithm"
    license: LGPL
    shortdesc: MTTD_visualize
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/stacks/twoLevelMTTD_stack/MTTD_visualize
    website: http://ros.org/wiki/MTTD_visualize
  MTTLMeasurementSimulator:
    author: !!python/unicode 'Tinne De Laet'
    deps:
    - rtt_1.10
    - ocl_1.10
    - bfl_dataAssociationBranch
    desc: "MTTLMeasurementSimulator\n\n    This is a class to simulate laser scanner\
      \ measurements for multiple circular\ntargets moving with a constant n'th order\
      \ derivative model (cte position, cte\nvelocity, ...)."
    license: LGPL
    shortdesc: MTTLMeasurementSimulator
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/MTTLMeasurementSimulator
    website: http://ros.org/wiki/MTTLMeasurementSimulator
  MTTL_interface:
    author: !!python/unicode 'Enea Scioni'
    deps:
    - roscpp
    - std_msgs
    - orocos_ros_integration
    - MTTL_msgs
    - bfl_dataAssociationBranch
    - twoLevelMTTL
    - sensor_msgs
    - ocl_1.10
    - background
    - visualize
    desc: "MTTL_interface. This package is an interface from ROS and twoLevelMTTL\
      \ stack - algorithm,\n     using a modified version of orocos_ros_integration\
      \ package.\n     \n     NOTE: EXPERIMENTAL"
    license: BSD
    shortdesc: MTTL_interface
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/MTTL_interface
    website: http://ros.org/wiki/exp_oro
  MTTL_msgs:
    author: !!python/unicode 'Enea Scioni'
    deps:
    - roscpp
    - geometry_msgs
    - std_msgs
    desc: "MTTL_msgs. This package contains messages (ROS) used in MTTL_interface.\n\
      \     These messages are compatible with people stack but at the moment (17th\
      \ June) people stack\n     is not stable, so I preferred to create another package.\
      \ In the future, \n     I think is better use directly people_msgs instead this\
      \ one.\n     NOTE: EXPERIMENTAL!"
    license: BSD
    shortdesc: "MTTL_msgs. This package contains messages (ROS) used in MTTL_interface.\n\
      \     These messages a..."
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/MTTL_msgs
    website: http://ros.org/wiki/MTTL_msgs
  RBBM:
    author: !!python/unicode 'Tinne De Laet'
    deps:
    - bfl_dataAssociationBranch
    desc: RBBM is a ROS package implementing the Rigorously Bayesian Beam Model
    license: LGPL
    shortdesc: RBBM is a ROS package implementing the Rigorously Bayesian Beam Model
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/RBBM
    website: http://people.mech.kuleuven.be/~tdelaet/RBBM/index.html
  SSC32_core:
    author: !!python/unicode 'Steven Bellens'
    deps: []
    desc: 'SSC32_core: A library to interface a SSC32 hardware board'
    license: LGPL - BSD
    shortdesc: SSC32_core
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/stacks/SSC32/SSC32_core
    website: http://ros.org/wiki/SSC32_core
  SSC32_orocos_example:
    author: !!python/unicode 'Steven Bellens'
    deps:
    - rtt_1.10
    - ocl_1.10
    - SSC32_core
    desc: Example OROCOS component using the SSC32 library
    license: LGPL - BSD
    shortdesc: SSC32_orocos_example
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/stacks/SSC32/SSC32_orocos_example
    website: http://ros.org/wiki/SSC32_orocos_example
  acado:
    author: !!python/unicode 'Wilm Decre (package author), Hans Joachim Ferreau (acado
      author),Boris Houska (acado author)'
    deps: []
    desc: Acado ros package
    license: LGPL
    shortdesc: Acado ros package
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/acado
    website: http://ros.org/wiki/acado
  ar_pose_demo:
    author: !!python/unicode 'Koen Buys'
    deps:
    - prosilica_camera
    - tf
    - ar_pose
    - ar_pose_world_convertor
    - image_view
    - ar_pose_ekf
    desc: "ar_pose_demo: This package demonstrates the tracking of a AR marker with\
      \ multiple cameras \n                    it uses a BFL EKF estimator to merge\
      \ based on the covariances (the pose_ekf package)\n                    The patch\
      \ is used to extend ar_pose.\n                    The nodes are distributed\
      \ over different machines, this is defined in the machines package."
    license: BSD, GPL, LGPL
    shortdesc: ar_pose_demo
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/stacks/camera_pose_estimation/ar_pose_demo
    website: http://ros.org/wiki/ar_pose_demo
  ar_pose_ekf:
    author: !!python/unicode 'Steven Bellens'
    deps:
    - rtt_ros_integration_std_msgs
    - rtt_ros_integration
    - geometry_msgs
    - ar_pose
    - visualization_msgs
    - ocl
    - rtt
    - orocos_kdl
    - orocos_bfl
    - bfl_typekit
    - xacro
    desc: "ar_pose_ekf: Orocos component which fuses marker pose estimates from different\
      \ cameras. The component uses a \n      <a href=\"http://www.orocos.org/bfl\"\
      >BFL (Bayesian Filter Library)</a> Extended Kalman Filter\n      to merge the\
      \ different estimates. \n\n      Input node: <a href=\"http://www.ros.org/doc/api/ar_pose/html/msg/ARMarker.html\"\
      >ar_pose::ARMarker message</a>\n      Output nodes: <a href=\"http://www.ros.org/doc/api/ar_pose/html/msg/ARMarker.html\"\
      >ar_pose::ARMarker message</a>\n                   - <a href=\"http://www.ros.org/doc/api/visualization_msgs/html/msg/Marker.html\"\
      >visualization_msgs::Marker message</a>\n\n      Connection between the Orocos\
      \ and ROS framework is done using the \n      <a href=\"http://ros.org/wiki/orocos_toolchain_ros\"\
      >Orocos ROS integration stack</a>."
    license: LGPL - BSD
    shortdesc: ar_pose_ekf
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/stacks/camera_pose_estimation/ar_pose_ekf
    website: http://ros.org/wiki/ar_pose_ekf
  ar_pose_world_convertor:
    author: !!python/unicode 'Koen Buys'
    deps:
    - ar_pose
    - tf
    desc: "ar_pose_world_convertor: This message takes the ar pose message and ask\
      \ TF for the translation to \n\tthe world frame and publishes this as a message\
      \ with the original covariance. \n    A demonstration of its use can be found\
      \ in ar_pose_demo package.\n\tREMARK: The covariance of the camera to the world\
      \ should also be taken into account, but for the\n\tmoment beeing this doesn't\
      \ happen."
    license: BSD, GPL, LGPL
    shortdesc: ar_pose_world_convertor
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/stacks/camera_pose_estimation/ar_pose_world_convertor
    website: http://ros.org/wiki/ar_pose_world_convertor
  background:
    author: !!python/unicode 'Enea Scioni'
    deps:
    - roscpp
    - nav_msgs
    - sensor_msgs
    - map_server
    - laser_geometry
    desc: background
    license: BSD
    shortdesc: background
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/background
    website: http://ros.org/wiki/background
  bfl_0.7:
    author: !!python/unicode 'Klaas Gadeyne, Wim Meeussen, Tinne De Laet and many
      others. See web page for a full contributor list. ROS package maintained by
      Tinne De Laet .'
    deps:
    - rtt_1.10
    desc: "This package contains a recent version of the Bayesian Filtering\n  Library\
      \ (BFL), distributed by the Orocos Project.  For stability\n  reasons, this\
      \ package is currently locked in to version 30606 (Oct\n  02, 2009), but this\
      \ revision will be updated on a regular basis to\n  the latest available BFL\
      \ trunk.  This ROS package does not modify\n  BFL in any way, it simply provides\
      \ a convenient way to download and\n  compile the library, because BFL is not\
      \ available from an OS package\n  manager.  This ROS package compiles BFL with\
      \ the Boost library for\n  matrix operations and random number generation."
    license: LGPL
    shortdesc: The Bayesian Filtering Library (0.7)
    source: http://svn.mech.kuleuven.be/repos/orocos/orocos-apps/public_release/orocos-pkgs/bfl/bfl_0.7
    website: http://www.orocos.org/bfl
  bfl_dataAssociationBranch:
    author: !!python/unicode 'Klaas Gadeyne, Tinne De Laet, Wim Meeussen, and many
      others. See web page for a full contributor list.'
    deps:
    - rtt_1.10
    desc: "This package contains the data association branch of the Bayesian Filtering\n\
      \  Library (BFL), distributed by the Orocos Project.  \n  In this branch data\
      \ association algorithms are being developed and\n  implemented. This ROS package\
      \ compiles BFL with the Boost library for\n  matrix operations and random number\
      \ generation."
    license: LGPL
    shortdesc: The Bayesian Filtering Library (Data association branch)
    source: http://svn.mech.kuleuven.be/repos/orocos/orocos-apps/public_release/orocos-pkgs/bfl/bfl_dataAssociationBranch
    website: http://www.orocos.org/bfl
  bfl_examples:
    author: !!python/unicode 'Koen Buys, Tinne De Laet'
    deps:
    - orocos_bfl
    desc: "bfl-examples:This package contains a recent version of the examples of\
      \ the Bayesian Filtering\n     Library (BFL), distributed by the Orocos Project."
    license: LGPL
    shortdesc: bfl-examples
    source: http://svn.mech.kuleuven.be/repos/orocos/orocos-apps/public_release/orocos-pkgs/bfl_examples
    website: http://www.orocos.org/bfl
  bfl_typekit:
    author: !!python/unicode 'Tinne De Laet'
    deps:
    - orocos_bfl
    desc: ''
    license: LGPL
    shortdesc: The Bayesian Filtering Library RTT typekit
    source: details.php?name=rtt
    website: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/stacks/orocos_bayesian_filtering/bfl_typekit
  blender_25:
    author: !!python/unicode 'Ruben Smits (package creator)'
    deps: []
    desc: The blender_25 package just downloads a tarball of a prebuild Blender 2.5
      binary
    license: GPL
    shortdesc: blender_25
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/stacks/blender/blender_25
    website: http://www.blender.org
  capt_blender_camera:
    author: !!python/unicode 'Koen Buys and Dominick Vanthienen'
    deps:
    - sensor_msgs
    - std_msgs
    - rospy
    - roscpp
    desc: "CaptBlenderCamera simulates a camera in Blender.\n    It &quot;films&quot;\
      \ the scene in Blender and puts the taken images in a topic &quot;Image&quot;,\
      \ which is a rosImage and can be read by \n    eg. image_video (part of image_pipeline\
      \ package), outside Blender.\n    It can be viewed in realtime by image_view:\
      \ $./image_view image:=/Image\n    Blender file works with python scripts (SAVE\
      \ YOUR ADJUSTMENTS BEFORE STARTING GAME ENGINE!, it's not idiotproof yet)\n\
      \    Tested with blender version 2.49.2"
    license: GPL
    shortdesc: captBlenderCamera
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/stacks/blender/capt_blender_camera
    website: http://people.mech.kuleuven.be/~u0062536/embsensor.html
  com_blender_example:
    author: !!python/unicode 'Koen Buys'
    deps:
    - std_msgs
    - rospy
    - roscpp
    desc: "These files demonstrate the communication between blender and ROS middleware\n\
      \    Blender file works with python scripts as in ROS tutorial\n    Incoming\
      \ topic is chatter, outgoing topic is talk (seen from Blender)\n    Save everything\
      \ before running, blender is not very idiotproof yet."
    license: GPL
    shortdesc: com_blender_example
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/stacks/blender/com_blender_example
    website: http://people.mech.kuleuven.be/~u0062536/embsensor.html
  dataAssociationMurty:
    author: !!python/unicode 'Tinne De Laet'
    deps:
    - srl_people_tracker_0.2
    - linearAssignmentProblem
    - bfl_dataAssociationBranch
    desc: dataAssociationMurty
    license: GPL
    shortdesc: dataAssociationMurty
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/dataAssociationMurty
    website: http://ros.org/wiki/dataAssociationMurty
  force_control:
    author: !!python/unicode 'Wilm Decre'
    deps:
    - rtt_1.10
    - ocl_1.10
    - kdl_1.0
    desc: Package with force control implementation exemplified using a JR3 force
      sensor and LWR robot. This package is intended solely as an interfacing example,
      that is, how to connect sensors and robot together using an orocos component.
      It is not intended to provide a high-quality force controller.
    license: LGPL
    shortdesc: force_control
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/force_control
    website: http://ros.org/wiki/force_control
  head:
    author: !!python/unicode 'Enea Scioni'
    deps:
    - roscpp
    - actionlib
    - pr2_controllers_msgs
    - geometry_msgs
    desc: head
    license: LGPL
    shortdesc: head
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/head
    website: http://ros.org/wiki/head
  head_demo:
    author: !!python/unicode ''
    deps:
    - roscpp
    - head
    - sensor_msgs
    desc: 'head_demo: moving head, following hat for 17th august demo'
    license: Enea Scioni
    shortdesc: 'head_demo: moving head, following hat for 17th august demo'
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/head_demo
    website: http://ros.org/wiki/head_demo
  iTaSC:
    author: !!python/unicode 'Ruben Smits'
    deps:
    - eigen
    - orocos_kdl
    - geometry_msgs
    - tf
    - tf_conversions
    - ocl
    - rtt
    desc: iTaSC
    license: BSD
    shortdesc: iTaSC
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/iTaSC
    website: http://ros.org/wiki/iTaSC
  kdl_1.0:
    author: !!python/unicode 'Ruben Smits, Erwin Aertbelien, Wim Meeussen (package)'
    deps:
    - eigen
    - rtt_1.10
    desc: "This package contains a recent version of the Kinematics and Dynamics\n\
      Library (KLD), distributed by the Orocos Project.  For stability\nreasons, this\
      \ package is currently locked in to version 30401 (Aug \n8, 2009), but this\
      \ revision will be updated on a regular basis to\nthe latest available KDL trunk.\
      \  This ROS package does not intend to\nmodify KDL in any way, it simply provides\
      \ a convenient way to download \nand compile the library, because KDL is not\
      \ available from an OS package\nmanager. However, this package might contain\
      \ some temporary patches to\nKDL while they are being applied upstream, or while\
      \ a permanent fix for\na problem is being discussed by the KDL community."
    license: LGPL
    shortdesc: The Kinematics and Dynamics Library, version 1.0
    source: http://svn.mech.kuleuven.be/repos/orocos/orocos-apps/public_release/orocos-pkgs/kdl/kdl_1.0
    website: http://www.orocos.org/kdl
  kdl_typekit:
    author: !!python/unicode 'Steven Bellens - based on the typegen tool written by
      Sylvain Joyeux'
    deps:
    - rtt
    - orocos_kdl
    desc: "Definitions to use the <a href=\"http://www.orocos.org/kdl\">Kinematics\
      \ and Dynamics Library (KDL)</a>\n      in the Orocos Real-Time Toolkit (RTT),\
      \ which is part of the <a href=\"http://www.orocos.org/wiki/orocos/toolchain\"\
      >Orocos Toolchain</a>."
    license: LGPL
    shortdesc: kdl_typekit
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/stacks/orocos_kinematics_dynamics/kdl_typekit
    website: http://ros.org/wiki/kdl_typekit
  lias_blender_model:
    author: !!python/unicode 'Koen Buys'
    deps: []
    desc: 'lias_blender_model: This package contains the blender model of the Leuven
      Intelligent Autonomous System (LiAS) mobile robot'
    license: BSD
    shortdesc: lias_blender_model
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/stacks/blender_kin_models/lias_blender_model
    website: http://ros.org/wiki/lias_blender_model
  linearAssignmentProblem:
    author: !!python/unicode 'Tinne De Laet'
    deps:
    - srl_people_tracker_0.2
    desc: Test for solving 2d assignmentproblem
    license: GPL
    shortdesc: linearAssignmentProblem
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/linearAssignmentProblem
    website: http://ros.org/wiki/linearAssignmentProblem
  lwr_blender_model:
    author: !!python/unicode 'Koen Buys'
    deps: []
    desc: 'lwr_blender_model: This package contains the blender model for the KUKA
      Light Weight Robot Arm (LWR)'
    license: BSD
    shortdesc: lwr_blender_model
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/stacks/blender_kin_models/lwr_blender_model
    website: http://ros.org/wiki/lwr_blender_model
  lwr_fri:
    author: !!python/unicode 'Wilm Decre, Ruben Smits'
    deps:
    - rtt_1.10
    - ocl_1.10
    - kdl_1.0
    - diagnostic_updater
    desc: LWR FRI components
    license: LGPL
    shortdesc: LWR FRI components
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/lwr_fri
    website: http://ros.org/wiki/lwr_fri
  lwr_fri_rtt_2_0:
    author: !!python/unicode 'Ruben Smits'
    deps:
    - kuka_lwr_fri
    - kuka_lwr_fri_typekit
    - rtt
    - ocl
    - orocos_kdl
    - brics_actuator
    - rtt_ros_integration
    - rtt_ros_integration_std_msgs
    desc: LWR FRI components
    license: BSD
    shortdesc: LWR FRI components
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/branches/lwr_fri_rtt_2_0
    website: http://ros.org/wiki/LWR
  ndi_polaris:
    author: !!python/unicode 'Dominick Vanthienen'
    deps:
    - orocos_kdl
    desc: 'ndi_polaris: A library to interface a NDI Polaris optical tracking system'
    license: LGPL
    shortdesc: ndi_polaris
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/stacks/ndi_hardware/ndi_polaris
    website: http://ros.org/wiki/ndi_polaris
  ndi_polaris_orocos_20_example:
    author: !!python/unicode 'Dominick Vanthienen, Steven Bellens'
    deps:
    - rtt
    - ocl
    - ndi_polaris
    - kdl_typekit
    desc: Example OROCOS component using the ndi_polaris library
    license: GPL
    shortdesc: ndi_polaris_orocos_20_example
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/stacks/ndi_hardware/ndi_polaris_orocos_20_example
    website: http://ros.org/wiki/ndi_polaris_orocos_20_example
  ndi_polaris_orocos_example:
    author: !!python/unicode 'Dominick Vanthienen'
    deps:
    - rtt_1.10
    - ocl_1.10
    - ndi_polaris
    desc: Example OROCOS component using the ndi_polaris library
    license: LGPL
    shortdesc: ndi_polaris_orocos_example
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/stacks/ndi_hardware/ndi_polaris_orocos_example
    website: http://ros.org/wiki/ndi_polaris_orocos_example
  ndi_polaris_orocos_tf:
    author: !!python/unicode 'Dominick Vanthienen, Steven Bellens'
    deps:
    - rtt_ros_integration_std_msgs
    - rtt_ros_integration
    - rtt_ros_integration_std_msgs
    - rtt
    - ocl
    - ndi_polaris
    - tf
    desc: "Example OROCOS component using the ndi_polaris library which publishes\
      \ to\n     tf"
    license: GPL
    shortdesc: ndi_polaris_orocos_tf
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/stacks/ndi_hardware/ndi_polaris_orocos_tf
    website: http://ros.org/wiki/ndi_polaris_orocos_tf
  ocl_1.10:
    author: !!python/unicode 'common'
    deps:
    - rtt_1.10
    - kdl_1.0
    desc: ocl-1.10
    license: BSD
    shortdesc: ocl-1.10
    source: http://svn.mech.kuleuven.be/repos/orocos/orocos-apps/public_release/orocos-pkgs/ocl/ocl_1.10
    website: http://ros.org/wiki/ocl-1.10
  orocos_bfl:
    author: !!python/unicode 'Klaas Gadeyne, Wim Meeussen, Tinne De Laet and many
      others. See web page for a full contributor list. ROS package maintained by
      Tinne De Laet.'
    deps:
    - rtt
    desc: "This package contains a recent version of the Bayesian Filtering\n  Library\
      \ (BFL), distributed by the Orocos Project.  For stability\n  reasons, this\
      \ package is currently locked in to version 30606 (Oct\n  02, 2009), but this\
      \ revision will be updated on a regular basis to\n  the latest available BFL\
      \ trunk.  This ROS package does not modify\n  BFL in any way, it simply provides\
      \ a convenient way to download and\n  compile the library, because BFL is not\
      \ available from an OS package\n  manager.  This ROS package compiles BFL with\
      \ the Boost library for\n  matrix operations and random number generation."
    license: LGPL
    shortdesc: The Bayesian Filtering Library (0.8)
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/stacks/orocos_bayesian_filtering/orocos_bfl
    website: http://www.orocos.org/bfl
  orocos_kdl:
    author: !!python/unicode 'Ruben Smits, Erwin Aertbelien, Wim Meeussen (package)'
    deps:
    - eigen
    desc: "This package contains a recent version of the <a href=\"http://www.orocos.org/kdl\"\
      >Kinematics and Dynamics Library (KLD)</a>, \ndistributed by the Orocos Project.\
      \ This ROS package does not intend to\nmodify KDL in any way, it simply provides\
      \ a convenient way to download \nand compile the library, because KDL is not\
      \ available from an OS package\nmanager. However, this package might contain\
      \ some temporary patches to\nKDL while they are being applied upstream, or while\
      \ a permanent fix for\na problem is being discussed by the KDL community."
    license: LGPL
    shortdesc: The Kinematics and Dynamics Library, version 1.0
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/stacks/orocos_kinematics_dynamics/orocos_kdl
    website: http://www.orocos.org/kdl
  orocos_ros_integration:
    author: !!python/unicode 'Ruben Smits/ ruben.smits@mech.kuleuven.be'
    deps:
    - roscpp
    - rtt_1.10
    - ocl_1.10
    - std_msgs
    - sensor_msgs
    - MTTL_msgs
    desc: orocos_ros_integration
    license: BSD
    shortdesc: orocos_ros_integration
    source: http://svn.mech.kuleuven.be/repos/orocos/orocos-apps/public_release/orocos-pkgs/orocos_ros_integration
    website: http://pr.willowgarage.com/wiki/orocos_ros_integration
  pr2_blender_model:
    author: !!python/unicode 'Koen Buys, Ruben Smits'
    deps:
    - rospy
    - tf
    desc: 'pr2_blender_model: This package contains the PR2 Blender model with the
      included nodes and topics'
    license: GPL
    shortdesc: pr2_blender_model
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/stacks/blender_kin_models/pr2_blender_model
    website: http://ros.org/wiki/pr2_blender_model
  pr2_lwr_coupling:
    author: !!python/unicode 'Wilm Decre, Ruben Smits, Koen Buys'
    deps:
    - lwr_fri
    - ocl_1.10
    - rtt_1.10
    - kdl_1.0
    - pr2_common_action_msgs
    - actionlib
    - actionlib_msgs
    - tf
    desc: "pr2_lwr_coupling: This package is the demo that we build for the Willow\
      \ Garage Quick Start Challenge. \n                        It is used in conjunction\
      \ with the head tracking, lwr_fri, xsens_mti and ndi_polaris.\n            \
      \            A common launch file is not created."
    license: BSD
    shortdesc: pr2_lwr_coupling
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/pr2_lwr_coupling
    website: http://ros.org/wiki/pr2-lwr-coupling
  readGitData:
    author: !!python/unicode 'Tinne De Laet'
    deps:
    - rtt_1.10
    - ocl_1.10
    - bfl_dataAssociationBranch
    desc: readGitData
    license: LGPL
    shortdesc: readGitData
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/readGitData
    website: http://ros.org/wiki/readGitData
  readLaserScannerMeasurementsFile:
    author: !!python/unicode 'Tinne De laet'
    deps:
    - rtt_1.10
    - ocl_1.10
    - bfl_dataAssociationBranch
    desc: readLaserScannerMeasurementsFile
    license: LGPL
    shortdesc: readLaserScannerMeasurementsFile
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/readLaserScannerMeasurementsFile
    website: http://ros.org/wiki/readLaserScannerMeasurementsFile
  robotis_examples:
    author: !!python/unicode 'Dominick Vanthienen'
    deps:
    - rtt_1.10
    - ocl_1.10
    - opencv2
    desc: robotis_player
    license: LGPL
    shortdesc: robotis_player
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/robotis_examples
    website: none yet
  robotis_vision:
    author: !!python/unicode 'Charles Lesire-Cabaniols, rospackage creator: Dominick
      Vanthienen'
    deps:
    - rtt_1.10
    - ocl_1.10
    - opencv2
    desc: robotis-vision-1.1
    license: LGPL
    shortdesc: robotis-vision-1.1
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/robotis_vision
    website: none yet
  rtt_1.10:
    author: !!python/unicode 'Peter Soetens and Orocos Developers'
    deps: []
    desc: 'This package contains the latest code from the RealTime Toolkit aka RunTime
      Toolkit (RTT) of the OROCOS project.

      This ROS package does not modify RTT in any way;

      it simply provides a convenient way to download and compile the library

      in a way that can be managed by the ROS dependency system.'
    license: GPL+runtime exception
    shortdesc: Realtime toolkit
    source: http://svn.mech.kuleuven.be/repos/orocos/orocos-apps/public_release/orocos-pkgs/rtt/rtt_1.10
    website: http://www.orocos.org/
  rtt_exercises:
    author: !!python/unicode 'Orocos Developers/orocos-dev@lists.mech.kuleuven.be
      - package creator: Steven Bellens'
    deps:
    - rtt
    - ocl
    desc: "ROS package containing the \n     <a href=\"http://github.com/psoetens/orocos-rtt-examples\"\
      >Orocos Real-Time Toolkit 2.0 Exercises</a> for new RTT users."
    license: GPL + runtime exception
    shortdesc: rtt_exercises
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/stacks/orocos_toolchain_ros/trunk/rtt_exercises
    website: http://www.orocos.org/rtt
  rtt_exercises_1.10.0:
    author: !!python/unicode 'Orocos Developers/orocos-dev@lists.mech.kuleuven.be
      - Dominick Vanthienen / dominick.vanthienen@mech.kuleuven.be'
    deps:
    - rtt_1.10
    - ocl_1.10
    desc: "UNMAINTAINED\n     ROS package containing the                         \
      \                                                                          \
      \                                      \n     <a href=\"http://github.com/psoetens/orocos-rtt-examples\"\
      >Orocos Real-Time Toolkit 1.10.0 Exercises</a> for new RTT users."
    license: GPL + runtime exception
    shortdesc: rtt_exercises_1.10.0
    source: http://svn.mech.kuleuven.be/repos/orocos/orocos-apps/public_release/orocos-pkgs/rtt_exercises_1.10.0
    website: http://orocos.org/rtt/
  separateEnvironmentFromLaserScan:
    author: !!python/unicode 'Tinne De Laet'
    deps:
    - rtt_1.10
    - ocl_1.10
    - bfl_dataAssociationBranch
    desc: separateEnvironmentFromLaserScan
    license: LGPL
    shortdesc: separateEnvironmentFromLaserScan
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/separateEnvironmentFromLaserScan
    website: http://ros.org/wiki/separateEnvironmentFromLaserScan
  soem_beckhoff_drivers:
    author: !!python/unicode 'Ruben Smits'
    deps:
    - roscpp
    - soem_core
    - soem_master
    - rtt
    desc: soem_beckhoff_drivers contains drivers for the ethercat beckhoff modules
      to work together with the soem_master package, every module creates the necessary
      services, dataports and properties for its own functionality.
    license: BSD
    shortdesc: soem_beckhoff_drivers
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/stacks/soem/soem_beckhoff_drivers
    website: http://ros.org/wiki/soem_beckhoff_drivers
  soem_core:
    author: !!python/unicode 'Arthur Ketels and M.J.G. van den Molengraft; packaged
      by Ruben Smits'
    deps: []
    desc: "SOEM is an open source EtherCAT master library written in c. Its\n    \
      \ primary target is Linux but can be adapted to other OS and\n     embedded\
      \ systems. (http://developer.berlios.de/projects/soem/)\n\n     This package\
      \ contains the original soem c code provided by the Technische Universiteit\
      \ Eindhoven."
    license: GPL+linking exception
    shortdesc: "SOEM is an open source EtherCAT master library written in c. Its\n\
      \     primary target is Linux..."
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/stacks/soem/soem_core
    website: http://developer.berlios.de/projects/soem
  soem_master:
    author: !!python/unicode 'Ruben Smits'
    deps:
    - soem_core
    - rtt
    - ocl
    desc: soem_master contains a C++ wrapper around soem_core, a factory object to
      register and create drivers and a RTT component that will automatically create
      the drivers and their services for all the slave for which a driver is known.
    license: BSD
    shortdesc: soem_master
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/stacks/soem/soem_master
    website: http://ros.org/wiki/soem_master
  srl_people_tracker_0.2:
    author: !!python/unicode 'Matthias Luber (Social Robotics Laboratory, Albert-Ludwigs-University

      of Freiburg, Germany), Kai O. Arras (Social Robotics Laboratory,

      Albert-Ludwigs-University of Freiburg, Germany), and Tinne De Laet

      (K.U.Leuven, Belgium)(package)'
    deps:
    - eigen
    desc: srl_people_tracker_0.2
    license: GPL
    shortdesc: srl_people_tracker_0.2
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/srl_people_tracker_0.2
    website: http://othello.informatik.uni-freiburg.de/~luber/html/people_tracker/people_tracker.html
  testOroEigen:
    author: !!python/unicode 'Dominick Vanthienen'
    deps:
    - eigen
    - rtt
    - ocl
    - orocos_kdl
    - kdl_typekit
    desc: Test setup to see if it crashes
    license: BSD
    shortdesc: testOroEigen
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/testOroEigen
    website: http://ros.org/wiki/
  twoLevelMTTD:
    author: !!python/unicode 'Tinne De Laet'
    deps:
    - rtt_1.10
    - ocl_1.10
    - bfl_dataAssociationBranch
    - dataAssociationMurty
    - RBBM
    desc: 'twoLevelMTTD is a package containing software for two-level multitarget

      tracking and detection.'
    license: GPL
    shortdesc: twoLevelMTTD
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/stacks/twoLevelMTTD_stack/twoLevelMTTD
    website: http://people.mech.kuleuven.be/~tdelaet/twoLevelMTTD/index.html
  twoLevelMTTDExamples:
    author: !!python/unicode 'Tinne De Laet'
    deps:
    - twoLevelMTTD
    - readGitData
    - readLaserScannerMeasurementsFile
    - separateEnvironmentFromLaserScan
    - MTTDMeasurementSimulator
    - ocl_1.10
    - bfl_dataAssociationBranch
    desc: twoLevelMTTDExamples
    license: LGPL
    shortdesc: twoLevelMTTDExamples
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/stacks/twoLevelMTTD_stack/twoLevelMTTDExamples
    website: http://ros.org/wiki/twoLevelMTTDExamples
  twoLevelMTTL:
    author: !!python/unicode 'Tinne De Laet'
    deps:
    - rtt_1.10
    - ocl_1.10
    - bfl_dataAssociationBranch
    - dataAssociationMurty
    - RBBM
    desc: 'twoLevelMTTL is a package containing software for two-level multitarget

      tracking and localization.'
    license: GPL
    shortdesc: twoLevelMTTL
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/twoLevelMTTL
    website: http://people.mech.kuleuven.be/~tdelaet/twoLevelMTTL/index.html
  twoLevelMTTLExamples:
    author: !!python/unicode 'Tinne De Laet'
    deps:
    - twoLevelMTTL
    - readGitData
    - readLaserScannerMeasurementsFile
    - separateEnvironmentFromLaserScan
    - MTTLMeasurementSimulator
    - ocl_1.10
    - bfl_dataAssociationBranch
    desc: twoLevelMTTLExamples
    license: LGPL
    shortdesc: twoLevelMTTLExamples
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/twoLevelMTTLExamples
    website: http://ros.org/wiki/twoLevelMTTLExamples
  twoLevelMTTL_2.0:
    author: !!python/unicode 'Tinne De Laet'
    deps:
    - rtt_1.10
    - ocl_1.10
    - bfl_dataAssociationBranch
    - dataAssociationMurty
    - RBBM
    desc: 'twoLevelMTTL is a package containing software for two-level multitarget

      tracking and localization.'
    license: GPL
    shortdesc: twoLevelMTTL
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/twoLevelMTTL_2.0
    website: http://people.mech.kuleuven.be/~tdelaet/twoLevelMTTL/index.html
  visp:
    author: !!python/unicode 'INRIA Rennes - Bretagne Atlantique, rospackage creator:
      Steven Bellens'
    deps:
    - opencv2
    desc: This package contains a recent version (revision 2807) of the ViSP toolkit
    license: QPL
    shortdesc: This package contains a recent version (revision 2807) of the ViSP
      toolkit
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/visp
    website: http://www.irisa.fr/lagadic/visp
  visualize:
    author: !!python/unicode 'Enea Scioni'
    deps:
    - roscpp
    - geometry_msgs
    - std_msgs
    - visualization_msgs
    - MTTL_msgs
    desc: visualize
    license: BSD
    shortdesc: visualize
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/visualize
    website: http://ros.org/wiki/visualize
  wrenchsensor_calibrator:
    author: !!python/unicode 'Wilm Decre, Carl Moerman'
    deps:
    - rtt_1.10
    - ocl_1.10
    - kdl_1.0
    desc: "wrenchsensor_calibrator\n     Package for the calibration of force/torque\
      \ sensors. Currently static calibration is implemented: measurement offsets,\
      \ mass and cog of the payload are determined and compensated."
    license: LGPL
    shortdesc: wrenchsensor_calibrator
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/wrenchsensor_calibrator
    website: http://ros.org/wiki/wrenchsensor_calibrator
  xsens_mti:
    author: !!python/unicode 'koen.buys@mech.kuleuven.be, steven.bellens@mech.kuleuven.be'
    deps: []
    desc: 'xsens_mti: Library to interface an MTI sensor'
    license: GPL
    shortdesc: 'xsens_mti: Library to interface an MTI sensor'
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/stacks/xsens_hardware/xsens_mti
    website: http://ros.org/wiki/xsens_mti
  xsens_mti_orocos:
    author: !!python/unicode 'koen.buys@mech.kuleuven.be, steven.bellens@mech.kuleuven.be'
    deps:
    - xsens_mti
    - rtt_ros_integration_std_msgs
    - rtt_ros_integration
    - kdl_1.0
    - tf
    - rtt
    - ocl
    desc: 'xsens_mti_orocos: An example Orocos component which uses the xsens_mti
      library to interface an MTI sensor'
    license: GPL
    shortdesc: xsens_mti_orocos
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/stacks/xsens_hardware/xsens_mti_orocos
    website: http://ros.org/wiki/xsens_mti_orocos
  youbot_blender_model:
    author: !!python/unicode 'Koen Buys'
    deps: []
    desc: 'youbot_blender_model: This package contains the blender model for the KUKA
      Youbot and all control scripts'
    license: BSD
    shortdesc: youbot_blender_model
    source: http://svn.mech.kuleuven.be/repos/orocos/trunk/kul-ros-pkg/stacks/blender_kin_models/youbot_blender_model
    website: http://www.kuka-youbot.com/
literate_pr2:
  read_text:
    author: !!python/unicode 'Menglong Zhu'
    deps:
    - opencv2
    - roscpp
    - sensor_msgs
    - geometry_msgs
    - pr2_controllers_msgs
    - pr2_mechanism_controllers
    - cv_bridge
    - std_msgs
    - image_transport
    - tesseract
    desc: read text from indoor environment (PR2-only)
    license: BSD
    shortdesc: read text from indoor environment (PR2-only)
    source: https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs/literate_pr2/trunk/read_text
    website: http://ros.org/wiki/read_text
mapping:
  as11:
    author: !!python/unicode 'lucian goron'
    deps:
    - roscpp
    - pcl
    - opencv2
    - features_2d
    desc: as11
    license: BSD
    shortdesc: as11
    source: http://code.in.tum.de/git/mapping.git
    website: http://ros.org/wiki/as11
  handle_detection:
    author: !!python/unicode 'Nico Blodow'
    deps:
    - point_cloud_converter
    - nodelet
    - pcl
    - pcl_ros
    - visualization_msgs
    desc: handle_detection
    license: BSD
    shortdesc: handle_detection
    source: http://code.in.tum.de/git/mapping.git
    website: http://ros.org/wiki/handle_detection
  ias_projected_light:
    author: !!python/unicode 'Florian Zacherl, Dejan Pangercic'
    deps:
    - opencv2
    - cv_bridge
    - roscpp
    - pcl
    - image_transport
    desc: "Out-of-the-box solution for projected stereo using\n    a Videre STOC camera\
      \ and a regular wall projector."
    license: BSD
    shortdesc: projected_light
    source: http://code.in.tum.de/git/mapping.git
    website: http://www.ros.org/wiki/ias_projected_light
  ias_table_msgs:
    author: !!python/unicode ''
    deps:
    - geometry_msgs
    - sensor_msgs
    desc: Messages for table perception applications at TUM.
    license: BSD
    shortdesc: ias_table_msgs
    source: details.php?name=std_msgs
    website: http://code.in.tum.de/git/mapping.git
  ias_table_srvs:
    author: !!python/unicode 'Nico Blodow, Dejan Pangercic'
    deps:
    - sensor_msgs
    - mapping_msgs
    - geometry_msgs
    - ias_table_msgs
    desc: Services for table perception applications at TUM.
    license: BSD
    shortdesc: ias_table_srvs
    source: details.php?name=std_msgs
    website: http://code.in.tum.de/git/mapping.git
  kinect_cleanup:
    author: !!python/unicode 'Zoltan-Csaba Marton, Dejan Pangercic'
    deps:
    - roscpp
    - pcl
    - tf
    - sensor_msgs
    - pcl_ros
    - vision_msgs
    desc: "kinect_cleanup is a package to demonstrate desired object locations by\n\
      \     pointing at objects and virtually moving them somewhere (for ROS 3D Contest)"
    license: BSD
    shortdesc: kinect_cleanup
    source: http://code.in.tum.de/git/mapping.git
    website: http://ros.org/wiki/kinect_cleanup
  mapping_ias_msgs:
    author: !!python/unicode 'Dejan Pangercic, Nico Blodow'
    deps:
    - sensor_msgs
    - std_msgs
    - geometry_msgs
    desc: mapping_ias_msgs
    license: BSD
    shortdesc: mapping_ias_msgs
    source: http://code.in.tum.de/git/mapping.git
    website: todo
  next_best_view:
    author: !!python/unicode 'Felix Ruess'
    deps:
    - roscpp
    - pcl
    - pcl_ros
    - octomap
    - octomap_server
    - pcl_to_octree
    - tf
    desc: next_best_view
    license: BSD
    shortdesc: next_best_view
    source: http://code.in.tum.de/git/mapping.git
    website: http://ros.org/wiki/next_best_view
  pcl_cloud_algos:
    author: !!python/unicode 'Nico Blodow, Dejan Pangercic, Zoltan-Csaba Marton'
    deps:
    - roscpp
    - geometry_msgs
    - sensor_msgs
    - triangle_mesh_msgs
    - eigen
    - pcl
    - pcl_ros
    - visualization_msgs
    - libsvm
    desc: A collection of cloud algo[rithms] using nodelets.
    license: BSD
    shortdesc: A collection of cloud algo[rithms] using nodelets.
    source: details.php?name=pcl_ias_sample_consensus
    website: http://code.in.tum.de/git/mapping.git
  pcl_cloud_tools:
    author: !!python/unicode 'Nico Blodow, Zoltan-Csaba Marton, Dejan Pangercic'
    deps:
    - std_msgs
    - pcl
    - pcl_ros
    - geometry_msgs
    - sensor_msgs
    - mapping_msgs
    - yaml_cpp
    - octomap
    - octomap_server
    - visualization_msgs
    - ias_table_msgs
    - pcl_visualization
    - pcl_vtk_tools
    - actionlib
    - actionlib_msgs
    desc: A collection of point cloud related tools.
    license: BSD
    shortdesc: A collection of point cloud related tools.
    source: details.php?name=roscpp
    website: http://code.in.tum.de/git/mapping.git
  pcl_ias_sample_consensus:
    author: !!python/unicode 'Nico Blodow, Dejan Pangercic, Zoltan-Csaba MArton'
    deps:
    - roscpp
    - eigen
    desc: A collection of sample consensus models developed at IAS@TUM
    license: BSD
    shortdesc: A collection of sample consensus models developed at IAS@TUM
    source: details.php?name=pcl
    website: http://code.in.tum.de/git/mapping.git
  pcl_to_octree:
    author: !!python/unicode 'Hozefa Indorewala, Dejan Pangercic'
    deps:
    - roscpp
    - pcl
    - octomap
    - octomap_server
    - sensor_msgs
    - visualization_msgs
    desc: "<p>\n     pcl_to_octree - a package to convert the PointCloud format to\
      \ octree format\n</p>"
    license: BSD
    shortdesc: pcl_to_octree
    source: http://code.in.tum.de/git/mapping.git
    website: http://ros.org/wiki/pcl_to_octree
  pcl_vtk_tools:
    author: !!python/unicode 'Nico Blodow, Zoltan-Csaba Marton, Dejan Pangercic'
    deps:
    - std_msgs
    - pcl
    - geometry_msgs
    - sensor_msgs
    - mapping_msgs
    - yaml_cpp
    - pcl_visualization
    desc: A collection of point cloud tools that depend on vtk.
    license: BSD
    shortdesc: A collection of point cloud tools that depend on vtk.
    source: details.php?name=roscpp
    website: http://code.in.tum.de/git/mapping.git
  pointcloud_registration:
    author: !!python/unicode 'Hozefa Indorewala'
    deps:
    - pcl
    - pcl_ros
    - roscpp
    - actionlib
    - bullet
    - nodelet
    - sensor_msgs
    - geometry_msgs
    - move_base_msgs
    - pr2_controllers_msgs
    - pr2_msgs
    desc: "pointcloud_registration: This package implements registration of point\
      \ clouds. \n     It also contains an additional feature called Spin Image Local.\n\
      \ \n     Based on original code written by Radu Rusu (rusu@willowgarage.com)\n\
      \     Contact Persons:\n     1. Hozefa Indorewala: \th.indorewala@jacobs-university.de\n\
      \     2. Dejan Pangercic: \tdejan.pangercic@cs.tum.edu\n     3. Zoltan-Csaba\
      \ Marton: \tmarton@cs.tum.edu\n     4. Nico Blodow:\t\tblodow@cs.tum.edu"
    license: BSD
    shortdesc: pointcloud_registration
    source: http://code.in.tum.de/git/mapping.git
    website: http://ros.org/wiki/pointcloud_registration
mav_tools:
  laser_height_estimation:
    author: !!python/unicode 'Ivan Dryanovski'
    deps:
    - tf
    - roscpp
    - sensor_msgs
    - std_msgs
    - mav_msgs
    - bullet
    - nodelet
    desc: A tool to measure the distance to the floor/ceiling using a a laser scanner.
    license: BSD
    shortdesc: laser_height_estimation
    source: http://robotics.ccny.cuny.edu/git/ccny-ros-pkg/mav_tools.git
    website: http://ros.org/wiki/laser_height_estimation
  mav_msgs:
    author: !!python/unicode 'Ivan Dryanovski, William Morris'
    deps: []
    desc: mav_msgs
    license: BSD
    shortdesc: Hardware-independent MAV messages
    source: http://robotics.ccny.cuny.edu/git/ccny-ros-pkg/mav_tools.git
    website: http://ros.org/wiki/mav_msgs
mavlink-ros-pkg:
  lcm_mavlink_ros:
    author: !!python/unicode ''
    deps:
    - std_msgs
    - roscpp
    desc: lcm_mavlink_ros
    license: BSD
    shortdesc: lcm_mavlink_ros
    source: https://github.com/pixhawk/mavlink-ros-pkg.git
    website: http://ros.org/wiki/lcm_mavlink_ros
mit-ros-pkg:
  body_msgs:
    author: !!python/unicode 'Garratt'
    deps:
    - mapping_msgs
    - geometry_msgs
    - sensor_msgs
    desc: "body_msgs provides messages for common body primitives\n    such as hands,\
      \ skeletons and joints. These primitives are designed\n    to provide a common\
      \ data type and facilitate interoperability\n    throughout the system."
    license: BSD
    shortdesc: Messages for body primitives
    source: https://svn.csail.mit.edu/mit-ros-pkg/trunk/kinect_utils/body_msgs
    website: http://ros.org/wiki/body_msgs
  ee_cart_imped_action:
    author: !!python/unicode 'Jenny Barry, Mario Bollini, and Huan Liu'
    deps:
    - actionlib
    - roscpp
    - rospy
    - roslib
    - std_msgs
    - actionlib_msgs
    - ee_cart_imped_control
    desc: An action server and interface for the ee_cart_imped_control package.  The
      EECartImped Controller should always be accessed through this action.
    license: BSD
    shortdesc: An action server and interface for the ee_cart_imped_control package.  The
      EECartImped Contro...
    source: https://svn.csail.mit.edu/mit-ros-pkg/trunk/ee_cart_imped/ee_cart_imped_action
    website: http://ros.org/wiki/ee_cart_imped_action
  ee_cart_imped_control:
    author: !!python/unicode 'Mario Bollini, Jenny Barry, and Huan Liu'
    deps:
    - geometry_msgs
    - eigen
    - kdl
    - pr2_controller_interface
    - pr2_mechanism_model
    - pluginlib
    - actionlib
    - actionlib_msgs
    - realtime_tools
    desc: A force/impedance controller.
    license: BSD
    shortdesc: ee_cart_imped_control
    source: https://svn.csail.mit.edu/mit-ros-pkg/trunk/ee_cart_imped/ee_cart_imped_control
    website: http://ros.org/wiki/ee_cart_imped_control
  hand_interaction:
    author: !!python/unicode 'Garratt'
    deps:
    - eigen
    - tf
    - roscpp
    - nnn
    - nite
    - skeletal_tracker
    - parallel_tools
    - pcl_tools
    - body_msgs
    desc: hand_interaction
    license: BSD
    shortdesc: hand_interaction
    source: https://svn.csail.mit.edu/mit-ros-pkg/trunk/kinect_utils/hand_interaction
    website: http://ros.org/wiki/hand_interaction
  impromptu_buttons:
    author: !!python/unicode 'garratt'
    deps:
    - pcl
    - pcl_ros
    - sensor_msgs
    - geometry_msgs
    - pcl_tools
    - nnn
    - roscpp
    desc: "The  impromptu_buttons package lets the user create buttons by drawing\
      \ them on a white piece of paper. \n\t   The buttons can then be pressed to\
      \ create noises."
    license: BSD
    shortdesc: impromptu_buttons allows the user to create and interact with buttons
    source: https://svn.csail.mit.edu/mit-ros-pkg/trunk/kinect_utils/impromptu_buttons
    website: http://ros.org/wiki/impromptu_buttons
  nnn:
    author: !!python/unicode 'Garratt'
    deps:
    - pcl
    - pcl_ros
    desc: "Naive Nearest Neigbors\n    This library provides a naive way of doing\
      \ a radius search for nearest neighbors, by simply searching through all the\
      \ points to find which points are within boxes around the point in question.\n\
      \    This library was created as a benchmark against which ANN and FLANN should\
      \ be compared (at least for radius search)"
    license: BSD
    shortdesc: "Naive Nearest Neigbors\n    This library provides a naive way of doing\
      \ a radius search for neares..."
    source: https://svn.csail.mit.edu/mit-ros-pkg/trunk/nnn
    website: http://ros.org/wiki/nnn
  parallel_tools:
    author: !!python/unicode 'garratt'
    deps:
    - roscpp
    desc: parallel_tools
    license: BSD
    shortdesc: parallel_tools
    source: https://svn.csail.mit.edu/mit-ros-pkg/trunk/parallel_tools
    website: http://ros.org/wiki/parallel_tools
  pcl_tools:
    author: !!python/unicode 'garratt'
    deps:
    - pcl
    - pcl_ros
    - nnn
    - tf
    - sensor_msgs
    - geometry_msgs
    - roscpp
    desc: pcl_tools
    license: BSD
    shortdesc: pcl_tools
    source: https://svn.csail.mit.edu/mit-ros-pkg/trunk/pcl_tools
    website: http://ros.org/wiki/pcl_tools
  piano:
    author: !!python/unicode 'Garratt'
    deps:
    - body_msgs
    - roscpp
    desc: "The piano package uses finger positions to play a five note piano. \n \
      \  The positions of the five fingers are first calibrated, to establish a baseline.\n\
      \t    Then small deviations from those positions cause notes to be played."
    license: BSD
    shortdesc: A program to play 'air piano' using the positions of the fingers on
      one hand
    source: https://svn.csail.mit.edu/mit-ros-pkg/trunk/kinect_utils/piano
    website: http://ros.org/wiki/piano
  skeletal_tracker:
    author: !!python/unicode 'Garratt Gallagher'
    deps:
    - mapping_msgs
    - openni
    - body_msgs
    desc: ''
    license: BSD
    shortdesc: A ROS driver wrapper for user tracking
    source: https://svn.csail.mit.edu/mit-ros-pkg/trunk/kinect_utils/skeletal_tracker
    website: http://ros.org/wiki/skeletal_tracker
mit-ros-pkg-cturtle:
  BarrettWAM:
    author: !!python/unicode 'Barrett corp.'
    deps: []
    license: BSD.
    shortdesc: Barrett low-level controllers (stock btclient)
    source: list.php
    website: https://svn.csail.mit.edu/mit-ros-pkg/branches/cturtle/lis-ros-pkg/BarrettWAM
  Nano17interface:
    author: !!python/unicode 'Kaijen Hsiao (kaijenhsiao@gmail.com)'
    deps:
    - rospy
    - std_msgs
    - std_srvs
    desc: Nano17interface is a library for accessing Nano17 6-axis force/torque sensors.
    license: BSD
    shortdesc: Nano17interface is a library for accessing Nano17 6-axis force/torque
      sensors.
    source: details.php?name=roscpp
    website: https://svn.csail.mit.edu/mit-ros-pkg/branches/cturtle/lis-ros-pkg/Nano17interface
  WAMinterface:
    author: !!python/unicode 'Kaijen Hsiao (kaijenhsiao@gmail.com)'
    deps:
    - rospy
    - std_srvs
    - std_msgs
    - BarrettWAM
    desc: ROS wrapper for Barrett low-level controllers (which are contained in BarrettWAM)
      and inverse kinematics library
    license: BSD
    shortdesc: ROS wrapper for Barrett low-level controllers (which are contained
      in BarrettWAM) and inverse kinema...
    source: details.php?name=roscpp
    website: https://svn.csail.mit.edu/mit-ros-pkg/branches/cturtle/lis-ros-pkg/WAMinterface
mit-ros-pkg-sandbox:
  bakebot:
    author: !!python/unicode 'Mario Bollini'
    deps:
    - mm_test
    - pr2_tabletop_manipulation_launch
    - pr2_gazebo
    - gazebo
    - pr2_tuckarm
    - robot_state_publisher
    - actionlib
    - ee_cart_imped_action
    - actionlib
    - pr2_controllers_msgs
    - pr2_common_action_msgs
    - pr2_pick_and_place_demos
    - pr2_controller_manager
    - smach
    - smach_ros
    desc: bakebot
    license: BSD
    shortdesc: bakebot
    source: https://svn.csail.mit.edu/mit-ros-pkg/branches/sandbox/bakebot
    website: http://ros.org/wiki/bakebot
  bilicar:
    author: !!python/unicode 'garratt'
    deps:
    - rospy
    - geometry_msgs
    desc: bilicar
    license: BSD
    shortdesc: bilicar
    source: https://svn.csail.mit.edu/mit-ros-pkg/branches/sandbox/bilicar
    website: http://ros.org/wiki/bilicar
  bilimapper:
    author: !!python/unicode 'Will Grathwohl'
    deps:
    - pcl_tools
    - roscpp
    - rospy
    - nav_msgs
    - octomap_ros
    desc: bilimapper
    license: BSD
    shortdesc: bilimapper
    source: https://svn.csail.mit.edu/mit-ros-pkg/branches/sandbox/bilimapper
    website: http://ros.org/wiki/bilimapper
  bookbot:
    author: !!python/unicode 'lis'
    deps:
    - roscpp
    - rospy
    - std_msgs
    - sensor_msgs
    - tf
    - geometry_msgs
    - stereo_msgs
    - pcl
    - eigen
    - image_geometry
    - cv_bridge
    - opencv2
    - object_manipulation_msgs
    - actionlib
    - object_manipulation_msgs
    - tabletop_object_detector
    - tabletop_collision_map_processing
    - object_manipulator
    - lis_arm_controller
    - pr2_gripper_grasp_planner_cluster
    desc: bookbot
    license: BSD
    shortdesc: bookbot
    source: https://svn.csail.mit.edu/mit-ros-pkg/branches/sandbox/lis/bookbot
    website: http://ros.org/wiki/bookbot
  cardboard:
    author: !!python/unicode 'Jared Glover'
    deps:
    - eigen
    - furniture
    - geometry_msgs
    - pcl
    - pcl_ros
    - roscpp
    - sensor_msgs
    - tf
    desc: cardboard
    license: BSD
    shortdesc: cardboard
    source: https://svn.csail.mit.edu/mit-ros-pkg/branches/sandbox/cardboard
    website: http://ros.org/wiki/cardboard
  chaos:
    author: !!python/unicode 'Jared Glover'
    deps:
    - eigen3
    - furniture
    - geometry_msgs
    - pcl
    - pcl_tf
    - roscpp
    - sensor_msgs
    - tf
    desc: chaos
    license: GPL
    shortdesc: chaos
    source: https://svn.csail.mit.edu/mit-ros-pkg/branches/sandbox/chaos
    website: http://ros.org/wiki/chaos
  colorbook:
    author: !!python/unicode ''
    deps:
    - roscpp
    - rospy
    - cv_bridge
    - polled_camera
    - dynamic_reconfigure
    - std_msgs
    - sensor_msgs
    - opencv2
    - cv_bridge
    desc: colorbook
    license: BSD
    shortdesc: colorbook
    source: https://svn.csail.mit.edu/mit-ros-pkg/branches/sandbox/lis/colorbook
    website: http://ros.org/wiki/colorbook
  drive_base:
    author: !!python/unicode 'Thomas S Garver'
    deps:
    - roscpp
    - rospy
    - geometry_msgs
    - tf
    - actionlib
    - actionlib_msgs
    desc: drive_base
    license: BSD
    shortdesc: drive_base
    source: https://svn.csail.mit.edu/mit-ros-pkg/branches/sandbox/undergraduate_projects/table_wiping/drive_base
    website: http://ros.org/wiki/drive_base
  ee_cart_imped_demos:
    author: !!python/unicode 'Jennifer Lynn Barry32-G585'
    deps:
    - actionlib
    - roscpp
    - ee_cart_imped_action
    - pr2_controllers_msgs
    desc: ee_cart_imped_demos
    license: BSD
    shortdesc: ee_cart_imped_demos
    source: https://svn.csail.mit.edu/mit-ros-pkg/branches/sandbox/ee_cart_imped_demos
    website: http://ros.org/wiki/ee_cart_imped_demos
  fly_ee_control:
    author: !!python/unicode 'Mario A Bollini'
    deps:
    - ee_cart_imped_control
    - joy
    - tf
    - std_msgs
    - geometry_msgs
    - sensor_msgs
    - pr2_controllers_msgs
    - roscpp
    - topic_tools
    desc: fly_ee_control
    license: BSD
    shortdesc: fly_ee_control
    source: https://svn.csail.mit.edu/mit-ros-pkg/branches/sandbox/fly_ee_control
    website: http://ros.org/wiki/fly_ee_control
  furniture:
    author: !!python/unicode 'Jared Glover'
    deps:
    - std_msgs
    - geometry_msgs
    - rospy
    - roscpp
    - actionlib
    - visualization_msgs
    - sensor_msgs
    - pcl
    - stereo_msgs
    - opencv2
    - cv_bridge
    - tf
    desc: furniture
    license: BSD
    shortdesc: furniture
    source: https://svn.csail.mit.edu/mit-ros-pkg/branches/sandbox/lis/furniture
    website: http://ros.org/wiki/furniture
  furniture_ops:
    author: !!python/unicode 'garratt'
    deps:
    - pcl
    - pcl_tf
    - pcl_ros
    - geometry_msgs
    - pcl_tools
    - mapping_msgs
    - sensor_msgs
    - laser_assembler
    - image_geometry
    - posedetection_msgs
    - roscpp
    desc: furniture_ops
    license: BSD
    shortdesc: furniture_ops
    source: https://svn.csail.mit.edu/mit-ros-pkg/branches/sandbox/furniture_ops
    website: http://ros.org/wiki/furniture_ops
  household_objects_database_test:
    author: !!python/unicode 'Huan Liu'
    deps:
    - database_interface
    - roscpp
    - household_objects_database_msgs
    - object_manipulation_msgs
    - rospy
    - rosgraph
    - roslib
    - rosservice
    desc: household_objects_database_test
    license: BSD
    shortdesc: household_objects_database_test
    source: https://svn.csail.mit.edu/mit-ros-pkg/branches/sandbox/lis/household_objects_database_test
    website: http://ros.org/wiki/household_objects_database_test
  kgui:
    author: !!python/unicode 'garratt'
    deps:
    - body_msgs
    - geometry_msgs
    - tf
    - roscpp
    - rospy
    desc: kgui provides a Minority report like interface.  Using hand positions, the
      user is able to manipulate photos.
    license: BSD
    shortdesc: Minority report interface
    source: https://svn.csail.mit.edu/mit-ros-pkg/branches/sandbox/kgui
    website: http://ros.org/wiki/kgui
  kinect_joy:
    author: !!python/unicode 'garratt'
    deps:
    - roscpp
    - rospy
    - roscpp
    - actionlib
    - actionlib_msgs
    - geometry_msgs
    - sensor_msgs
    - pr2_msgs
    - pr2_controllers_msgs
    - pr2_controller_manager
    - pr2_mechanism_msgs
    - kinematics_msgs
    - urdf
    - ps3joy
    - pr2_common_action_msgs
    - polled_camera
    - body_msgs
    - eigen3
    desc: kinect_joy
    license: BSD
    shortdesc: kinect_joy
    source: https://svn.csail.mit.edu/mit-ros-pkg/branches/sandbox/kinect_joy
    website: http://ros.org/wiki/kinect_joy
  kinect_tools:
    author: !!python/unicode 'garratt'
    deps:
    - pcl
    - pcl_tools
    - eigen3
    - nnn
    - parallel_tools
    - tf
    - sensor_msgs
    - geometry_msgs
    - mapping_msgs
    - roscpp
    desc: kinect_tools
    license: BSD
    shortdesc: kinect_tools
    source: https://svn.csail.mit.edu/mit-ros-pkg/branches/sandbox/kinect_tools
    website: http://ros.org/wiki/kinect_tools
  lis_arm_controller:
    author: !!python/unicode 'Huan Liu'
    deps:
    - rospy
    - tf
    - actionlib
    - pr2_gripper_action
    - pr2_gripper_fingersensor_action
    - joint_trajectory_action
    - std_srvs
    - pr2_controllers_msgs
    - pr2_mechanism_msgs
    - geometry_msgs
    - geometric_shapes_msgs
    - trajectory_msgs
    - object_manipulation_msgs
    - sensor_msgs
    - motion_planning_msgs
    - move_arm_msgs
    - pr2_mechanism_controllers
    - simple_Jtranspose_controller
    - interpolated_ik_motion_planner
    - object_manipulator
    - fingertip_pressure
    - slipgrip_controller
    desc: An arm controller manager based on Kaijen's pr2_gripper_reactive_approach
      arm controller manager.
    license: BSD
    shortdesc: lis_arm_controller
    source: https://svn.csail.mit.edu/mit-ros-pkg/branches/sandbox/lis/lis_arm_controller
    website: http://ros.org/wiki/lis_arm_controller
  meshlab:
    author: !!python/unicode 'Samuel I Davies32-G56432482476175473450'
    deps:
    - roscpp
    desc: meshlab
    license: BSD
    shortdesc: meshlab
    source: https://svn.csail.mit.edu/mit-ros-pkg/branches/sandbox/meshlab
    website: http://ros.org/wiki/meshlab
  minority_report:
    author: !!python/unicode 'garratt'
    deps:
    - body_msgs
    - geometry_msgs
    - tf
    - roscpp
    - rospy
    desc: minority_report provides a Minority report like interface.  Using hand positions,
      the user is able to manipulate photos.
    license: BSD
    shortdesc: Minority report interface
    source: https://svn.csail.mit.edu/mit-ros-pkg/branches/sandbox/minority_report
    website: http://ros.org/wiki/minority_report
  mm_test:
    author: !!python/unicode 'Huan Liu'
    deps:
    - pr2_gripper_reactive_approach
    - actionlib
    - object_manipulation_msgs
    - lis_arm_controller
    desc: mm_test
    license: BSD
    shortdesc: mm_test
    source: https://svn.csail.mit.edu/mit-ros-pkg/branches/sandbox/lis/mm_test
    website: http://ros.org/wiki/mm_test
  move_arm_service:
    author: !!python/unicode 'Jenny Barry'
    deps:
    - move_arm_msgs
    - geometry_msgs
    - motion_planning_msgs
    - planning_environment_msgs
    - pr2_controllers_msgs
    - actionlib
    desc: "Service wrappers around move_arm and\n     interpolated_ik_motion_planner\
      \ to make\n     them easier to use."
    license: BSD
    shortdesc: move_arm_service
    source: https://svn.csail.mit.edu/mit-ros-pkg/branches/sandbox/undergraduate_projects/move_arm_service
    website: http://ros.org/wiki/move_arm_service
  my_gripper_project:
    author: !!python/unicode 'Dylan J Hadfield-Menell'
    deps:
    - roscpp
    - actionlib
    - pr2_gripper_sensor_action
    desc: my_gripper_project
    license: BSD
    shortdesc: my_gripper_project
    source: https://svn.csail.mit.edu/mit-ros-pkg/branches/sandbox/undergraduate_projects/table_wiping/my_gripper_project
    website: http://ros.org/wiki/my_gripper_project
  nidecode:
    author: !!python/unicode 'garratt'
    deps:
    - roscpp
    - pcl
    - rospy
    desc: nidecode
    license: BSD
    shortdesc: nidecode
    source: https://svn.csail.mit.edu/mit-ros-pkg/branches/sandbox/nidecode
    website: http://ros.org/wiki/nidecode
  nifun:
    author: !!python/unicode 'Garratt'
    deps:
    - mapping_msgs
    - openni
    - kinect_tools
    desc: ''
    license: BSD
    shortdesc: A ROS driver wrapper for user tracking
    source: https://svn.csail.mit.edu/mit-ros-pkg/branches/sandbox/nifun
    website: http://ros.org/wiki/nifun
  objcap:
    author: !!python/unicode 'Sam Davies'
    deps:
    - pr2_gripper_reactive_approach
    - actionlib
    - object_manipulation_msgs
    - tabletop_object_detector
    - tabletop_collision_map_processing
    - visualization_msgs
    - cv_bridge
    - roscpp
    - pr2_msgs
    - image_geometry
    - image_transport
    - opencv2
    - tf
    - image_view
    - robot_self_filter2
    - pr2_power_board
    - pr2_msgs
    - pr2_controller_manager
    - move_base_msgs
    - icra_ros_tutorial
    desc: objcap
    license: BSD
    shortdesc: objcap
    source: https://svn.csail.mit.edu/mit-ros-pkg/branches/sandbox/lis/objcap
    website: http://ros.org/wiki/mm_test
  object_survey:
    author: !!python/unicode 'garratt'
    deps:
    - pcl
    - poisson_surface_reconstruction
    - nnn
    - pcl_tools
    - geometry_msgs
    - sensor_msgs
    - tf
    - roscpp
    - laser_geometry
    - cv_bridge
    - furniture_ops
    - simple_controller
    - polled_camera
    - imagesift
    - posedetection_msgs
    - siftviewer
    - eigen_conversions
    - meshlab
    - dynamic_reconfigure
    - rosbag
    desc: object_survey
    license: BSD
    shortdesc: object_survey
    source: https://svn.csail.mit.edu/mit-ros-pkg/branches/sandbox/object_survey
    website: http://ros.org/wiki/object_survey
  objrec:
    author: !!python/unicode ''
    deps:
    - sensor_msgs
    - roscpp
    - cv_bridge
    - opencv2
    - polled_camera
    - dynamic_reconfigure
    - gazebo
    - stereo_msgs
    - actionlib
    - pr2_controllers_msgs
    - nav_msgs
    - household_objects_database_msgs
    desc: objrec
    license: ''
    shortdesc: objrec
    source: https://svn.csail.mit.edu/mit-ros-pkg/branches/sandbox/objrec
    website: http://ros.org/wiki/objrec
  open_cupboard_launch:
    author: !!python/unicode 'ulziibayar otgonbaatar'
    deps:
    - opendoors
    - tabletop_for_cabinet
    - move_arm_service
    desc: open_cupboard_launch
    license: BSD
    shortdesc: open_cupboard_launch
    source: https://svn.csail.mit.edu/mit-ros-pkg/branches/sandbox/undergraduate_projects/opencupboard/open_cupboard_launch
    website: http://ros.org/wiki/open_cupboard_launch
  opendoors:
    author: !!python/unicode 'Anne E Holladay'
    deps:
    - actionlib
    - motion_planning_msgs
    - geometry_msgs
    - ee_cart_imped_action
    - actionlib_msgs
    - move_arm_service
    - pr2_controllers_msgs
    - visualization_msgs
    desc: ''
    license: BSD
    shortdesc: ''
    source: https://svn.csail.mit.edu/mit-ros-pkg/branches/sandbox/undergraduate_projects/opencupboard/opendoors
    website: http://ros.org/wiki/opendoors
  openrave_pr2:
    author: !!python/unicode 'Huan Liu'
    deps:
    - orrosplanning
    - mm_test
    desc: openrave_pr2
    license: BSD
    shortdesc: openrave_pr2
    source: https://svn.csail.mit.edu/mit-ros-pkg/branches/sandbox/lis/openrave_pr2
    website: http://ros.org/wiki/openrave_pr2
  poisson_surface_reconstruction:
    author: !!python/unicode 'Samuel I. Davies'
    deps:
    - pcl
    - sensor_msgs
    - meshlab
    - roscpp
    desc: poisson_surface_reconstruction
    license: BSD
    shortdesc: poisson_surface_reconstruction
    source: https://svn.csail.mit.edu/mit-ros-pkg/branches/sandbox/poisson_surface_reconstruction
    website: http://ros.org/wiki/poisson_surface_reconstruction
  pr2_pick_and_place_tutorial_python:
    author: !!python/unicode 'Huan Liu'
    deps:
    - actionlib
    - object_manipulation_msgs
    - tabletop_object_detector
    - tabletop_collision_map_processing
    - object_manipulator
    - pr2_gripper_reactive_approach
    - bookbot
    desc: pr2_pick_and_place_tutorial_python
    license: BSD
    shortdesc: pr2_pick_and_place_tutorial_python
    source: https://svn.csail.mit.edu/mit-ros-pkg/branches/sandbox/lis/pr2_pick_and_place_tutorial_python
    website: http://ros.org/wiki/pr2_pick_and_place_tutorial_python
  pressure_practice:
    author: !!python/unicode 'Thomas S Garver'
    deps:
    - rospy
    - fingertip_pressure
    - sound_play
    - ee_cart_imped_action
    - tf
    - geometry_msgs
    - roscpp
    - drive_base
    - tabletop_object_detector
    desc: pressure_practice
    license: BSD
    shortdesc: pressure_practice
    source: https://svn.csail.mit.edu/mit-ros-pkg/branches/sandbox/undergraduate_projects/table_wiping/pressure_practice
    website: http://ros.org/wiki/pressure_practice
  reactive_grasp_test:
    author: !!python/unicode 'Huan Liu85775392488577539248'
    deps: []
    desc: grasp_test
    license: BSD
    shortdesc: reactive_grasp_test
    source: https://svn.csail.mit.edu/mit-ros-pkg/branches/sandbox/lis/reactive_grasp_test
    website: http://ros.org/wiki/grasp_test
  robot_self_filter2:
    author: !!python/unicode 'Ioan Sucan'
    deps:
    - roscpp
    - tf
    - filters
    - sensor_msgs
    - visualization_msgs
    - geometric_shapes
    - urdf
    - resource_retriever
    desc: The robot self filter is a package that allows you to filter out robot body
      parts from sensor information using the known positions and orientations of
      these parts.
    license: BSD
    shortdesc: robot_self_filter2
    source: https://svn.csail.mit.edu/mit-ros-pkg/branches/sandbox/lis/robot_self_filter2
    website: http://ros.org/wiki/robot_self_filter
  siftviewer:
    author: !!python/unicode 'garratt'
    deps:
    - imagesift
    - opencv2
    - cv_bridge
    - sensor_msgs
    - posedetection_msgs
    - image_geometry
    - image_proc
    - flann
    desc: siftviewer
    license: BSD
    shortdesc: siftviewer
    source: https://svn.csail.mit.edu/mit-ros-pkg/branches/sandbox/siftviewer
    website: http://ros.org/wiki/siftviewer
  simple_arm_controller:
    author: !!python/unicode 'garratt'
    deps:
    - actionlib
    - pr2_controllers_msgs
    - trajectory_msgs
    - move_arm_msgs
    desc: simple_arm_controller
    license: BSD
    shortdesc: simple_arm_controller
    source: https://svn.csail.mit.edu/mit-ros-pkg/branches/sandbox/simple_arm_controller
    website: http://ros.org/wiki/simple_arm_controller
  simple_controller:
    author: !!python/unicode 'garratt'
    deps:
    - rospy
    - geometry_msgs
    - mapping_msgs
    - sensor_msgs
    - tf
    - actionlib
    - actionlib_msgs
    - pr2_controllers_msgs
    desc: simple_controller
    license: BSD
    shortdesc: simple_controller
    source: https://svn.csail.mit.edu/mit-ros-pkg/branches/sandbox/simple_controller
    website: http://ros.org/wiki/simple_controller
  tabletop_for_cabinet:
    author: !!python/unicode 'Anne E Holladay'
    deps:
    - pr2_pick_and_place_demos
    - roscpp
    - tabletop_object_detector
    - sensor_msgs
    - visualization_msgs
    - pcl
    - geometry_msgs
    - actionlib
    - opendoors
    - object_manipulation_msgs
    desc: tabletop_for_cabinet
    license: BSD
    shortdesc: tabletop_for_cabinet
    source: https://svn.csail.mit.edu/mit-ros-pkg/branches/sandbox/undergraduate_projects/opencupboard/tabletop_for_cabinet
    website: http://ros.org/wiki/tabletop_for_cabinet
  target_nav:
    author: !!python/unicode ''
    deps:
    - pr2_head_action
    - geometry_msgs
    - tf
    - roscpp
    - actionlib
    desc: target_nav
    license: BSD
    shortdesc: target_nav
    source: https://svn.csail.mit.edu/mit-ros-pkg/branches/sandbox/lis/target_nav
    website: http://ros.org/wiki/target_nav
  texture_experiments:
    author: !!python/unicode ''
    deps:
    - sensor_msgs
    - roscpp
    - cv_bridge
    - opencv2
    - image_geometry
    - gazebo
    - stereo_msgs
    - pr2_controllers_msgs
    - actionlib
    - nav_msgs
    - geometry_msgs
    - tf
    desc: texture_experiments
    license: BSD
    shortdesc: texture_experiments
    source: https://svn.csail.mit.edu/mit-ros-pkg/branches/sandbox/texture_experiments
    website: http://ros.org/wiki/texture_experiments
  turntable:
    author: !!python/unicode 'Jared Glover'
    deps:
    - rospy
    - rosbag
    - robotis
    - sensor_msgs
    desc: turntable
    license: BSD
    shortdesc: turntable
    source: https://svn.csail.mit.edu/mit-ros-pkg/branches/sandbox/turntable
    website: http://ros.org/wiki/turntable
  visual_search:
    author: !!python/unicode 'Sam Davies'
    deps:
    - sensor_msgs
    - roscpp
    - cv_bridge
    - opencv2
    - polled_camera
    - dynamic_reconfigure
    - actionlib
    - pr2_controllers_msgs
    - nav_msgs
    - tf
    desc: visual_search
    license: BSD
    shortdesc: visual_search
    source: https://svn.csail.mit.edu/mit-ros-pkg/branches/sandbox/visual_search
    website: http://ros.org/wiki/visual_search
mrpt-ros-pkg:
  mrpt_bridge:
    author: !!python/unicode 'Jose Luis'
    deps:
    - geometry_msgs
    - sensor_msgs
    - mrpt_msgs
    - mrpt_libs
    desc: A C++ library for converting between some of the MRPT data types and ROS
      messages.
    license: BSD
    shortdesc: mrpt_bridge
    source: http://mrpt-ros-pkg.googlecode.com/svn/trunk/mrpt_common/mrpt_bridge
    website: http://ros.org/wiki/mrpt_bridge
  mrpt_ekf_slam_2d:
    author: !!python/unicode 'Jose Luis'
    deps:
    - mrpt_msgs
    - roscpp
    desc: mrpt_ekf_slam_2d
    license: BSD
    shortdesc: mrpt_ekf_slam_2d
    source: http://mrpt-ros-pkg.googlecode.com/svn/trunk/mrpt_slam/mrpt_ekf_slam_2d
    website: http://ros.org/wiki/mrpt_ekf_slam_2d
  mrpt_ekf_slam_3d:
    author: !!python/unicode 'Jose Luis'
    deps:
    - mrpt_msgs
    - roscpp
    desc: mrpt_ekf_slam_3d
    license: BSD
    shortdesc: mrpt_ekf_slam_3d
    source: http://mrpt-ros-pkg.googlecode.com/svn/trunk/mrpt_slam/mrpt_ekf_slam_3d
    website: http://ros.org/wiki/mrpt_ekf_slam_3d
  mrpt_hokuyo:
    author: !!python/unicode 'Jose Luis'
    deps:
    - sensor_msgs
    - roscpp
    desc: mrpt_hokuyo
    license: BSD
    shortdesc: mrpt_hokuyo
    source: http://mrpt-ros-pkg.googlecode.com/svn/trunk/mrpt_hwdrivers/mrpt_hokuyo
    website: http://ros.org/wiki/mrpt_hokuyo
  mrpt_libs:
    author: !!python/unicode 'Jose Luis Blanco Claraco'
    deps: []
    desc: "Adding this package to your dependencies assures that MRPT libraries will\
      \ \n     be installed in your system. For example, in Ubuntu this means installing\n\
      \     the libmrpt-dev package."
    license: BSD
    shortdesc: MRPT C++ libraries
    source: http://mrpt-ros-pkg.googlecode.com/svn/trunk/mrpt_common/mrpt_libs
    website: http://ros.org/wiki/mrpt_libs
  mrpt_msgs:
    author: !!python/unicode 'Jose Luis'
    deps:
    - std_msgs
    - geometry_msgs
    desc: mrpt_msgs
    license: BSD
    shortdesc: mrpt_msgs
    source: http://mrpt-ros-pkg.googlecode.com/svn/trunk/mrpt_common/mrpt_msgs
    website: http://ros.org/wiki/mrpt_msgs
  mrpt_ro_slam:
    author: !!python/unicode 'Jose Luis'
    deps:
    - mrpt_libs
    - mrpt_msgs
    desc: mrpt_ro_slam
    license: BSD
    shortdesc: mrpt_ro_slam
    source: http://mrpt-ros-pkg.googlecode.com/svn/trunk/mrpt_slam/mrpt_ro_slam
    website: http://ros.org/wiki/mrpt_ro_slam
  rawlog_play:
    author: !!python/unicode 'Jose Luis'
    deps:
    - roscpp
    - geometry_msgs
    - sensor_msgs
    - mrpt_bridge
    desc: rawlog_play
    license: BSD
    shortdesc: rawlog_play
    source: http://mrpt-ros-pkg.googlecode.com/svn/trunk/mrpt_common/rawlog_play
    website: http://ros.org/wiki/rawlog_play
multimaster-ros-pkg:
  pybonjour:
    author: !!python/unicode 'Jon Fink'
    deps: []
    desc: pybonjour
    license: BSD
    shortdesc: pybonjour
    source: http://github.com/jonfink/multimaster-ros-pkg.git
    website: http://ros.org/wiki/pybonjour
  rosmaster_sd:
    author: !!python/unicode 'Ken Conley'
    deps: []
    desc: ROS <a href="http://ros.org/wiki/Master">Master</a> implementation.
    license: BSD
    shortdesc: rosmaster_sd
    source: details.php?name=roslib
    website: http://github.com/jonfink/multimaster-ros-pkg.git
mvog_mapping:
  mvog_gtk_gui:
    author: !!python/unicode 'Ivan Dryanovski'
    deps:
    - roscpp
    - mvog_model
    desc: mvog_gtk_gui
    license: BSD
    shortdesc: mvog_gtk_gui
    source: http://robotics.ccny.cuny.edu/git/ccny-ros-pkg/mvog_mapping.git
    website: http://ros.org/wiki/mvog_gtk_gui
  mvog_model:
    author: !!python/unicode 'Ivan Dryanovski'
    deps:
    - roscpp
    - bullet
    - sensor_msgs
    desc: mvog_model
    license: BSD
    shortdesc: mvog_model
    source: http://robotics.ccny.cuny.edu/git/ccny-ros-pkg/mvog_mapping.git
    website: http://ros.org/wiki/mvog_model
  mvog_server:
    author: !!python/unicode 'Ivan Dryanovski'
    deps:
    - roscpp
    - tf
    - mvog_model
    - mvog_gtk_gui
    desc: mvog_server
    license: BSD
    shortdesc: mvog_server
    source: http://robotics.ccny.cuny.edu/git/ccny-ros-pkg/mvog_mapping.git
    website: http://ros.org/wiki/mvog_server
nao_openni:
  nao_openni:
    author: !!python/unicode 'Bener SUAY'
    deps:
    - roscpp
    - roslib
    - std_msgs
    - nav_msgs
    - geometry_msgs
    - tf
    - nao_ctrl
    - nao_description
    - message_filters
    - robot_state_publisher
    - openni
    - kdl
    - tf
    desc: nao_openni
    license: BSD
    shortdesc: nao_openni
    source: https://github.com/wpi-ros-pkg-git/nao_openni.git
    website: http://ros.org/wiki/nao_openni
navigation:
  amcl:
    author: !!python/unicode 'Brian P. Gerkey'
    deps:
    - roscpp
    - tf
    - message_filters
    - nav_msgs
    - std_srvs
    - map_server
    - rostest
    desc: "<p>\n    amcl is a probabilistic localization system for a robot moving\
      \ in\n    2D. It implements the adaptive (or KLD-sampling) Monte Carlo\n   \
      \ localization approach (as described by Dieter Fox), which uses a\n    particle\
      \ filter to track the pose of a robot against a known map.\n</p>\n<p>\n    This\
      \ node is derived, with thanks, from Andrew Howard's excellent\n    'amcl' Player\
      \ driver.\n</p>"
    license: LGPL
    shortdesc: ''
    source: https://kforge.ros.org/navigation/navigation
    website: http://ros.org/wiki/amcl
  base_local_planner:
    author: !!python/unicode 'Eitan Marder-Eppstein, Eric Perko'
    deps:
    - std_msgs
    - nav_msgs
    - rosconsole
    - roscpp
    - tf
    - roslib
    - rospy
    - pluginlib
    - costmap_2d
    - voxel_grid
    - angles
    - visualization_msgs
    - geometry_msgs
    - nav_core
    - pcl
    - pcl_ros
    desc: This package provides implementations of the Trajectory Rollout and Dynamic
      Window approaches to local robot navigation on a plane. Given a plan to follow
      and a costmap, the controller produces velocity commands to send to a mobile
      base. This package supports both holonomic and non-holonomic robots, any robot
      footprint that can be represented as a convex polygon or circle, and exposes
      its configuration as ROS parameters that can be set in a launch file. This package's
      ROS wrapper adheres to the BaseLocalPlanner interface specified in the <a href="http://ros.org/wiki/nav_core">nav_core</a>
      package.
    license: BSD
    shortdesc: A local planner for a mobile base
    source: https://kforge.ros.org/navigation/navigation
    website: http://ros.org/wiki/base_local_planner
  carrot_planner:
    author: !!python/unicode 'Eitan Marder-Eppstein, Sachin Chitta'
    deps:
    - roscpp
    - costmap_2d
    - pluginlib
    - nav_core
    - base_local_planner
    - tf
    - angles
    desc: This planner attempts to find a legal place to put a carrot for the robot
      to follow. It does this by moving back along the vector between the robot and
      the goal point.
    license: BSD
    shortdesc: carrot_planner
    source: https://kforge.ros.org/navigation/navigation
    website: http://pr.willowgarage.com/wiki/carrot_planner
  clear_costmap_recovery:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - roscpp
    - tf
    - costmap_2d
    - nav_core
    - pluginlib
    desc: This package provides a recovery behavior for the navigation stack that
      attempts to clear space by reverting the costmaps used by the navigation stack
      to the static map outside of a given area.
    license: BSD
    shortdesc: clear_costmap_recovery
    source: https://kforge.ros.org/navigation/navigation
    website: http://ros.org/wiki/clear_costmap_recovery
  costmap_2d:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - rosconsole
    - roscpp
    - std_msgs
    - geometry_msgs
    - sensor_msgs
    - laser_geometry
    - tf
    - voxel_grid
    - nav_msgs
    - visualization_msgs
    - rosbag
    - map_server
    - pcl
    - pcl_ros
    desc: "This package provides an implementation of a 2D costmap that takes in sensor\n\
      \  data from the world, builds a 2D or 3D occupancy grid of the data (depending\n\
      \  on whether a voxel based implementation is used), and inflates costs in a\n\
      \  2D costmap based on the occupancy grid and a user specified inflation radius.\n\
      \  This package also provides support for map_server based initialization of\
      \ a\n  costmap, rolling window based costmaps, and parameter based subscription\
      \ to\n  and configuration of sensor topics."
    license: BSD
    shortdesc: A 2D Costmap
    source: https://kforge.ros.org/navigation/navigation
    website: http://pr.willowgarage.com/wiki/costmap_2d
  dwa_local_planner:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - roscpp
    - tf
    - costmap_2d
    - roslib
    - nav_core
    - nav_msgs
    - eigen
    - base_local_planner
    - angles
    - dynamic_reconfigure
    desc: "This package provides an implementation of the Dynamic Window Approach\
      \ to\n    local robot navigation on a plane. Given a global plan to follow and\
      \ a\n    costmap, the local planner produces velocity commands to send to a\
      \ mobile\n    base. This package supports any robot who's footprint can be represented\
      \ as\n    a convex polygon or cicrle, and exposes its configuration as ROS parameters\n\
      \    that can be set in a launch file. The parameters for this planner are also\n\
      \    dynamically reconfigurable. This package's ROS wrapper adheres to the\n\
      \    BaseLocalPlanner interface specified in the <a href=\"http://ros.org/wiki/nav_core\"\
      >nav_core</a> package."
    license: BSD
    shortdesc: A local planner for a mobile base that uses the Dynamic Window Approach
      to local control.
    source: https://kforge.ros.org/navigation/navigation
    website: http://ros.org/wiki/dwa_local_planner
  fake_localization:
    author: !!python/unicode 'Ioan A. Sucan'
    deps:
    - roscpp
    - rosconsole
    - nav_msgs
    - geometry_msgs
    - tf
    - message_filters
    - angles
    desc: A ROS node that simply forwards odometry information.
    license: BSD
    shortdesc: fake localization
    source: https://kforge.ros.org/navigation/navigation
    website: http://pr.willowgarage.com/wiki/fake_localization
  map_server:
    author: !!python/unicode 'Brian Gerkey, Tony Pratkanis'
    deps:
    - rosconsole
    - roscpp
    - rospy
    - nav_msgs
    - bullet
    - yaml_cpp
    desc: map_server provides the <tt>map_server</tt> ROS <a href="http://www.ros.org/wiki/Nodes">Node</a>,
      which offers map data as a ROS <a href="http://www.ros.org/wiki/Services">Service</a>.
      It also provides the <tt>map_saver</tt> command-line utility, which allows dynamically
      generated maps to be saved to file.
    license: BSD
    shortdesc: Static map server
    source: https://kforge.ros.org/navigation/navigation
    website: http://ros.org/wiki/map_server
  move_base:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - roscpp
    - rosconsole
    - std_msgs
    - move_base_msgs
    - geometry_msgs
    - visualization_msgs
    - actionlib
    - nav_core
    - pluginlib
    - costmap_2d
    - tf
    - nav_msgs
    - roslib
    - rospy
    - rosmsg
    - rostopic
    - std_srvs
    - base_local_planner
    - navfn
    - clear_costmap_recovery
    - rotate_recovery
    desc: The move_base package provides an implementation of an action (see the <a
      href="http://www.ros.org/wiki/actionlib">actionlib</a> package) that, given
      a goal in the world, will attempt to reach it with a mobile base. The move_base
      node links together a global and local planner to accomplish its global navigation
      task. It supports any global planner adhering to the nav_core::BaseGlobalPlanner
      interface specified in the <a href="http://www.ros.org/wiki/nav_core">nav_core</a>
      package and any local planner adhering to the nav_core::BaseLocalPlanner interface
      specified in the <a href="http://www.ros.org/wiki/nav_core">nav_core</a> package.
      The move_base node also maintains two costmaps, one for the global planner,
      and one for a local planner (see the <a href="http://www.ros.org/wiki/costmap_2d">costmap_2d</a>
      package) that are used to accomplish navigation tasks.
    license: BSD
    shortdesc: A general navigation stack
    source: https://kforge.ros.org/navigation/navigation
    website: http://ros.org/wiki/move_base
  move_base_msgs:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - roslib
    - std_msgs
    - actionlib_msgs
    - geometry_msgs
    desc: Holds the action description and relevant messages for the move_base package
    license: BSD
    shortdesc: Holds the action description and relevant messages for the move_base
      package
    source: https://kforge.ros.org/navigation/navigation
    website: http://pr.willowgarage.com/wiki/move_base_msgs
  move_slow_and_clear:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - roscpp
    - nav_core
    - costmap_2d
    - geometry_msgs
    - pluginlib
    - dynamic_reconfigure
    desc: move_slow_and_clear
    license: BSD
    shortdesc: move_slow_and_clear
    source: https://kforge.ros.org/navigation/navigation
    website: http://ros.org/wiki/move_slow_and_clear
  nav_core:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - std_msgs
    - geometry_msgs
    desc: This package provides common interfaces for navigation specific robot actions.
      Currently, this package provides the BaseGlobalPlanner, BaseLocalPlanner, and
      RecoveryBehavior interfaces, which can be used to build actions that can easily
      swap their planner, local controller, or recovery behavior for new versions
      adhering to the same interface.
    license: BSD
    shortdesc: This package provides common interfaces for navigation specific robot
      actions. Currently, this pac...
    source: https://kforge.ros.org/navigation/navigation
    website: http://ros.org/wiki/nav_core
  navfn:
    author: !!python/unicode 'Kurt Konolige, Eitan Marder-Eppstein'
    deps:
    - rosconsole
    - roscpp
    - geometry_msgs
    - costmap_2d
    - nav_core
    - pluginlib
    - nav_msgs
    - tf
    - visualization_msgs
    - pcl_ros
    desc: navfn provides a fast interpolated navigation function that can be used
      to create plans for a mobile base. The planner assumes a circular robot and
      operates on a costmap to find a minimum cost plan from a start point to an end
      point in a grid. The navigation function is computed with Dijkstra's algorithm,
      but support for an A* heuristic may also be added in the near future. navfn
      also provides a ROS wrapper for the navfn planner that adheres to the nav_core::BaseGlobalPlanner
      interface specified in <a href="http://ros.org/wiki/nav_core">nav_core</a>.
    license: BSD
    shortdesc: A fast interpolated navigation function
    source: https://kforge.ros.org/navigation/navigation
    website: http://ros.org/wiki/navfn
  robot_pose_ekf:
    author: !!python/unicode 'Wim Meeussen'
    deps:
    - roscpp
    - bfl
    - std_msgs
    - geometry_msgs
    - sensor_msgs
    - nav_msgs
    - tf
    desc: The Robot Pose EKF package is used to estimate the 3D pose of a robot, based
      on (partial) pose measurements coming from different sources. It uses an extended
      Kalman filter with a 6D model (3D position and 3D orientation) to combine measurements
      from wheel odometry, IMU sensor and visual odometry. The basic idea is to offer
      loosely coupled integration with different sensors, where sensor signals are
      received as ROS messages.
    license: BSD
    shortdesc: The Robot Pose EKF package is used to estimate the 3D pose of a robot,
      based on (partial) pose mea...
    source: https://kforge.ros.org/navigation/navigation
    website: http://ros.org/wiki/robot_pose_ekf
  rotate_recovery:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - roscpp
    - nav_core
    - tf
    - costmap_2d
    - geometry_msgs
    - base_local_planner
    - pluginlib
    - angles
    desc: This package provides a recovery behavior for the navigation stack that
      attempts to clear space by performing a 360 degree rotation of the robot.
    license: BSD
    shortdesc: rotate_recovery
    source: https://kforge.ros.org/navigation/navigation
    website: http://ros.org/wiki/rotate_recovery
  voxel_grid:
    author: !!python/unicode 'Eitan Marder-Eppstein, Eric Berger'
    deps:
    - rosconsole
    desc: 'voxel_grid provides an implementation of an efficient 3D voxel grid. The
      occupancy grid can support 3 different representations for the state of a cell:
      marked, free, or unknown. Due to the underlying implementation relying on bitwise
      and and or integer operations, the voxel grid only supports 16 different levels
      per voxel column. However, this limitation yields raytracing and cell marking
      performance in the grid comparable to standard 2D structures making it quite
      fast compared to most 3D structures.'
    license: BSD
    shortdesc: 3D Voxel Grid
    source: https://kforge.ros.org/navigation/navigation
    website: http://ros.org/wiki/voxel_grid
navigation_experimental:
  assisted_teleop:
    author: !!python/unicode 'Tully Foote'
    deps:
    - tf
    - costmap_2d
    - roscpp
    - roslib
    - geometry_msgs
    - move_base_msgs
    - actionlib
    - message_filters
    - base_local_planner
    - angles
    - eigen3
    - pluginlib
    - sensor_msgs
    - filters
    desc: assisted_teleop
    license: BSD
    shortdesc: assisted_teleop
    source: https://kforge.ros.org/navigation/experimental
    website: http://ros.org/wiki/assisted_teleop
  goal_passer:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - roscpp
    - costmap_2d
    - pluginlib
    - nav_core
    desc: goal_passer
    license: BSD
    shortdesc: goal_passer
    source: https://kforge.ros.org/navigation/experimental
    website: http://ros.org/wiki/goal_passer
  isolated_point_filter:
    author: !!python/unicode 'Bhaskara Marthi'
    deps:
    - sensor_msgs
    - filters
    - pluginlib
    - roscpp
    - tf
    desc: isolated_point_filter
    license: BSD
    shortdesc: isolated_point_filter
    source: https://kforge.ros.org/navigation/experimental
    website: http://ros.org/wiki/isolated_point_filter
  pose_base_controller:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - actionlib
    - move_base_msgs
    - nav_msgs
    - roscpp
    - tf
    - geometry_msgs
    desc: pose_base_controller
    license: BSD
    shortdesc: pose_base_controller
    source: https://kforge.ros.org/navigation/experimental
    website: http://ros.org/wiki/pose_base_controller
  pose_follower:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - nav_core
    - base_local_planner
    - costmap_2d
    - roscpp
    - tf
    - nav_msgs
    - pluginlib
    desc: pose_follower
    license: BSD
    shortdesc: pose_follower
    source: https://kforge.ros.org/navigation/experimental
    website: http://ros.org/wiki/pose_follower
  sbpl_lattice_planner:
    author: !!python/unicode 'Michael Phillips'
    deps:
    - roscpp
    - sbpl
    - costmap_2d
    - nav_core
    - pluginlib
    - geometry_msgs
    - nav_msgs
    desc: sbpl_lattice_planner
    license: BSD
    shortdesc: sbpl_lattice_planner
    source: https://kforge.ros.org/navigation/experimental
    website: http://ros.org/wiki/sbpl_lattice_planner
  sbpl_recovery:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - roscpp
    - nav_core
    - sbpl_lattice_planner
    - pose_follower
    - costmap_2d
    - pluginlib
    - base_local_planner
    desc: sbpl_recovery
    license: BSD
    shortdesc: sbpl_recovery
    source: https://kforge.ros.org/navigation/experimental
    website: http://ros.org/wiki/sbpl_recovery
  twist_recovery:
    author: !!python/unicode 'Bhaskara Marthi'
    deps:
    - nav_core
    - costmap_2d
    - geometry_msgs
    - pluginlib
    - base_local_planner
    desc: twist_recovery
    license: BSD
    shortdesc: twist_recovery
    source: https://kforge.ros.org/navigation/experimental
    website: http://ros.org/wiki/twist_recovery
navigation_tutorials:
  laser_scan_publisher_tutorial:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - roscpp
    - sensor_msgs
    desc: laser_scan_publisher_tutorial
    license: BSD
    shortdesc: laser_scan_publisher_tutorial
    source: https://kforge.ros.org/navigation/tutorials
    website: http://pr.willowgarage.com/wiki/laser_scan_publisher_tutorial
  navigation_stage:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - move_base
    - stage
    - amcl
    - map_server
    - fake_localization
    - gmapping
    desc: This package holds example launch files for running the ROS navigation stack
      in stage.
    license: BSD
    shortdesc: Example launch files for navigation in stage.
    source: https://kforge.ros.org/navigation/tutorials
    website: http://www.ros.org/wiki/navigation_stage
  odometry_publisher_tutorial:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - roscpp
    - nav_msgs
    - tf
    desc: odometry_publisher_tutorial
    license: BSD
    shortdesc: odometry_publisher_tutorial
    source: https://kforge.ros.org/navigation/tutorials
    website: http://ros.org/wiki/odometry_publisher_tutorial
  point_cloud_publisher_tutorial:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - roscpp
    - sensor_msgs
    desc: point_cloud_publisher_tutorial
    license: BSD
    shortdesc: point_cloud_publisher_tutorial
    source: https://kforge.ros.org/navigation/tutorials
    website: http://pr.willowgarage.com/wiki/point_cloud_publisher_tutorial
  robot_setup_tf_tutorial:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - roscpp
    - tf
    - geometry_msgs
    desc: robot_setup_tf
    license: BSD
    shortdesc: robot_setup_tf
    source: https://kforge.ros.org/navigation/tutorials
    website: http://pr.willowgarage.com/wiki/robot_tf_publisher
  roomba_stage:
    author: "Gon\xC3\xA7alo Cabrita"
    deps: []
    desc: roomba_stage
    license: BSD
    shortdesc: roomba_stage
    source: https://kforge.ros.org/navigation/tutorials
    website: http://ros.org/wiki/roomba_stage
  simple_navigation_goals_tutorial:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - move_base_msgs
    - actionlib
    - roscpp
    - tf
    desc: A package that provides sample code for sending simple navigation goals
      to the navigation stack.
    license: BSD
    shortdesc: simple_navigation_goals_tutorial
    source: https://kforge.ros.org/navigation/tutorials
    website: http://pr.willowgarage.com/wiki/simple_navigation_goals_tutorial
openni_kinect:
  nite:
    author: !!python/unicode 'Tully Foote'
    deps:
    - openni
    desc: "This is a meta package to pull in the dependencies for NITE and\n    export\
      \ the necessary build flags."
    license: BSD
    shortdesc: "This is a meta package to pull in the dependencies for NITE and\n\
      \    export the necessary build..."
    source: https://kforge.ros.org/openni/openni_ros
    website: http://ros.org/wiki/nite
  openni:
    author: !!python/unicode 'Wim Meeussen'
    deps: []
    desc: openni
    license: BSD
    shortdesc: openni
    source: https://kforge.ros.org/openni/openni_ros
    website: http://ros.org/wiki/openni
  openni_camera:
    author: !!python/unicode 'Radu Bogdan Rusu, Patrick Mihelich, Suat Gedikli'
    deps:
    - roscpp
    - nodelet
    - image_transport
    - sensor_msgs
    - stereo_msgs
    - openni
    - dynamic_reconfigure
    - message_filters
    - eigen
    - pcl_ros
    desc: "A general purpose ROS driver for all OpenNI cameras. The driver publishes:\n\
      \    <ul>\n    \t<li>/camera/depth/camera_info : Camera parameters for the IR\
      \ (depth) camera </li>\n    \t<li>/camera/depth/image : single channel floating\
      \ point (float32) depth image, containing the depth in meters.</li>\n    \t\
      <li>/camera/depth/points : point cloud without color information</li>\n    \t\
      <li>/camera/rgb/camera_info : Camera parameters for the RGB camera </li>\n \
      \   \t<li>/camera/rgb/image_color : RGB image </li>\n    \t<li>/camera/rgb/image_mono\
      \ : Grayscale image </li>\n    \t<li>/camera/rgb/points : point cloud containing\
      \ RGB value for each point </li>\n    </ul>\n    \n    There are two versions\
      \ of the driver: a standard ROS node, and a nodelet."
    license: BSD
    shortdesc: An OpenNI camera ROS driver
    source: https://kforge.ros.org/openni/openni_ros
    website: http://ros.org/wiki/openni_camera
  openni_camera_unstable:
    author: !!python/unicode 'Suat Gedikli, Patrick Mihelich, Radu Bogdan Rusu'
    deps:
    - roscpp
    - nodelet
    - image_transport
    - sensor_msgs
    - stereo_msgs
    - openni
    - dynamic_reconfigure
    - message_filters
    - camera_info_manager
    - tf
    - eigen
    - pcl_ros
    - image_geometry
    - cv_bridge
    desc: "A ROS driver for OpenNI depth (+ RGB) cameras. These include:\n    <ul>\n\
      \      <li> Microsoft Kinect </li>\n      <li> PrimeSense PSDK </li>\n     \
      \ <li> ASUS Xtion Pro (no RGB) </li>\n    </ul>\n\n    The driver publishes\
      \ the raw depth, RGB, and IR image streams. Nodelets\n    and launch files to\
      \ convert these to depth images, disparity images, and\n    point clouds are\
      \ included. Depth and RGB images can be registered using\n    either the factory\
      \ or user calibration."
    license: BSD
    shortdesc: An OpenNI camera ROS driver
    source: https://kforge.ros.org/openni/openni_ros
    website: http://ros.org/wiki/openni_camera_unstable
  openni_tracker:
    author: !!python/unicode 'Tim Field'
    deps:
    - roscpp
    - roslib
    - geometry_msgs
    - openni
    - nite
    - kdl
    - tf
    desc: openni_tracker broadcasts the OpenNI skeleton frames using tf.
    license: BSD
    shortdesc: openni_tracker
    source: https://kforge.ros.org/openni/openni_ros
    website: http://ros.org/wiki/openni_tracker
openrobotino:
  robotino_ar_test:
    author: !!python/unicode 'rec'
    deps:
    - ar_recog
    - geometry_msgs
    - nav_msgs
    - tf
    desc: robotino_ar_test
    license: BSD
    shortdesc: robotino_ar_test
    source: http://svn.openrobotino.org/trunk/ros/experimental/robotino_ar_test
    website: http://ros.org/wiki/robotino_ar_test
  robotino_base:
    author: !!python/unicode 'Dr. Christian Verbeek, REC GmbH, servicerobotics.eu'
    deps:
    - roscpp
    - sensor_msgs
    - nav_msgs
    - tf
    - robotino_msgs
    desc: Access to Robotino's motors, odometry, bumper, IO connector and internal
      sensors.
    license: BSD
    shortdesc: Basic Robotino elements for ROS
    source: http://svn.openrobotino.org/trunk/ros/robotino_drivers/robotino_base
    website: http://ros.org/wiki/robotino_base
  robotino_cam:
    author: !!python/unicode 'Dr. Christian Verbeek, REC GmbH, servicerobotics.eu'
    deps:
    - std_msgs
    - sensor_msgs
    - opencv2
    - image_transport
    - compressed_image_transport
    desc: ''
    license: BSD
    shortdesc: A generic driver for USB cameras on Robotino based on gencam_cu
    source: details.php?name=roscpp
    website: http://svn.openrobotino.org/trunk/ros/robotino_drivers/robotino_cam
  robotino_local_move:
    author: !!python/unicode 'verbeek'
    deps:
    - robotino_base
    - roscpp
    - rospy
    - roslib
    - std_msgs
    - rosconsole
    - actionlib
    - actionlib_msgs
    desc: robotino_local_move
    license: BSD
    shortdesc: robotino_local_move
    source: http://svn.openrobotino.org/trunk/ros/robotino_drivers/robotino_local_move
    website: http://ros.org/wiki/robotino_local_move
  robotino_msgs:
    author: !!python/unicode 'Dr. Christian Verbeek, REC GmbH, servicerobotics.eu'
    deps:
    - roscpp
    desc: Messages for Robotino specific data.
    license: BSD
    shortdesc: Robotino's messages
    source: http://svn.openrobotino.org/trunk/ros/robotino_drivers/robotino_msgs
    website: http://ros.org/wiki/robotino_base
  robotino_navigation:
    author: !!python/unicode 'Dr. Christian Verbeek, REC GmbH, servicerobotics.eu'
    deps:
    - move_base
    - robotino_base
    - geometry_msgs
    - nav_msgs
    desc: All the configuration files needed to run Robotino with the navigation stack
      and rviz.
    license: BSD
    shortdesc: Robotino configuration for the navigation stack
    source: http://svn.openrobotino.org/trunk/ros/robotino_drivers/robotino_navigation
    website: http://ros.org/wiki/robotino_navigation
  robotino_start:
    author: !!python/unicode 'Dr. Christian Verbeek, REC GmbH, servicerobotics.eu'
    deps: []
    desc: Package containing overall startup code.
    license: BSD
    shortdesc: robotino_start
    source: http://svn.openrobotino.org/trunk/ros/robotino_drivers/robotino_start
    website: http://ros.org/wiki/robotino_start
  robotino_teleop:
    author: !!python/unicode 'Dr. Christian Verbeek, REC GmbH, servicerobotics.eu'
    deps:
    - roscpp
    - nav_msgs
    - geometry_msgs
    - joy
    desc: Teleoperation nodes for Robotino, using keyboard or joystick.
    license: BSD
    shortdesc: Robotino teleop nodes
    source: http://svn.openrobotino.org/trunk/ros/robotino_drivers/robotino_teleop
    website: http://ros.org/wiki/robotino_teleop
  robotino_test:
    author: !!python/unicode 'Dr. Christian Verbeek, REC GmbH, servicerobotics.eu'
    deps:
    - roscpp
    - std_msgs
    - sensor_msgs
    - nav_msgs
    - robotino_msgs
    desc: Just a test
    license: BSD
    shortdesc: Robotino test node
    source: http://svn.openrobotino.org/trunk/ros/experimental/robotino_test
    website: http://ros.org/wiki/robotino_base
orocos_controllers:
  fake_servo:
    author: !!python/unicode 'Konrad Banachowicz'
    deps:
    - rtt
    - ocl
    desc: fake_servo
    license: BSD
    shortdesc: fake_servo
    source: https://github.com/RCPRG-ros-pkg/orocos_controllers.git
    website: http://ros.org/wiki/fake_servo
  joint_spline_trajectory_generator:
    author: !!python/unicode 'Konrad Banachowicz'
    deps:
    - rtt
    - ocl
    - rtt_ros_integration_trajectory_msgs
    - kdl
    desc: joint_spline_trajectory_generator
    license: BSD
    shortdesc: joint_spline_trajectory_generator
    source: https://github.com/RCPRG-ros-pkg/orocos_controllers.git
    website: http://ros.org/wiki/joint_spline_trajectory_generator
  oro_joint_state_publisher:
    author: !!python/unicode 'Konrad Banachowicz'
    deps:
    - rtt
    - ocl
    - rtt_ros_integration
    - rtt_ros_integration_sensor_msgs
    - sensor_msgs
    desc: This package contain orocos component, which will publish JoinState for
      you from within orocos controller.
    license: BSD
    shortdesc: oro_joint_state_publisher
    source: https://github.com/RCPRG-ros-pkg/orocos_controllers.git
    website: http://ros.org/wiki/oro_joint_state_publisher
  oro_joint_trajectory_action:
    author: !!python/unicode 'Konrad Banachowicz'
    deps:
    - rtt
    - ocl
    - oro_action_server
    - rtt_ros_integration_pr2_controllers_msgs
    - rtt_ros_integration_trajectory_msgs
    desc: oro_joint_trajectory_action
    license: BSD
    shortdesc: oro_joint_trajectory_action
    source: https://github.com/RCPRG-ros-pkg/orocos_controllers.git
    website: http://ros.org/wiki/oro_joint_trajectory_action
  oro_servo_msgs:
    author: !!python/unicode 'Konrad Banachowicz'
    deps:
    - rtt_ros_integration
    desc: oro_servo_msgs
    license: BSD
    shortdesc: oro_servo_msgs
    source: https://github.com/RCPRG-ros-pkg/orocos_controllers.git
    website: http://ros.org/wiki/oro_servo_msgs
  rtt_ros_integration_pr2_controllers_msgs:
    author: !!python/unicode 'konrad'
    deps:
    - rtt_ros_integration
    - rtt_ros_integration_std_msgs
    - pr2_controllers_msgs
    - rtt_ros_integration_actionlib_msgs
    - rtt_ros_integration_trajectory_msgs
    - rtt_ros_integration_geometry_msgs
    desc: rtt_ros_integration_pr2_controllers_msgs
    license: BSD
    shortdesc: rtt_ros_integration_pr2_controllers_msgs
    source: https://github.com/RCPRG-ros-pkg/orocos_controllers.git
    website: http://ros.org/wiki/rtt_ros_integration_pr2_controllers_msgs
orocos_toolchain_ros:
  controller-1:
    author: !!python/unicode 'OROCOS Development Team'
    deps:
    - ocl
    desc: This package contains the components of the controller-1 package
    license: ''
    shortdesc: Orocos controller-1 Component package
    source: details.php?name=rtt
    website: git://github.com/psoetens/orocos-rtt-examples.git
  hello-1-task-execution:
    author: !!python/unicode 'OROCOS Development Team'
    deps:
    - ocl
    desc: This package contains the components of the hello-1-task-execution package
    license: ''
    shortdesc: Orocos hello-1-task-execution Component package
    source: details.php?name=rtt
    website: git://github.com/psoetens/orocos-rtt-examples.git
  hello-2-properties:
    author: !!python/unicode 'OROCOS Development Team'
    deps:
    - ocl
    desc: This package contains the components of the hello-2-properties package
    license: ''
    shortdesc: Orocos hello-2-properties Component package
    source: details.php?name=rtt
    website: git://github.com/psoetens/orocos-rtt-examples.git
  hello-3-dataports:
    author: !!python/unicode 'OROCOS Development Team'
    deps:
    - ocl
    desc: This package contains the components of the hello-3-dataports package
    license: ''
    shortdesc: Orocos hello-3-dataports Component package
    source: details.php?name=rtt
    website: git://github.com/psoetens/orocos-rtt-examples.git
  hello-4-operations:
    author: !!python/unicode 'OROCOS Development Team'
    deps:
    - ocl
    desc: This package contains the components of the hello-4-operations package
    license: ''
    shortdesc: Orocos hello-4-operations Component package
    source: details.php?name=rtt
    website: git://github.com/psoetens/orocos-rtt-examples.git
  hello-5-services:
    author: !!python/unicode 'OROCOS Development Team'
    deps:
    - ocl
    desc: This package contains the components of the hello-5-services package
    license: ''
    shortdesc: Orocos hello-5-services Component package
    source: details.php?name=rtt
    website: git://github.com/psoetens/orocos-rtt-examples.git
  hello-6-scripting:
    author: !!python/unicode 'OROCOS Development Team'
    deps:
    - ocl
    desc: This package contains the components of the hello-6-scripting package
    license: ''
    shortdesc: Orocos hello-6-scripting Component package
    source: details.php?name=rtt
    website: git://github.com/psoetens/orocos-rtt-examples.git
  hello-7-deployment:
    author: !!python/unicode 'OROCOS Development Team'
    deps:
    - ocl
    desc: This package contains the components of the hello-7-deployment package
    license: ''
    shortdesc: Orocos hello-7-deployment Component package
    source: details.php?name=rtt
    website: git://github.com/psoetens/orocos-rtt-examples.git
  helloworld:
    author: !!python/unicode 'OROCOS Development Team'
    deps:
    - ocl
    desc: This package contains the components of the helloworld package
    license: ''
    shortdesc: Orocos helloworld Component package
    source: details.php?name=rtt
    website: git://github.com/psoetens/orocos-rtt-examples.git
  log4cpp:
    author: !!python/unicode 'Stephen Roderick'
    deps: []
    desc: "This version of log4cpp deviates from the official release\n\t\t\tby adding\
      \ custom category factories. Orocos requires this for\n\t\t\tsetting up real-time\
      \ logging."
    license: LGPL v2.1 or later
    shortdesc: Log4cpp maintained by Orocos developers
    source: git://gitorious.org/orocos-toolchain/log4cpp.git
    website: http://log4cpp.sourceforge.net/
  ocl:
    author: !!python/unicode 'OCL Development Team'
    deps:
    - rtt
    - log4cpp
    desc: This package contains standard components for the Orocos Toolchain
    license: LGPL v2
    shortdesc: Orocos component library
    source: git://gitorious.org/orocos-toolchain/ocl.git
    website: http://www.orocos.org/ocl
  orogen:
    author: !!python/unicode 'Sylvain Joyeux/sylvain.joyeux@m4x.org'
    deps:
    - rtt
    - typelib
    desc: "orogen offers a specification interface for components developped in the\n\
      \        Orocos Realtime Toolkit. Moreover, it generates the specified modules,\n\
      \        thus offering an easy and fast development process."
    license: GPL v2 or later
    shortdesc: ROS Package containing orogen, a component generator for Orocos, written
      by Sylvain Joyeux, pa...
    source: git://gitorious.org/orocos-toolchain/orogen.git
    website: http://doudou.github.com/orogen
  rtt:
    author: !!python/unicode 'RTT Developers'
    deps: []
    desc: ''
    license: GPL v2 with linking exception
    shortdesc: Orocos/RTT component framework
    source: git://gitorious.org/orocos-toolchain/rtt.git
    website: http://www.orocos.org/rtt
  rtt_ros_integration:
    author: !!python/unicode 'Ruben Smits, ruben.smits@mech.kuleuven.be'
    deps:
    - roscpp
    - rtt
    - ocl
    - rosbuild
    desc: rtt_ros_integration provides an RTT plugin to add a ROS node to the RTT
      process, and the necessary template files and cmake macros for automatic rtt
      typekit and transport generation from ROS msg files
    license: BSD
    shortdesc: rtt_ros_integration
    source: http://git.mech.kuleuven.be/robotics/orocos_toolchain_ros.git
    website: http://ros.org/wiki/rtt_ros_integration
  rtt_ros_integration_example:
    author: !!python/unicode 'Ruben Smits, ruben.smits@mech.kuleuven.be'
    deps:
    - rtt_ros_integration
    - rtt_ros_integration_std_msgs
    - rtt_ros_param
    - rtt
    desc: rtt_ros_integration_example provides a very basic example. A HelloRobot
      component with two input and two output ports is created. You can use 'rostopic
      echo/pub' to read from and write to them.
    license: BSD
    shortdesc: rtt_ros_integration_example
    source: http://git.mech.kuleuven.be/robotics/orocos_toolchain_ros.git
    website: http://ros.org/wiki/rtt_ros_integration_example
  rtt_ros_integration_geometry_msgs:
    author: !!python/unicode 'Ruben Smits ruben.smits@mech.kuleuven.be'
    deps:
    - rtt_ros_integration
    - rtt_ros_integration_std_msgs
    - geometry_msgs
    desc: Provides all rtt typekits for ROS geometry_msgs
    license: BSD
    shortdesc: rtt_ros_integration_geometry_msgs
    source: http://git.mech.kuleuven.be/robotics/orocos_toolchain_ros.git
    website: http://ros.org/wiki/rtt_ros_integration_geometry_msgs
  rtt_ros_integration_nav_msgs:
    author: !!python/unicode 'Steven Bellens steven.bellens@mech.kuleuven.be'
    deps:
    - rtt_ros_integration
    - rtt_ros_integration_geometry_msgs
    - nav_msgs
    desc: Provides all rtt typekits for ROS nav_msgs
    license: BSD
    shortdesc: rtt_ros_integration_nav_msgs
    source: http://git.mech.kuleuven.be/robotics/orocos_toolchain_ros.git
    website: http://ros.org/wiki/rtt_ros_integration_nav_msgs
  rtt_ros_integration_std_msgs:
    author: !!python/unicode 'Ruben Smits ruben.smits@mech.kuleuven.be'
    deps:
    - rtt_ros_integration
    - std_msgs
    desc: Provides all rtt typekits for ROS std_msgs
    license: BSD
    shortdesc: rtt_ros_integration_std_msgs
    source: http://git.mech.kuleuven.be/robotics/orocos_toolchain_ros.git
    website: http://ros.org/wiki/rtt_ros_integration_std_msgs
  rtt_ros_param:
    author: !!python/unicode 'Ruben Smits, ruben.smits@mech.kuleuven.be'
    deps:
    - roscpp
    - rtt_ros_integration
    desc: This package contains the components of the rtt_ros_param package
    license: LGPL
    shortdesc: Orocos rtt_ros_param Component package
    source: details.php?name=rtt
    website: http://git.mech.kuleuven.be/robotics/orocos_toolchain_ros.git
  typelib:
    author: !!python/unicode 'Sylvain Joyeux/sylvain.joyeux@m4x.org'
    deps:
    - utilrb
    desc: "This library offers an introspection mechanism for C/C++ value-types. I.e.\n\
      \      it offers a way to represent types, and to manipulate in-memory values\n\
      \      that are instances of those types.\n\n      A Ruby binding is included,\
      \ which gives a fast and transparent\n      modification of C/C++ in-memory\
      \ types from Ruby, and an associated\n      interface to call C functions from\
      \ shared libraries."
    license: CeCILL-B (BSD-like)
    shortdesc: "ROS Package containing the typelib libraries written by Sylvain Joyeux,\n\
      \     which are part o..."
    source: details.php?name=utilmm
    website: git://gitorious.org/orocos-toolchain/typelib.git
  utilmm:
    author: !!python/unicode 'Sylvain Joyeux/sylvain.joyeux@m4x.org'
    deps: []
    license: CeCILL-B (BSD-like)
    shortdesc: "ROS Package containing the utilmm libraries written by Sylvain Joyeux,\n\
      \     which are part of..."
    source: list.php
    website: git://gitorious.org/orocos-toolchain/utilmm.git
  utilrb:
    author: !!python/unicode 'Sylvain Joyeux/sylvain.joyeux@m4x.org'
    deps: []
    license: CeCILL-B (BSD-like)
    shortdesc: ROS Package containing the utilrb ruby bindings written by Sylvain
      Joyeux, which are part of t...
    source: list.php
    website: git://gitorious.org/orocos-toolchain/utilrb.git
orocos_tools:
  oro_action_server:
    author: !!python/unicode 'Konrad Banachowicz'
    deps:
    - actionlib
    - rtt
    desc: Implementation of Action Server for orocos components.
    license: BSD
    shortdesc: oro_action_server
    source: https://github.com/RCPRG-ros-pkg/orocos_tools.git
    website: http://ros.org/wiki/oro_action_server
  oro_action_server_test:
    author: !!python/unicode 'konrad'
    deps:
    - oro_action_server
    - rtt
    - ocl
    - rtt_ros_integration_pr2_controllers_msgs
    desc: oro_action_server_test
    license: BSD
    shortdesc: oro_action_server_test
    source: https://github.com/RCPRG-ros-pkg/orocos_tools.git
    website: http://ros.org/wiki/oro_action_server_test
  rtt_ros_integration_actionlib_msgs:
    author: !!python/unicode 'konrad'
    deps:
    - rtt_ros_integration
    - rtt_ros_integration_std_msgs
    - actionlib_msgs
    desc: rtt_ros_integration_actionlib_msgs
    license: BSD
    shortdesc: rtt_ros_integration_actionlib_msgs
    source: https://github.com/RCPRG-ros-pkg/orocos_tools.git
    website: http://ros.org/wiki/rtt_ros_integration_actionlib_msgs
  rtt_ros_integration_trajectory_msgs:
    author: !!python/unicode 'konrad'
    deps:
    - rtt_ros_integration
    - rtt_ros_integration_std_msgs
    - trajectory_msgs
    desc: rtt_ros_integration_trajectory_msgs
    license: BSD
    shortdesc: rtt_ros_integration_trajectory_msgs
    source: https://github.com/RCPRG-ros-pkg/orocos_tools.git
    website: http://ros.org/wiki/rtt_ros_integration_trajectory_msgs
otl-ros-pkg:
  2dnav_otl_roomba:
    author: !!python/unicode 'Takashi Ogura'
    deps:
    - move_base
    - otl_roomba
    desc: 2dnav_otl_roomba
    license: BSD
    shortdesc: 2dnav_otl_roomba
    source: http://otl-ros-pkg.googlecode.com/svn/trunk/otl_nav/2dnav_otl_roomba
    website: http://ros.org/wiki/2dnav_otl_roomba
  egeometry:
    author: !!python/unicode 'Takashi Ogura'
    deps:
    - roscpp
    - tf
    - geometry_msgs
    desc: "egeometry is a Geometry Library similar to EusLisp coordinates.\n    This\
      \ library is useful for EusLisp users."
    license: BSD
    shortdesc: Geometry Library similar to EusLisp coordinates
    source: http://otl-ros-pkg.googlecode.com/svn/trunk/otl_geometry/egeometry
    website: http://ros.org/wiki/egeometry
  fake_voice_recog:
    author: !!python/unicode 'Takashi Ogura'
    deps:
    - roscpp
    - std_msgs
    - std_srvs
    desc: fake_voice_recog can recognize volume of voice.
    license: BSD
    shortdesc: fake_voice_recog is fake voice recognizer
    source: http://otl-ros-pkg.googlecode.com/svn/trunk/otl_util/fake_voice_recog
    website: http://ros.org/wiki/fake_voice_recog
  gazebo_test:
    author: !!python/unicode 'Takashi Ogura'
    deps:
    - gazebo
    - gazebo_plugins
    - std_msgs
    desc: gazebo_test
    license: BSD
    shortdesc: gazebo_test
    source: http://otl-ros-pkg.googlecode.com/svn/trunk/sandbox/gazebo_test
    website: http://ros.org/wiki/gazebo_test
  img_test:
    author: !!python/unicode 'Takashi Ogura'
    deps:
    - sensor_msgs
    - opencv2
    - cv_bridge
    - roscpp
    - std_msgs
    - image_transport
    desc: img_test
    license: BSD
    shortdesc: img_test
    source: http://otl-ros-pkg.googlecode.com/svn/trunk/sandbox/img_test
    website: http://ros.org/wiki/img_test
  joy_talk:
    author: !!python/unicode 'Takashi Ogura'
    deps:
    - rospy
    - std_msgs
    - joy
    desc: "joy_talk publishes std_msgs/String by joypad buttons.\n     you can use\
      \ this for several perpose."
    license: BSD
    shortdesc: joypad talk
    source: http://otl-ros-pkg.googlecode.com/svn/trunk/otl_util/joy_talk
    website: http://ros.org/wiki/joy_talk
  jtalk_node:
    author: !!python/unicode 'Takashi Ogura'
    deps:
    - roscpp
    - std_msgs
    desc: "jtalk_node is Japanese talk node.\n    jtalk_node uses AquesTalk(http://www.a-quest.com/download/index.html).\n\
      \    It subscribe /talk (std_msgs/String) and speak it.\n    /talk is Roman\
      \ style Japanese, like &quot;Konnichiwa&quot;.\n    play command of &quot;sox&quot;\
      \ is used for play sound data."
    license: BSD
    shortdesc: jtalk_node using AquesTalk
    source: http://otl-ros-pkg.googlecode.com/svn/trunk/otl_util/jtalk_node
    website: http://ros.org/wiki/jtalk_node
  lv1_arm:
    author: !!python/unicode 'Takashi Ogura'
    deps:
    - roscpp
    - std_msgs
    desc: lv1_arm
    license: BSD
    shortdesc: lv1_arm
    source: http://otl-ros-pkg.googlecode.com/svn/trunk/lv1/lv1_arm
    website: http://ros.org/wiki/lv1_arm
  lv1_image:
    author: !!python/unicode 'Yuto'
    deps:
    - sensor_msgs
    - opencv2
    - cv_bridge
    - roscpp
    - std_msgs
    - image_transport
    desc: img_test
    license: BSD
    shortdesc: img_test
    source: http://otl-ros-pkg.googlecode.com/svn/trunk/lv1/lv1_image
    website: http://ros.org/wiki/img_test
  lv1_main:
    author: !!python/unicode 'Takashi Ogura'
    deps:
    - rospy
    - std_msgs
    - joy
    - geometry_msgs
    desc: lv1_main
    license: BSD
    shortdesc: lv1_main
    source: http://otl-ros-pkg.googlecode.com/svn/trunk/lv1/lv1_main
    website: http://ros.org/wiki/lv1_main
  lv1_msgs:
    author: !!python/unicode 'Takashi Ogura'
    deps: []
    desc: lv1_msgs
    license: BSD
    shortdesc: lv1_msgs
    source: http://otl-ros-pkg.googlecode.com/svn/trunk/lv1/lv1_msgs
    website: http://ros.org/wiki/lv1_msgs
  lv1_twitter:
    author: !!python/unicode 'Takashi Ogura'
    deps:
    - std_msgs
    - rospy
    desc: rostwitter
    license: BSD
    shortdesc: rostwitter
    source: http://otl-ros-pkg.googlecode.com/svn/trunk/lv1/lv1_twitter
    website: http://ros.org/wiki/rostwitter
  otl_gesture:
    author: !!python/unicode 'Takashi Ogura'
    deps:
    - roscpp
    - tf
    - openni_tracker
    - std_msgs
    desc: otl_gesture is very stupid recognizer of cleaning motions
    license: BSD
    shortdesc: otl_gesture
    source: http://otl-ros-pkg.googlecode.com/svn/trunk/otl_ni/otl_gesture
    website: http://ros.org/wiki/otl_gesture
  otl_gesture_roomba:
    author: !!python/unicode 'Takashi Ogura'
    deps:
    - geometry_msgs
    - std_msgs
    desc: otl_gesture_roomba converts gesture msgs to roomba command msgs.
    license: BSD
    shortdesc: otl_gesture_roomba
    source: http://otl-ros-pkg.googlecode.com/svn/trunk/otl_ni/otl_gesture_roomba
    website: http://ros.org/wiki/otl_gesture_roomba
  otl_map:
    author: !!python/unicode 'Takashi Ogura'
    deps: []
    desc: otl_map
    license: BSD
    shortdesc: otl_map
    source: http://otl-ros-pkg.googlecode.com/svn/trunk/otl_nav/otl_map
    website: http://ros.org/wiki/otl_map
  otl_roomba:
    author: !!python/unicode 'Takashi Ogura'
    deps:
    - rospy
    - std_msgs
    - std_srvs
    - tf
    - geometry_msgs
    - nav_msgs
    - ps3joy
    - hokuyo_node
    - rostest
    desc: otl_roomba is interface of Roomba.
    license: BSD
    shortdesc: otl_roomba
    source: http://otl-ros-pkg.googlecode.com/svn/trunk/otl_nav/otl_roomba
    website: http://ros.org/wiki/otl_roomba
  teleop_iSOBOT_joy:
    author: !!python/unicode 'Takashi Ogura'
    deps:
    - roscpp
    - joy
    - sensor_msgs
    - iSOBOT
    desc: teleop_iSOBOT_joy
    license: BSD
    shortdesc: teleop_iSOBOT_joy
    source: http://otl-ros-pkg.googlecode.com/svn/trunk/sandbox/teleop_iSOBOT_joy
    website: http://ros.org/wiki/teleop_iSOBOT_joy
  teleop_lv1:
    author: !!python/unicode 'Takashi Ogura'
    deps:
    - rospy
    - std_msgs
    - joy
    - joy_talk
    desc: teleop_lv1
    license: BSD
    shortdesc: teleop_lv1
    source: http://otl-ros-pkg.googlecode.com/svn/trunk/lv1/teleop_lv1
    website: http://ros.org/wiki/teleop_lv1
penn-ros-pkg:
  ldd_plan:
    author: !!python/unicode 'Paul Vernaza'
    deps:
    - std_msgs
    - chomp_motion_planner
    - kdl
    - kdl_parser
    - roscpp
    - mapping_msgs
    - motion_planning_msgs
    - distance_field
    - move_arm_msgs
    - actionlib
    - urdf
    - bullet
    - angles
    - sbpl_arm_planner_node
    desc: ldd_plan
    license: GPL
    shortdesc: ldd_plan
    source: https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs/trunk/ldd_plan
    website: http://ros.org/wiki/ldd_plan
  pr2_props:
    author: !!python/unicode 'Joe Romano'
    deps:
    - roscpp
    - actionlib
    - pr2_gripper_sensor_action
    - pr2_gripper_sensor_controller
    - pr2_gripper_sensor_msgs
    desc: pr2_props is a package designed to be the first step towards replacing your
      real (or imaginary) friends with a robot. Robot gives you mad props yo.
    license: BSD
    shortdesc: pr2_props is a package designed to be the first step towards replacing
      your real (or imaginar...
    source: https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs/trunk/pr2_props
    website: http://ros.org/wiki/pr2_props
penn_lightweight_teleop:
  penn_lightweight_teleop_machine:
    author: !!python/unicode 'Will McMahan'
    deps: []
    desc: penn_lightweight_teleop_machine
    license: BSD
    shortdesc: penn_lightweight_teleop_machine
    source: https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs/penn_lightweight_teleop/trunk/penn_lightweight_teleop_machine
    website: http://ros.org/wiki/penn_lightweight_teleop_machine
  penn_lightweight_teleop_msgs:
    author: !!python/unicode 'Will McMahan'
    deps:
    - geometry_msgs
    desc: penn_lightweight_teleop_msgs
    license: BSD
    shortdesc: penn_lightweight_teleop_msgs
    source: https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs/penn_lightweight_teleop/trunk/penn_lightweight_teleop_msgs
    website: http://ros.org/wiki/penn_lightweight_teleop_msgs
  sensoray626:
    author: !!python/unicode 'Will McMahan'
    deps: []
    desc: sensoray626
    license: BSD
    shortdesc: sensoray626
    source: https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs/penn_lightweight_teleop/trunk/sensoray626
    website: http://ros.org/wiki/sensoray626
  wm_acceleration_feedback:
    author: !!python/unicode 'Will McMahan'
    deps:
    - sensoray626
    - pr2_gripper_sensor_msgs
    desc: wm_acceleration_feedback
    license: BSD
    shortdesc: wm_acceleration_feedback
    source: https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs/penn_lightweight_teleop/trunk/wm_acceleration_feedback
    website: http://ros.org/wiki/wm_acceleration_feedback
  wm_arm_teleop:
    author: !!python/unicode 'Will McMahan'
    deps:
    - roscpp
    - trajectory_msgs
    - std_msgs
    - geometry_msgs
    - pr2_controllers_msgs
    - actionlib
    - joint_trajectory_action
    - kinematics_msgs
    - tf
    - penn_lightweight_teleop_msgs
    - joy
    - bullet
    - angles
    desc: wm_arm_teleop
    license: BSD
    shortdesc: wm_arm_teleop
    source: https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs/penn_lightweight_teleop/trunk/wm_arm_teleop
    website: http://ros.org/wiki/wm_arm_teleop
  wm_imu_arm_tracker:
    author: !!python/unicode 'Will McMahan'
    deps:
    - rospy
    - chr_6dm_imu
    - penn_lightweight_teleop_msgs
    - std_msgs
    - roscpp
    - visualization_msgs
    - penn_lightweight_teleop_msgs
    - geometry_msgs
    desc: wm_imu_arm_tracker
    license: BSD
    shortdesc: wm_imu_arm_tracker
    source: https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs/penn_lightweight_teleop/trunk/wm_imu_arm_tracker
    website: http://ros.org/wiki/wm_imu_arm_tracker
pgr_camera:
  pgr_camera:
    author: !!python/unicode 'Patrick Bouffard'
    deps:
    - roscpp
    - std_msgs
    - sensor_msgs
    - diagnostic_updater
    - diagnostic_msgs
    - image_transport
    - self_test
    - driver_base
    - dynamic_reconfigure
    - camera_calibration_parsers
    - polled_camera
    desc: "A ROS node to provide access to Point Grey Research cameras, using the\n\
      \t\tFlyCapture2 SDK API\n\t\tAcknowledgement: This package is based largely\
      \ on the prosilica_camera package,\n\t\tby Patrick Mihelich (http://www.ros.org/wiki/prosilica_camera)."
    license: BSD
    shortdesc: pgr_camera
    source: https://github.com/pbouffard/ros.pgr_camera.git
    website: http://ros.org/wiki/pgr_camera
pi-robot-ros-pkg:
  demo_markers:
    author: !!python/unicode 'Patrick Goebel'
    deps:
    - rospy
    - roscpp
    - visualization_msgs
    - geometry_msgs
    - demo_tracker
    - openni_camera
    - openni_tracker
    desc: 'Skeleton Markers: Publish a list of joint markers for viewing in RViz'
    license: BSD
    shortdesc: demo_markers
    source: http://pi-robot-ros-pkg.googlecode.com/svn/trunk/pi_sandbox/demo_markers
    website: http://ros.org/wiki/skeleton_markers
  demo_tracker:
    author: !!python/unicode 'Patrick Goebel'
    deps:
    - roscpp
    - rospy
    - std_msgs
    - geometry_msgs
    - nav_msgs
    - tf
    - urdf
    - rviz
    - kdl
    - nite
    - ax12_controller_core
    desc: Skeleton Tracker Teleop Package for the Pi Robot Project
    license: BSD
    shortdesc: demo_tracker
    source: http://pi-robot-ros-pkg.googlecode.com/svn/trunk/pi_sandbox/demo_tracker
    website: http://www.ros.org/wiki/pi_tracker
  pi_arbotix:
    author: !!python/unicode 'patrick'
    deps:
    - roscpp
    - rospy
    - tf
    - std_msgs
    - nav_msgs
    - geometry_msgs
    - arbotix_python
    desc: pi_arbotix
    license: BSD
    shortdesc: pi_arbotix
    source: http://pi-robot-ros-pkg.googlecode.com/svn/trunk/ros_by_example/pi_arbotix
    website: http://ros.org/wiki/pi_arbotix
  pi_arm_kinematics:
    author: !!python/unicode 'Patrick Goebel'
    deps:
    - roscpp
    - rospy
    - arm_kinematics
    - sensor_msgs
    - kinematics_msgs
    - geometry_msgs
    - kdl_parser
    - tf_conversions
    - tf
    - urdf
    desc: pi_arm_kinematics
    license: BSD
    shortdesc: pi_arm_kinematics
    source: http://pi-robot-ros-pkg.googlecode.com/svn/trunk/ros_by_example/pi_arm_kinematics
    website: http://ros.org/wiki/pi_arm_kinematics
  pi_ax12_controller:
    author: !!python/unicode 'patrick'
    deps:
    - roscpp
    - rospy
    - ax12_controller_core
    - std_msgs
    - geometry_msgs
    - tf
    - robot_state_publisher
    - joint_state_publisher
    desc: pi_ax12_controller
    license: BSD
    shortdesc: pi_ax12_controller
    source: http://pi-robot-ros-pkg.googlecode.com/svn/trunk/ros_by_example/pi_ax12_controller
    website: http://ros.org/wiki/pi_ax12_controller
  pi_demo:
    author: !!python/unicode 'Patrick Goebel'
    deps:
    - roscpp
    - rospy
    - std_msgs
    - geometry_msgs
    - kinematics_msgs
    - tf
    - rviz
    - robot_state_publisher
    - joint_state_publisher
    - ax12_controller_core
    - arbotix_python
    - demo_tracker
    desc: Head Tracking in 3D Part 1
    license: BSD
    shortdesc: pi_head_tracking_3d_part1
    source: http://pi-robot-ros-pkg.googlecode.com/svn/trunk/pi_sandbox/pi_demo
    website: http://www.pirobot.org/blog/0018
  pi_description:
    author: !!python/unicode 'patrick'
    deps: []
    desc: pi_description
    license: BSD
    shortdesc: pi_description
    source: http://pi-robot-ros-pkg.googlecode.com/svn/trunk/ros_by_example/pi_description
    website: http://ros.org/wiki/pi_description
  pi_head_tracking_3d_part1:
    author: !!python/unicode 'Patrick Goebel'
    deps:
    - roscpp
    - rospy
    - std_msgs
    - geometry_msgs
    - tf
    - rviz
    - robot_state_publisher
    - joint_state_publisher
    - ax12_controller_core
    desc: Head Tracking in 3D Part 1
    license: BSD
    shortdesc: pi_head_tracking_3d_part1
    source: http://pi-robot-ros-pkg.googlecode.com/svn/trunk/pi_tutorials/pi_head_tracking_3d_part1
    website: http://www.pirobot.org/blog/0018
  pi_head_tracking_3d_part2:
    author: !!python/unicode 'Patrick Goebel'
    deps:
    - rospy
    - roscpp
    - std_msgs
    - geometry_msgs
    - tf
    - rviz
    - robot_state_publisher
    - joint_state_publisher
    - ax12_controller_core
    - openni_camera
    - openni_tracker
    - pcl
    desc: Head Tracking in 3D Part 2
    license: BSD
    shortdesc: pi_head_tracking_3d_part2
    source: http://pi-robot-ros-pkg.googlecode.com/svn/trunk/pi_tutorials/pi_head_tracking_3d_part2
    website: http://www.pirobot.org/blog/0019
  pi_head_tracking_tutorial:
    author: !!python/unicode 'Patrick Goebel'
    deps:
    - roscpp
    - rospy
    - std_msgs
    - rviz
    - opencv2
    - cv_bridge
    - uvc_cam
    - arbotix_python
    - robotis
    desc: Head Tracking Tutorial for the Pi Robot Project
    license: BSD
    shortdesc: pi_head_tracking_tutorial
    source: http://pi-robot-ros-pkg.googlecode.com/svn/trunk/pi_tutorials/pi_head_tracking_tutorial
    website: http://www.pirobot.org/blog/0016
  pi_kinect:
    author: !!python/unicode 'patrick'
    deps:
    - roscpp
    - rospy
    - openni_camera
    desc: pi_kinect
    license: BSD
    shortdesc: pi_kinect
    source: http://pi-robot-ros-pkg.googlecode.com/svn/trunk/ros_by_example/pi_kinect
    website: http://ros.org/wiki/pi_kinect
  pi_kinect_opencv:
    author: !!python/unicode 'Patrick Goebel'
    deps:
    - roscpp
    - rospy
    - std_msgs
    - rviz
    - opencv2
    - cv_bridge
    - uvc_cam
    - arbotix_python
    - robotis
    desc: Head Tracking Tutorial for the Pi Robot Project
    license: BSD
    shortdesc: pi_head_tracking_tutorial
    source: http://pi-robot-ros-pkg.googlecode.com/svn/trunk/pi_sandbox/pi_kinect_opencv
    website: http://www.pirobot.org/blog/0016
  pi_kinectbot:
    author: !!python/unicode 'Patrick Goebel'
    deps:
    - roscpp
    - rospy
    - std_msgs
    - geometry_msgs
    - tf
    - rviz
    - turtlebot_urdf
    - robot_state_publisher
    - joint_state_publisher
    - ax12_controller_core
    desc: Testing the Kinectbot
    license: BSD
    shortdesc: pi_kinectbot
    source: http://pi-robot-ros-pkg.googlecode.com/svn/trunk/pi_sandbox/pi_kinectbot
    website: none
  pi_lib:
    author: !!python/unicode 'Patrick Goebel'
    deps:
    - rospy
    - sensor_msgs
    desc: Pi Robot Library - Helper functions for the Pi Robot Project
    license: BSD
    shortdesc: Pi Robot Library - Helper functions for the Pi Robot Project
    source: http://pi-robot-ros-pkg.googlecode.com/svn/trunk/pi_lib
    website: http://ros.org/wiki/prl
  pi_opencv:
    author: !!python/unicode 'patrick'
    deps:
    - roscpp
    - rospy
    - std_msgs
    - opencv2
    - cv_bridge
    - uvc_cam
    desc: pi_opencv
    license: BSD
    shortdesc: pi_opencv
    source: http://pi-robot-ros-pkg.googlecode.com/svn/trunk/ros_by_example/pi_opencv
    website: http://ros.org/wiki/pi_opencv
  pi_pcl:
    author: !!python/unicode 'patrick'
    deps:
    - pcl
    - pcl_ros
    - pcl_visualization
    - eigen
    - stereo_msgs
    desc: pi_pcl
    license: BSD
    shortdesc: pi_pcl
    source: http://pi-robot-ros-pkg.googlecode.com/svn/trunk/pi_pcl
    website: http://ros.org/wiki/pi_pcl
  pi_robot:
    author: !!python/unicode 'Patrick Goebel'
    deps:
    - roscpp
    - rospy
    - std_msgs
    - nav_msgs
    - geometry_msgs
    - kinematics_msgs
    - tf
    - urdf
    - move_base
    - serializer
    - arbotix_python
    - rviz
    - opencv2
    - cv_bridge
    - ua_controller_msgs
    - joy
    desc: The Pi Robot Project
    license: BSD
    shortdesc: The Pi Robot Project
    source: http://pi-robot-ros-pkg.googlecode.com/svn/trunk/robots/pi_robot
    website: http://www.pirobot.org
  pi_slam:
    author: !!python/unicode 'patrick'
    deps:
    - roscpp
    - rospy
    - tf
    - geometry_msgs
    - nav_msgs
    - std_msgs
    desc: pi_slam
    license: BSD
    shortdesc: pi_slam
    source: http://pi-robot-ros-pkg.googlecode.com/svn/trunk/ros_by_example/pi_slam
    website: http://ros.org/wiki/pi_slam
  pi_slam_tutorial:
    author: !!python/unicode 'Patrick Goebel'
    deps:
    - roscpp
    - rospy
    - std_msgs
    - nav_msgs
    - geometry_msgs
    - tf
    - rviz
    - robot_state_publisher
    - joint_state_publisher
    - openni_camera
    desc: Introduction to ROS SLAM
    license: BSD
    shortdesc: pi_slam_tutorial
    source: http://pi-robot-ros-pkg.googlecode.com/svn/trunk/pi_sandbox/pi_slam_tutorial
    website: none
  pi_speech:
    author: !!python/unicode 'patrick'
    deps:
    - roscpp
    - rospy
    - pocketsphinx
    - sound_play
    - std_msgs
    desc: pi_speech
    license: BSD
    shortdesc: pi_speech
    source: http://pi-robot-ros-pkg.googlecode.com/svn/trunk/ros_by_example/pi_speech
    website: http://ros.org/wiki/pi_speech
  pi_tracker:
    author: !!python/unicode 'Patrick Goebel'
    deps:
    - roscpp
    - rospy
    - std_msgs
    - geometry_msgs
    - nav_msgs
    - tf
    - urdf
    - rviz
    - kdl
    - nite
    - ax12_controller_core
    desc: Skeleton Tracker Teleop Package for the Pi Robot Project
    license: BSD
    shortdesc: demo_tracker
    source: http://pi-robot-ros-pkg.googlecode.com/svn/trunk/pi_tracker
    website: http://www.ros.org/wiki/pi_tracker
  pi_turtlebot:
    author: !!python/unicode 'patrick'
    deps:
    - roscpp
    - rospy
    - tf
    - geometry_msgs
    - nav_msgs
    - std_msgs
    desc: pi_turtlebot
    license: BSD
    shortdesc: pi_turtlebot
    source: http://pi-robot-ros-pkg.googlecode.com/svn/trunk/ros_by_example/pi_turtlebot
    website: http://ros.org/wiki/pi_turtlebot
  serializer:
    author: !!python/unicode 'Patrick Goebel'
    deps:
    - roscpp
    - rospy
    - std_msgs
    - geometry_msgs
    - nav_msgs
    - tf
    desc: ROS Package for the Serializer microcontroller made by the Robotics Connection
    license: BSD
    shortdesc: serializer
    source: http://pi-robot-ros-pkg.googlecode.com/svn/trunk/serializer
    website: http://www.ros.org/wiki/serializer
  skeleton_markers:
    author: !!python/unicode 'Patrick Goebel'
    deps:
    - rospy
    - roscpp
    - visualization_msgs
    - geometry_msgs
    - pi_tracker
    - openni_camera
    - openni_tracker
    desc: 'Skeleton Markers: Publish a list of joint markers for viewing in RViz'
    license: BSD
    shortdesc: skeleton_markers
    source: http://pi-robot-ros-pkg.googlecode.com/svn/trunk/skeleton_markers
    website: http://ros.org/wiki/skeleton_markers
pr2_calibration:
  calibration_msgs:
    author: !!python/unicode 'Vijay Pradeep'
    deps:
    - geometry_msgs
    - sensor_msgs
    desc: "This package defines messages for storing calibration samples\n     to\
      \ be used in full robot calibration procedures. This package\n     is still\
      \ unstable. Expect the messages to change."
    license: BSD
    shortdesc: Msgs for full robot calibration
    source: https://kforge.ros.org/calibration/pr2_calibration
    website: http://pr.willowgarage.com/wiki/calibration_msgs
  dense_laser_assembler:
    author: !!python/unicode 'Vijay Pradeep'
    deps:
    - std_msgs
    - sensor_msgs
    - calibration_msgs
    - settlerlib
    desc: "Stores streaming data from a laser sensor in a\n    dense representation.\
      \ This allows the user to do 'image-like'\n    processing on the data, and can\
      \ also be used for very fast approx\n    neighborhood searches.  This package\
      \ is still experimental and unstable.\n    Expect its APIs to change."
    license: BSD
    shortdesc: Build dense laser range and intensity clouds
    source: details.php?name=roscpp
    website: https://kforge.ros.org/calibration/pr2_calibration
  image_cb_detector:
    author: !!python/unicode 'Vijay Pradeep and Eitan Marder-Eppstein'
    deps:
    - calibration_msgs
    - roscpp
    - opencv2
    - cv_bridge
    - actionlib_msgs
    - image_transport
    - sensor_msgs
    - geometry_msgs
    - actionlib
    - actionlib_msgs
    desc: "Provide a node that extracts checkerboard corners from ROS images.\n  \
      \  This package is still experimental and unstable.\n    Expect its APIs to\
      \ change."
    license: BSD
    shortdesc: Extract checkerboards from images
    source: https://kforge.ros.org/calibration/pr2_calibration
    website: http://ros.org/wiki/image_cb_detector
  interval_intersection:
    author: !!python/unicode 'Romain Thibaux'
    deps:
    - roscpp
    - actionlib_msgs
    - actionlib
    - calibration_msgs
    desc: "Tools for calculating the intersection of interval messages coming\n  \
      \  in on several topics. This package is experimental and unstable.\n    Expect\
      \ its APIs to change."
    license: BSD
    shortdesc: Compute the intersection of many interval msgs
    source: https://kforge.ros.org/calibration/pr2_calibration
    website: http://pr.willowgarage.com/wiki/interval_intersection
  joint_states_settler:
    author: !!python/unicode 'Vijay Pradeep'
    deps:
    - roscpp
    - actionlib_msgs
    - sensor_msgs
    - actionlib
    - settlerlib
    - calibration_msgs
    desc: "Provides a node that reports how long a subset of joints has been\n   \
      \  settled. That is, it calculates how long a set of joints has remained\n \
      \    within a specified threshold. This package is experimental and unstable.\n\
      \     Expect its APIs to change."
    license: BSD
    shortdesc: Detect when a set of joints has stopped moving
    source: https://kforge.ros.org/calibration/pr2_calibration
    website: http://pr.willowgarage.com/wiki/joint_states_settler
  laser_cb_detector:
    author: !!python/unicode 'Vijay Pradeep'
    deps:
    - roscpp
    - message_filters
    - std_msgs
    - actionlib_msgs
    - calibration_msgs
    - opencv2
    - cv_bridge
    desc: "Extracts checkerboard corners from a dense laser snapshot.\n     This package\
      \ is experimental and unstable. Expect its APIs to change."
    license: BSD
    shortdesc: Extracts checkerboard corners from a dense laser snapshot
    source: https://kforge.ros.org/calibration/pr2_calibration
    website: http://pr.willowgarage.com/wiki/laser_cb_detector
  laser_joint_processor:
    author: !!python/unicode 'Vijay Pradeep'
    deps:
    - message_filters
    - settlerlib
    - joint_states_settler
    - opencv2
    desc: "Computes joint angles associated with a specific set of detected checkerboard\
      \ corners.\n     This package is experimental and unstable.\n     Expect its\
      \ APIs to change."
    license: BSD
    shortdesc: Get joint angles from detcted corners in a snapshot
    source: https://kforge.ros.org/calibration/pr2_calibration
    website: http://ros.org/wiki/laser_joint_processor
  laser_joint_projector:
    author: !!python/unicode 'Vijay Pradeep'
    deps:
    - calibration_msgs
    - kdl
    - kdl_parser
    - geometry_msgs
    desc: "Projects laser readings into a point cloud, based on a set of recorded\
      \ joint angles\n     This package is experimental and unstable.\n     Expect\
      \ its APIs to change."
    license: BSD
    shortdesc: Projects laser readings into a point cloud, based on a set of recorded
      joint angles
    source: https://kforge.ros.org/calibration/pr2_calibration
    website: http://ros.org/wiki/laser_joint_projector
  monocam_settler:
    author: !!python/unicode 'Vijay Pradeep'
    deps:
    - roscpp
    - actionlib
    - actionlib_msgs
    - settlerlib
    - calibration_msgs
    desc: "Listens on a ImageFeatures topic, and waits for the data to settle.\n \
      \    This package is experimental and unstable.\n     Expect its APIs to change."
    license: BSD
    shortdesc: Waits for features in a single camera to settle
    source: https://kforge.ros.org/calibration/pr2_calibration
    website: http://pr.willowgarage.com/wiki/monocam_settler
  pr2_calibration_estimation:
    author: !!python/unicode 'Vijay Pradeep'
    deps:
    - rospy
    - rostest
    - sensor_msgs
    - calibration_msgs
    - visualization_msgs
    - kdl
    - kdl_parser
    desc: "Runs an optimization to estimate the PR2's kinematic parameters. This package\
      \ is\n     still experimental. Expect APIs to change."
    license: BSD
    shortdesc: Runs an optimization to estimate the PR2's kinematic parameters
    source: https://kforge.ros.org/calibration/pr2_calibration
    website: http://ros.org/wiki/pr2_calibration_estimation
  pr2_calibration_executive:
    author: !!python/unicode 'Vijay Pradeep'
    deps:
    - pr2_dense_laser_snapshotter
    - laser_cb_detector
    - laser_joint_processor
    - laser_joint_projector
    - image_view
    - robot_mechanism_controllers
    - message_filters
    - interval_intersection
    - monocam_settler
    - image_cb_detector
    - calibration_msgs
    - sensor_msgs
    - geometry_msgs
    - trajectory_msgs
    desc: "Executive for capture data for running PR2's full system calibration. This\
      \ package is\n     still experimental.  Expect APIs to change."
    license: BSD
    shortdesc: Executive for capture data for running PR2's full system calibration
    source: https://kforge.ros.org/calibration/pr2_calibration
    website: http://ros.org/wiki/pr2_calibration_executive
  pr2_calibration_launch:
    author: !!python/unicode 'Vijay Pradeep'
    deps:
    - pr2_dense_laser_snapshotter
    - laser_cb_detector
    - laser_joint_processor
    - laser_joint_projector
    - stereo_image_proc
    - image_cb_detector
    - monocam_settler
    - image_view
    - robot_mechanism_controllers
    - pr2_calibration_executive
    - pr2_calibration_estimation
    - calibration_msgs
    - sensor_msgs
    - geometry_msgs
    - pr2_teleop
    desc: "Launch files and configuration files needed to run the calibration pipeline\
      \ on PR2. This package is\n     still experimental. Expect large changes tp\
      \ occur."
    license: BSD
    shortdesc: Launch files and configuration files needed to run the calibration
      pipeline on PR2
    source: https://kforge.ros.org/calibration/pr2_calibration
    website: http://pr.willowgarage.com/wiki/pr2_calibration_launch
  pr2_calibration_propagation:
    author: !!python/unicode 'Vijay Pradeep'
    deps:
    - tf
    desc: "Tools for pushing a new calibration into the URDF and wge100 cameras. \
      \ This package is\n     still experimental.  Expect usage and APIs to change."
    license: BSD
    shortdesc: Tools for pushing a new calibration into the URDF and wge100 cameras
    source: https://kforge.ros.org/calibration/pr2_calibration
    website: http://ros.org/wiki/pr2_calibration_propagation
  pr2_dense_laser_snapshotter:
    author: !!python/unicode 'Vijay Pradeep'
    deps:
    - dense_laser_assembler
    - pr2_msgs
    desc: "Stores the data from a series of laser scan messages in a dense representation,\
      \ allowing\n     users to easily perform image-like operations on intensity\
      \ or range data. This package is\n     experimental. Expect APIs to change."
    license: BSD
    shortdesc: Generates dense representation of laser data for PR2's tilting laser
    source: https://kforge.ros.org/calibration/pr2_calibration
    website: http://pr.willowgarage.com/wiki/pr2_dense_laser_snapshotter
  settlerlib:
    author: !!python/unicode 'Vijay Pradeep'
    deps:
    - roscpp
    - calibration_msgs
    desc: "Defines helper functions and routines that greatly help when trying to\
      \ create a settler\n    for a specific sensor channel. This package is experimental\
      \ and unstable.\n    Expect its APIs to change."
    license: BSD
    shortdesc: A set of routines to help with creating a settler
    source: https://kforge.ros.org/calibration/pr2_calibration
    website: http://pr.willowgarage.com/wiki/settlerlib
pr2_doors:
  ANN_doors:
    author: !!python/unicode 'Sunil Arya and David Mount'
    deps: []
    desc: "ANN is a library written in C++, which supports data structures and\n \
      \   algorithms for both exact and approximate nearest neighbor searching in\n\
      \    arbitrarily high dimensions.\n\n    In the nearest neighbor problem a set\
      \ of data points in d-dimensional\n    space is given. These points are preprocessed\
      \ into a data structure, so\n    that given any query point q, the nearest or\
      \ generally k nearest points of\n    P to q can be reported efficiently. The\
      \ distance between two points can be\n    defined in many ways. ANN assumes\
      \ that distances are measured using any\n    class of distance functions called\
      \ Minkowski metrics. These include the\n    well known Euclidean distance, Manhattan\
      \ distance, and max distance.\n\n    Based on our own experience, ANN performs\
      \ quite efficiently for point sets\n    ranging in size from thousands to hundreds\
      \ of thousands, and in dimensions\n    as high as 20. (For applications in significantly\
      \ higher dimensions, the\n    results are rather spotty, but you might try it\
      \ anyway.)\n\n    The library implements a number of different data structures,\
      \ based on\n    kd-trees and box-decomposition trees, and employs a couple of\
      \ different\n    search strategies.\n\n    The library also comes with test\
      \ programs for measuring the quality of\n    performance of ANN on any particular\
      \ data sets, as well as programs for\n    visualizing the structure of the geometric\
      \ data structures."
    license: LGPL
    shortdesc: "ANN is a library written in C++, which supports data structures and\n\
      \    algorithms for both ex..."
    source: https://kforge.ros.org/doors/hg
    website: http://www.cs.umd.edu/~mount/ANN/
  door_handle_detector:
    author: !!python/unicode 'Radu Bogdan Rusu, Marius'
    deps:
    - pr2_machine
    - ANN_doors
    - roscpp
    - tf
    - kdl
    - opencv2
    - cv_bridge
    - std_msgs
    - geometry_msgs
    - mapping_msgs
    - door_msgs
    - sensor_msgs
    - stereo_msgs
    - visualization_msgs
    - std_srvs
    - angles
    - laser_assembler
    - pr2_doors_common
    desc: A node which detects doors and handles from 3D point cloud data.
    license: BSD
    shortdesc: A node which detects doors and handles from 3D point cloud data.
    source: https://kforge.ros.org/doors/hg
    website: http://pr.willowgarage.com
  door_msgs:
    author: !!python/unicode 'Wim Meeussen'
    deps:
    - geometry_msgs
    - actionlib_msgs
    desc: Messages for door opening
    license: BSD
    shortdesc: Messages for door opening
    source: https://kforge.ros.org/doors/hg
    website: http://pr.willowgarage.com/wiki
  pr2_doors_actions:
    author: !!python/unicode 'Wim Meeussen'
    deps:
    - roscpp
    - kdl
    - tf
    - actionlib
    - pr2_common_action_msgs
    - pr2_arm_move_ik
    - joint_trajectory_generator
    - std_msgs
    - diagnostic_msgs
    - diagnostic_updater
    - door_msgs
    - move_base_msgs
    - geometry_msgs
    - actionlib_msgs
    - pr2_controllers_msgs
    - door_handle_detector
    - pr2_doors_common
    - tff_controller
    - costmap_2d
    - base_local_planner
    - laser_assembler
    - pr2_laser_snapshotter
    desc: The highlevel controllers for the door domain
    license: BSD
    shortdesc: The highlevel controllers for the door domain
    source: https://kforge.ros.org/doors/hg
    website: http://pr.willowgarage.com
  pr2_doors_common:
    author: !!python/unicode 'Wim Meeussen'
    deps:
    - roscpp
    - door_msgs
    - kdl
    - tf
    desc: Door functions package
    license: BSD
    shortdesc: Door functions package
    source: https://kforge.ros.org/doors/hg
    website: http://pr.willowgarage.com
  pr2_doors_executive:
    author: !!python/unicode 'Wim Meeussen'
    deps:
    - pr2_doors_actions
    - door_handle_detector
    - pr2_navigation_teleop
    - pr2_navigation_perception
    - pr2_navigation_local
    - pr2_controller_manager
    - pr2_mechanism_msgs
    - smach
    - smach_ros
    desc: pr2_doors_executive
    license: BSD
    shortdesc: pr2_doors_executive
    source: https://kforge.ros.org/doors/hg
    website: http://ros.org/wiki/pr2_doors_executive
  pr2_laser_snapshotter:
    author: !!python/unicode 'Vijay Pradeep'
    deps:
    - roscpp
    - sensor_msgs
    - geometry_msgs
    - pr2_msgs
    - laser_assembler
    - actionlib
    - actionlib_msgs
    desc: "Uses the laser_assembler to generate points clouds from each sweep from\
      \ PR2's\n     tilting laser mechanism."
    license: BSD
    shortdesc: Build point clouds from PR2's tilting laser mechanism
    source: https://kforge.ros.org/doors/hg
    website: http://ros.org/wiki/pr2_laser_snapshotter
  tff_controller:
    author: !!python/unicode 'Wim Meeussen'
    deps:
    - kdl
    - tf
    - pr2_controller_interface
    - pr2_mechanism_model
    - realtime_tools
    - control_toolbox
    - geometry_msgs
    - pluginlib
    desc: tff_controller
    license: BSD
    shortdesc: tff_controller
    source: https://kforge.ros.org/doors/hg
    website: http://ros.org/wiki/tff_controller
pr2_plugs:
  checkerboard_pose_estimation:
    author: !!python/unicode 'Patrick Mihelich'
    deps:
    - roscpp
    - opencv2
    - cv_bridge
    - image_transport
    - visual_pose_estimation
    - outlet_pose_estimation
    desc: checkerboard_pose_estimation
    license: BSD
    shortdesc: checkerboard_pose_estimation
    source: https://kforge.ros.org/plugs/hg
    website: http://ros.org/wiki/checkerboard_pose_estimation
  outlet_pose_estimation:
    author: !!python/unicode 'Patrick Mihelich'
    deps:
    - roscpp
    - opencv2
    - visual_pose_estimation
    desc: outlet_pose_estimation
    license: BSD
    shortdesc: outlet_pose_estimation
    source: https://kforge.ros.org/plugs/hg
    website: http://ros.org/wiki/outlet_pose_estimation
  pr2_image_snapshot_recorder:
    author: !!python/unicode 'Kevin Watts'
    deps:
    - rospy
    - actionlib
    - actionlib_msgs
    - sensor_msgs
    - rosbag
    desc: pr2_image_snapshot_recorder
    license: BSD
    shortdesc: pr2_image_snapshot_recorder
    source: https://kforge.ros.org/plugs/hg
    website: http://ros.org/wiki/pr2_image_snapshot_recorder
  pr2_plugs_actions:
    author: !!python/unicode 'Jon Bohren, Patrick Mihelich, Wim Meeussen, and Melonee
      Wise'
    deps:
    - actionlib
    - roscpp
    - rospy
    - actionlib_msgs
    - geometry_msgs
    - pr2_controllers_msgs
    - pr2_controller_manager
    - sensor_msgs
    - tf
    - kdl
    - tf_conversions
    - tf2_ros
    - tf2_geometry_msgs
    - pr2_msgs
    - std_srvs
    - move_base_msgs
    - dynamic_reconfigure
    - pr2_common_action_msgs
    - pr2_plugs_common
    - pr2_plugs_msgs
    - stereo_wall_detection
    - checkerboard_pose_estimation
    - outlet_pose_estimation
    - image_transport
    - joint_trajectory_action_tools
    - pr2_arm_move_ik
    - costmap_2d
    - base_local_planner
    - pr2_image_snapshot_recorder
    - smach
    - smach_ros
    desc: pr2_plugs_actions contains actions specific to plugging in the PR2 robot.
    license: BSD
    shortdesc: pr2_plugs_actions
    source: https://kforge.ros.org/plugs/hg
    website: http://ros.org/wiki/pr2_plugs_actions
  pr2_plugs_common:
    author: !!python/unicode 'Wim Meeussen and Melonee Wise'
    deps:
    - roscpp
    - tf
    - bfl
    - kdl
    - std_msgs
    - geometry_msgs
    - actionlib
    - pr2_controllers_msgs
    - std_srvs
    desc: pr2_plugs_common contains common utilies for plugging in the PR2 robot.
    license: BSD
    shortdesc: pr2_plugs_common
    source: https://kforge.ros.org/plugs/hg
    website: http://ros.org/wiki/pr2_plugs_common
  pr2_plugs_msgs:
    author: !!python/unicode ''
    deps:
    - actionlib_msgs
    - geometry_msgs
    - sensor_msgs
    - std_msgs
    desc: pr2_plugs_msgs provides the msgs and action definitions required for plugging
      in.
    license: BSD
    shortdesc: pr2_plugs_msgs
    source: https://kforge.ros.org/plugs/hg
    website: http://ros.org/wiki/pr2_plugs_msgs
  stereo_wall_detection:
    author: !!python/unicode 'Radu Bogdan Rusu'
    deps:
    - roscpp
    - geometry_msgs
    - sensor_msgs
    - angles
    - eigen
    - visualization_msgs
    desc: Detects planar structures (e.g., walls) from stereo cameras point clouds
      (usually generated using a texture projector).
    license: BSD
    shortdesc: Detects planar structures (e.g., walls) from stereo cameras point clouds
      (usually generated usi...
    source: https://kforge.ros.org/plugs/hg
    website: http://pr.willowgarage.com
  visual_pose_estimation:
    author: !!python/unicode 'Patrick Mihelich'
    deps:
    - roscpp
    - opencv2
    - image_geometry
    - tf
    desc: visual_pose_estimation
    license: BSD
    shortdesc: visual_pose_estimation
    source: https://kforge.ros.org/plugs/hg
    website: http://ros.org/wiki/visual_pose_estimation
pr2_simple_motions:
  joint_states_listener:
    author: !!python/unicode 'Stephen Miller'
    deps:
    - rospy
    - sensor_msgs
    - pr2_simple_motions_srvs
    desc: joint_states_listener
    license: BSD
    shortdesc: joint_states_listener
    source: http://ros.berkeley.edu/svn/berkeley-ros-pkg/stacks/pr2_simple_motions/trunk/pr2_simple_motions/joint_states_listener
    website: http://ros.org/wiki/joint_states_listener
  pr2_arm_move_ik_synced:
    author: !!python/unicode 'Melonee Wise, Wim Meeussen'
    deps:
    - actionlib
    - roscpp
    - actionlib_msgs
    - geometry_msgs
    - pr2_controllers_msgs
    - pr2_common_action_msgs
    - tf
    - pr2_arm_kinematics
    - urdf
    - pr2_simple_motions_srvs
    desc: Move the pr2 arm using inverse kinematics
    license: BSD
    shortdesc: pr2_arm_move_ik_synced
    source: http://ros.berkeley.edu/svn/berkeley-ros-pkg/stacks/pr2_simple_motions/trunk/pr2_simple_motions/pr2_arm_move_ik_synced
    website: http://ros.org/wiki/pr2_arm_move_ik
  pr2_simple_arm_motions:
    author: !!python/unicode 'Stephen Miller'
    deps:
    - rospy
    - actionlib
    - geometry_msgs
    - tf
    - pr2_common_action_msgs
    - pr2_controllers_msgs
    - pr2_simple_motions_msgs
    - pr2_simple_motions_srvs
    - pr2_arm_move_ik
    - joint_states_listener
    - joint_trajectory_generator
    - std_srvs
    - smach
    - smach_ros
    - opencv2
    - pr2_arm_move_ik_synced
    - urdf
    - sensor_msgs
    - kdl
    - roscpp
    - pr2_arm_kinematics
    - pr2_controllers_msgs
    desc: pr2_simple_arm_motions
    license: BSD
    shortdesc: pr2_simple_arm_motions
    source: http://ros.berkeley.edu/svn/berkeley-ros-pkg/stacks/pr2_simple_motions/trunk/pr2_simple_motions/pr2_simple_arm_motions
    website: http://ros.org/wiki/pr2_simple_arm_motions
  pr2_simple_base_motions:
    author: !!python/unicode 'Stephen Miller'
    deps:
    - rospy
    - geometry_msgs
    - tf
    - pr2_2dnav_slam
    - move_base_msgs
    - actionlib
    - pr2_simple_motions_srvs
    - std_srvs
    - sensor_msgs
    - rll_utils
    desc: pr2_simple_base_motions
    license: BSD
    shortdesc: pr2_simple_base_motions
    source: http://ros.berkeley.edu/svn/berkeley-ros-pkg/stacks/pr2_simple_motions/trunk/pr2_simple_motions/pr2_simple_base_motions
    website: http://ros.org/wiki/pr2_simple_base_motions
  pr2_simple_head_motions:
    author: !!python/unicode 'Stephen Miller'
    deps:
    - rospy
    - actionlib
    - geometry_msgs
    - pr2_controllers_msgs
    - pr2_simple_motions_srvs
    - tf
    desc: pr2_simple_head_motions
    license: BSD
    shortdesc: pr2_simple_head_motions
    source: http://ros.berkeley.edu/svn/berkeley-ros-pkg/stacks/pr2_simple_motions/trunk/pr2_simple_motions/pr2_simple_head_motions
    website: http://ros.org/wiki/pr2_simple_head_motions
  pr2_simple_motions_apps:
    author: !!python/unicode 'Stephen Miller'
    deps:
    - pr2_simple_arm_motions
    - pr2_simple_base_motions
    - pr2_simple_head_motions
    - pr2_simple_motions_msgs
    - pr2_simple_motions_srvs
    - pr2_simple_torso_motions
    - joint_states_listener
    desc: pr2_simple_motions_apps
    license: BSD
    shortdesc: pr2_simple_motions_apps
    source: http://ros.berkeley.edu/svn/berkeley-ros-pkg/stacks/pr2_simple_motions/trunk/pr2_simple_motions/pr2_simple_motions_apps
    website: http://ros.org/wiki/pr2_simple_motions_apps
  pr2_simple_motions_msgs:
    author: !!python/unicode 'Stephen Miller'
    deps:
    - rospy
    - geometry_msgs
    desc: pr2_simple_motions_msgs
    license: BSD
    shortdesc: pr2_simple_motions_msgs
    source: http://ros.berkeley.edu/svn/berkeley-ros-pkg/stacks/pr2_simple_motions/trunk/pr2_simple_motions/pr2_simple_motions_msgs
    website: http://ros.org/wiki/pr2_simple_motions_msgs
  pr2_simple_motions_srvs:
    author: !!python/unicode 'Stephen Miller'
    deps:
    - rospy
    - pr2_simple_motions_msgs
    - geometry_msgs
    - std_msgs
    desc: pr2_simple_motions_srvs
    license: BSD
    shortdesc: pr2_simple_motions_srvs
    source: http://ros.berkeley.edu/svn/berkeley-ros-pkg/stacks/pr2_simple_motions/trunk/pr2_simple_motions/pr2_simple_motions_srvs
    website: http://ros.org/wiki/pr2_simple_motions_srvs
  pr2_simple_torso_motions:
    author: !!python/unicode 'Stephen Miller'
    deps:
    - rospy
    - pr2_simple_motions_msgs
    - pr2_simple_motions_srvs
    - pr2_controllers_msgs
    - tf
    - actionlib
    desc: pr2_simple_torso_motions
    license: BSD
    shortdesc: pr2_simple_torso_motions
    source: http://ros.berkeley.edu/svn/berkeley-ros-pkg/stacks/pr2_simple_motions/trunk/pr2_simple_motions/pr2_simple_torso_motions
    website: http://ros.org/wiki/pr2_simple_torso_motions
  pr2_simple_utils:
    author: !!python/unicode 'Stephen Miller'
    deps:
    - rospy
    - tf
    - geometry_msgs
    desc: pr2_simple_utils
    license: BSD
    shortdesc: pr2_simple_utils
    source: http://ros.berkeley.edu/svn/berkeley-ros-pkg/stacks/pr2_simple_motions/trunk/pr2_simple_motions/pr2_simple_utils
    website: http://ros.org/wiki/pr2_simple_utils
prairiedog:
  base_planner_cu:
    author: !!python/unicode 'Michael Otte'
    deps:
    - roscpp
    - nav_msgs
    - geometry_msgs
    - sensor_msgs
    - mapper_cu
    - localization_cu
    desc: A 2D Path Planning System
    license: GNU GPL V3
    shortdesc: A 2D Path Planning System
    source: http://prairiedog.googlecode.com/svn/trunk/base_planner_cu
    website: http://correll.cs.colorado.edu/pmwiki/index.php/Main/PlanningSystemBase/
  cmd_line_control_cu:
    author: !!python/unicode 'Michael Otte'
    deps:
    - roscpp
    - nav_msgs
    - geometry_msgs
    - sensor_msgs
    - tf
    - message_filters
    - move_base_msgs
    desc: A graphical interface for the CU nodes.
    license: GNU GPL V3
    shortdesc: A graphical interface for the CU nodes.
    source: http://prairiedog.googlecode.com/svn/trunk/cmd_line_control_cu
    website: http://correll.cs.colorado.edu/pmwiki/index.php/Main/Visualization
  gencam_cu:
    author: !!python/unicode 'Nikolaus Correll'
    deps:
    - std_msgs
    - sensor_msgs
    - self_test
    - opencv2
    - image_transport
    - compressed_image_transport
    desc: ''
    license: BSD
    shortdesc: A generic driver for USB camera using OpenCV
    source: details.php?name=roscpp
    website: http://prairiedog.googlecode.com/svn/trunk/gencam_cu
  goal_server_cu:
    author: !!python/unicode 'Michael Otte'
    deps:
    - roscpp
    - nav_msgs
    - geometry_msgs
    - localization_cu
    desc: A Goal Server
    license: GNU GPL V3
    shortdesc: A Goal Server
    source: http://prairiedog.googlecode.com/svn/trunk/goal_server_cu
    website: http://correll.cs.colorado.edu/pmwiki/
  hokuyo_listener_cu:
    author: !!python/unicode 'common'
    deps:
    - roscpp
    - geometry_msgs
    - sensor_msgs
    - hokuyo_node
    - tf
    desc: hokuyo_listener_cu
    license: BSD
    shortdesc: hokuyo_listener_cu
    source: http://prairiedog.googlecode.com/svn/trunk/hokuyo_listener_cu
    website: http://correll.cs.colorado.edu/pmwiki/index.php/Main/LaserScanner
  intercom_cu:
    author: !!python/unicode 'common'
    deps:
    - roscpp
    - nav_msgs
    - std_msgs
    - geometry_msgs
    - sensor_msgs
    - tf
    - message_filters
    - move_base_msgs
    - hokuyo_listener_cu
    - tinyxml
    desc: provides inter-robot communication.
    license: BSD
    shortdesc: intercom_cu
    source: http://prairiedog.googlecode.com/svn/trunk/intercom_cu
    website: http://correll.cs.colorado.edu/pmwiki/index.php/Main/RobotBase
  irobot_create_cu:
    author: !!python/unicode 'common'
    deps:
    - irobot_create_rustic
    - geometry_msgs
    - nav_msgs
    - tf
    desc: This builds on the Brown irobot create package
    license: BSD
    shortdesc: irobot_create_cu
    source: http://prairiedog.googlecode.com/svn/trunk/irobot_create_cu
    website: http://correll.cs.colorado.edu/pmwiki/index.php/Main/RobotBase
  irobot_create_rustic:
    author: !!python/unicode 'Gheric Speiginer and Keenan Black, modified by Michael
      Otte'
    deps:
    - roscpp
    - rospy
    - std_msgs
    desc: "Brown University V 104 of irobot create, 2009.\n     By Gheric Speiginer\
      \ and Keenan Black\n    \n     Modified by Michael Otte at University of Colorado\
      \ 2010 to work with ROS V 1.0 under the name irobot_create_rustic"
    license: BSD
    shortdesc: irobot_create_rustic
    source: http://prairiedog.googlecode.com/svn/trunk/irobot_create_rustic
    website: http://pr.willowgarage.com/wiki/irobot_create
  localization_cu:
    author: !!python/unicode 'Michael Otte'
    deps:
    - roscpp
    - nav_msgs
    - geometry_msgs
    - tf
    desc: A Localization System for a 2D Environment
    license: GNU GPL V3
    shortdesc: A Localization System for a 2D Environment
    source: http://prairiedog.googlecode.com/svn/trunk/localization_cu
    website: http://correll.cs.colorado.edu/pmwiki/index.php/Main/LocalizationSystemBase
  mapper_cu:
    author: !!python/unicode 'Michael Otte'
    deps:
    - roscpp
    - geometry_msgs
    - sensor_msgs
    - nav_msgs
    - hokuyo_listener_cu
    - tf
    desc: A Mapper for a 2D environment
    license: GNU GPL V3
    shortdesc: A Mapper for a 2D environment
    source: http://prairiedog.googlecode.com/svn/trunk/mapper_cu
    website: http://correll.cs.colorado.edu/pmwiki/index.php/Main/MappingSystem
  nav_view_cu:
    author: !!python/unicode 'Michael Otte'
    deps:
    - roscpp
    - nav_msgs
    - geometry_msgs
    - tf
    - message_filters
    - move_base_msgs
    desc: A minimalistic graphical interface for 2-D navigation that does not use
      the ogre library.
    license: GNU GPL V3
    shortdesc: A minimalistic graphical interface for 2-D navigation that does not
      use the ogre library.
    source: http://prairiedog.googlecode.com/svn/trunk/nav_view_cu
    website: http://correll.cs.colorado.edu/pmwiki/index.php/Main/NavViewCu
  stargazer_cu:
    author: !!python/unicode 'common'
    deps:
    - roscpp
    - std_msgs
    - geometry_msgs
    desc: indoor global positioning system for use with stargazer sensor
    license: BSD
    shortdesc: stargazer_cu
    source: http://prairiedog.googlecode.com/svn/trunk/stargazer_cu
    website: http://correll.cs.colorado.edu/pmwiki/index.php/Main/PositioningSystemBase
  tagmapper_cu:
    author: !!python/unicode 'common'
    deps:
    - std_msgs
    - rospy
    - roscpp
    - stargazer_cu
    - localization_cu
    - geometry_msgs
    - irobot_create_rustic
    desc: tagmapper_cu
    license: BSD
    shortdesc: tagmapper_cu
    source: http://prairiedog.googlecode.com/svn/trunk/tagmapper_cu
    website: http://ros.org/wiki/tagmapper_cu
  visualization_cu:
    author: !!python/unicode 'Michael Otte'
    deps:
    - roscpp
    - nav_msgs
    - std_msgs
    - geometry_msgs
    - sensor_msgs
    - tf
    - message_filters
    - move_base_msgs
    - hokuyo_listener_cu
    - intercom_cu
    desc: A graphical interface for the CU nodes.
    license: GNU GPL V3
    shortdesc: A graphical interface for the CU nodes.
    source: http://prairiedog.googlecode.com/svn/trunk/visualization_cu
    website: http://correll.cs.colorado.edu/pmwiki/index.php/Main/Visualization
presenter:
  presenter:
    author: !!python/unicode 'Tim Niemueller'
    deps:
    - roslib
    - roscpp
    - std_srvs
    desc: ROS slide presentation program.
    license: GPLv2+
    shortdesc: ROS slide presentation program.
    source: http://github.com/timn/ros-presenter.git
    website: http://ros.org/wiki/presenter
rl-texplore-ros-pkg:
  rl_agent:
    author: !!python/unicode 'Todd Hester'
    deps:
    - std_msgs
    - roscpp
    - rl_msgs
    - tf
    - rl_common
    desc: A set of reinforcement learning agents to learn various tasks. In addition,
      a framework for model based agents where any model learning and/or planning
      methods can be substituted in.
    license: BSD
    shortdesc: A set of reinforcement learning agents to learn various tasks. In addition,
      a framework for m...
    source: http://rl-texplore-ros-pkg.googlecode.com/svn/trunk/stacks/reinforcement_learning/rl_agent
    website: http://ros.org/wiki/rl_agent
  rl_common:
    author: !!python/unicode 'Todd Hester'
    deps: []
    desc: Common files required for RL agents and environments. Including the interface
      defining agents and environments.
    license: BSD
    shortdesc: Common files required for RL agents and environments. Including the
      interface defining agents...
    source: http://rl-texplore-ros-pkg.googlecode.com/svn/trunk/stacks/reinforcement_learning/rl_common
    website: http://ros.org/wiki/rl_common
  rl_env:
    author: !!python/unicode 'Todd Hester'
    deps:
    - std_msgs
    - roscpp
    - rl_msgs
    - tf
    - rl_common
    desc: Provides a set of reinforcement learning environments (gridworlds, mountain
      car, cart pole, stock trading, robot car simulations) for RL agents to learn
      in.
    license: BSD
    shortdesc: Provides a set of reinforcement learning environments (gridworlds,
      mountain car, cart pole, s...
    source: http://rl-texplore-ros-pkg.googlecode.com/svn/trunk/stacks/reinforcement_learning/rl_env
    website: http://ros.org/wiki/rl_env
  rl_experiment:
    author: !!python/unicode 'Todd Hester'
    deps:
    - std_msgs
    - roscpp
    - tf
    - rl_common
    - rl_agent
    - rl_env
    desc: A package to run RL experiments using the rl_agent and rl_env packages,
      by directly calling agents and environments without using the rl_msgs interface.
    license: BSD
    shortdesc: rl_experiment
    source: http://rl-texplore-ros-pkg.googlecode.com/svn/trunk/stacks/reinforcement_learning/rl_experiment
    website: http://ros.org/wiki/rl_experiment
  rl_msgs:
    author: !!python/unicode 'Michael Quinlan, Todd Hester'
    deps: []
    desc: Provides the set of ROS messages to be passed between reinforcement learning
      (RL) agent nodes and environment nodes.
    license: BSD
    shortdesc: Provides the set of ROS messages to be passed between reinforcement
      learning (RL) agent nodes a...
    source: http://rl-texplore-ros-pkg.googlecode.com/svn/trunk/stacks/reinforcement_learning/rl_msgs
    website: http://ros.org/wiki/rl_msgs
robot_model:
  assimp:
    author: !!python/unicode 'ASSIMP Development Team'
    deps: []
    desc: "Open Asset Import Library (Short name: Assimp) is a free library to import\
      \ various well-known 3D model formats \n    into applications. The library has\
      \ been designed for maximum stability and efficiency. Written in C++, it is\
      \ \n    licensed under the BSD license. The API is provided for both C and C++.\
      \ Wrappers for Python and D are available, \n    more bindings are in development.\n\
      \n    The library loads models in a straightforward in-memory format that can\
      \ be easily read and processed by applications. \n    Various post processing\
      \ steps can be executed on the imported data to optimize it for a particular\
      \ purpose."
    license: BSD
    shortdesc: 'Open Asset Import Library (Short name: Assimp) is a free library to
      import various well-known ...'
    source: https://kforge.ros.org/robotmodel/robot_model
    website: http://assimp.sourceforge.net/
  collada_urdf:
    author: !!python/unicode 'Tim Field'
    deps:
    - roscpp
    - urdf
    - colladadom
    - resource_retriever
    - angles
    desc: This package contains a tool to convert Unified Robot Description Format
      (URDF) documents into COLLAborative Design Activity (COLLADA) documents.
    license: BSD
    shortdesc: URDF to COLLADA converter
    source: https://kforge.ros.org/robotmodel/robot_model
    website: http://ros.org/wiki/collada_urdf
  colladadom:
    author: !!python/unicode 'Du Hung Hou, Khronos.org, Marcus Barnes, Greg Corson,
      Herbert Law, Sebastian Schwarz, Steven Thomas, John Hsu (ros package), Tim Field
      (ros package)'
    deps: []
    desc: "This package contains the COLLADA Document Object Model (DOM) which is\
      \ an API that provides a C++ object representation of a COLLADA XML instance\
      \ document.\n\n    See http://sourceforge.net/projects/collada-dom."
    license: BSD
    shortdesc: colladadom
    source: https://kforge.ros.org/robotmodel/robot_model
    website: http://ros.org/wiki/colladadom
  convex_decomposition:
    author: !!python/unicode 'John Ratcliff'
    deps: []
    desc: "<p>\n<tt>convex_decomposition</tt> contains the Convex Mesh Generation\
      \ Library, by John Ratcliff.  This library is used to auto-generate convex decomposed\
      \ meshes for\ncollision and visualization of robot links.  \n</p>\n<p>\nWe are\
      \ using the latest and the only version available.  We plan on deprecating this\
      \ package\nonce we find a better alternative.  \n</p>\n<p>\nThe Convex Mesh\
      \ Generation Library is not provided by\nany of the major OS package managers,\
      \ and this version provided\nhere contains patches required for compilation.\n\
      These patches have not been submitted back as there\nappears to be no available\
      \ revision control.\n</p>"
    license: MIT
    shortdesc: Convex Mesh Generation Library
    source: https://kforge.ros.org/robotmodel/robot_model
    website: http://www.amillionpixels.us/ConvexDecomposition.zip
  ivcon:
    author: !!python/unicode 'John Burkardt'
    deps: []
    desc: 'Mesh Conversion Utility


      Used to generate ''.iv'' files from ''.stl'' files.  This package has not

      been changed since 2001 and appears to be very stable.  We plan on

      keeping this package in this revision for mesh conversions.  This

      package is only available as a single source file for download.  There

      are no local modifications to this package.'
    license: GPL
    shortdesc: Mesh Conversion Utility
    source: https://kforge.ros.org/robotmodel/robot_model
    website: https://sourceforge.net/projects/ivcon/
  kdl_parser:
    author: !!python/unicode 'Wim Meeussen meeussen@willowgarage.com'
    deps:
    - kdl
    - tinyxml
    - urdf
    - roscpp
    desc: The Kinematics and Dynamics Library (KDL) defines a tree structure to represent
      the kinematic and dynamic parameters of a robot mechanism. <tt>kdl_parser</tt>
      provides tools to construct a KDL tree from the robot representation in the
      <a href="http://www.ros.org/wiki/urdf">urdf</a> package.
    license: BSD
    shortdesc: Package to parse urdf in to kdl tree
    source: https://kforge.ros.org/robotmodel/robot_model
    website: http://ros.org/wiki/kdl_parser
  resource_retriever:
    author: !!python/unicode 'Josh Faust (jfaust@willowgarage.com)'
    deps:
    - roslib
    - rosconsole
    desc: "This package retrieves data from url-format files such as http://,\n  \
      \ ftp://, package:// file://, etc., and loads the data into memory.\n   The\
      \ package:// url for ros packages is translated into a local\n   file:// url.\
      \  The resourse retriever was initially designed to load\n   mesh files into\
      \ memory, but it can be used for any type of\n   data. The resource retriever\
      \ is based on the the libcurl library."
    license: BSD
    shortdesc: resource_retriever
    source: https://kforge.ros.org/robotmodel/robot_model
    website: http://ros.org/wiki/resource_retriever
  robot_state_publisher:
    author: !!python/unicode 'Wim Meeussen meeussen@willowgarage.com'
    deps:
    - kdl_parser
    - sensor_msgs
    - roscpp
    - tf
    - tf_conversions
    desc: "This package allows you to publish the state of a robot to \n    <a href=\"\
      http://ros.org/wiki/tf\">tf</a>. Once the state gets published, it is\n    available\
      \ to all components in the system that also use <tt>tf</tt>.\n    The package\
      \ takes the joint angles of the robot as input\n    and publishes the 3D poses\
      \ of the robot links, using a kinematic\n    tree model of the robot. The package\
      \ can both be used as a library\n    and as a ROS node.  This package has been\
      \ well tested and the code\n    is stable. No major changes are planned in the\
      \ near future"
    license: BSD
    shortdesc: This package allows you to publish the state of a robot to the transform
      library topic
    source: https://kforge.ros.org/robotmodel/robot_model
    website: http://ros.org/wiki/robot_state_publisher
  urdf:
    author: !!python/unicode 'Wim Meeussen, John Hsu'
    deps:
    - tinyxml
    - roscpp
    desc: "This package contains a C++ parser for the Unified Robot Description\n\
      \    Format (URDF), which is an XML format for representing a robot model. \n\
      \    The code API of the parser has been through our review process and will\
      \ remain\n    backwards compatible in future releases."
    license: BSD
    shortdesc: URDF Xml robot description parser.
    source: https://kforge.ros.org/robotmodel/robot_model
    website: http://ros.org/wiki/urdf
robot_model_tutorials:
  urdf_tutorial:
    author: !!python/unicode 'David Lu!!'
    deps: []
    desc: Support code for the step by step URDF tutorials on ROS.org
    license: BSD
    shortdesc: Code for some URDF Tutorials
    source: https://kforge.ros.org/robotmodel/tutorials
    website: http://ros.org/wiki/urdf_tutorial
robot_model_visualization:
  joint_state_publisher:
    author: !!python/unicode 'David Lu!!'
    deps:
    - rospy
    - sensor_msgs
    desc: "A node for publishing joint angles, either through a gui, or with\n   \
      \ default values."
    license: BSD
    shortdesc: A node for publishing joint angles
    source: https://kforge.ros.org/robotmodel/visualization
    website: http://ros.org/wiki/joint_state_publisher
ros-engagement:
  engagement_generation:
    author: !!python/unicode 'Aaron Holroyd (aholroyd (at) wpi (dot) edu)'
    deps:
    - engagement_msgs
    - engagement_srvs
    - engagement_realizer
    desc: "Human-robot engagement generation package developed at Worcester Polytechnic\n\
      \    Institute by Aaron Holroyd et al. <br/>Currently contains the \n    <b>generation\
      \ node</b> that is responsible for generating \n    <u>directed gaze</u>, <u>mutual\
      \ facial gaze</u>, <u>adjacency \n    pairs</u>, and <u>backchannels</u> during\
      \ an interaction."
    license: BSD
    shortdesc: Generating Engagement Behaviors in Human-Robot Interaction
    source: http://ros-engagement.svn.sourceforge.net/svnroot/ros-engagement/trunk/engagement/engagement_generation
    website: http://sourceforge.net/projects/ros-engagement/
  engagement_msgs:
    author: !!python/unicode "Aaron Holroyd (aholroyd (at) wpi (dot) edu),\n     \
      \       Brett Ponsler (bponsler (at) wpi (dot) edu)"
    deps: []
    desc: engagement_msgs is a package which collects the messages for the enagement
      stack.
    license: BSD
    shortdesc: engagement_msgs
    source: http://ros-engagement.svn.sourceforge.net/svnroot/ros-engagement/trunk/engagement/engagement_msgs
    website: http://sourceforge.net/projects/ros-engagement/
  engagement_realizer:
    author: !!python/unicode 'Aaron Holroyd (aholroyd (at) wpi (dot) edu)'
    deps:
    - engagement_msgs
    - engagement_srvs
    desc: "The BML realizer consumes BML by planning and executing the required actions\
      \ to\n     complete and keeping the entire system informed of the execution\
      \ status of each \n     action."
    license: BSD
    shortdesc: engagement_realizer
    source: http://ros-engagement.svn.sourceforge.net/svnroot/ros-engagement/trunk/engagement/engagement_realizer
    website: http://sourceforge.net/projects/ros-engagement/
  engagement_recognition:
    author: !!python/unicode 'Brett Ponsler (bponsler (at) wpi (dot) edu)'
    deps:
    - roscpp
    - engagement_msgs
    - engagement_srvs
    desc: "Human-robot engagement package developed at Worcester Polytechnic Institute\n\
      \    by Prof. Charles Rich et al. <br/>Currently contains \n    the <b>recognition\
      \ node</b> which is responsible for recognizing \n    <u>directed gaze</u>,\
      \ <u>mutual facial gaze</u>, <u>adjacency \n    pairs</u>, and <u>backchannels</u>\
      \ during an interaction."
    license: BSD
    shortdesc: Recognizing Engagement Behaviors in Human-Robot Interaction
    source: http://ros-engagement.svn.sourceforge.net/svnroot/ros-engagement/trunk/engagement/engagement_recognition
    website: http://sourceforge.net/projects/ros-engagement/
  engagement_srvs:
    author: !!python/unicode "Aaron Holroyd (aholroyd (at) wpi (dot) edu),\n     \
      \       Brett Ponsler (bponsler (at) wpi (dot) edu)"
    deps:
    - engagement_msgs
    desc: engagement_srvs is a package which collects the services for the enagement
      stack.
    license: BSD
    shortdesc: engagement_srvs
    source: http://ros-engagement.svn.sourceforge.net/svnroot/ros-engagement/trunk/engagement/engagement_srvs
    website: http://sourceforge.net/projects/ros-engagement/
  engagement_test:
    author: !!python/unicode "Aaron Holroyd (aholroyd (at) wpi (dot) edu),\n     \
      \       Brett Ponsler (bponsler (at) wpi (dot) edu)"
    deps:
    - engagement_msgs
    - engagement_srvs
    desc: engagement_test is a series of nodes to test the engagement stack.
    license: BSD
    shortdesc: engagement_test
    source: http://ros-engagement.svn.sourceforge.net/svnroot/ros-engagement/trunk/engagement/engagement_test
    website: http://sourceforge.net/projects/ros-engagement/
ros-heyu-x10:
  heyu_X10:
    author: !!python/unicode 'Ugo Cupcic / ugocupcic@gmail.com'
    deps:
    - rospy
    desc: 'This is a simple ROS interface to the Heyu X10 home automation program:
      use it if you want to turn on your lights using ROS !!'
    license: BSD
    shortdesc: 'This is a simple ROS interface to the Heyu X10 home automation program:
      use it if you want to ...'
    source: lp:ros-heyu-x10
    website: http://ros.org/wiki/heyu_X10
ros-pkg:
  access_point_control:
    author: !!python/unicode 'Catalin Drula'
    deps:
    - rospy
    - dynamic_reconfigure
    desc: "Defines an API for access point control based on \n    dynamic_reconfigure.\
      \ Other packages must\n    implement the API for various access-point models:\
      \ \n    for example: hostapd_access_point for hostapd-based control or\n   \
      \ linksys_access_point for Linksys router web interface."
    license: BSD
    shortdesc: access_point_control
    source: https://code.ros.org/svn/ros-pkg/stacks/linux_networking/trunk/access_point_control
    website: http://ros.org/wiki/access_point_control
  actionlib:
    author: !!python/unicode 'Eitan Marder-Eppstein, Vijay Pradeep'
    deps:
    - roscpp
    - rospy
    - rostest
    - actionlib_msgs
    desc: "The actionlib package provides a standardized interface for interfacing\n\
      \    with preemptible tasks. Examples of this include moving the base to a target\n\
      \    location, performing a laser scan and returning the resulting point cloud,\n\
      \    detecting the handle of a door, etc."
    license: BSD
    shortdesc: Provides a standardized interface for a task
    source: https://code.ros.org/svn/ros-pkg/stacks/common/trunk/actionlib
    website: http://ros.org/wiki/actionlib
  actionlib_lisp:
    author: !!python/unicode 'Bhaskara Marthi, Lorenz Moesenlechner'
    deps:
    - roslisp_runtime
    - actionlib_msgs
    - cl_utils
    desc: "actionlib_lisp is a native implementation of the famous actionlib\n   \
      \  in Common Lisp. It provides a client and a simple server."
    license: BSD
    shortdesc: actionlib_lisp - an implenetation of actionlib in Common Lisp
    source: https://code.ros.org/svn/ros-pkg/stacks/roslisp_common/trunk/actionlib_lisp
    website: http://ros.org/wiki/actionlib_lisp
  actionlib_lisp_examples:
    author: !!python/unicode 'Lorenz Moesenlechner'
    deps:
    - actionlib_lisp
    - roslisp_runtime
    - actionlib_tutorials
    desc: actionlib_lisp_examples
    license: BSD
    shortdesc: actionlib_lisp_examples
    source: https://code.ros.org/svn/ros-pkg/branches/trunk_cturtle/stacks/roslisp_common_tutorials/actionlib_lisp_examples
    website: http://ros.org/wiki/actionlib_lisp_examples
  actionlib_msgs:
    author: !!python/unicode 'Vijay Pradeep'
    deps: []
    desc: "actionlib_msgs defines the common messages to interact with an\n     action\
      \ server and an action client.  For full documentation of\n     the actionlib\
      \ API see\n     the <a href=\"http://www.ros.org/wiki/actionlib\">actionlib</a>\n\
      \     package."
    license: BSD
    shortdesc: Messages for actionlib
    source: https://code.ros.org/svn/ros-pkg/stacks/common_msgs/trunk/actionlib_msgs
    website: http://pr.willowgarage.com/wiki/actionlib_msgs
  actionlib_tutorials:
    author: !!python/unicode 'Melonee Wise'
    deps:
    - roscpp
    - rospy
    - roslib
    - std_msgs
    - rosconsole
    - actionlib
    - actionlib_msgs
    desc: This package provides detailed tutorials for using actions.
    license: BSD
    shortdesc: actionlib_tutorials
    source: https://code.ros.org/svn/ros-pkg/stacks/common_tutorials/trunk/actionlib_tutorials
    website: http://pr.willowgarage.com/wiki/actionlib_tutorials
  asmach:
    author: !!python/unicode 'Jonathan Bohren'
    deps: []
    desc: "SMACH, which stands for 'state machine', is a task-level\n    architecture\
      \ for rapidly creating complex robot behavior. At its\n    core, SMACH is a\
      \ ROS-independent Python library to build\n    hierarchical state machines.\
      \  SMACH is a new library that takes\n    advantage of very old concepts in\
      \ order to quickly create robust\n    robot behavior with maintainable and modular\
      \ code."
    license: BSD
    shortdesc: "SMACH, which stands for 'state machine', is a task-level\n    architecture\
      \ for rapidly creating ..."
    source: https://code.ros.org/svn/ros-pkg/stacks/linux_networking/trunk/asmach
    website: http://ros.org/wiki/smach
  asmach_tutorials:
    author: !!python/unicode 'Jonathan Bohren'
    deps:
    - rospy
    - asmach
    - smach_ros
    - turtlesim
    - actionlib
    - actionlib_msgs
    desc: This package containes numerous examples of how to use SMACH. See the examples
      directory.
    license: BSD
    shortdesc: smach_tutorials
    source: https://code.ros.org/svn/ros-pkg/stacks/linux_networking/trunk/asmach_tutorials
    website: http://ros.org/wiki/smach_tutorials
  bfl:
    author: !!python/unicode 'Klaas Gadeyne, Wim Meeussen, Tinne Delaet and many others.
      See web page for a full contributor list. ROS package maintained by Wim Meeussen.'
    deps: []
    desc: "This package contains a recent version of the Bayesian Filtering\n  Library\
      \ (BFL), distributed by the Orocos Project.  For stability\n  reasons, this\
      \ package is currently locked to revision 31655 (April\n  19, 2010), but this\
      \ revision will be updated on a regular basis to\n  the latest available BFL\
      \ trunk.  This ROS package does not modify\n  BFL in any way, it simply provides\
      \ a convenient way to download and\n  compile the library, because BFL is not\
      \ available from an OS package\n  manager.  This ROS package compiles BFL with\
      \ the Boost library for\n  matrix operations and random number generation."
    license: LGPL
    shortdesc: The Bayesian Filtering Library (latest)
    source: https://code.ros.org/svn/ros-pkg/stacks/common/trunk/bfl
    website: http://www.orocos.org/bfl
  bond:
    author: !!python/unicode 'Stuart Glaser'
    deps:
    - roslib
    desc: "A bond allows two processes, A and B, to know when the other has\n    \
      \ terminated, either cleanly or by crashing.  The bond remains\n     connected\
      \ until it is either broken explicitly or until a\n     heartbeat times out."
    license: BSD
    shortdesc: "A bond allows two processes, A and B, to know when the other has\n\
      \     terminated, either clea..."
    source: https://code.ros.org/svn/ros-pkg/stacks/common/trunk/bond
    website: http://ros.org/wiki/bond
  bondcpp:
    author: !!python/unicode 'Stuart Glaser'
    deps:
    - bond
    - roscpp
    - smclib
    desc: "C++ implementation of bond, a mechanism for checking when\n     another\
      \ process has terminated."
    license: BSD
    shortdesc: "C++ implementation of bond, a mechanism for checking when\n     another\
      \ process has terminated..."
    source: https://code.ros.org/svn/ros-pkg/stacks/common/trunk/bondcpp
    website: http://ros.org/wiki/bondcpp
  bondpy:
    author: !!python/unicode 'Stuart Glaser'
    deps:
    - bond
    - rospy
    - smclib
    desc: "Python implementation of bond, a mechanism for checking when\n     another\
      \ process has terminated."
    license: BSD
    shortdesc: "Python implementation of bond, a mechanism for checking when\n   \
      \  another process has termina..."
    source: https://code.ros.org/svn/ros-pkg/stacks/common/trunk/bondpy
    website: http://ros.org/wiki/bondpy
  bpcg:
    author: !!python/unicode 'Kurt Konolige'
    deps: []
    desc: Block PCG, using block Jacobi preconditioner
    license: BSD
    shortdesc: Block PCG, using block Jacobi preconditioner
    source: details.php?name=eigen
    website: https://code.ros.org/svn/ros-pkg/stacks/vslam/trunk/bpcg
  camera1394:
    author: !!python/unicode "Jack O'Quin, Patrick Beeson, Nate Koenig, Andrew Howard,\n\
      \    Damien Douxchamps, Dan Dennedy, Ken Tossell"
    deps:
    - camera_info_manager
    - driver_base
    - dynamic_reconfigure
    - image_transport
    - nodelet
    - tf
    desc: "This is a ROS driver for devices supporting the IEEE 1394 Digital\n   \
      \ Camera (IIDC) protocol. It supports the ROS image_pipeline, using\n    libdc1394\
      \ for device access."
    license: LGPL
    shortdesc: IEEE 1394 Digital Camera driver
    source: https://code.ros.org/svn/ros-pkg/stacks/camera_drivers/trunk/camera1394
    website: http://ros.org/wiki/camera1394
  camera_calibration:
    author: !!python/unicode 'James Bowman'
    deps:
    - opencv2
    - cv_bridge
    - image_geometry
    - roscpp
    - geometry_msgs
    - std_srvs
    - sensor_msgs
    - message_filters
    - camera_calibration_parsers
    - rospy
    desc: "camera_calibration allows easy calibration of monocular or stereo\n   \
      \  cameras using a checkerboard calibration target."
    license: BSD
    shortdesc: camera_calibration
    source: https://code.ros.org/svn/ros-pkg/stacks/image_pipeline/trunk/camera_calibration
    website: http://www.ros.org/wiki/camera_calibration
  camera_calibration_parsers:
    author: !!python/unicode 'Patrick Mihelich'
    deps:
    - roscpp
    - yaml_cpp
    - sensor_msgs
    desc: camera_calibration_parsers contains routines for reading and writing camera
      calibration parameters.
    license: BSD
    shortdesc: camera_calibration_parsers
    source: https://code.ros.org/svn/ros-pkg/stacks/image_common/trunk/camera_calibration_parsers
    website: http://ros.org/wiki/camera_calibration_parsers
  camera_info_manager:
    author: !!python/unicode 'Jack O''Quin'
    deps:
    - camera_calibration_parsers
    - sensor_msgs
    - roslib
    - rostest
    desc: "This package provides a C++ interface for camera calibration\n     information.\
      \  It provides CameraInfo, and handles SetCameraInfo\n     service requests,\
      \ saving and restoring the camera calibration\n     data."
    license: BSD
    shortdesc: Camera calibration information manager
    source: https://code.ros.org/svn/ros-pkg/stacks/image_common/trunk/camera_info_manager
    website: http://ros.org/wiki/camera_info_manager
  camera_offsetter:
    author: !!python/unicode 'Vijay Pradeep, Alex Sorokin'
    deps:
    - roscpp
    - tf
    - geometry_msgs
    - sensor_msgs
    - stereo_msgs
    desc: Provides a tool to make small changes to the location of a monocular camera
      or stereocamera attached to the robot. This package is still an unstable and
      experimental package.  The interface is a work in progress that will be changing.
    license: BSD
    shortdesc: Hand tweak camera extrinsics. (unstable)
    source: https://code.ros.org/svn/ros-pkg/stacks/robot_calibration/trunk/camera_offsetter
    website: http://pr.willowgarage.com/wiki/camera_offsetter
  cl_tf:
    author: !!python/unicode 'Lorenz Moesenlechner'
    deps:
    - roslisp_runtime
    - cl_transforms
    - tf
    desc: cl_tf
    license: BSD
    shortdesc: cl_tf
    source: https://code.ros.org/svn/ros-pkg/stacks/roslisp_common/trunk/cl_tf
    website: http://ros.org/wiki/cl_tf
  cl_transforms:
    author: !!python/unicode 'Bhaskara Marthi, Lorenz Moesenlechner'
    deps:
    - cl_utils
    desc: cl_transforms
    license: BSD
    shortdesc: cl_transforms
    source: https://code.ros.org/svn/ros-pkg/stacks/roslisp_common/trunk/cl_transforms
    website: http://ros.org/wiki/cl_transforms
  cl_utils:
    author: !!python/unicode 'Bhaskara Marthi'
    deps: []
    desc: Common Lisp utility libraries
    license: BSD
    shortdesc: Common Lisp utility libraries
    source: https://code.ros.org/svn/ros-pkg/stacks/roslisp_common/trunk/cl_utils
    website: http://ros.org/wiki/cl_utils
  compressed_image_transport:
    author: !!python/unicode 'Patrick Mihelich'
    deps:
    - image_transport
    - opencv2
    - cv_bridge
    - dynamic_reconfigure
    desc: "compressed_image_transport provides a plugin to image_transport for transparently\
      \ sending images\n     compressed as JPEG or PNG."
    license: BSD
    shortdesc: compressed_image_transport
    source: https://code.ros.org/svn/ros-pkg/stacks/image_transport_plugins/trunk/compressed_image_transport
    website: http://www.ros.org/wiki/compressed_image_transport
  create_bringup:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - create_driver
    - create_node
    - create_urdf
    - create_teleop
    - joy
    - robot_state_publisher
    - pointcloud_to_laserscan
    desc: create_bringup
    license: BSD
    shortdesc: create_bringup
    source: https://code.ros.org/svn/ros-pkg/branches/trunk_cturtle/stacks/create_robot/create_bringup
    website: http://ros.org/wiki/create_bringup
  create_dashboard:
    author: !!python/unicode 'Melonee Wise'
    deps:
    - rxtools
    - robot_monitor
    - std_msgs
    - std_srvs
    - rospy
    - roslib
    - create_node
    desc: create_dashboard
    license: BSD
    shortdesc: create_dashboard
    source: https://code.ros.org/svn/ros-pkg/branches/trunk_cturtle/stacks/create_robot/create_dashboard
    website: http://ros.org/wiki/create_dashboard
  create_driver:
    author: !!python/unicode 'Damon Kohler. Ported and maintained by Ken Conley and
      Melonee Wise'
    deps: []
    desc: "For ROS bindings, please see create_node. \n\n     This is a generic driver\
      \ for iRobot Create and Roomba.  Port of pyrobot.py by Damon Kohler."
    license: MIT
    shortdesc: Driver for iRobot Create and Roomba
    source: https://code.ros.org/svn/ros-pkg/branches/trunk_cturtle/stacks/create_robot/create_driver
    website: http://ros.org/wiki/create_driver
  create_navigation:
    author: !!python/unicode 'Tully Foote'
    deps: []
    desc: create_navigation
    license: BSD
    shortdesc: create_navigation
    source: https://code.ros.org/svn/ros-pkg/branches/trunk_cturtle/stacks/create_robot/create_navigation
    website: http://ros.org/wiki/create_navigation
  create_node:
    author: !!python/unicode 'Ken Conley, Melonee Wise'
    deps:
    - create_driver
    - rospy
    - tf
    - nav_msgs
    - geometry_msgs
    - diagnostic_msgs
    - kdl
    desc: "ROS bindings for the Create/Roomba driver.\n\n     This is based on otl_roomba\
      \ driver by OTL, ported to use\n     create_driver instead.  This also contains\
      \ a 'bonus' feature from\n     the create driver by Xuwen Cao and Morgan Quigley."
    license: BSD
    shortdesc: iRobot Create ROS driver node
    source: https://code.ros.org/svn/ros-pkg/branches/trunk_cturtle/stacks/create_robot/create_node
    website: http://ros.org/wiki/create_node
  create_pano:
    author: !!python/unicode 'Ken Conley'
    deps:
    - pano_ros
    - actionlib
    - actionlib_msgs
    - rospy
    - nav_msgs
    - create_node
    - create_bringup
    desc: Panoramic capture client for the iRobot Create.
    license: BSD
    shortdesc: create_pano
    source: https://code.ros.org/svn/ros-pkg/trunk/sandbox/create_pano
    website: http://ros.org/wiki/create_pano
  create_teleop:
    author: !!python/unicode 'Melonee Wise'
    deps:
    - joy
    - geometry_msgs
    - roscpp
    desc: create_teleop
    license: BSD
    shortdesc: create_teleop
    source: https://code.ros.org/svn/ros-pkg/branches/trunk_cturtle/stacks/create_robot/create_teleop
    website: http://ros.org/wiki/create_teleop
  create_urdf:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - urdf
    - xacro
    desc: create_urdf
    license: BSD
    shortdesc: create_urdf
    source: https://code.ros.org/svn/ros-pkg/branches/trunk_cturtle/stacks/create_robot/create_urdf
    website: http://ros.org/wiki/create_urdf
  cv_bridge:
    author: !!python/unicode 'James Bowman, Patrick Mihelich'
    deps:
    - opencv2
    - roscpp
    - sensor_msgs
    desc: "This contains CvBridge, which converts between ROS\n    Image messages\
      \ and OpenCV images."
    license: BSD
    shortdesc: "This contains CvBridge, which converts between ROS\n    Image messages\
      \ and OpenCV images."
    source: https://code.ros.org/svn/ros-pkg/stacks/vision_opencv/trunk/cv_bridge
    website: http://www.ros.org/wiki/cv_bridge
  cwiid:
    author: !!python/unicode "L. Donnie Smith. ROS package maintained by Blaise Gassend\
      \ and Brian\n  Gerkey."
    deps: []
    desc: 'This package contains the latest code from CWiid, a Linux Nintendo

      Wiimote interface. This ROS package does not modify CWiid in any way;

      it simply provides a convenient way to download and compile the library

      in a way that can be managed by the ROS dependency system. Currently

      upstream revision r201 is being provided.'
    license: GPL
    shortdesc: Linux Nintendo Wiimote interface
    source: https://code.ros.org/svn/ros-pkg/stacks/joystick_drivers/trunk/cwiid
    website: http://github.com/abstrakraft/cwiid
  ddwrt_access_point:
    author: !!python/unicode 'Personal Networks'
    deps:
    - rospy
    - access_point_control
    - dynamic_reconfigure
    - ieee80211_channels
    desc: "A ROS node that controls a Linksys WRT610Nv2 access point with\n    a dd-wrt\
      \ firmware. Other access points models/dd-wrt versions\n    may be compatible\
      \ as long as the web interface is identical."
    license: BSD
    shortdesc: ddwrt_access_point
    source: https://code.ros.org/svn/ros-pkg/stacks/linux_networking/trunk/ddwrt_access_point
    website: http://ros.org/wiki/ddwrt_access_point
  diagnostic_aggregator:
    author: !!python/unicode 'Kevin Watts'
    deps:
    - diagnostic_msgs
    - roscpp
    - xmlrpcpp
    - pluginlib
    - rospy
    desc: "<p><b>diagnostic_aggregator</b> contains the tools to aggregate and analyze\
      \ robot diagnostics on an active robot. It uses the <b>Aggregator</b> class\
      \ as to aggregate and process data. The aggregator tool loads diagnostic Analyzers\
      \ as plug-ins. These analyzers can perform basic diagnostics analysis, such\
      \ as testing when things are stale, or having known errors. Analyzers are subclasses\
      \ of <b>Analyzer</b>. <b>AnalyzerGroup</b> and <b>GenericAnalyzer</b> are two\
      \ of these subclasses.</p>\n\n      <p>The Aggregator should be run on a robot,\
      \ and is typically launched in the robot's launch file. Viewing of this aggregated\
      \ diagnostics is done with the Robot Monitor, in the <b>robot_monitor</b> package.\
      \ </p>"
    license: BSD
    shortdesc: Aggregates, collects and analyzes robot diagnostics
    source: https://code.ros.org/svn/ros-pkg/stacks/diagnostics/trunk/diagnostic_aggregator
    website: http://www.ros.org/wiki/diagnostic_aggregator
  diagnostic_analysis:
    author: !!python/unicode 'Eric Berger, Kevin Watts'
    deps:
    - rosbag
    - rostest
    - diagnostic_msgs
    desc: "The diagnostic_analysis package can convert a log of diagnostics data\n\
      \    into a series of CSV files. Robot logs are recorded with rosbag, and\n\
      \    can be processed offline using the scripts in this package."
    license: BSD
    shortdesc: Process diagnostics log files for data
    source: https://code.ros.org/svn/ros-pkg/stacks/diagnostics/trunk/diagnostic_analysis
    website: http://www.ros.org/wiki/diagnostics_analysis
  diagnostic_msgs:
    author: !!python/unicode 'Tully Foote/ tfoote@willowgarage.com'
    deps:
    - rosbagmigration
    desc: "<p>\n     This package holds the diagnostic messages which provide the\n\
      \     standardized interface for the diagnostic and runtime monitoring\n   \
      \  systems in ROS. These messages are currently used by\n     the <a href=\"\
      http://ros.org/wiki/diagnostics\">diagnostics</a>\n     Stack, which provides\
      \ libraries for simple ways to set and access\n     the messages, as well as\
      \ automated ways to process the diagnostic\n     data.\n     </p>\n     <p>\n\
      \     These messages are used for long term logging and will not be\n     changed\
      \ unless there is a very important reason.\n     </p>"
    license: BSD
    shortdesc: A package for diagnostic_msgs
    source: https://code.ros.org/svn/ros-pkg/stacks/common_msgs/trunk/diagnostic_msgs
    website: http://ros.org/wiki/diagnostic_msgs
  diagnostic_updater:
    author: !!python/unicode 'Jeremy Leibs, Blaise Gassend'
    deps:
    - roscpp
    - diagnostic_msgs
    - std_msgs
    desc: diagnostic_updater contains tools for easily updating diagnostics. it is
      commonly used in device drivers to keep track of the status of output topics,
      device status, etc.
    license: BSD
    shortdesc: Easily publishes diagnostics for a driver or node
    source: https://code.ros.org/svn/ros-pkg/stacks/diagnostics/trunk/diagnostic_updater
    website: http://www.ros.org/wiki/diagnostic_updater
  driver_base:
    author: !!python/unicode 'Blaise Gassend'
    deps:
    - roscpp
    - self_test
    - diagnostic_updater
    - dynamic_reconfigure
    desc: "A framework for writing drivers that helps with runtime reconfiguration,\
      \ diagnostics and self-test.\n\n    This package is currently for internal use\
      \ only as its API is still\n    under development and is expected to undergo\
      \ significant changes."
    license: BSD
    shortdesc: Driver framework
    source: https://code.ros.org/svn/ros-pkg/stacks/driver_common/trunk/driver_base
    website: http://www.ros.org/wiki/driver_base
  dynamic_reconfigure:
    author: !!python/unicode 'Blaise Gassend, Tim Field'
    deps:
    - rospy
    - roscpp
    - rosservice
    desc: "This package provides a class to facilitate dynamic node\n    reconfiguration.\
      \ This package is still under development, and should be\n    considered unstable\
      \ except for features that are explicitely marked as\n    stable in the documentation."
    license: BSD
    shortdesc: Dynamically reconfigure driver parameters
    source: https://code.ros.org/svn/ros-pkg/stacks/driver_common/trunk/dynamic_reconfigure
    website: http://www.ros.org/wiki/dynamic_reconfigure
  filters:
    author: !!python/unicode 'Tully Foote/tfoote@willowgarage.com'
    deps:
    - rosconsole
    - roscpp
    - pluginlib
    desc: "This library provides a standardized interface for processing data as a\
      \ sequence \nof filters.  This package contains a base class upon which to build\
      \ specific implementations\nas well as an interface which dynamically loads\
      \ filters based on runtime parameters.  \n\nThis package is still relatively\
      \ young.  New features are expected in coming releases see the\n<a href=\"http://www.ros.org/wiki/common/Roadmap\"\
      > common stack roadmap</a> for more information.\nHowever any change will have\
      \ long term backwards compatability."
    license: BSD
    shortdesc: A standardized filter interface
    source: https://code.ros.org/svn/ros-pkg/stacks/common/trunk/filters
    website: http://pr.willowgarage.com
  frame_common:
    author: !!python/unicode 'Kurt Konolige'
    deps:
    - eigen
    - pcl
    desc: Common definitions for frames in SBA, VSLAM.
    license: BSD
    shortdesc: Common definitions for frames in SBA, VSLAM.
    source: details.php?name=opencv2
    website: https://code.ros.org/svn/ros-pkg/stacks/vslam/trunk/frame_common
  g2o:
    author: !!python/unicode 'Rainer Kummerle, Giorgio Grisetti, Cyril Stachniss,
      Hauke Strasdat, Kurt Konolige'
    deps:
    - eigen
    desc: A general system for graph optimization.
    license: LGPL
    shortdesc: Generalized Graph Optimizer (G2O)
    source: https://code.ros.org/svn/ros-pkg/stacks/vslam/trunk/g2o
    website: http://openslam.org/g2o.html
  gazebo:
    author: !!python/unicode 'Nate Koenig, Andrew Howard, with contributions from
      many others. See web page for a full credits llist.'
    deps:
    - ogre
    - parallel_quickstep
    - bullet
    - opende
    - assimp
    - roscpp
    - geometry_msgs
    - tinyxml
    - urdf
    - std_srvs
    - tf
    - rosgraph_msgs
    desc: "This ROS package checks out, patches and compiles a pre-release version\
      \ of the\n    <a href=\"http://playerstage.sf.net/index.php?src=gazebo\">Gazebo\
      \ Project</a>\n  from a WG branch which is based on svn trunk with some local\
      \ patches and contains wrappers for using Gazebo with ROS.\n  The local patch\
      \ provides modifications for performance, debug outputs, ROS-specific customizations,\
      \ capabilities, etc.\n  The less ROS-specific patches are pushed back to the\
      \ Gazebo repository incrementally as the package evolves.\n\n  This package\
      \ will update to newer revisions of Gazebo incrementally as new updates are\
      \ made stable."
    license: LGPL
    shortdesc: This ROS package checks out, patches and compiles a pre-release version
      of the
    source: https://code.ros.org/svn/ros-pkg/stacks/simulator_gazebo/trunk/gazebo
    website: http://playerstage.sf.net
  gazebo_plugins:
    author: !!python/unicode 'Sachin Chitta, Stu Glaser, John Hsu'
    deps:
    - gazebo
    - roscpp
    - rospy
    - angles
    - std_srvs
    - geometry_msgs
    - sensor_msgs
    - nav_msgs
    - tinyxml
    - bullet
    - urdf
    - tf
    - dynamic_reconfigure
    - driver_base
    - rosgraph_msgs
    desc: Robot-Independent Gazebo plugins.
    license: BSD
    shortdesc: Robot-Independent Gazebo plugins.
    source: https://code.ros.org/svn/ros-pkg/stacks/simulator_gazebo/trunk/gazebo_plugins
    website: http://ros.org/wiki/gazebo_plugins
  gazebo_tools:
    author: !!python/unicode 'John Hsu'
    deps:
    - gazebo
    - roscpp
    - rospy
    - std_msgs
    - angles
    - tinyxml
    - bullet
    - urdf
    desc: "Gazebo tools for working with 3D simulator in the ROS environment:\n  \
      \  urdf2gazebo parser, spawn/remove robots in simulation,"
    license: BSD
    shortdesc: Gazebo Tools for Personal Robots
    source: https://code.ros.org/svn/ros-pkg/stacks/simulator_gazebo/trunk/gazebo_tools
    website: http://pr.willowgarage.com/wiki/gazebo_tools
  gazebo_worlds:
    author: !!python/unicode 'John Hsu, Ioan Sucan'
    deps:
    - xacro
    - convex_decomposition
    - ivcon
    - gazebo
    - gazebo_tools
    - gazebo_plugins
    desc: Gazebo world and model files for wg.
    license: BSD
    shortdesc: Gazebo world and model files for wg.
    source: https://code.ros.org/svn/ros-pkg/stacks/simulator_gazebo/trunk/gazebo_worlds
    website: http://ros.org/wiki/gazebo_worlds
  geometry_msgs:
    author: !!python/unicode 'Tully Foote'
    deps:
    - rosbagmigration
    desc: "geometry_msgs provides messages for common geometric primatives\n    such\
      \ as points, vectors, and poses. These primatives are designed\n    to provide\
      \ a common data type and facilitate interoperability\n    throughout the system."
    license: BSD
    shortdesc: Messages for geometric primatives
    source: https://code.ros.org/svn/ros-pkg/stacks/common_msgs/trunk/geometry_msgs
    website: http://ros.org/wiki/geometry_msgs
  gmapping:
    author: !!python/unicode 'Giorgio Grisetti, Cyrill Stachniss, Wolfram Burgard;
      ROS wrapper by

      Brian Gerkey'
    deps:
    - roscpp
    - rosconsole
    - std_msgs
    - nav_msgs
    - std_msgs
    - tf
    - message_filters
    - map_server
    desc: 'This package contains GMapping, from OpenSlam, and a ROS wrapper. The gmapping
      package provides laser-based SLAM (Simultaneous Localization and Mapping), as
      a ROS node called slam_gmapping. Using slam_gmapping, you can create a 2-D occupancy
      grid map (like a building floorplan) from laser and pose data collected by a
      mobile robot.


      This package uses r39 from GMapping SVN repsitory at openslam.org, with

      minor patches applied to support newer versions of GCC and OSX.'
    license: CreativeCommons-by-nc-sa-2.0
    shortdesc: This package contains GMapping, from OpenSlam, and a ROS wrapper. The
      gmapping package provides la...
    source: https://code.ros.org/svn/ros-pkg/stacks/slam_gmapping/trunk/gmapping
    website: http://openslam.org/
  graph_slam:
    author: !!python/unicode 'Bhaskara Marthi'
    deps:
    - pose_graph
    - roscpp
    - sensor_msgs
    - geometry_msgs
    - nav_msgs
    - occupancy_grid_utils
    - karto_scan_matcher
    desc: graph_slam
    license: BSD
    shortdesc: graph_slam
    source: https://code.ros.org/svn/ros-pkg/stacks/graph_mapping/branches/unstable-branch/graph_slam
    website: http://ros.org/wiki/graph_slam
  hokuyo_node:
    author: !!python/unicode 'Brian P. Gerkey, Jeremy Leibs, Blaise Gassend'
    deps:
    - roscpp
    - sensor_msgs
    - driver_base
    - self_test
    - diagnostic_updater
    - dynamic_reconfigure
    desc: A ROS node to provide access to SCIP 2.0-compliant Hokuyo laser range finders
      (including 04LX).
    license: LGPL
    shortdesc: Hokuyo laser rangefinder drivers
    source: https://code.ros.org/svn/ros-pkg/stacks/laser_drivers/trunk/hokuyo_node
    website: http://www.ros.org/wiki/hokuyo_node
  hostapd_access_point:
    author: !!python/unicode 'Catalin Drula'
    deps:
    - rospy
    - access_point_control
    - dynamic_reconfigure
    - ieee80211_channels
    desc: "A ROS node that controls a hostapd-based access\n    point. It is mainly\
      \ intended for use with a wireless \n    network adapter running in master mode.\
      \ It implements \n    the dynamic_reconfigure interface defined\n    in the\
      \ [[access_point_control]] package."
    license: BSD
    shortdesc: hostapd_access_point
    source: https://code.ros.org/svn/ros-pkg/stacks/linux_networking/trunk/hostapd_access_point
    website: http://ros.org/wiki/hostapd_access_point
  ieee80211_channels:
    author: !!python/unicode 'Catalin Drula'
    deps: []
    desc: "This package provides mapping from frequencies to\n    IEEE802.11 channels\
      \ and vice-versa."
    license: BSD
    shortdesc: ieee80211_channels
    source: https://code.ros.org/svn/ros-pkg/stacks/linux_networking/trunk/ieee80211_channels
    website: http://ros.org/wiki/ieee80211_channels
  image_geometry:
    author: !!python/unicode 'Patrick Mihelich'
    deps:
    - rospy
    - roscpp
    - opencv2
    - sensor_msgs
    desc: "`image_geometry` contains C++ and Python libraries for interpreting images\n\
      \    geometrically. It interfaces the calibration parameters in sensor_msgs/CameraInfo\n\
      \    messages with OpenCV functions such as image rectification, much as cv_bridge\n\
      \    interfaces ROS sensor_msgs/Image with OpenCV data types."
    license: BSD
    shortdesc: "`image_geometry` contains C++ and Python libraries for interpreting\
      \ images\n    geometrically. I..."
    source: https://code.ros.org/svn/ros-pkg/stacks/vision_opencv/trunk/image_geometry
    website: http://www.ros.org/wiki/image_geometry
  image_proc:
    author: !!python/unicode 'Patrick Mihelich, Kurt Konolige, Jeremy Leibs'
    deps:
    - camera_calibration_parsers
    - cv_bridge
    - image_geometry
    - image_transport
    - nodelet
    - opencv2
    - roscpp
    - sensor_msgs
    desc: Single image rectification and color processing.
    license: BSD
    shortdesc: Single image rectification and color processing.
    source: https://code.ros.org/svn/ros-pkg/stacks/image_pipeline/trunk/image_proc
    website: http://www.ros.org/wiki/image_proc
  image_rotate:
    author: !!python/unicode 'Blaise Gassend'
    deps:
    - tf
    - opencv2
    - roscpp
    - dynamic_reconfigure
    - geometry_msgs
    - image_transport
    - cv_bridge
    - sensor_msgs
    - std_msgs
    desc: "<p>\n      Contains a node that rotates an image stream in a way that minimizes\n\
      \      the angle between a vector in some arbitrary frame and a vector in the\n\
      \      camera frame. The frame of the outgoing image is published by the node.\n\
      \    </p>\n    <p>\n      This node is intended to allow camera images to be\
      \ visualized in an\n      orientation that is more intuitive than the hardware-constrained\n\
      \      orientation of the physical camera. This is particularly helpful, for\n\
      \      example, to show images from the PR2's forearm cameras with a\n     \
      \ consistent up direction, despite the fact that the forearms need to\n    \
      \  rotate in arbitrary ways during manipulation.\n    </p>\n    <p>\n      It\
      \ is not recommended to use the output from this node for further\n      computation,\
      \ as it interpolates the source image, introduces black\n      borders, and\
      \ does not output a camera_info.\n    </p>"
    license: BSD
    shortdesc: Node to rotate an image stream.
    source: https://code.ros.org/svn/ros-pkg/stacks/image_pipeline/trunk/image_rotate
    website: http://ros.org/wiki/image_rotate
  image_transport:
    author: !!python/unicode 'Patrick Mihelich'
    deps:
    - sensor_msgs
    - pluginlib
    - message_filters
    desc: "image_transport should always be used to subscribe to and publish images.\
      \ It provides transparent\n     support for transporting images in low-bandwidth\
      \ compressed formats. Examples (provided by separate\n     plugin packages)\
      \ include JPEG/PNG compression and Theora streaming video."
    license: BSD
    shortdesc: image_transport
    source: https://code.ros.org/svn/ros-pkg/stacks/image_common/trunk/image_transport
    website: http://ros.org/wiki/image_transport
  image_view:
    author: !!python/unicode 'Patrick Mihelich'
    deps:
    - camera_calibration_parsers
    - cv_bridge
    - image_transport
    - nodelet
    - opencv2
    - roscpp
    - sensor_msgs
    - stereo_msgs
    desc: "A simple viewer for ROS image topics. Includes a specialized viewer\n \
      \ for stereo + disparity images."
    license: BSD
    shortdesc: "A simple viewer for ROS image topics. Includes a specialized viewer\n\
      \  for stereo + disparity imag..."
    source: https://code.ros.org/svn/ros-pkg/stacks/image_pipeline/trunk/image_view
    website: http://www.ros.org/wiki/image_view
  joy:
    author: !!python/unicode 'Morgan Quigley, Brian Gerkey, Kevin Watts and Blaise
      Gassend'
    deps:
    - roscpp
    - diagnostic_updater
    desc: The joy package contains joy_node, a node that interfaces a generic Linux
      joystick to ROS. This node publishes a &quot;Joy&quot; message, which contains
      the current state of each one of the joystick's buttons and axes.
    license: BSD
    shortdesc: ROS driver for a generic Linux joystick.
    source: https://code.ros.org/svn/ros-pkg/stacks/joystick_drivers/trunk/joy
    website: http://www.ros.org/wiki/joy
  karto:
    author: !!python/unicode 'SRI International (package maintained by Brian Gerkey)'
    deps:
    - sba
    - tf
    - sensor_msgs
    - visualization_msgs
    - roscpp
    - rosconsole
    - nav_msgs
    - message_filters
    - eigen
    desc: "This package pulls in the Karto mapping library, and provides a ROS\n \
      \    wrapper for using it."
    license: LGPL
    shortdesc: "This package pulls in the Karto mapping library, and provides a ROS\n\
      \     wrapper for using it..."
    source: https://code.ros.org/svn/ros-pkg/stacks/slam_karto/trunk/karto
    website: http://ros.org/wiki/karto
  karto_scan_matcher:
    author: !!python/unicode 'Bhaskara Marthi'
    deps:
    - sensor_msgs
    - roscpp
    - karto
    - tf
    - geometry_msgs
    desc: A C++ library that wraps Karto's laser scan matcher
    license: BSD
    shortdesc: karto_scan_matcher
    source: https://code.ros.org/svn/ros-pkg/stacks/slam_karto/trunk/karto_scan_matcher
    website: http://ros.org/wiki/karto_scan_matcher
  laser_assembler:
    author: !!python/unicode 'Vijay Pradeep'
    deps:
    - roscpp
    - std_msgs
    - geometry_msgs
    - laser_geometry
    - laser_filters
    - sensor_msgs
    - tf
    desc: Provides nodes to assemble point clouds from either LaserScan or PointCloud
      messages
    license: BSD
    shortdesc: Aggregation nodes for a laser rangefinder
    source: https://code.ros.org/svn/ros-pkg/stacks/laser_pipeline/trunk/laser_assembler
    website: http://ros.org/wiki/laser_assembler
  laser_filters:
    author: !!python/unicode 'Tully Foote'
    deps:
    - sensor_msgs
    - roscpp
    - tf
    - filters
    - message_filters
    - laser_geometry
    - pluginlib
    desc: 'Assorted filters designed to operate on 2D planar laser scanners,

      which use the sensor_msgs/LaserScan type.'
    license: BSD
    shortdesc: Filters for processing laser scans
    source: https://code.ros.org/svn/ros-pkg/stacks/laser_pipeline/trunk/laser_filters
    website: http://ros.org/wiki/laser_filters
  laser_geometry:
    author: !!python/unicode 'Tully Foote, Radu Bogdan Rusu'
    deps:
    - sensor_msgs
    - roscpp
    - tf
    - angles
    - eigen
    desc: 'This package contains a class for converting from a 2D laser scan as defined
      by

      sensor_msgs/LaserScan into a point cloud as defined by sensor_msgs/PointCloud

      or sensor_msgs/PointCloud2. In particular, it contains functionality to account

      for the skew resulting from moving robots or tilting laser scanners.'
    license: BSD
    shortdesc: Utilities for converting laser scans to pointclouds
    source: https://code.ros.org/svn/ros-pkg/stacks/laser_pipeline/trunk/laser_geometry
    website: http://ros.org/wiki/laser_geometry
  linksys_access_point:
    author: !!python/unicode 'Catalin Drula'
    deps:
    - rospy
    - access_point_control
    - dynamic_reconfigure
    - ieee80211_channels
    desc: "A ROS node that controls a Linksys access point with\n    a Linksys WRT610n-compatible\
      \ web interface."
    license: BSD
    shortdesc: linksys_access_point
    source: https://code.ros.org/svn/ros-pkg/stacks/linux_networking/trunk/linksys_access_point
    website: http://ros.org/wiki/linksys_access_point
  microstrain_3dmgx2_imu:
    author: !!python/unicode 'Jeremy Leibs, Blaise Gassend'
    deps:
    - roscpp
    - sensor_msgs
    - self_test
    - diagnostic_updater
    - tf
    - std_srvs
    desc: "A driver for IMUs compatible the microstrain 3DM-GX2 protocol. Includes\
      \ \n    a heavily modified standalone driver pulled from the player distribution,\
      \ \n    and a ROS node."
    license: LGPL
    shortdesc: Driver for 3DM-GX2 compatible IMUs.
    source: https://code.ros.org/svn/ros-pkg/stacks/imu_drivers/trunk/microstrain_3dmgx2_imu
    website: http://www.ros.org/wiki/microstrain_3dmgx2_imu
  multi_interface_roam:
    author: !!python/unicode 'Blaise Gassend'
    deps:
    - rospy
    - network_monitor_udp
    - std_msgs
    - diagnostic_msgs
    - pr2_msgs
    - wpa_supplicant_node
    - asmach
    - dynamic_reconfigure
    - ieee80211_channels
    desc: "<p>\n    This package allows automatic configuration and switching between\
      \ \n    multiple network interfaces. It can be used in combination with a VPN\n\
      \    tunnel to achieve seamless wifi roaming, and near-instantaneous\n    transitioning\
      \ between multiple available network interfaces.\n  </p>\n  <p>\n    Currently\
      \ only wifi interfaces are supported.\n  </p>"
    license: BSD, LGPL, GPL for sigblock
    shortdesc: Roaming with multiple network interfaces.
    source: https://code.ros.org/svn/ros-pkg/stacks/linux_networking/trunk/multi_interface_roam
    website: http://ros.org/wiki/multi_interface_roam
  nav_msgs:
    author: !!python/unicode 'Tully Foote'
    deps:
    - geometry_msgs
    - rosbagmigration
    desc: "nav_msgs defines the common messages used to interact with the \n<a href=\"\
      http://ros.org/wiki/navigation\">navigation</a> stack."
    license: BSD
    shortdesc: Messages for the navigation stack
    source: https://code.ros.org/svn/ros-pkg/stacks/common_msgs/trunk/nav_msgs
    website: http://ros.org/wiki/nav_msgs
  network_control_tests:
    author: !!python/unicode 'Catalin Drula'
    deps:
    - network_monitor_udp
    - network_traffic_control
    - hostapd_access_point
    - linksys_access_point
    - ddwrt_access_point
    - access_point_control
    - dynamic_reconfigure
    - rostest
    desc: "Test suite for the packages that are part of the &quot;WiFi Test Setup&quot;\
      \ project:\n    network_monitor_udp, network_traffic_control, hostapd_access_point,\
      \ linksys_access_point,\n    ddwrt_access_point."
    license: BSD
    shortdesc: network_control_tests
    source: https://code.ros.org/svn/ros-pkg/stacks/linux_networking/trunk/network_control_tests
    website: http://ros.org/wiki/network_control_tests
  network_detector:
    author: !!python/unicode 'Dave Hershberger'
    deps:
    - roscpp
    - std_msgs
    desc: "A ROS node that watches a given network interface and publishes\n     whether\
      \ it is both UP and RUNNING (indicating that a cable is\n     plugged into it\
      \ and communication is happening, for instance) or\n     not."
    license: BSD
    shortdesc: network_detector
    source: https://code.ros.org/svn/ros-pkg/stacks/linux_networking/trunk/network_detector
    website: http://ros.org/wiki/detect_running_network_interface
  network_monitor_udp:
    author: !!python/unicode 'Blaise Gassend, Catalin Drula'
    deps:
    - rospy
    - diagnostic_msgs
    - actionlib_msgs
    - actionlib
    desc: "Facilities to monitor a network connection by sending UDP packets from\n\
      \    a client to a server, which bounces them back to the client. The client\n\
      \    collects statistics on latency and loss. The server is a C standalone utility\n\
      \    or a ROS node. The client can be a ROS node, a standalone utility or a\
      \ python class."
    license: BSD
    shortdesc: Monitors network quality using udp packets.
    source: https://code.ros.org/svn/ros-pkg/stacks/linux_networking/trunk/network_monitor_udp
    website: http://ros.org/wiki/network_monitor_udp
  network_traffic_control:
    author: !!python/unicode 'Catalin Drula'
    deps:
    - rospy
    - dynamic_reconfigure
    desc: A ROS node that allows control of network emulation parameters such as bandwidth,
      loss and latency for a Linux network interface.
    license: BSD
    shortdesc: network_traffic_control
    source: https://code.ros.org/svn/ros-pkg/stacks/linux_networking/trunk/network_traffic_control
    website: http://ros.org/wiki/network_traffic_control
  nodelet:
    author: !!python/unicode 'Tully Foote, Radu Bogdan Rusu'
    deps:
    - pluginlib
    - roscpp
    - rospy
    - bondcpp
    desc: "The nodelet package is designed to provide a way to run multiple\n    algorithms\
      \ in the same process with zero copy transport between\n    algorithms.  \n\
      \    \n    This package provides both the nodelet base class needed for\n  \
      \  implementing a nodelet, as well as the NodeletLoader class used\n    for\
      \ instantiating nodelets."
    license: BSD
    shortdesc: nodelet base class and wrappers
    source: https://code.ros.org/svn/ros-pkg/stacks/common/trunk/nodelet
    website: http://ros.org/wiki/nodelet
  nodelet_topic_tools:
    author: !!python/unicode 'Radu Bogdan Rusu, Tully Foote'
    deps:
    - nodelet
    - message_filters
    desc: This package contains common nodelet tools such as a mux and a demux nodelet.
    license: BSD
    shortdesc: nodelet_topic_tools
    source: https://code.ros.org/svn/ros-pkg/stacks/common/trunk/nodelet_topic_tools
    website: http://ros.org/wiki/nodelet_topic_tools
  nodelet_tutorial_math:
    author: !!python/unicode 'Tully Foote'
    deps:
    - nodelet
    - roscpp
    - std_msgs
    desc: nodelet_tutorial_math
    license: BSD
    shortdesc: nodelet_tutorial_math
    source: https://code.ros.org/svn/ros-pkg/stacks/common_tutorials/trunk/nodelet_tutorial_math
    website: http://ros.org/wiki/nodelet_tutorial_math
  occupancy_grid_utils:
    author: !!python/unicode 'Bhaskara Marthi'
    deps:
    - nav_msgs
    - geometry_msgs
    - tf
    - sensor_msgs
    - roscpp
    - laser_geometry
    desc: Utilities for dealing with occupancy grids, represented as nav_msgs::OccupancyGrid
      objects, including coordinate conversions, shortest paths, ray tracing, and
      constructing from laser scans.
    license: BSD
    shortdesc: grid_utils
    source: https://code.ros.org/svn/ros-pkg/stacks/graph_mapping/branches/unstable-branch/occupancy_grid_utils
    website: http://ros.org/wiki/grid_utils
  ogre:
    author: !!python/unicode 'Steve ''sinbad'' Streeting, Justin Walsh, Brian Johnstone
      and more.'
    deps: []
    desc: '<p>

      OGRE (Object-Oriented Graphics Rendering Engine) is a scene-oriented, flexible
      3D engine written in C++ designed to make it easier and more intuitive for developers
      to produce applications utilising hardware-accelerated 3D graphics. The class
      library abstracts all the details of using the underlying system libraries like
      Direct3D and OpenGL and provides an interface based on world objects and other
      intuitive classes.

      </p>

      <p>

      Given how fast things move in world of 3D graphics, we will update the Ogre
      version for bugfixes and new features we determine to be necessary.  This will

      likely mean keeping updated to the latest version when possible.

      </p>'
    license: LGPL
    shortdesc: The Open Source Object-Oriented Graphics Rendering Engine
    source: https://code.ros.org/svn/ros-pkg/stacks/visualization_common/trunk/ogre
    website: http://ogre3d.org
  ogre_tools:
    author: !!python/unicode 'Josh Faust'
    deps:
    - wxswig
    - ogre
    - rosconsole
    - roslib
    desc: Internal package, shared code for use by the visualization stack, nav_view,
      and the simulation stack.  No supported/stable API is exported.
    license: BSD
    shortdesc: Ogre Tools
    source: https://code.ros.org/svn/ros-pkg/stacks/visualization_common/trunk/ogre_tools
    website: http://pr.willowgarage.com/wiki/ROS
  opencv2:
    author: !!python/unicode 'Gary Bradski and many others. See web page for a full
      contributor list. ROS package maintained by James Bowman.'
    deps: []
    desc: 'This package contains the latest code from the Open Source Computer Vision

      Library (opencv).  This ROS package does not modify OpenCV in any way;

      it simply provides a convenient way to download and compile the library

      in a way that can be managed by the ROS dependency system.


      Note: The cv_bridge package in the vision_opencv stack eases conversion between
      ROS

      Image messages and OpenCV images.'
    license: BSD
    shortdesc: The Open Source Computer Vision Library 2.0
    source: https://code.ros.org/svn/ros-pkg/stacks/vision_opencv/trunk/opencv2
    website: http://opencv.willowgarage.com
  opencv_tests:
    author: !!python/unicode 'James Bowman'
    deps:
    - opencv2
    - cv_bridge
    - rostest
    - rospy
    - sensor_msgs
    desc: opencv_tests
    license: BSD
    shortdesc: opencv_tests
    source: https://code.ros.org/svn/ros-pkg/stacks/vision_opencv/trunk/opencv_tests
    website: http://pr.willowgarage.com/wiki/opencv_tests
  opende:
    author: !!python/unicode 'Russel Smith'
    deps: []
    desc: "<p>\n    This package contains the <a href=\"http://opende.sf.net\">Open\
      \ Dynamics Engine</a> (ODE).  \n    This package compiles a wg branch of ODE\
      \ which is intended to be based on\n    a pre-1.0 unreleased version of ODE\
      \ from trunk with some additional custom patches such as\n    threaded island\
      \ computations, addes a few more parameter settings API for quickstep,\n   \
      \ untruncated hinge joint angles and possible additional minor bug fixes.\n\
      \    </p>\n    <p>\n    The opende package pulls in and builds the <a href=\"\
      http://threadpool.sourceforge.net\">Threadpool Library</a> by Philipp Henkel\
      \ for internal use.\n    Threadpool uses the Boost Software License.\n    </p>"
    license: LGPL, Boost Software License
    shortdesc: ''
    source: https://code.ros.org/svn/ros-pkg/stacks/physics_ode/trunk/opende
    website: http://opende.sf.net
  pano_core:
    author: !!python/unicode 'Ethan Rublee'
    deps:
    - opencv2
    - roscpp
    desc: pano_core
    license: BSD
    shortdesc: pano_core
    source: https://code.ros.org/svn/ros-pkg/stacks/pano/trunk/pano_core
    website: http://ros.org/wiki/pano_core
  pano_py:
    author: !!python/unicode 'Ethan Rublee'
    deps:
    - pano_core
    - rospy
    - roscpp
    - std_msgs
    - image_transport
    - cv_bridge
    desc: pano_py
    license: BSD
    shortdesc: pano_py
    source: https://code.ros.org/svn/ros-pkg/stacks/pano/trunk/pano_py
    website: http://ros.org/wiki/pano_py
  pano_ros:
    author: !!python/unicode 'Ethan Rublee, Ken Conley'
    deps:
    - roscpp
    - rospy
    - std_msgs
    - sensor_msgs
    - actionlib
    - actionlib_msgs
    - image_transport
    - cv_bridge
    - pano_core
    - pano_py
    desc: pano_ros
    license: BSD
    shortdesc: pano_ros
    source: https://code.ros.org/svn/ros-pkg/stacks/pano/trunk/pano_ros
    website: http://ros.org/wiki/pano_ros
  parallel_quickstep:
    author: !!python/unicode 'Jared Duke'
    deps:
    - opende
    desc: "<p>\n      Parallel implementation of quickstep, configurable for CUDA,\
      \ OpenCL and OpenMP.\n    </p>\n     <p>\n       The package by default is compiled\
      \ with CPU quickstep.  To enable GPU capabilities, overlay this package and\
      \ recompile\n       with CUDA drivers installed.\n     </p>"
    license: BSD
    shortdesc: parallel_quickstep
    source: details.php?name=rosbuild
    website: https://code.ros.org/svn/ros-pkg/stacks/physics_ode/trunk/parallel_quickstep
  pcl_tutorials:
    author: !!python/unicode 'Radu Bogdan Rusu, Bastian Steder'
    deps:
    - pcl
    - pcl_ros
    - pcl_visualization
    - eigen
    - stereo_msgs
    desc: "<p>\n  PCL (Point Cloud Library) Tutorials contains PCL usage examples\
      \ and demos.\n</p>"
    license: BSD
    shortdesc: PCL Tutorials
    source: https://code.ros.org/svn/ros-pkg/stacks/perception_pcl_addons/trunk/pcl_tutorials
    website: http://ros.org/wiki/pcl_tutorials
  pcl_visualization:
    author: !!python/unicode 'Radu Bogdan Rusu, Bastian Steder, Ethan Rublee'
    deps:
    - eigen
    - pcl
    - pcl_ros
    - wxpropgrid
    - terminal_tools
    desc: "<p>\n      PCL (Point Cloud Library) Visualization: a library for PointCloud2\n\
      \      visualizations. Includes C++ API for visualizing pcl::PointCloud data,\n\
      \      as well as tools for visualizing PointCloud2 messages and PCD files.\
      \  \n    </p>"
    license: BSD
    shortdesc: ''
    source: https://code.ros.org/svn/ros-pkg/stacks/perception_pcl_addons/trunk/pcl_visualization
    website: http://www.ros.org/wiki/pcl_visualization
  pluginlib:
    author: !!python/unicode 'Tully Foote and Eitan Marder-Eppstein'
    deps:
    - roslib
    - tinyxml
    - rosconsole
    desc: "The pluginlib package provides tools for writing and dynamically loading\
      \ plugins using the ROS build infrastructure. To work, these tools require plugin\
      \ providers to register their plugins in the manifest.xml of their package.\
      \ \n\nPluginlib includes parts of Poco from pocoproject.org"
    license: BSD, Boost Software License (Poco)
    shortdesc: Tools for creating and using plugins with ROS
    source: https://code.ros.org/svn/ros-pkg/stacks/common/trunk/pluginlib
    website: http://ros.org/wiki/pluginlib
  pluginlib_tutorials:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - pluginlib
    - roscpp
    desc: pluginlib_tutorials
    license: BSD
    shortdesc: pluginlib_tutorials
    source: https://code.ros.org/svn/ros-pkg/stacks/common_tutorials/trunk/pluginlib_tutorials
    website: http://ros.org/wiki/pluginlib_tutorials
  point_cloud_converter:
    author: !!python/unicode 'Radu Bogdan Rusu'
    deps:
    - sensor_msgs
    - roscpp
    desc: Convert between sensor_msgs::PointCloud and the sensor_msgs::PointCloud2
      formats.
    license: BSD
    shortdesc: Convert between sensor_msgs::PointCloud and the sensor_msgs::PointCloud2
      formats.
    source: https://code.ros.org/svn/ros-pkg/stacks/point_cloud_perception/trunk/point_cloud_converter
    website: http://www.ros.org/wiki/point_cloud_converter
  polled_camera:
    author: !!python/unicode 'Patrick Mihelich'
    deps:
    - image_transport
    - sensor_msgs
    desc: "polled_camera contains a service and C++ helper classes for implementing\
      \ a polled\n     camera driver node and requesting images from it. The package\
      \ is currently for\n     internal use as the API is still under development."
    license: BSD
    shortdesc: Library for polled camera drivers
    source: https://code.ros.org/svn/ros-pkg/stacks/image_common/trunk/polled_camera
    website: http://ros.org/wiki/polled_camera
  pose_graph:
    author: !!python/unicode 'Bhaskara Marthi'
    deps:
    - roscpp
    - geometry_msgs
    - sensor_msgs
    - nav_msgs
    - tf
    - eigen3
    - visualization_msgs
    - sba
    - laser_geometry
    - occupancy_grid_utils
    - rosbag
    desc: The pose_graph and associated data structures.
    license: BSD
    shortdesc: pose_graph
    source: https://code.ros.org/svn/ros-pkg/stacks/graph_mapping/branches/unstable-branch/pose_graph
    website: http://ros.org/wiki/pose_graph
  posest:
    author: !!python/unicode 'Kurt Konolige'
    deps:
    - eigen
    - frame_common
    - sba
    desc: Pose estimation from images and point clouds
    license: BSD
    shortdesc: Pose estimation from images and point clouds
    source: details.php?name=opencv2
    website: https://code.ros.org/svn/ros-pkg/stacks/vslam/trunk/posest
  prosilica_camera:
    author: !!python/unicode 'Patrick Mihelich'
    deps:
    - prosilica_gige_sdk
    - roscpp
    - std_msgs
    - sensor_msgs
    - diagnostic_updater
    - diagnostic_msgs
    - image_transport
    - self_test
    - driver_base
    - dynamic_reconfigure
    - camera_calibration_parsers
    - polled_camera
    desc: A ROS node to provide access to Prosilica cameras.
    license: BSD
    shortdesc: A ROS node to provide access to Prosilica cameras.
    source: https://code.ros.org/svn/ros-pkg/stacks/camera_drivers/trunk/prosilica_camera
    website: http://www.ros.org/wiki/prosilica_camera
  prosilica_gige_sdk:
    author: !!python/unicode 'Prosilica, Inc.'
    deps: []
    desc: "<p>\n  The Prosilica GigE Linux SDK allows users to control and capture\
      \ images\n  from Prosilica's GigE Vision gigabit Ethernet cameras. The ROS package\n\
      \  automatically downloads and extracts a tarball, installs headers and\n  libraries,\
      \ and builds a few useful example programs.\n  </p>\n  <p>\n  We currently use\
      \ version 1.20 of the SDK, released 7 April 2009. It is\n  known to work with\
      \ version 1.36 of the Prosilica GigE Vision camera\n  firmware. We will update\
      \ the version for bugfixes and for new features\n  we deem particularly useful\
      \ to vision applications.\n  </p>"
    license: Commercial
    shortdesc: Prosilica GigE SDK
    source: https://code.ros.org/svn/ros-pkg/stacks/camera_drivers/trunk/prosilica_gige_sdk
    website: http://www.prosilica.com/support/gige/ge_starter.html
  ps3joy:
    author: !!python/unicode 'Blaise Gassend and pascal@pabr.org'
    deps:
    - roscpp
    - joy
    desc: "Driver for the Sony PlayStation 3 SIXAXIS or DUAL SHOCK 3 joysticks. In\n\
      \tits current state, this driver is not compatible with the use of other\n\t\
      Bluetooth HID devices. The driver listens for a connection on the HID ports,\n\
      \tstarts the joystick streaming data, and passes the data to the Linux\n\tuinput\
      \ device so that it shows up as a normal joystick."
    license: BSD
    shortdesc: Playstation 3 SIXAXIS or DUAL SHOCK 3 joystick driver.
    source: https://code.ros.org/svn/ros-pkg/stacks/joystick_drivers/trunk/ps3joy
    website: http://www.ros.org/wiki/ps3joy
  robot_monitor:
    author: !!python/unicode 'Kevin Watts (watts@willowgarage.com), Josh Faust (jfaust@willowgarage.com)'
    deps:
    - rospy
    - diagnostic_msgs
    - rxbag
    desc: "<p>\n    robot_monitor is a simple GUI tool for displaying robot diagnostics\
      \ that has been aggregated by the <a href=\"http://www.ros.org/wiki/diagnostic_aggregator\"\
      >diagnostic_aggregator</a>. \n</p>\n<p>\nSome icons from the Silk icon pack\
      \ are used, which is available from <a href=\"http://www.famfamfam.com/lab/icons/silk/\"\
      >famfamfam.com</a>.\n</p>"
    license: BSD
    shortdesc: Displays aggregated robot diagnostics
    source: https://code.ros.org/svn/ros-pkg/stacks/diagnostics_monitors/trunk/robot_monitor
    website: http://www.ros.org/wiki/robot_monitor
  runtime_monitor:
    author: !!python/unicode 'Tully Foote'
    deps:
    - rospy
    - diagnostic_msgs
    - rxbag
    desc: The runtime monitor displays raw diagnostics data in an easy to read GUI.
    license: BSD
    shortdesc: Monitor diagnostics on a robot
    source: https://code.ros.org/svn/ros-pkg/stacks/diagnostics_monitors/trunk/runtime_monitor
    website: http://ros.org/wiki/runtime_monitor
  rviz:
    author: !!python/unicode 'Josh Faust'
    deps:
    - ogre
    - ogre_tools
    - roscpp
    - rosconsole
    - message_filters
    - std_msgs
    - std_srvs
    - sensor_msgs
    - geometry_msgs
    - nav_msgs
    - nav_msgs
    - tf
    - laser_geometry
    - wxpropgrid
    - rxtools
    - wxswig
    - wxPython_swig_interface
    - visualization_msgs
    - yaml_cpp
    - urdf
    - resource_retriever
    - image_transport
    - assimp
    desc: A 3d visualization environment for robots using ROS.
    license: BSD
    shortdesc: Robot VIsualiZer
    source: https://code.ros.org/svn/ros-pkg/stacks/visualization/branches/visualization-1.4/rviz
    website: http://code.ros.org/wiki/rviz
  rxbag_plugins:
    author: !!python/unicode 'Tim Field'
    deps:
    - rospy
    - roslib
    - std_msgs
    - rosbag
    - rxbag
    - geometry_msgs
    - sensor_msgs
    desc: '<p>rxbag_plugins contains plugins for the <a href="/wiki/rxbag">rxbag</a>
      GUI tool.</p>

      <p><a href="/wiki/rxbag">rxbag</a> is a graphical framework for analyzing <a
      href="/wiki/Bags">bag</a> (log) files. rxbag_plugins provide visualizers for
      <a href="/wiki/Messages">messages</a> of different types.</p>

      <p>Some icons from the Silk icon pack are used, which is available from <a href="http://www.famfamfam.com/lab/icons/silk/">famfamfam.com</a>.</p>'
    license: BSD, Creative Commons
    shortdesc: Visualization plugins for rxbag
    source: https://code.ros.org/svn/ros-pkg/stacks/visualization/branches/visualization-1.4/rxbag_plugins
    website: http://ros.org/wiki/rxbag_plugins
  sba:
    author: !!python/unicode 'Kurt Konolige, Helen Oleynikova'
    deps:
    - eigen
    - bpcg
    - std_msgs
    - visualization_msgs
    - geometry_msgs
    desc: Sparse bundle adjustment and Sparse pose adjustment.
    license: BSD
    shortdesc: Sparse bundle adjustment and Sparse pose adjustment.
    source: details.php?name=roscpp
    website: https://code.ros.org/svn/ros-pkg/stacks/vslam/trunk/sba
  self_test:
    author: !!python/unicode 'Jeremy Leibs and Blaise Gassend'
    deps:
    - roscpp
    - diagnostic_updater
    - diagnostic_msgs
    desc: "<p>  \n      A self_test is a service call provided by a node that triggers\
      \ a\n      test of the driver and any associated hardware. This service call\
      \ can\n      be used by users to quickly verify that a device or process is\
      \ working.\n      Currently self-tests are mainly used with drivers, but nothing\n\
      \      precludes non-driver nodes using them.\n    </p>\n    <p>  \n      The\
      \ self_test package contains tools to for calling the self-test\n      service\
      \ from the command-line, or from a regression test. It also\n      provides\
      \ a C++ API for facilitating writing of self-tests.  \n    </p>"
    license: BSD
    shortdesc: Tools relating to self-tests.
    source: https://code.ros.org/svn/ros-pkg/stacks/diagnostics/trunk/self_test
    website: http://www.ros.org/wiki/self_test
  sensor_msgs:
    author: !!python/unicode 'Maintained by Tully Foote/tfoote@willowgarage.com'
    deps:
    - std_msgs
    - geometry_msgs
    - rosbagmigration
    desc: 'This package defines messages for commonly used sensors, including

      cameras and scanning laser rangefinders.'
    license: BSD
    shortdesc: sensor_msgs
    source: https://code.ros.org/svn/ros-pkg/stacks/common_msgs/trunk/sensor_msgs
    website: http://ros.org/wiki/sensor_msgs
  sicktoolbox:
    author: !!python/unicode 'Maintained by Jason Derenick of the GRASP Laboratory
      at the University of Pennsylvania'
    deps: []
    desc: "This package contains the SICK LIDAR Matlab/C++ Toolbox, available from\
      \ <a href=\"http://sicktoolbox.sourceforge.net/\">http://sicktoolbox.sourceforge.net/</a>.\n\
      \  The SICK LIDAR Matlab/C++ Toolbox offers stable and easy-to-use C++ drivers\
      \ for SICK LMS 2xx and SICK LD LIDARs. It provides a Matlab Mex interface for\
      \ streaming LIDAR returns directly into Matlab. Also included are config utilities,\
      \ examples, and tutorials. This package contains version 1.0 of the toolbox."
    license: BSD
    shortdesc: SICK Toolbox drivers for SICK laser rangefinders
    source: https://code.ros.org/svn/ros-pkg/stacks/laser_drivers/trunk/sicktoolbox
    website: http://sicktoolbox.sourceforge.net
  sicktoolbox_wrapper:
    author: !!python/unicode 'Morgan Quigley'
    deps:
    - sicktoolbox
    - roscpp
    - sensor_msgs
    desc: "<tt>sicktoolbox_wrapper</tt> is a ROS wrapper for the outstanding <a href=\"\
      http://www.ros.org/wiki/sicktoolbox\">sicktoolbox</a>\n    library for interfacing\
      \ with the SICK LMS2xx lasers."
    license: BSD
    shortdesc: ROS wrappers for using the SICK Toolbox
    source: https://code.ros.org/svn/ros-pkg/stacks/laser_drivers/trunk/sicktoolbox_wrapper
    website: http://ros.org/wiki/sicktoolbox_wrapper
  smclib:
    author: !!python/unicode 'Various, ROS package maintained by Stuart Glaser'
    deps: []
    desc: "The State Machine Compiler (SMC) from http://smc.sourceforge.net/\n   \
      \ converts a language-independent description of a state machine\n    into the\
      \ source code to support that state machine.\n\n    This package contains the\
      \ libraries that a compiled state machine\n    depends on, but it does not contain\
      \ the compiler itself."
    license: Mozilla Public License Version 1.1
    shortdesc: "The State Machine Compiler (SMC) from http://smc.sourceforge.net/\n\
      \    converts a language-indep..."
    source: https://code.ros.org/svn/ros-pkg/stacks/common/trunk/smclib
    website: http://smc.sourceforge.net/
  sound_play:
    author: !!python/unicode 'Blaise Gassend'
    deps:
    - rospy
    - roscpp
    - roslib
    - diagnostic_msgs
    desc: sound_play provides a ROS node that translates commands on a ROS topic (<tt>robotsound</tt>)
      into sounds. The node supports built-in sounds, playing OGG/WAV files, and doing
      speech synthesis via festival. C++ and Python bindings allow this node to be
      used without understanding the details of the message format, allowing faster
      development and resilience to message format changes.
    license: BSD
    shortdesc: Play sounds, or synthesize speech.
    source: https://code.ros.org/svn/ros-pkg/stacks/sound_drivers/trunk/sound_play
    website: http://www.ros.org/wiki/sound_play
  spacenav:
    author: !!python/unicode 'John Tsiombikas'
    deps: []
    desc: "Open source, unofficial driver for the 3Dconnexion SpaceNavigator.\n\t\t\
      This is a third party package. See the &quot;External Documentation&quot; link\
      \ for\n\t\tAPI details. Currently, revision r91 of the upstream repository is\
      \ being\n\t\tused in this package."
    license: ZLib
    shortdesc: Spacenav driver and SDK
    source: https://code.ros.org/svn/ros-pkg/stacks/joystick_drivers/trunk/spacenav
    website: http://spacenav.sourceforge.net/
  spacenav_node:
    author: !!python/unicode 'Stuart Glaser, Blaise Gassend'
    deps:
    - roscpp
    - spacenav
    - joy
    - geometry_msgs
    desc: A node for publishing the state of the 3Dconnexion SpaceNavigator 6DOF joystick.
    license: BSD
    shortdesc: Node for the 3Dconnexion SpaceNavigator
    source: https://code.ros.org/svn/ros-pkg/stacks/joystick_drivers/trunk/spacenav_node
    website: http://ros.org/wiki/spacenav_node
  sparselib:
    author: !!python/unicode 'Roldan Pozo, Karin A. Remington, Andrew Lumsdaine'
    deps: []
    desc: Sparselib++ is a set of sparse matrix routines in C++ from NIST
    license: Public Domain
    shortdesc: Sparse matrix routines
    source: https://code.ros.org/svn/ros-pkg/stacks/vslam/trunk/sparselib
    website: http://math.nist.gov/sparselib++
  stage:
    author: !!python/unicode 'Richard Vaughan, with contributions from many others.
      See web page for a full credits list.'
    deps:
    - roscpp
    - std_msgs
    - nav_msgs
    - sensor_msgs
    - geometry_msgs
    - tf
    desc: '<p>

      This package contains the Stage robot simulator, from the <a href="http://playerstage.sf.net">Player
      Project</a>.

      This package provides Stage 3.2.2, with a minor patch.

      </p>

      <p>

      This package also provides stageros, a ROS node that uses Stage.

      </p>'
    license: GPL
    shortdesc: ''
    source: https://code.ros.org/svn/ros-pkg/stacks/simulator_stage/trunk/stage
    website: http://playerstage.sf.net
  stereo_image_proc:
    author: !!python/unicode 'Patrick Mihelich, Kurt Konolige, Jeremy Leibs'
    deps:
    - cv_bridge
    - dynamic_reconfigure
    - image_proc
    - message_filters
    - nodelet
    - opencv2
    - roscpp
    - sensor_msgs
    - stereo_msgs
    desc: Stereo and single image rectification and disparity processing.
    license: BSD
    shortdesc: Stereo and single image rectification and disparity processing.
    source: https://code.ros.org/svn/ros-pkg/stacks/image_pipeline/trunk/stereo_image_proc
    website: http://www.ros.org/wiki/stereo_image_proc
  stereo_msgs:
    author: !!python/unicode 'Patrick Mihelich, Kurt Konolige'
    deps:
    - sensor_msgs
    - rosbagmigration
    desc: stereo_msgs contains messages specific to stereo processing, such as disparity
      images.
    license: BSD
    shortdesc: stereo_msgs
    source: https://code.ros.org/svn/ros-pkg/stacks/common_msgs/trunk/stereo_msgs
    website: http://www.ros.org/wiki/stereo_msgs
  swissranger_camera:
    author: !!python/unicode 'Patrick Beeson, Radu Rusu'
    deps:
    - image_transport
    - tf
    - camera_info_manager
    - dynamic_reconfigure
    - driver_base
    desc: "This is a port of the older ROS driver for SR devices that used the\n \
      \   libusb API.  This driver uses the newer libmesasr API (&gt;= 1.0)\n    that\
      \ can be found at http://www.mesa-imaging.ch/drivers.php.  This\n    node is\
      \ designed to work with the ROS image_pipeline with minimal\n    dependencies.\
      \  \n\n    Note: A compile time flag at the top of include/swissranger.h is\n\
      \    currently used to switch back and forth between supporting SR3000\n   \
      \ and SR4000 devices."
    license: BSD
    shortdesc: Mesa Imaging Swissranger 3000/4000 driver
    source: https://code.ros.org/svn/ros-pkg/branches/trunk_cturtle/stacks/camera_drivers_experimental/swissranger_camera
    website: http://ros.org/wiki/swissranger_camera
  terminal_tools:
    author: !!python/unicode 'Radu Bogdan Rusu'
    deps: []
    desc: Common terminal routines, useful for printing with colors, parsing command
      line arguments, etc.
    license: BSD
    shortdesc: terminal_tools
    source: https://code.ros.org/svn/ros-pkg/stacks/perception_pcl_addons/trunk/terminal_tools
    website: http://www.ros.org/wiki/terminal_tools
  test_bond:
    author: !!python/unicode 'Stuart Glaser'
    deps:
    - rostest
    - bond
    - bondpy
    - bondcpp
    desc: Contains tests for [[bond]], including tests for [[bondpy]] and [[bondcpp]].
    license: BSD
    shortdesc: Contains tests for [[bond]], including tests for [[bondpy]] and [[bondcpp]].
    source: https://code.ros.org/svn/ros-pkg/stacks/common/trunk/test_bond
    website: http://ros.org/wiki/test_bond
  test_common_msgs:
    author: !!python/unicode 'Jeremy Leibs'
    deps:
    - rospy
    - rostest
    - rosbagmigration
    - rosbag
    - diagnostic_msgs
    - geometry_msgs
    - sensor_msgs
    - nav_msgs
    desc: "A package containing original saved messages and verifying that\n    migration\
      \ rules behave as anticipated."
    license: BSD
    shortdesc: test_common_msgs
    source: https://code.ros.org/svn/ros-pkg/stacks/common_msgs/trunk/test_common_msgs
    website: http://ros.org/wiki/test_common_msgs
  test_diagnostic_aggregator:
    author: !!python/unicode 'Kevin Watts'
    deps:
    - pluginlib
    - diagnostic_msgs
    - diagnostic_aggregator
    - roscpp
    - rospy
    desc: Basic diagnostic_aggregator tests are  in the <b>diagnostic_aggregator</b>
      package, but any unit or regression tests that require new nodes, or new Analyzers
      go here.
    license: BSD
    shortdesc: Unit and regression tests for diagnsotic_aggregator
    source: https://code.ros.org/svn/ros-pkg/stacks/diagnostics/trunk/test_diagnostic_aggregator
    website: http://ros.org/wiki/test_diagnostic_aggregator
  test_nodelet:
    author: !!python/unicode 'Tully Foote'
    deps:
    - nodelet
    - std_msgs
    - rostest
    - pluginlib
    desc: A package for nodelet unit tests
    license: BSD
    shortdesc: test_nodelet
    source: https://code.ros.org/svn/ros-pkg/stacks/common/trunk/test_nodelet
    website: http://ros.org/wiki/test_nodelet
  theora_image_transport:
    author: !!python/unicode 'Patrick Mihelich, Ethan Dreyfuss'
    deps:
    - image_transport
    - opencv2
    - cv_bridge
    - pluginlib
    - rosbagmigration
    - dynamic_reconfigure
    desc: "theora_image_transport provides a plugin to image_transport for\n     transparently\
      \ sending an image stream encoded with the Theora codec."
    license: BSD
    shortdesc: theora_image_transport
    source: https://code.ros.org/svn/ros-pkg/stacks/image_transport_plugins/trunk/theora_image_transport
    website: http://www.ros.org/wiki/theora_image_transport
  timestamp_tools:
    author: !!python/unicode 'Blaise Gassend'
    deps:
    - roslib
    - roscpp
    desc: "This package is currently for internal use only. Its API may change\n \
      \   without warning in the future.\n    \n    <tt>timestamp_tools</tt> provides:\n\
      \    \n    <ul>\n    <li>\n      a <tt>TriggerMatcher</tt>, that matches a stream\
      \ of data structures with\n    approximate timestamps to a stream of exact timestamps.\n\
      \    </li>\n    </ul>"
    license: BSD
    shortdesc: Classes to facilitate timestamping of sensor data
    source: https://code.ros.org/svn/ros-pkg/stacks/driver_common/trunk/timestamp_tools
    website: http://www.ros.org/wiki/timestamp_tools
  tinyxml:
    author: !!python/unicode 'Lee Thomason'
    deps: []
    desc: "TinyXML is a simple, small, C++ XML parser that can be easily integrating\n\
      \  into other programs. \n\n  This is version 2.5.3. This has been stable for\
      \ 2 years.  If a backwards comatable update comes out\nwe will consider updating.\
      \  \n \n  This package sets the TIXML_USE_STL compile flag and exports it for\
      \ other users."
    license: ZLib
    shortdesc: "TinyXML is a simple, small, C++ XML parser that can be easily integrating\n\
      \  into other programs. ..."
    source: https://code.ros.org/svn/ros-pkg/stacks/common/trunk/tinyxml
    website: http://www.grinninglizard.com/tinyxml
  trajectory_msgs:
    author: !!python/unicode 'Stuart Glaser'
    deps: []
    desc: trajectory_msgs
    license: BSD
    shortdesc: trajectory_msgs
    source: https://code.ros.org/svn/ros-pkg/stacks/common_msgs/trunk/trajectory_msgs
    website: http://ros.org/wiki/trajectory_msgs
  turtle_actionlib:
    author: !!python/unicode 'Melonee Wise'
    deps:
    - roscpp
    - std_msgs
    - rosconsole
    - actionlib
    - actionlib_msgs
    - turtlesim
    - angles
    desc: turtle_actionlib demonstrates how to write an action server and client with
      the turtlesim. The shape_server provides and action interface for drawing regular
      polygons with the turtlesim.
    license: BSD
    shortdesc: turtle_actionlib
    source: https://code.ros.org/svn/ros-pkg/stacks/common_tutorials/trunk/turtle_actionlib
    website: http://ros.org/wiki/turtle_actionlib
  turtle_teleop:
    author: !!python/unicode 'Melonee Wise'
    deps:
    - roscpp
    - rospy
    - turtlesim
    - ps3joy
    - joy
    - wiimote
    - spacenav_node
    desc: turtle_teleop is a simple package to demonstrate how to write a teleoperation
      node in ROS using the turtlesim.
    license: BSD
    shortdesc: turtle_teleop
    source: https://code.ros.org/svn/ros-pkg/stacks/joystick_drivers_tutorials/trunk/turtle_teleop
    website: http://ros.org/wiki/turtle_teleop
  turtle_tf:
    author: !!python/unicode 'James Bowman'
    deps:
    - roscpp
    - rospy
    - turtle_teleop
    - turtlesim
    - tf
    desc: turtle_tf demonstrates how to write a tf broadcaster and listener with the
      turtlesim. The tutle_tf_listener commands turtle2 to follow turtle1 around as
      you drive turtle1 using the keyboard.
    license: BSD
    shortdesc: turtle_tf demonstrates how to write a tf broadcaster and listener with
      the turtlesim. The tut...
    source: https://code.ros.org/svn/ros-pkg/branches/trunk_cturtle/stacks/ros_pkg_tutorials/turtle_tf
    website: http://ros.org/wiki/turtle_tf
  visualization_marker_tutorials:
    author: !!python/unicode 'Josh Faust'
    deps:
    - roscpp
    - visualization_msgs
    desc: marker_tutorials
    license: BSD
    shortdesc: marker_tutorials
    source: https://code.ros.org/svn/ros-pkg/stacks/visualization_tutorials/trunk/visualization_marker_tutorials
    website: http://ros.org/wiki/marker_tutorials
  visualization_msgs:
    author: !!python/unicode 'Josh Faust/jfaust@willowgarage.com'
    deps:
    - geometry_msgs
    - std_msgs
    - rosbag
    desc: "<p>\nvisualization_msgs is a set of messages used by higher level packages,\
      \ such as <a href=\"/wiki/rviz\">rviz</a>, that deal in visualization-specific\
      \ data.   \n</p>\n<p>\nThe main message in visualization_msgs is <tt>visualization_msgs/Marker</tt>.\
      \  The marker message is used to send visualization &quot;markers&quot; such\
      \ as boxes, spheres, arrows, lines, etc. to a visualization environment such\
      \ as <a href=\"http:///www.ros.org/wiki/rviz\">rviz</a>.  See the rviz tutorial\
      \ <a href=\"http://www.ros.org/wiki/rviz/Tutorials\">rviz tutorials</a> for\
      \ more information.\n</p>"
    license: BSD
    shortdesc: Visualization Messages
    source: https://code.ros.org/svn/ros-pkg/stacks/common_msgs/trunk/visualization_msgs
    website: http://ros.org/wiki/visualization_msgs
  vocabulary_tree:
    author: !!python/unicode 'Patrick Mihelich'
    deps:
    - roscpp
    - opencv2
    - eigen
    desc: "A generic implementation of the vocabulary tree image retrieval approach\
      \ of\n    Nister and Stewenius. Can be used with any feature and distance metric."
    license: BSD
    shortdesc: vocabulary_tree
    source: https://code.ros.org/svn/ros-pkg/stacks/vslam/trunk/vocabulary_tree
    website: http://ros.org/wiki/vocabulary_tree
  vslam_system:
    author: !!python/unicode 'Kurt Konolige, Patrick Mihelich, Helen Oleynikova'
    deps:
    - image_transport
    - image_geometry
    - opencv2
    - cv_bridge
    - message_filters
    - pcl
    - tf
    - std_msgs
    - nav_msgs
    - dynamic_reconfigure
    - sensor_msgs
    - stereo_msgs
    - sba
    - posest
    - vocabulary_tree
    desc: VSLAM applications (visual odometry, visual SLAM, stereo and monocular)
    license: BSD
    shortdesc: VSLAM applications (visual odometry, visual SLAM, stereo and monocular)
    source: details.php?name=roscpp
    website: https://code.ros.org/svn/ros-pkg/stacks/vslam/trunk/vslam_system
  wge100_camera:
    author: !!python/unicode 'Blaise Gassend, Patrick Mihelich, Eric MacIntosh, David
      Palchak'
    deps:
    - rostest
    - roscpp
    - rospy
    - std_msgs
    - sensor_msgs
    - diagnostic_updater
    - driver_base
    - self_test
    - dynamic_reconfigure
    - camera_calibration_parsers
    - timestamp_tools
    - image_transport
    desc: A ROS node and assorted tools to provide access to the WGE100 camera used
      in the forearms and the stereo cameras of the PR2 robot.
    license: GPL because of list.h; other files released under BSD
    shortdesc: Driver for the WGE100 camera
    source: https://code.ros.org/svn/ros-pkg/stacks/camera_drivers/trunk/wge100_camera
    website: http://www.ros.org/wiki/wge100_camera
  wge100_camera_firmware:
    author: !!python/unicode 'James Bowman, Blaise Gassend. MAC by Jared Casper and
      Morgan Quigley'
    deps:
    - rostest
    - rospy
    desc: "Source for the WGE100 Ethernet camera: Verilog source for the FPGA, Forth\
      \ source for the camera firmware.\n    Intended for camera developers.  Note\
      \ that a built binary from this\n    package is checked in under wge100_camera/firmware_images/"
    license: BSD
    shortdesc: Source for the WGE100 Ethernet camera
    source: https://code.ros.org/svn/ros-pkg/stacks/camera_drivers/trunk/wge100_camera_firmware
    website: http://ros.org/wiki/wge100_camera_firmware
  wiimote:
    author: !!python/unicode 'Andreas Paepcke'
    deps:
    - geometry_msgs
    - sensor_msgs
    - std_msgs
    - std_srvs
    - rospy
    - joy
    - roslib
    - cwiid
    desc: 'The wiimote package allows ROS nodes to communicate with a Nintendo

      Wiimote and its related peripherals, including the Nunchuk, Motion

      Plus, and (experimentally) the Classic. The package implements a ROS

      node that uses Bluetooth to communicate with the Wiimote device,

      obtaining accelerometer and gyro data, the state of LEDs, the IR

      camera, rumble (vibrator), buttons, joystick, and battery state. The

      node additionally enables ROS nodes to control the Wiimote''s LEDs and

      vibration for feedback to the human Wiimote operator. LEDs and

      vibration may be switched on and off, or made to operate according to

      a timed pattern.'
    license: GPL
    shortdesc: 'The wiimote package allows ROS nodes to communicate with a Nintendo

      Wiimote and its related periphe...'
    source: https://code.ros.org/svn/ros-pkg/stacks/joystick_drivers/trunk/wiimote
    website: http://pr.willowgarage.com/wiki/wiimote
  wpa_supplicant:
    author: !!python/unicode 'Package maintained by Blaise Gassend'
    deps: []
    desc: "A version of wpa_supplicant that has been modified to work with\n     multi_interface_roam."
    license: GPL
    shortdesc: wpa_supplicant for multi_interface_roam
    source: https://code.ros.org/svn/ros-pkg/stacks/linux_networking/trunk/wpa_supplicant
    website: http://ros.org/wiki/wpa_supplicant
  wpa_supplicant_node:
    author: !!python/unicode 'Package maintained by Blaise Gassend'
    deps:
    - roscpp
    - actionlib
    - actionlib_msgs
    desc: "A version of wpa_supplicant that has been modified to work with\n     multi_interface_roam."
    license: GPL
    shortdesc: wpa_supplicant for multi_interface_roam
    source: https://code.ros.org/svn/ros-pkg/stacks/linux_networking/trunk/wpa_supplicant_node
    website: http://ros.org/wiki/wpa_supplicant
  wxpropgrid:
    author: !!python/unicode 'Jaakko Salli'
    deps: []
    desc: "<p>\n  wxpropgrid provides an easy way of editing properties in wxWidgets.\n\
      \  This package contains a patched version of 1.4.7.  1.4.7 fixed a bad crash\
      \ we were experiencing, as well as a lot of problems on OSX.  \n</p>\n<p>\n\
      We apply four patches:\n<ol>\n <li>fixes some scrollbar problems we were having.\
      \ The patch is submitted back: <a href=\"https://sourceforge.net/tracker/?func=detail&amp;aid=2877550&amp;group_id=133406&amp;atid=727083\"\
      >link</a></li>\n <li>changes it to not snap back to selection all the time.\
      \  bug reported: <a href=\"https://sourceforge.net/tracker/?func=detail&amp;aid=2877568&amp;group_id=133406&amp;atid=727081\"\
      >link</a></li>\n <li>adds the ability to set the font per cell.  feature requested:\
      \ <a href=\"https://sourceforge.net/tracker/?func=detail&amp;aid=2166255&amp;group_id=133406&amp;atid=727084\"\
      >link</a></li>\n <li>does not clear selection every time Append/AppendIn is\
      \ called.  feature requested: <a href=\"https://sourceforge.net/tracker/?func=detail&amp;atid=727084&amp;aid=2942477&amp;group_id=133406\"\
      >link</a></li>\n</ol>\n</p>"
    license: wxWindows
    shortdesc: A property sheet control for wxWidgets
    source: https://code.ros.org/svn/ros-pkg/stacks/visualization/branches/visualization-1.4/wxpropgrid
    website: http://wxpropgrid.sourceforge.net
  xacro:
    author: !!python/unicode 'Stuart Glaser'
    deps:
    - rostest
    - rosbuild
    desc: Xacro is an XML macro language. With xacro, you can construct shorter and
      more readable XML files by using macros that expand to larger XML expressions.
    license: BSD
    shortdesc: Xacro (XML Macros)
    source: https://code.ros.org/svn/ros-pkg/stacks/common/trunk/xacro
    website: http://ros.org/wiki/xacro
  yaml_cpp:
    author: !!python/unicode 'Jesse Beder'
    deps: []
    desc: "yaml-cpp is a YAML parser and emitter in C++ written around the YAML 1.2\
      \ spec. It's based on (but not a wrapper to) the C library libyaml.\n\n    This\
      \ is version 0.2.2 of yaml-cpp.  We plan to track the latest release assuming\
      \ backwards compatability."
    license: MIT
    shortdesc: A YAML Parsing library for C++
    source: https://code.ros.org/svn/ros-pkg/stacks/common/trunk/yaml_cpp
    website: http://code.google.com/p/yaml-cpp/
ros-repo:
  allocators:
    author: !!python/unicode 'Josh Faust'
    deps: []
    desc: Contains aligned allocation functions, as well as an STL-compatible AlignedAllocator
      class.
    license: BSD
    shortdesc: A collection of memory allocators
    source: https://code.ros.org/svn/ros/stacks/ros_realtime/trunk/allocators
    website: http://ros.org/wiki/allocators
  app_manager:
    author: !!python/unicode 'Jeremy Leibs, Ken Conley'
    deps:
    - rospy
    - roslaunch
    - rosgraph
    - rosunit
    desc: app_manager
    license: BSD
    shortdesc: app_manager
    source: https://code.ros.org/svn/ros/stacks/multimaster_experimental/trunk/app_manager
    website: http://ros.org/wiki/app_manager
  app_manager_android:
    author: !!python/unicode 'Ken Conley'
    deps:
    - pyqrnative
    - roslib
    desc: Code to assist using app_manager with Android.
    license: BSD
    shortdesc: app_manager_android
    source: https://code.ros.org/svn/ros/stacks/multimaster_experimental/trunk/app_manager_android
    website: http://ros.org/wiki/app_manager_android
  app_manager_tutorial:
    author: !!python/unicode 'Jeremy Leibs'
    deps:
    - rospy
    - app_manager
    desc: app_manager_tutorial
    license: BSD
    shortdesc: app_manager_tutorial
    source: https://code.ros.org/svn/ros/stacks/multimaster_experimental/trunk/app_manager_tutorial
    website: http://ros.org/wiki/app_manager_tutorial
  cpp_common:
    author: !!python/unicode 'Josh Faust'
    deps: []
    desc: "cpp_common contains C++ code for doing things that are not necessarily\
      \ ROS\nrelated, but are useful for multiple packages. This includes things like\n\
      the ROS_DEPRECATED and ROS_FORCE_INLINE macros, as well as code for getting\n\
      backtraces. \n\nThis package is a component of <a href=\"http://www.ros.org/wiki/roscpp\"\
      >roscpp</a>."
    license: BSD
    shortdesc: cpp_common
    source: https://code.ros.org/svn/ros/stacks/ros_comm/trunk/utilities/cpp_common
    website: http://ros.org/wiki/cpp_common
  foreign_relay:
    author: !!python/unicode 'Blaise Gassend'
    deps:
    - roscpp
    - xmlrpcpp
    - topic_tools
    desc: "The foreign_relay node is designed for use with multiple robots running\n\
      \    separate masters. It is like a relay, except that it additionally\n   \
      \ registers its topic on a foreign master. The unreliable_relay node is like\
      \ \n    relay in topic_tools except that it requests an unreliable transport."
    license: BSD
    shortdesc: Nodes for relaying to a foreign master.
    source: https://code.ros.org/svn/ros/stacks/multimaster_experimental/trunk/foreign_relay
    website: http://ros.org/wiki/foreign_relay
  hudson:
    author: !!python/unicode 'Ken Conley'
    deps: []
    desc: Python library for calling Hudson's REST-like API.
    license: BSD
    shortdesc: Python library for calling Hudson's REST-like API.
    source: https://code.ros.org/svn/ros/stacks/ros_release/trunk/hudson
    website: http://ros.org/wiki/hudson
  isogenerator:
    author: !!python/unicode 'Tony Pratkanis'
    deps:
    - rosdistro
    - hudson
    - rosdeb
    desc: Generates ISO files for the creation of USB keys and livecds.
    license: BSD
    shortdesc: isogenerator
    source: https://code.ros.org/svn/ros/stacks/ros_release/trunk/isogenerator
    website: http://ros.org/wiki/iso_generator
  job_generation:
    author: !!python/unicode 'Wim Meeussen'
    deps:
    - rosdistro
    - hudson
    - rosdeb
    desc: job_generation
    license: BSD
    shortdesc: job_generation
    source: https://code.ros.org/svn/ros/stacks/ros_release/trunk/job_generation
    website: http://ros.org/wiki/job_generation
  lockfree:
    author: !!python/unicode 'Josh Faust'
    deps:
    - rosatomic
    - rosconsole
    - roslib
    - allocators
    desc: "The lockfree package contains lock-free data structures for use in multithreaded\
      \ programming.  These\n     kinds of data structures are generally not as easy\
      \ to use as single-threaded equivalents, and are not\n     always faster.  If\
      \ you don't know you need to use one, try another structure with a lock around\
      \ it\n     first."
    license: BSD
    shortdesc: A collection of lockfree data structures
    source: https://code.ros.org/svn/ros/stacks/ros_realtime/trunk/lockfree
    website: http://ros.org/wiki/lockfree
  message_filters:
    author: !!python/unicode 'Josh Faust (jfaust@willowgarage.com), Vijay Pradeep
      (vpradeep@willowgarage.com)'
    deps:
    - roscpp
    - rospy
    - rostest
    desc: A set of message filters which take in messages and may output those messages
      at a later time, based on the conditions that filter needs met.
    license: BSD
    shortdesc: A set of message filters which take in messages and may output those
      messages at a later time, based...
    source: https://code.ros.org/svn/ros/stacks/ros_comm/trunk/utilities/message_filters
    website: http://pr.willowgarage.com/wiki/message_filters
  perf_roscpp:
    author: !!python/unicode 'Josh Faust (jfaust@willowgarage.com)'
    deps:
    - roscpp
    desc: This is a set of performance tests for roscpp, mainly to provide numbers
      to optimize against.
    license: BSD
    shortdesc: perf_roscpp
    source: https://code.ros.org/svn/ros/stacks/ros_comm/trunk/test/perf_roscpp
    website: http://ros.org/wiki/perf_roscpp
  process_info:
    author: !!python/unicode 'Ethan Dreyfuss'
    deps: []
    desc: process_info
    license: BSD
    shortdesc: process_info
    source: https://code.ros.org/svn/ros/stacks/ros_experimental/trunk/process_info
    website: http://pr.willowgarage.com/wiki/process_info
  pyqrnative:
    author: !!python/unicode 'Sam Curren'
    deps: []
    desc: Native Python library for QRCodes using PIL.
    license: MIT
    shortdesc: pyqrnative
    source: https://code.ros.org/svn/ros/stacks/multimaster_experimental/trunk/pyqrnative
    website: http://code.google.com/p/pyqrnative
  reaper:
    author: !!python/unicode 'Kenneth Conley'
    deps:
    - rospy
    - rosnode
    desc: Reaper provides a nodes that periodically unregisters dead nodes from the
      ROS master.
    license: BSD
    shortdesc: Reaper provides a nodes that periodically unregisters dead nodes from
      the ROS master.
    source: https://code.ros.org/svn/ros/stacks/ros_experimental/trunk/reaper
    website: http://ros.org/wiki/reaper
  release:
    author: !!python/unicode 'Ken Conley'
    deps:
    - roslib
    - rosdistro
    - vcstools
    - rosdeb
    - hudson
    desc: Release toolchain for ROS.
    license: BSD
    shortdesc: release toolchain
    source: https://code.ros.org/svn/ros/stacks/ros_release/trunk/release
    website: http://ros.org/wiki/release
  repository_maintenance:
    author: !!python/unicode 'Tully Foote'
    deps: []
    desc: A collection of tools useful for repository maintenance
    license: BSD
    shortdesc: A collection of tools useful for repository maintenance
    source: https://code.ros.org/svn/ros/stacks/ros_experimental/trunk/repository_maintenance
    website: http://pr.willowgarage.com/wiki/repository_maintenance
  ronin:
    author: !!python/unicode 'Ken Conley'
    deps:
    - rospy
    desc: Ronin adapts the rospy API to enable masterless nodes. It is expected that
      ronin nodes have proxy nodes that attach them to whatever master is necessary.
    license: BSD
    shortdesc: 'ronin: rospy adapter for masterless nodes'
    source: https://code.ros.org/svn/ros/stacks/multimaster_experimental/trunk/ronin
    website: http://ros.org/wiki/ronin
  ros_epic_fail:
    author: !!python/unicode 'Tony Pratkanis'
    deps:
    - rospy
    - roslib
    - rostest
    desc: Experimental package to create bag failures of test failures on the build
      server.
    license: BSD
    shortdesc: ros_epic_fail
    source: https://code.ros.org/svn/ros/stacks/ros_experimental/trunk/ros_epic_fail
    website: http://ros.org/wiki/ros_epic_fail
  rosatomic:
    author: !!python/unicode 'Josh Faust'
    deps: []
    desc: "rosatomic provides the C++11-style atomic operations by pulling symbols\
      \ from the proposed Boost.Atomic\n     package into the ros namespace.  Once\
      \ C++11-style atomics (std::atomic) are available from compilers, rosatomic\
      \ will\n     conditionally use those instead."
    license: BSD, Boost
    shortdesc: C++11-style atomic operations
    source: https://code.ros.org/svn/ros/stacks/ros_realtime/trunk/rosatomic
    website: http://ros.org/wiki/rosatomic
  rosbag:
    author: !!python/unicode 'Jeremy Leibs (leibs@willowgarage.com), James Bowman
      (jamesb@willowgarage.com), Ken Conley (kwc@willowgarage.com), and Tim Field
      (tfield@willowgarage.com)'
    deps:
    - roscpp
    - rospy
    - topic_tools
    - rostest
    desc: "This is a set of tools for recording from and playing back to ROS\n   \
      \ topics.  It is intended to be high performance and avoids\n    deserialization\
      \ and reserialization of the messages."
    license: BSD
    shortdesc: ROS Bag Tools
    source: https://code.ros.org/svn/ros/stacks/ros_comm/trunk/tools/rosbag
    website: http://ros.org/wiki/rosbag
  rosbagmigration:
    author: !!python/unicode 'Jeremy Leibs/leibs@willowgarage.com'
    deps:
    - rosbag
    desc: Deprecated. For rosbag migration, see the rosbag package.
    license: BSD
    shortdesc: ROS bag migration tools
    source: https://code.ros.org/svn/ros/stacks/ros_comm/trunk/tools/rosbagmigration
    website: http://www.ros.org/wiki/rosbagmigration
  rosconsole:
    author: !!python/unicode 'Josh Faust'
    deps:
    - rostime
    desc: ROS console output library.
    license: BSD
    shortdesc: Console logging library for roscpp
    source: https://code.ros.org/svn/ros/stacks/ros_comm/trunk/tools/rosconsole
    website: http://www.ros.org/wiki/rosconsole
  roscore_migration_rules:
    author: !!python/unicode 'Jeremy Leibs'
    deps:
    - rosbag
    desc: Migration rules for messages defined as part of the roscore.  Hopefully
      these do not change very often.
    license: BSD
    shortdesc: roscore_migration_rules
    source: https://code.ros.org/svn/ros/stacks/ros_comm/trunk/roscore_migration_rules
    website: http://ros.org/wiki/roscore_migration_rules
  roscpp:
    author: !!python/unicode 'Morgan Quigley mquigley@cs.stanford.edu, Josh Faust
      jfaust@willowgarage.com, Brian Gerkey gerkey@willowgarage.com'
    deps:
    - roslang
    - roscpp_traits
    - roscpp_serialization
    - rostime
    - roslib
    - xmlrpcpp
    - rosconsole
    - std_msgs
    - rosgraph_msgs
    desc: "<p>\n    roscpp is a C++ implementation of ROS. It provides\n    a <a href=\"\
      http://www.ros.org/wiki/Client%20Libraries\">client\n    library</a> that enables\
      \ C++ programmers to quickly interface with\n    ROS <a href=\"http://ros.org/wiki/Topics\"\
      >Topics</a>,\n    <a href=\"http://ros.org/wiki/Services\">Services</a>,\n \
      \   and <a href=\"http://ros.org/wiki/Parameter Server\">Parameters</a>.\n</p>\n\
      <p>\n    roscpp is the most widely used ROS client library and is designed to\n\
      \    be the high-performance library for ROS.\n</p>"
    license: BSD
    shortdesc: ROS C++ client library
    source: https://code.ros.org/svn/ros/stacks/ros_comm/trunk/clients/cpp/roscpp
    website: http://ros.org/wiki/roscpp
  roscpp_serialization:
    author: !!python/unicode 'Josh Faust'
    deps:
    - roscpp_traits
    - cpp_common
    - rostime
    desc: 'roscpp_serialization contains the code for serialization as described in

      <a href="http://www.ros.org/wiki/roscpp/Overview/MessagesSerializationAndAdaptingTypes">MessagesSerializationAndAdaptingTypes</a>.


      This package is a component of <a href="http://www.ros.org/wiki/roscpp">roscpp</a>.'
    license: BSD
    shortdesc: roscpp_serialization
    source: https://code.ros.org/svn/ros/stacks/ros_comm/trunk/clients/cpp/roscpp_serialization
    website: http://ros.org/wiki/roscpp_serialization
  roscpp_traits:
    author: !!python/unicode 'Josh Faust'
    deps:
    - cpp_common
    desc: 'roscpp_traits contains the message traits code as described in

      <a href="http://www.ros.org/wiki/roscpp/Overview/MessagesTraits">MessagesTraits</a>.


      This package is a component of <a href="http://www.ros.org/wiki/roscpp">roscpp</a>.'
    license: BSD
    shortdesc: roscpp_traits
    source: https://code.ros.org/svn/ros/stacks/ros_comm/trunk/clients/cpp/roscpp_traits
    website: http://ros.org/wiki/roscpp_traits
  roscpp_tutorials:
    author: !!python/unicode 'Morgan Quigley'
    deps:
    - roscpp
    - std_srvs
    - std_msgs
    desc: "This package attempts to show the features of ROS step-by-step,\n    including\
      \ using messages, servers, parameters, etc."
    license: BSD
    shortdesc: Shows the features of ROS step-by-step
    source: https://code.ros.org/svn/ros/stacks/ros_tutorials/trunk/roscpp_tutorials
    website: http://pr.willowgarage.com
  rosdeb:
    author: !!python/unicode 'Jeremy Leibs, Ken Conley, Morgan Quigley'
    deps:
    - roslib
    - rosdep
    - hudson
    - rosdistro
    - vcstools
    desc: "<p>\n     Tools for creating debian packages from ROS stacks, plus managing\
      \ a debian repository.\n     </p>     \n     <p>\n     rosdeb includes the BeautifulSoup\
      \ library, which is released under the Python license.\n     </p>"
    license: BSD, Python License
    shortdesc: ''
    source: https://code.ros.org/svn/ros/stacks/ros_release/trunk/rosdeb
    website: http://ros.org/wiki/rosdeb
  rosdistro:
    author: !!python/unicode 'Ken Conley'
    deps:
    - vcstools
    desc: rosdistro
    license: BSD
    shortdesc: rosdistro
    source: https://code.ros.org/svn/ros/stacks/ros_release/trunk/rosdistro
    website: http://ros.org/wiki/rosdistro
  rosdoc:
    author: !!python/unicode 'Ken Conley/kwc@willowgarage.com'
    deps:
    - roslib
    - rosmsg
    desc: "rosdoc wraps documentation tools like doxygen, sphinx, and epydoc\n   \
      \   with ROS package semantics to auto-generate\n      documentation for ROS\
      \ packages. rosdoc also supports online documentation,\n      like the ROS wiki."
    license: BSD
    shortdesc: ROS documentation generator
    source: https://code.ros.org/svn/ros/stacks/documentation/trunk/rosdoc
    website: http://ros.org/wiki/rosdoc
  rosfs:
    author: !!python/unicode 'Josh'
    deps:
    - roscpp
    - rospy
    - roslib
    desc: rosfs
    license: BSD
    shortdesc: rosfs
    source: https://code.ros.org/svn/ros/stacks/ros_experimental/trunk/rosfs
    website: http://ros.org/wiki/rosfs
  rosgraph:
    author: !!python/unicode 'Ken Conley'
    deps:
    - roslib
    desc: '<p>

      rosgraph contains the rosgraph command-line tool, which prints information about
      the ROS Computation Graph. It also provides an internal library that is used
      by the graphical version of this tool, <tt>rxgraph</tt>.

      </p>'
    license: BSD
    shortdesc: rosgraph command-line tool
    source: https://code.ros.org/svn/ros/stacks/ros_comm/trunk/tools/rosgraph
    website: http://ros.org/wiki/rosgraph
  rosgraph_msgs:
    author: !!python/unicode 'Kenneth Conley'
    deps: []
    desc: Messages relating to the ROS Computation Graph. These are generally considered
      to be low-level messages that end users do not interact with.
    license: BSD
    shortdesc: rosgraph_msgs
    source: https://code.ros.org/svn/ros/stacks/ros_comm/trunk/messages/rosgraph_msgs
    website: http://ros.org/wiki/rosgraph_msgs
  rosh:
    author: !!python/unicode 'Ken Conley'
    deps:
    - roshlaunch
    - rospy
    - rosgraph
    - rosnode
    - rostopic
    - rosservice
    - rosparam
    - rosmsg
    desc: rosh is a Python-based scripting and runtime environment for ROS.  Through
      rosh and its various plugins, you can interact with ROS APIs in an introspectable
      and unified approach.
    license: BSD
    shortdesc: rosh is a Python-based scripting and runtime environment for ROS.  Through
      rosh and its vario...
    source: https://code.ros.org/svn/ros/stacks/rosh_robot_plugins/trunk/rosh
    website: http://ros.org/wiki/rosh
  rosh_base:
    author: !!python/unicode 'Ken Conley'
    deps:
    - rosh
    - rosh_common
    - rosh_geometry
    - rosh_visualization
    desc: ROSH meta-plugin for the ROS 'base' variant.
    license: BSD
    shortdesc: ROSH meta-plugin for the ROS 'base' variant.
    source: https://code.ros.org/svn/ros/stacks/roshpit/trunk/rosh_base
    website: http://ros.org/wiki/rosh_base
  rosh_common:
    author: !!python/unicode 'Ken Conley'
    deps:
    - rospy
    - rosmsg
    - rostopic
    - roslib
    - rosh
    - actionlib
    - std_msgs
    - sensor_msgs
    - nav_msgs
    desc: ROSH plugin for packages in the common stack
    license: BSD
    shortdesc: ROSH common plugin
    source: https://code.ros.org/svn/ros/stacks/rosh_robot_plugins/trunk/rosh_common
    website: http://ros.org/wiki/rosh_common
  rosh_desktop:
    author: !!python/unicode 'Ken Conley'
    deps:
    - rosh
    - rosh_robot
    - rosh_visualization
    desc: ROSH meta-plugin for the ROS 'desktop' variant.
    license: BSD
    shortdesc: rosh plugins for 'desktop' variant
    source: https://code.ros.org/svn/ros/stacks/rosh_desktop_plugins/trunk/rosh_desktop
    website: http://ros.org/wiki/rosh_desktop
  rosh_experimental:
    author: !!python/unicode 'Ken Conley'
    deps:
    - rosh
    - roslib
    - rospy
    - rostopic
    - smach
    desc: Experimental plugins for rosh
    license: BSD
    shortdesc: rosh_experimental
    source: https://code.ros.org/svn/ros/stacks/roshpit/trunk/rosh_experimental
    website: http://ros.org/wiki/rosh_experimental
  rosh_geometry:
    author: !!python/unicode 'Ken Conley'
    deps:
    - roslib
    - rospy
    - tf
    - geometry_msgs
    - rosh
    desc: ROSH plugin for the geometry stack, including tf.
    license: BSD
    shortdesc: ROSH geometry plugin
    source: https://code.ros.org/svn/ros/stacks/rosh_robot_plugins/trunk/rosh_geometry
    website: http://ros.org/wiki/rosh_geometry
  rosh_robot:
    author: !!python/unicode 'Ken Conley'
    deps:
    - rosh
    - rosh_common
    - rosh_geometry
    desc: ROSH meta-plugin for the ROS 'robot' variant.
    license: BSD
    shortdesc: rosh 'robot' plugin
    source: https://code.ros.org/svn/ros/stacks/rosh_robot_plugins/trunk/rosh_robot
    website: http://ros.org/wiki/rosh_robot
  rosh_visualization:
    author: !!python/unicode 'Ken Conley'
    deps:
    - roslib
    - rosh
    - rviz
    desc: ROSH plugin for the visualization stack.
    license: BSD
    shortdesc: rosh visualization stack plugin
    source: https://code.ros.org/svn/ros/stacks/rosh_desktop_plugins/trunk/rosh_visualization
    website: http://ros.org/wiki/rosh_visualization
  roshlaunch:
    author: !!python/unicode 'Ken Conley/kwc@willowgarage.com'
    deps:
    - roslib
    - rosclean
    - rosgraph
    - rospy
    - rosmaster
    - rosout
    desc: roshlaunch is a temporary package for redesigning roslaunch to have better
      programmatic APIs for libraries like rosh.
    license: BSD
    shortdesc: ROSH Process Launcher
    source: https://code.ros.org/svn/ros/stacks/rosh_robot_plugins/trunk/roshlaunch
    website: http://ros.org/wiki/roslaunch
  rosinstall:
    author: !!python/unicode 'Tully Foote'
    deps:
    - vcstools
    desc: rosinstall is a tool to check out ROS source code (or any source code, really)
      from multiple version control repositories and updating these checkouts. Given
      a *.rosinstall file that specifies where to get code, rosinstall will check
      out a working copy for you. We recommend the use of rosinstall when checking
      out development versions of ROS source code. This package is where the code
      lives, however it is not expected for users to checkout and use this package
      directly.  It is expected that users use the version available through pypi.python.org.
    license: BSD
    shortdesc: rosinstall
    source: https://code.ros.org/svn/ros/stacks/ros_release/trunk/rosinstall
    website: http://ros.org/wiki/rosinstall
  roslaunch:
    author: !!python/unicode 'Ken Conley/kwc@willowgarage.com'
    deps:
    - roslib
    - rosclean
    - rosgraph
    - rosgraph_msgs
    - rospy
    - rosmaster
    - rosout
    desc: roslaunch is a tool for easily launching multiple ROS <a href="http://ros.org/wiki/Nodes">nodes</a>
      locally and remotely via SSH, as well as setting parameters on the <a href="http://ros.org/wiki/Parameter
      Server">Parameter Server</a>. It includes options to automatically respawn processes
      that have already died. roslaunch takes in one or more XML configuration files
      (with the <tt>.launch</tt> extension) that specify the parameters to set and
      nodes to launch, as well as the machines that they should be run on.
    license: BSD
    shortdesc: ROS Process Launcher
    source: https://code.ros.org/svn/ros/stacks/ros_comm/trunk/tools/roslaunch
    website: http://ros.org/wiki/roslaunch
  roslisp:
    author: "Bhaskara Marthi, Brian Gerkey, Lorenz M\xC3\xB6senlechner"
    deps:
    - roslib
    - roslang
    - std_srvs
    desc: This package is a Lisp client library for ROS, the Robot Operating System.
    license: BSD
    shortdesc: A Lisp client library for ROS
    source: https://code.ros.org/svn/ros/stacks/ros_comm/trunk/clients/roslisp
    website: http://ros.org/wiki/roslisp
  roslisp_runtime:
    author: !!python/unicode 'Bhaskara Marthi'
    deps:
    - roslisp
    - sbcl
    - std_msgs
    - std_srvs
    desc: roslisp runtime dependencies. This package enables SBCL to be installed
      separately from the main ros stack, where roslisp is located.
    license: BSD
    shortdesc: roslisp runtime dependencies
    source: https://code.ros.org/svn/ros/stacks/roslisp_support/trunk/roslisp_runtime
    website: http://ros.org/wiki/roslisp_runtime
  roslisp_tutorials:
    author: !!python/unicode 'Bhaskara Marthi'
    deps:
    - roslisp_runtime
    - std_msgs
    desc: Examples to demonstrate usage of roslisp
    license: BSD
    shortdesc: roslisp tutorials
    source: https://code.ros.org/svn/ros/stacks/roslisp_support/trunk/roslisp_tutorials
    website: http://pr.willowgarage.com/wiki/roslisp
  roslocate2:
    author: !!python/unicode 'Kenneth Conley'
    deps: []
    desc: roslocate2
    license: BSD
    shortdesc: roslocate2
    source: https://code.ros.org/svn/ros/stacks/ros_experimental/trunk/roslocate2
    website: http://ros.org/wiki/roslocate2
  rosmanual:
    author: !!python/unicode 'Ken Conley/kwc@willowgarage.com'
    deps: []
    desc: The ROS Manual
    license: BSD
    shortdesc: The ROS Manual
    source: https://code.ros.org/svn/ros/stacks/ros_experimental/trunk/rosmanual
    website: http://ros.org/wiki/rosmanual
  rosmaster:
    author: !!python/unicode 'Ken Conley'
    deps:
    - roslib
    desc: ROS <a href="http://ros.org/wiki/Master">Master</a> implementation.
    license: BSD
    shortdesc: ROS
    source: https://code.ros.org/svn/ros/stacks/ros_comm/trunk/tools/rosmaster
    website: http://ros.org/wiki/rosmaster
  rosmsg:
    author: !!python/unicode 'Ken Conley/kwc@willowgarage.com, Tully Foote/tfoote@willowgarage.com'
    deps:
    - roslib
    - rospy
    - rosbag
    desc: 'rosmsg contains two command-line tools: <tt>rosmsg</tt> and <tt>rossrv</tt>.
      <tt>rosmsg</tt> is a command-line tool for displaying information about <a href="http://www.ros.org/wiki/msg">ROS
      Message types</a>. <tt>rossrv</tt> is a command-line tool for displaying information
      about <a href="http://www.ros.org/wiki/srv">ROS Service types</a>.'
    license: BSD
    shortdesc: rosmsg and rossrv command-line tools
    source: https://code.ros.org/svn/ros/stacks/ros_comm/trunk/tools/rosmsg
    website: http://ros.org/wiki/rosmsg
  rosnode:
    author: !!python/unicode 'Ken Conley/kwc@willowgarage.com'
    deps:
    - roslib
    desc: rosnode is a command-line tool for displaying debug information about ROS
      <a href="http://www.ros.org/wiki/Nodes">Nodes</a>, including publications, subscriptions
      and connections. It also contains an experimental library for retrieving node
      information. This library is intended for internal use only.
    license: BSD
    shortdesc: rosnode command-line tool
    source: https://code.ros.org/svn/ros/stacks/ros_comm/trunk/tools/rosnode
    website: http://ros.org/wiki/rosnode
  rosout:
    author: !!python/unicode 'Josh Faust/jfaust@willowgarage.com'
    deps:
    - roscpp
    - roslib
    - rosconsole
    - rosgraph_msgs
    desc: System-wide logging mechanism for messages sent to the /rosout topic.
    license: BSD
    shortdesc: System-wide logging mechanism for messages sent to the /rosout topic.
    source: https://code.ros.org/svn/ros/stacks/ros_comm/trunk/tools/rosout
    website: http://ros.org/wiki/rosout
  rospackwtf:
    author: !!python/unicode 'Tully Foote'
    deps:
    - roslib
    - roswtf
    desc: rospackwtf
    license: BSD
    shortdesc: rospackwtf
    source: https://code.ros.org/svn/ros/stacks/ros_experimental/trunk/rospackwtf
    website: http://ros.org/wiki/rospackwtf
  rosparam:
    author: !!python/unicode 'Ken Conley/kwc@willowgarage.com'
    deps:
    - roslib
    desc: '<p>

      rosparam contains the rosparam command-line tool for getting and setting ROS
      Parameters on the <a href="http://www.ros.org/wiki/Parameter%20Server">Parameter
      Server</a> using YAML-encoded files. It also contains an experimental library
      for using YAML with the Parameter Server. This library is intended for internal
      use only.

      </p>

      <p>

      rosparam can be invoked within a <a href="http://www.ros.org/wiki/roslaunch">roslaunch</a>
      file.

      </p>'
    license: BSD
    shortdesc: rosparam command-line tool
    source: https://code.ros.org/svn/ros/stacks/ros_comm/trunk/tools/rosparam
    website: http://ros.org/wiki/rosparam
  rosproxy:
    author: !!python/unicode 'Ken Conley'
    deps:
    - rospy
    - rosgraph
    - roslib
    - rosservice
    - rostopic
    desc: rosproxy
    license: BSD
    shortdesc: rosproxy
    source: https://code.ros.org/svn/ros/stacks/multimaster_experimental/trunk/rosproxy
    website: http://ros.org/wiki/rosproxy
  rospy:
    author: !!python/unicode 'Ken Conley/kwc@willowgarage.com'
    deps:
    - roslib
    - rosgraph_msgs
    - std_msgs
    - roslang
    desc: "<p>\n    rospy is a pure Python client library for ROS. The rospy client\n\
      \    API enables Python programmers to quickly interface with\n    ROS <a href=\"\
      http://ros.org/wiki/Topics\">Topics</a>, <a href=\"http://ros.org/wiki/Services\"\
      >Services</a>,\n    and <a href=\"http://ros.org/wiki/Parameter Server\">Parameters</a>.\
      \ The\n    design of rospy favors implementation speed (i.e. developer time)\n\
      \    over runtime performance so that algorithms can be quickly\n    prototyped\
      \ and tested within ROS. It is also ideal for\n    non-critical-path code, such\
      \ as configuration and initialization\n    code. Many of the ROS tools are written\
      \ in rospy to take advantage\n    of the type introspection capabilities.\n\
      </p>\n<p>\n    Many of the ROS tools, such\n    as <a href=\"http://ros.org/wiki/rostopic\"\
      >rostopic</a>\n    and <a href=\"http://ros.org/wiki/rosservice\">rosservice</a>,\
      \ are\n    built on top of rospy.\n</p>"
    license: BSD
    shortdesc: ROS Python client library
    source: https://code.ros.org/svn/ros/stacks/ros_comm/trunk/clients/rospy
    website: http://ros.org/wiki/rospy
  rospy_sessions:
    author: !!python/unicode 'Ken Conley'
    deps:
    - rospy
    desc: 'rospy_sessions: example of sessions using rospy'
    license: BSD
    shortdesc: rospy_sessions
    source: https://code.ros.org/svn/ros/stacks/ros_experimental/trunk/rospy_sessions
    website: http://pr.willowgarage.com/wiki/rospy_sessions
  rospy_tutorials:
    author: !!python/unicode 'Ken Conley'
    deps:
    - rospy
    - rostest
    - std_srvs
    - std_msgs
    - roscpp_tutorials
    desc: "This package attempts to show the features of ROS python API step-by-step,\n\
      \    including using messages, servers, parameters, etc. These tutorials are\
      \ compatible with the nodes in roscpp_tutorial."
    license: BSD
    shortdesc: Shows the features of ROS step-by-step
    source: https://code.ros.org/svn/ros/stacks/ros_tutorials/trunk/rospy_tutorials
    website: http://pr.willowgarage.com
  rosrecord:
    author: !!python/unicode 'Jeremy Leibs (leibs@willowgarage.com), python code by
      James Bowman (jamesb@willowgarage.com) and Ken Conley (kwc@willowgarage.com)'
    deps:
    - roscpp
    - rospy
    - topic_tools
    - rostest
    - rosbag
    desc: 'Rosrecord has been deprecated as of ROS-1.1.5.  Please transition over

      to use the rosbag package instead.


      This is a set of tools for recording from and playing back to ros

      topics.  It is intended to be high performance and avoids

      deserialization and reserialization of the messages.'
    license: BSD
    shortdesc: ROS Bag Tools
    source: https://code.ros.org/svn/ros/stacks/ros_comm/trunk/tools/rosrecord
    website: http://ros.org/wiki/rosrecord
  rosrt:
    author: !!python/unicode 'Josh Faust'
    deps:
    - roscpp
    - roslib
    - rosatomic
    - allocators
    - lockfree
    - std_msgs
    desc: rosrt provides classes for interfacing with ROS from within realtime systems,
      such as realtime-safe Publisher and Subscriber classes.
    license: BSD
    shortdesc: A set of tools for using ROS from within realtime systems
    source: https://code.ros.org/svn/ros/stacks/ros_realtime/trunk/rosrt
    website: http://ros.org/wiki/rosrt
  rosservice:
    author: !!python/unicode 'Ken Conley/ kwc@willowgarage.com'
    deps:
    - rospy
    - rosmsg
    - roslib
    - rostopic
    - std_msgs
    desc: rosservice contains the rosservice command-line tool for listing and querying
      ROS <a href="http://www.ros.org/wiki/Services">Services</a>. It also contains
      a Python library for retrieving information about Services and dynamically invoking
      them. The Python library is experimental and is for internal-use only.
    license: BSD
    shortdesc: rosservice command-line tool
    source: https://code.ros.org/svn/ros/stacks/ros_comm/trunk/tools/rosservice
    website: http://ros.org/wiki/rosservice
  rostest:
    author: !!python/unicode 'Ken Conley/kwc@willowgarage.com'
    deps:
    - roslaunch
    - roslib
    - rosunit
    desc: "<p>\n     Integration test suite based on roslaunch that is compatible\
      \ with xUnit frameworks.\n</p>     \n<p>\n     rostest uses xmlrunner.py (Public\
      \ Domain), which was written by\n     Sebastian Rittau (srittau@jroger.in-berlin.de)\
      \ and Paolo Borelli.\n</p>"
    license: BSD
    shortdesc: ROS Test Framework
    source: https://code.ros.org/svn/ros/stacks/ros_comm/trunk/tools/rostest
    website: http://ros.org/wiki/rostest
  rostime:
    author: !!python/unicode 'Josh Faust'
    deps:
    - cpp_common
    desc: Time and Duration implementations for C++ libraries, including roscpp.
    license: BSD
    shortdesc: Time and Duration implementations for C++ libraries, including roscpp.
    source: https://code.ros.org/svn/ros/stacks/ros_comm/trunk/utilities/rostime
    website: http://ros.org/wiki/rostime
  rostopic:
    author: !!python/unicode 'Ken Conley/kwc@willowgarage.com'
    deps:
    - roslib
    - rosgraph
    - rosmsg
    - rospy
    - rosbag
    - std_msgs
    desc: 'rostopic contains the rostopic command-line tool for displaying

      debug information about

      ROS <a href="http://www.ros.org/wiki/Topics">Topics</a>, including

      publishers, subscribers, publishing rate,

      and ROS <a href="http://www.ros.org/wiki/Messages">Messages</a>. It also

      contains an experimental Python library for getting information about

      and interacting with topics dynamically. This library is for

      internal-use only as the code API may change, though it does provide

      examples of how to implement dynamic subscription and publication

      behaviors in ROS.'
    license: BSD
    shortdesc: rostopic command-line tool
    source: https://code.ros.org/svn/ros/stacks/ros_comm/trunk/tools/rostopic
    website: http://ros.org/wiki/rostopic
  roswtf:
    author: !!python/unicode 'Ken Conley/kwc@willowgarage.com'
    deps:
    - rospy
    - roslib
    - roslaunch
    - rosnode
    - rosservice
    desc: roswtf is a tool for diagnosing issues with a running ROS system. Think
      of it as a FAQ implemented in code.
    license: BSD
    shortdesc: roswtf command-line tool
    source: https://code.ros.org/svn/ros/stacks/ros_comm/trunk/utilities/roswtf
    website: http://ros.org/wiki/roswtf
  rxbag:
    author: !!python/unicode 'Tim Field'
    deps:
    - rospy
    - roslib
    - std_msgs
    - rosbag
    - rosgraph
    - rxtools
    desc: '<p>rxbag is a GUI tool for visualizing, inspecting and replaying histories
      of ROS messages.</p>

      <p>Some icons from the Silk icon pack are used, which is available from <a href="http://www.famfamfam.com/lab/icons/silk/">famfamfam.com</a>.</p>'
    license: BSD, Creative Commons
    shortdesc: ''
    source: https://code.ros.org/svn/ros/stacks/rx/trunk/rxbag
    website: http://ros.org/wiki/rxbag
  rxdeps:
    author: !!python/unicode 'Stu Glaser/sglaser@willowgarage.com and Tully Foote/tfoote@willowgarage.com'
    deps: []
    desc: rxdeps is a ROS command-line tool for generating PDFs of ROS package structure
      and dependencies. It enables you to visualize package dependencies, including
      hooks to color based on different status types.
    license: BSD
    shortdesc: View ROS Package Dependencies Graphically
    source: https://code.ros.org/svn/ros/stacks/rx/trunk/rxdeps
    website: http://ros.org/wiki/rxdeps
  rxgraph:
    author: !!python/unicode 'Ken Conley'
    deps:
    - rosgraph
    - xdot
    - roslib
    - rostopic
    - rosnode
    desc: rxgraph is a command-line tool for visualizing a ROS computation graph.
      The rxgraph is a new package in ROS 1.1 that provides an updated version of
      the rxgraph tool that was originally distributed in the rosgraph package.
    license: BSD
    shortdesc: rxgraph is a command-line tool for visualizing a ROS computation graph.
      The rxgraph is a new ...
    source: https://code.ros.org/svn/ros/stacks/rx/trunk/rxgraph
    website: http://ros.org/wiki/rxgraph
  rxlab:
    author: !!python/unicode 'Tim Field'
    deps:
    - rospy
    - rosgraph
    - rosh
    - rxbag
    - rxbag_plugins
    - image_geometry
    - tf
    - opencv2
    - cv_bridge
    desc: rxlab is a graphical scripting environment for ROS.
    license: BSD
    shortdesc: rxlab is a graphical scripting environment for ROS.
    source: https://code.ros.org/svn/ros/stacks/ros_experimental/trunk/rxlab
    website: http://ros.org/wiki/rxlab
  rxtools:
    author: !!python/unicode 'Josh Faust, Rob Wheeler, Ken Conley'
    deps:
    - roscpp
    - rosgraph_msgs
    - roslib
    - rospy
    - wxswig
    - wxPython_swig_interface
    desc: "<p>\nrxtools is two things.  First it is a library of GUI widgets, written\
      \ in wxWidgets, that can be embedded in other applications. Second, it is a\
      \ set of GUI applications that view and manage ROS state. These GUI applications\
      \ include <tt>rxconsole</tt> and <tt>rxplot</tt>.\n</p>\n    \n<p>\nPieces of\
      \ rxtools use some icons from the <a href=\"http://www.famfamfam.com/lab/icons/silk/\"\
      >Silk icon pack from famfamfam</a>. These icons have a separate Creative Commons\
      \ Attribution 2.5 License. The source code for the software in this package\
      \ is BSD.\n</p>"
    license: BSD
    shortdesc: Collection of ROS GUI tools and libraries
    source: https://code.ros.org/svn/ros/stacks/rx/trunk/rxtools
    website: http://ros.org/wiki/rxtools
  sbcl:
    author: !!python/unicode 'Lorenz Mosenlechner'
    deps: []
    desc: "Steel Bank Common Lisp\n    http://www.sbcl.org"
    license: Many
    shortdesc: "Steel Bank Common Lisp\n    http://www.sbcl.org"
    source: https://code.ros.org/svn/ros/stacks/roslisp_support/trunk/sbcl
    website: http://ros.org/wiki/sbcl
  std_msgs:
    author: !!python/unicode 'Morgan Quigley/mquigley@cs.stanford.edu, Ken Conley/kwc@willowgarage.com,
      Jeremy Leibs/leibs@willowgarage.com'
    deps:
    - roslib
    desc: std_msgs contains common message types representing primitive data types
      and other basic message constructs, such as multiarrays. For common, generic
      robot-specific message types, please see <a href="http://www.ros.org/wiki/common_msgs">common_msgs</a>.
    license: BSD
    shortdesc: Common ROS Messages
    source: https://code.ros.org/svn/ros/stacks/ros_comm/trunk/messages/std_msgs
    website: http://www.ros.org/wiki/std_msgs
  std_srvs:
    author: !!python/unicode 'Morgan Quigley/mquigley@cs.stanford.edu'
    deps: []
    desc: Common service definitions. Currently just the 'Empty' service.
    license: BSD
    shortdesc: Common ROS Services
    source: https://code.ros.org/svn/ros/stacks/ros_comm/trunk/messages/std_srvs
    website: http://ros.org/wiki/std_srvs
  test_crosspackage:
    author: !!python/unicode 'Jeremy Leibs'
    deps: []
    license: BSD
    shortdesc: test_crosspackage
    source: list.php
    website: https://code.ros.org/svn/ros/stacks/ros_comm/trunk/test/test_crosspackage
  test_ros:
    author: !!python/unicode 'Ken Conley/kwc@willowgarage.com'
    deps:
    - roscpp
    - rostest
    - roslib
    - std_msgs
    - rosgraph_msgs
    desc: ROS high-level (language-neutral) integration test framework.
    license: BSD
    shortdesc: ROS integration tests
    source: details.php?name=rospy
    website: https://code.ros.org/svn/ros/stacks/ros_comm/trunk/test/test_ros
  test_rosbag:
    author: !!python/unicode 'Jeremy Leibs'
    deps:
    - rostest
    - test_crosspackage
    - rosbag
    desc: A package for testing rosbag functionality.
    license: BSD
    shortdesc: test_rosbag
    source: details.php?name=rospy
    website: https://code.ros.org/svn/ros/stacks/ros_comm/trunk/test/test_rosbag
  test_roscpp:
    author: !!python/unicode 'Morgan Quigley mquigley@cs.stanford.edu, Ken Conley
      kwc@willowgarage.com'
    deps:
    - std_msgs
    - std_srvs
    - test_ros
    desc: This package has a few test cases to make sure the C++ client library actually
      does what it claims to do and doesn't leak memory too badly.
    license: BSD
    shortdesc: Some test cases for ROS C++ client library
    source: details.php?name=roscpp
    website: https://code.ros.org/svn/ros/stacks/ros_comm/trunk/test/test_roscpp
  test_roscpp_serialization:
    author: !!python/unicode 'Josh Faust'
    deps:
    - roscpp
    - std_msgs
    - rosgraph_msgs
    desc: Set of tests to test templated serialization, message generation, and using
      messages with custom allocators
    license: BSD
    shortdesc: Tests roscpp templated serialization and message generation
    source: https://code.ros.org/svn/ros/stacks/ros_comm/trunk/test/test_roscpp_serialization
    website: http://ros.org/wiki/test_roscpp_serialization
  test_roscpp_serialization_perf:
    author: !!python/unicode 'Morgan Quigley'
    deps: []
    desc: A simple performance test of the serialization/deserialization scheme, so
      we can get some decent numbers to target optimization efforts.
    license: BSD
    shortdesc: A simple performance test of the serialization/deserialization scheme,
      so we can get some decent ...
    source: details.php?name=roscpp
    website: https://code.ros.org/svn/ros/stacks/ros_comm/trunk/test/test_roscpp_serialization_perf
  test_rosgraph:
    author: !!python/unicode 'Ken Conley'
    deps:
    - roslib
    - rospy
    - rostest
    - rosgraph
    desc: Test suite for rosgraph
    license: BSD
    shortdesc: test_rosgraph
    source: https://code.ros.org/svn/ros/stacks/ros_comm/trunk/test/test_rosgraph
    website: http://ros.org/wiki/test_rosgraph
  test_rosinstall:
    author: !!python/unicode 'Tully Foote'
    deps:
    - rostest
    - rosinstall
    desc: test_rosinstall
    license: BSD
    shortdesc: test_rosinstall
    source: https://code.ros.org/svn/ros/stacks/ros_release/trunk/test_rosinstall
    website: http://ros.org/wiki/test_rosinstall
  test_roslaunch:
    author: !!python/unicode 'Ken Conley/kwc@willowgarage.com'
    deps:
    - roslib
    - rosgraph_msgs
    - rospy
    - rostest
    - roslaunch
    - rosparam
    desc: "roslaunch unit and integration tests. These are in a \n     separate package\
      \ to avoid circular dependency with rostest."
    license: BSD
    shortdesc: roslaunch tests
    source: https://code.ros.org/svn/ros/stacks/ros_comm/trunk/test/test_roslaunch
    website: http://ros.org/wiki/roslaunch
  test_roslib_comm:
    author: !!python/unicode 'Jeremy Leibs/leibs@willowgarage.com, Ken Conley/kwc@willowgarage.com'
    deps:
    - rosunit
    - std_msgs
    - std_srvs
    - rosgraph_msgs
    desc: Unit tests verifying that roslib is operating as expected.
    license: BSD
    shortdesc: roslib tests
    source: details.php?name=roslib
    website: https://code.ros.org/svn/ros/stacks/ros_comm/trunk/test/test_roslib_comm
  test_roslisp:
    author: !!python/unicode 'Bhaskara Marthi'
    deps:
    - roslisp_runtime
    - std_msgs
    - std_srvs
    - roscpp
    - rostest
    desc: Tests for roslisp
    license: BSD
    shortdesc: tests for roslisp
    source: https://code.ros.org/svn/ros/stacks/roslisp_support/trunk/test_roslisp
    website: http://ros.org/wiki/test_roslisp
  test_rosmaster:
    author: !!python/unicode 'Ken Conley'
    deps:
    - rosmaster
    - rostest
    - roslib
    - test_ros
    desc: test_rosmaster
    license: BSD
    shortdesc: test_rosmaster
    source: https://code.ros.org/svn/ros/stacks/ros_comm/trunk/test/test_rosmaster
    website: http://ros.org/wiki/test_rosmaster
  test_rosmsg:
    author: !!python/unicode 'Ken Conley'
    deps:
    - rospy
    - roslib
    - rosmsg
    - rostest
    - std_msgs
    - test_ros
    desc: Test package for rosmsg
    license: BSD
    shortdesc: test_rosmsg
    source: https://code.ros.org/svn/ros/stacks/ros_comm/trunk/test/test_rosmsg
    website: http://ros.org/wiki/test_rosmsg
  test_rosnode:
    author: !!python/unicode 'Ken Conley'
    deps:
    - rospy
    - rostest
    - roslib
    - test_ros
    - std_msgs
    desc: Tests for the rosnode package and command-line tool.
    license: BSD
    shortdesc: test_rosnode
    source: details.php?name=rosnode
    website: https://code.ros.org/svn/ros/stacks/ros_comm/trunk/test/test_rosnode
  test_rosparam:
    author: !!python/unicode 'Ken Conley'
    deps:
    - roslib
    - rostest
    desc: Tests for the rosparam tool
    license: BSD
    shortdesc: test_rosparam
    source: details.php?name=rosparam
    website: https://code.ros.org/svn/ros/stacks/ros_comm/trunk/test/test_rosparam
  test_rospy:
    author: !!python/unicode 'Ken Conley/kwc@willowgarage.com'
    deps:
    - rostest
    - std_msgs
    - test_ros
    - rostopic
    desc: rospy unit and integration test framework.
    license: BSD
    shortdesc: rospy tests
    source: details.php?name=rospy
    website: https://code.ros.org/svn/ros/stacks/ros_comm/trunk/test/test_rospy
  test_rosservice:
    author: !!python/unicode 'Ken Conley'
    deps:
    - rospy
    - roslib
    - rostest
    - test_ros
    desc: Tests for the rosservice tool
    license: BSD
    shortdesc: test_rosservice
    source: details.php?name=rosservice
    website: https://code.ros.org/svn/ros/stacks/ros_comm/trunk/test/test_rosservice
  test_rostest:
    author: !!python/unicode 'Ken Conley'
    deps:
    - rostest
    - test_ros
    desc: test_rostest
    license: BSD
    shortdesc: test_rostest
    source: https://code.ros.org/svn/ros/stacks/ros_comm/trunk/test/test_rostest
    website: http://ros.org/wiki/test_rostest
  test_rostime:
    author: !!python/unicode 'Josh Faust'
    deps:
    - rostime
    desc: test_rostime
    license: BSD
    shortdesc: test_rostime
    source: https://code.ros.org/svn/ros/stacks/ros_comm/trunk/test/test_rostime
    website: http://ros.org/wiki/test_rostime
  test_rostopic:
    author: !!python/unicode 'Ken Conley'
    deps:
    - roslib
    - rospy
    - rostest
    - rosgraph_msgs
    - std_msgs
    - test_ros
    desc: Tests for rostopic
    license: BSD
    shortdesc: test_rostopic
    source: details.php?name=rostopic
    website: https://code.ros.org/svn/ros/stacks/ros_comm/trunk/test/test_rostopic
  test_roswtf:
    author: !!python/unicode 'Ken Conley'
    deps:
    - roslib
    - roswtf
    - test_ros
    desc: test_roswtf
    license: BSD
    shortdesc: test_roswtf
    source: https://code.ros.org/svn/ros/stacks/ros_comm/trunk/test/test_roswtf
    website: http://ros.org/wiki/test_roswtf
  test_rxdeps:
    author: !!python/unicode 'Tully Foote'
    deps:
    - rxdeps
    - rostest
    desc: test_rxdeps
    license: BSD
    shortdesc: test_rxdeps
    source: https://code.ros.org/svn/ros/stacks/rx/trunk/test_rxdeps
    website: http://ros.org/wiki/test_rxdeps
  test_rxplot:
    author: !!python/unicode 'Rob Wheeler'
    deps:
    - roslib
    - rospy
    - rostest
    - rxtools
    desc: Test suite for rxplot
    license: BSD
    shortdesc: test_rxplot
    source: https://code.ros.org/svn/ros/stacks/rx/trunk/test_rxplot
    website: http://ros.org/wiki/test_rxplot
  test_topic_tools:
    author: !!python/unicode 'Tully Foote'
    deps:
    - topic_tools
    - rostopic
    - rosbag
    desc: test_topic_tools
    license: BSD
    shortdesc: test_topic_tools
    source: https://code.ros.org/svn/ros/stacks/ros_comm/trunk/test/test_topic_tools
    website: http://ros.org/wiki/test_topic_tools
  topic_tools:
    author: !!python/unicode 'Morgan Quigley, Brian Gerkey'
    deps:
    - rosconsole
    - std_msgs
    - rostest
    - rospy
    desc: "Tools for directing, throttling, selecting, and otherwise messing with\
      \ \n    ROS topics at a meta level. None of the programs in this package actually\n\
      \    know about the topics whose streams they are altering; instead, these \n\
      \    tools deal with messages as generic binary blobs. This means they can be\n\
      \    applied to any ROS topic."
    license: BSD
    shortdesc: generic routing tools
    source: details.php?name=roscpp
    website: https://code.ros.org/svn/ros/stacks/ros_comm/trunk/tools/topic_tools
  turtlesim:
    author: !!python/unicode 'Josh Faust'
    deps:
    - roscpp
    - roslib
    - rosconsole
    - std_srvs
    desc: turtlesim is a tool made for teaching ROS and ROS-PKGS.
    license: BSD
    shortdesc: turtlesim is a tool made for teaching ROS and ROS-PKGS.
    source: https://code.ros.org/svn/ros/stacks/ros_tutorials/trunk/turtlesim
    website: http://ros.org/wiki/turtlesim
  vcstools:
    author: !!python/unicode 'Tully Foote, Ken Conley'
    deps: []
    desc: Python libraries for manipulation version control software systems (e.g.
      SVN, Git, Hg) in a uniform manner.
    license: BSD
    shortdesc: Python libraries for manipulation version control software systems
      (e.g. SVN, Git, Hg) in a u...
    source: https://code.ros.org/svn/ros/stacks/ros_release/trunk/vcstools
    website: http://ros.org/wiki/vcstools
  wxPython_swig_interface:
    author: !!python/unicode 'Many'
    deps: []
    desc: 'Interface files used with SWIG to allow use of custom C++ widgets with
      wxPython code.


      These interface files were pulled from wxPython 2.8.1, because at the time that
      was the target version (since we were using Ubuntu Feisty).  We will probably
      continue to use these interface files until they no longer work for some reason.


      The ideal situation would be if these were installed in system installs along
      with wxPython, but unfortunately they are not.'
    license: wxWindows
    shortdesc: wxPython SWIG interface files
    source: https://code.ros.org/svn/ros/stacks/rx/trunk/wxPython_swig_interface
    website: http://www.wxpython.org/
  wxswig:
    author: !!python/unicode 'Many'
    deps: []
    desc: 'Generates python bindings for C/C++ code.


      This is a special version of swig needed by wxPython, which is SWIG version
      1.3.29 plus some custom patches (explained at http://wxpython.org/builddoc.php).  The
      patched latest version of wxPython SWIG is available at:


      http://wxpython.wxcommunity.com/tools/


      wxswig is included as a 3rdparty package because it is not included in package
      managers.'
    license: BSD
    shortdesc: wxPython version of SWIG
    source: https://code.ros.org/svn/ros/stacks/rx/trunk/wxswig
    website: http://swig.sourceforge.net
  xdot:
    author: !!python/unicode 'Jose Fonseca, ROS package and WX frontend by Jonathan
      Bohren'
    deps: []
    desc: "<a href=\"http://code.google.com/p/jrfonseca/wiki/XDot\">XDot, by Jose\
      \ Fonseca</a>, \n    is an interactive viewer for graphs written in Graphviz's\
      \ dot\n    language.\n\n    This package adds front-end capabilities to XDot\
      \ including WX Widget\n    support and a mechanism for receiving callbacks when\
      \ nodes are clicked. This extension is provided as BSD."
    license: LGPL/BSD
    shortdesc: ''
    source: https://code.ros.org/svn/ros/stacks/rx/trunk/xdot
    website: http://code.google.com/p/jrfonseca/wiki/XDot
  xmlrpcpp:
    author: !!python/unicode 'Chris Morley and Konstantin Pilipchuk, slight modifications
      and ROS wrapping by Morgan Quigley'
    deps: []
    desc: "XmlRpc++ is a C++ implementation of the XML-RPC protocol. This version\
      \ is \nheavily modified from the package available on SourceForge in order to\
      \ \nsupport roscpp's threading model. As such, we are maintaining our\nown fork."
    license: LGPL
    shortdesc: A C++ XML-RPC library
    source: https://code.ros.org/svn/ros/stacks/ros_comm/trunk/utilities/xmlrpcpp
    website: http://xmlrpcpp.sourceforge.net
ros_applications:
  application_client:
    author: !!python/unicode ''
    deps:
    - application_msgs
    - rospy
    - roslib
    - actionlib
    desc: application_client
    license: BSD
    shortdesc: application_client
    source: https://kforge.ros.org/rosapps/hg
    website: http://ros.org/wiki/application_client
  application_manager:
    author: !!python/unicode 'Wim Meeussen'
    deps:
    - rospy
    - actionlib
    - actionlib_msgs
    - application_msgs
    desc: application_manager
    license: BSD
    shortdesc: application_manager
    source: https://kforge.ros.org/rosapps/hg
    website: http://ros.org/wiki/application_manager
  application_msgs:
    author: !!python/unicode ''
    deps:
    - roslib
    - std_msgs
    - actionlib_msgs
    desc: application_msgs
    license: BSD
    shortdesc: application_msgs
    source: https://kforge.ros.org/rosapps/hg
    website: http://ros.org/wiki/application_msgs
  dummy_applications:
    author: !!python/unicode ''
    deps:
    - application_manager
    - application_msgs
    desc: dummy_applications
    license: BSD
    shortdesc: dummy_applications
    source: https://kforge.ros.org/rosapps/hg
    website: http://ros.org/wiki/dummy_applications
  ui_preempter:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - actionlib
    - rospy
    - roslib
    - std_msgs
    - application_msgs
    desc: ui_preempter
    license: BSD
    shortdesc: ui_preempter
    source: https://kforge.ros.org/rosapps/hg
    website: http://ros.org/wiki/ui_preempter
  ui_responder:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - std_msgs
    - rospy
    - roslib
    desc: ui_responder
    license: BSD
    shortdesc: ui_responder
    source: https://kforge.ros.org/rosapps/hg
    website: http://ros.org/wiki/ui_responder
roslua:
  roslua:
    author: !!python/unicode 'Tim Niemueller'
    deps:
    - roslang
    - roslib
    desc: "This package is a Lua client library for ROS. It allows connecting to a\n\
      \    rosmaster instance and to develop ROS packages in Lua."
    license: BSD
    shortdesc: A Lua client library for ROS
    source: http://github.com/timn/roslua.git
    website: http://ros.org/wiki/roslua
rosorg:
  rosbrowse:
    author: !!python/unicode 'Morgan Quigley, Ken Conley'
    deps: []
    desc: A few scripts to generate and manipulate lists of all available ROS packages.
    license: BSD
    shortdesc: Some scripts to automate browsing the ROS universe
    source: details.php?name=vcstools
    website: https://code.ros.org/svn/ros/stacks/rosorg/trunk/rosbrowse
  rosdoc_rosorg:
    author: !!python/unicode 'Ken Conley'
    deps:
    - rosdoc
    - vcstools
    desc: Version of rosdoc for the ROS.org documenation.
    license: BSD
    shortdesc: rosdoc_rosorg
    source: https://code.ros.org/svn/ros/stacks/rosorg/trunk/rosdoc_rosorg
    website: http://ros.org/wiki/rosdoc_rosorg
  roswiki:
    author: !!python/unicode 'Kenneth Conley'
    deps: []
    desc: Package for managing macros and other related code for the ROS.org wiki
    license: BSD
    shortdesc: Package for managing macros and other related code for the ROS.org
      wiki
    source: https://code.ros.org/svn/ros/stacks/rosorg/trunk/roswiki
    website: http://ros.org/wiki/roswiki
rosspawn:
  rosspawn:
    author: !!python/unicode 'Tim Niemueller'
    deps:
    - roscpp
    - roslib
    - rospack
    desc: "ROSspawn allows to start, stop, and monitor ROS nodes remotely. Opposed\n\
      \    to roslaunch it does not read files with configurations to load, but\n\
      \    rather it exposes services and topics to inform about available\n    ROS\
      \ nodes (i.e. binaries in appropriate folders) which can then be\n    started\
      \ and stopped."
    license: GPLv2+
    shortdesc: "ROSspawn allows to start, stop, and monitor ROS nodes remotely. Opposed\n\
      \    to roslaunch it doe..."
    source: http://github.com/timn/rosspawn.git
    website: http://ros.org/wiki/rosspawn
rosspawn_gui:
  rosspawn_gui:
    author: !!python/unicode 'Tim Niemueller'
    deps:
    - roscpp
    - roslib
    - rosspawn
    desc: GUI application for rosspawn, based on Fawkes' Plugin GUI.
    license: GPLv2+
    shortdesc: rosspawn_gui
    source: http://github.com/timn/rosspawn_gui.git
    website: http://ros.org/wiki/rosspawn_gui
rtc-us-ros-pkg:
  cytonRobotDescription:
    author: !!python/unicode 'GeuS'
    deps:
    - urdf
    desc: cythonRobotDescription
    license: BSD
    shortdesc: cythonRobotDescription
    source: https://rtc-us-ros-pkg.svn.sourceforge.net/svnroot/rtc-us-ros-pkg/branches/cytonRobotDescription
    website: http://ros.org/wiki/cythonRobotDescription
  cyton_driver:
    author: "Pablo I\xC3\xB1igo Blasco"
    deps: []
    desc: cyton_driver
    license: BSD
    shortdesc: cython_driver
    source: https://rtc-us-ros-pkg.svn.sourceforge.net/svnroot/rtc-us-ros-pkg/branches/cyton_driver
    website: http://ros.org/wiki/cython_driver
  cyton_node:
    author: "Pablo I\xC3\xB1igo Blasco"
    deps:
    - cyton_driver
    - rospy
    - tf
    - kdl
    - sensor_msgs
    desc: cython_node
    license: BSD
    shortdesc: cython_node
    source: https://rtc-us-ros-pkg.svn.sourceforge.net/svnroot/rtc-us-ros-pkg/branches/cyton_node
    website: http://ros.org/wiki/cython_node
  deap:
    author: "Pablo I\xC3\xB1igo Blasco"
    deps: []
    desc: deap
    license: BSD
    shortdesc: deap
    source: https://rtc-us-ros-pkg.svn.sourceforge.net/svnroot/rtc-us-ros-pkg/branches/deap
    website: http://ros.org/wiki/deap
  gaussian_filtering:
    author: "Pablo I\xC3\xB1igo Blasco"
    deps:
    - rospy
    desc: ukf
    license: BSD
    shortdesc: ukf
    source: https://rtc-us-ros-pkg.svn.sourceforge.net/svnroot/rtc-us-ros-pkg/branches/gaussian_filtering
    website: http://ros.org/wiki/ukf
  interactive_kinematic:
    author: "Pablo I\xC3\xB1igo Blasco"
    deps:
    - kdl
    - rospy
    - std_msgs
    - sensor_msgs
    - geometry_msgs
    - urdf
    desc: interactive_kinematic
    license: BSD
    shortdesc: interactive_kinematic
    source: https://rtc-us-ros-pkg.svn.sourceforge.net/svnroot/rtc-us-ros-pkg/branches/interactive_kinematic
    website: http://ros.org/wiki/interactive_kinematic
  kinematic_model_estimation:
    author: "Pablo I\xC3\xB1igo Blasco"
    deps:
    - kdl
    - rospy
    - std_msgs
    - sensor_msgs
    - geometry_msgs
    - urdf
    - deap
    - tf_conversions
    desc: kinematic_model_estimation
    license: BSD
    shortdesc: kinematic_model_estimation
    source: https://rtc-us-ros-pkg.svn.sourceforge.net/svnroot/rtc-us-ros-pkg/branches/kinematic_model_estimation
    website: http://ros.org/wiki/kinematic_model_estimation
  learning_image_geometry:
    author: "Pablo I\xC3\xB1igo Blasco"
    deps:
    - image_geometry
    - image_transport
    - opencv2
    - cv_bridge
    - tf
    - image_view
    desc: learning_image_geometry
    license: BSD
    shortdesc: learning_image_geometry
    source: https://rtc-us-ros-pkg.svn.sourceforge.net/svnroot/rtc-us-ros-pkg/branches/learning_image_geometry
    website: http://ros.org/wiki/learning_image_geometry
  robostylus:
    author: !!python/unicode 'Minolo'
    deps:
    - kdl
    - kdl_parser
    - eigen
    - visualization_msgs
    - sensor_msgs
    desc: A little project I'm doing in my spare time!
    license: BSD
    shortdesc: robostylus
    source: details.php?name=roscpp
    website: https://rtc-us-ros-pkg.svn.sourceforge.net/svnroot/rtc-us-ros-pkg/branches/robostylus
  robotArmJointAnimation:
    author: "Pablo I\xC3\xB1igo Blasco"
    deps:
    - opencv2
    - sensor_msgs
    - roscpp
    - gazebo
    desc: this package contains a node which sends periodically JointStates messages
      through a topic. It's useful to test the kinematics models defined in URDF and
      to show it on the rviz tool.
    license: BSD
    shortdesc: robotArmJointAnimation
    source: https://rtc-us-ros-pkg.svn.sourceforge.net/svnroot/rtc-us-ros-pkg/branches/robotArmJointAnimation
    website: http://ros.org/wiki/minoloTest
  ros_soar:
    author: "Tom\xC3\xA1s Murillo Morales"
    deps:
    - roscpp
    - soar
    - erratic_player
    - sensor_msgs
    desc: ros_soar
    license: BSD
    shortdesc: ros_soar
    source: https://rtc-us-ros-pkg.svn.sourceforge.net/svnroot/rtc-us-ros-pkg/branches/rtcus_cognitive/ros_soar
    website: http://ros.org/wiki/ros_soar
  rtcus_erratic_slam:
    author: "Pablo I\xC3\xB1igo Blasco"
    deps:
    - rospy
    - sound_play
    - joy
    - geometry_msgs
    - std_msgs
    desc: rtcus_erratic_slam
    license: BSD
    shortdesc: erratic_slam
    source: https://rtc-us-ros-pkg.svn.sourceforge.net/svnroot/rtc-us-ros-pkg/branches/rtcus_erratic_slam
    website: http://ros.org/wiki/erratic_slam
  rtcus_kinect_joystick:
    author: !!python/unicode 'ros1'
    deps:
    - roscpp
    - std_msgs
    - joy
    desc: rtcus_kinect_joystick
    license: BSD
    shortdesc: rtcus_kinect_joystick
    source: https://rtc-us-ros-pkg.svn.sourceforge.net/svnroot/rtc-us-ros-pkg/branches/rtcus_kinect_joystick
    website: http://ros.org/wiki/rtcus_kinect_joystick
  rtcus_kinect_reactive_navigation:
    author: "Pablo I\xC3\xB1igo Blasco"
    deps:
    - pcl
    - pcl_ros
    desc: rtcus_kinect_reactive_navigation
    license: BSD
    shortdesc: rtcus_kinect_reactive_navigation
    source: https://rtc-us-ros-pkg.svn.sourceforge.net/svnroot/rtc-us-ros-pkg/branches/rtcus_kinect_reactive_navigation
    website: http://ros.org/wiki/rtcus_kinect_reactive_navigation
  rtcus_kinect_skeleton_tracker:
    author: "Pablo I\xC3\xB1igo Blasco"
    deps:
    - roscpp
    - rospy
    - std_msgs
    - geometry_msgs
    - nav_msgs
    - tf
    - urdf
    - rviz
    - kdl
    - nite
    desc: rtcus_kinect_skeleton_tracker
    license: BSD
    shortdesc: rtcus_kinect_skeleton_tracker
    source: https://rtc-us-ros-pkg.svn.sourceforge.net/svnroot/rtc-us-ros-pkg/branches/rtcus_kinect_skeleton_tracker
    website: http://ros.org/wiki/rtcus_kinect_skeleton_tracker
  rtcus_skeleton_running_interpreter:
    author: "Pablo I\xC3\xB1igo Blasco"
    deps:
    - kdl
    - rospy
    - rtcus_kinect_skeleton_tracker
    desc: rtcus_skeleton_running_interpreter
    license: BSD
    shortdesc: rtcus_skeleton_running_interpreter
    source: https://rtc-us-ros-pkg.svn.sourceforge.net/svnroot/rtc-us-ros-pkg/branches/rtcus_skeleton_running_interpreter
    website: http://ros.org/wiki/rtcus_skeleton_running_interpreter
  soar:
    author: "Tom\xC3\xA1s Murillo Morales"
    deps:
    - roscpp
    desc: soar
    license: BSD
    shortdesc: soar
    source: https://rtc-us-ros-pkg.svn.sourceforge.net/svnroot/rtc-us-ros-pkg/branches/rtcus_cognitive/soar
    website: http://ros.org/wiki/soar
  testExportPython:
    author: "Pablo I\xC3\xB1igo Blasco"
    deps: []
    desc: testExportPython
    license: BSD
    shortdesc: testExportPython
    source: https://rtc-us-ros-pkg.svn.sourceforge.net/svnroot/rtc-us-ros-pkg/branches/testExportPython
    website: http://ros.org/wiki/testExportPython
  testMarkers:
    author: "Pablo I\xC3\xB1igo Blasco"
    deps:
    - visualization_msgs
    desc: testMarkers
    license: BSD
    shortdesc: testMarkers
    source: https://rtc-us-ros-pkg.svn.sourceforge.net/svnroot/rtc-us-ros-pkg/branches/testMarkers
    website: http://ros.org/wiki/testMarkers
rutgers-ros-pkg:
  avr_bridge:
    author: !!python/unicode 'Adam Stambler, Phillip Quiza'
    deps:
    - rospy
    - std_msgs
    desc: "avr_bridge allows the AVR processors to directly publish or subscribe to\
      \ \nROS  topics.  This allows everything from Arduinos to custom robot \nboards\
      \ to be first class ROS components."
    license: BSD
    shortdesc: Allows avr processor to directly publish or subscribe to ros topics
    source: https://github.com/rutgers/avr_bridge.git
    website: http://ros.org/wiki/avr_bridge
  imu_9drazor:
    author: !!python/unicode 'Adam Stambler'
    deps:
    - rospy
    - sensor_msgs
    - tf
    - geometry_msgs
    - avr_bridge
    desc: 'This package is a driver for Sparkfun''s 9D Razor imu:


      http://www.sparkfun.com/commerce/product_info.php?products_id=9623

      sku: SEN-09623


      It uses the rutgers-ros-pkg avr_bridge as a wrapper around the

      sf9domahrs code base from :

      http://code.google.com/p/sf9domahrs/'
    license: BSD
    shortdesc: ROS driver for Sparkfun's 9D Razor imu
    source: https://github.com/rutgers/imu_9drazor.git
    website: http://ros.org/wiki/imu_9drazor
sarkofag_robot:
  sarkofag_defs:
    author: !!python/unicode 'Konrad Banachowicz'
    deps:
    - xacro
    desc: sarkofag_defs
    license: BSD
    shortdesc: sarkofag_defs
    source: https://github.com/RCPRG-ros-pkg/sarkofag_robot.git
    website: http://ros.org/wiki/sarkofag_defs
  sarkofag_launch:
    author: !!python/unicode 'Konrad Banachowicz'
    deps:
    - sarkofag_defs
    - fake_servo
    - oro_joint_state_publisher
    - rtt
    - ocl
    - rtt_ros_integration_sensor_msgs
    - joint_spline_trajectory_generator
    - oro_joint_trajectory_action
    - actionlib
    - pr2_controllers_msgs
    desc: sarkofag_launch
    license: BSD
    shortdesc: sarkofag_launch
    source: https://github.com/RCPRG-ros-pkg/sarkofag_robot.git
    website: http://ros.org/wiki/sarkofag_launch
  sarkofag_servo:
    author: !!python/unicode 'Konrad Banachowicz'
    deps:
    - rtt
    - ocl
    - oro_servo_msgs
    desc: sarkofag_servo
    license: BSD
    shortdesc: sarkofag_servo
    source: https://github.com/RCPRG-ros-pkg/sarkofag_robot.git
    website: http://ros.org/wiki/fake_servo
sbpl_arm_planning:
  sbpl_arm_planner:
    author: !!python/unicode 'Benjamin Cohen/bcohen@seas.upenn.edu'
    deps:
    - roscpp
    - sbpl
    - angles
    - kdl
    - kdl_parser
    - distance_field
    - urdf
    - pr2_arm_kinematics
    - resource_retriever
    - bullet
    - tf
    - mapping_msgs
    - geometric_shapes
    desc: "Benjamin Cohen - University of Pennsylvania\n    Advised by:\n    Sachin\
      \ Chitta - Willow Garage\n    Maxim Likhachev - Carnegie Mellon University"
    license: BSD
    shortdesc: Motion Planning Research for a Robotic Manipulator
    source: https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs/sbpl_arm_planning/trunk/sbpl_arm_planner
    website: http://www.ros.org/wiki/sbpl_arm_planner
  sbpl_arm_planner_node:
    author: !!python/unicode 'Benjamin Cohen/bcohen@seas.upenn.edu'
    deps:
    - sbpl
    - angles
    - kdl
    - urdf
    - pr2_arm_kinematics
    - kinematics_msgs
    - roscpp
    - rospy
    - bullet
    - tf
    - mapping_msgs
    - motion_planning_msgs
    - visualization_msgs
    - sensor_msgs
    - message_filters
    - geometric_shapes
    - planning_environment
    - planning_models
    - sbpl_arm_planner
    - pr2_controllers_msgs
    - actionlib
    - move_arm_msgs
    - geometry_msgs
    - kdl_parser
    desc: sbpl_arm_planner_node
    license: BSD
    shortdesc: sbpl_arm_planner_node
    source: https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs/sbpl_arm_planning/trunk/sbpl_arm_planner_node
    website: http://www.ros.org/wiki/sbpl_arm_planner_node
sbpl_door_planning:
  clean_door_planner:
    author: !!python/unicode 'Steven Gray'
    deps:
    - roscpp
    - sbpl
    - sbpl_door_planner
    - costmap_2d
    - nav_core
    - pluginlib
    - door_msgs
    - pr2_doors_actions
    - door_handle_detector
    - pr2_navigation_teleop
    - pr2_navigation_perception
    - pr2_navigation_local
    - pr2_controller_manager
    - pr2_mechanism_model
    - move_base
    - manipulation_msgs
    - trajectory
    - pose_base_controller
    - kdl
    - eigen
    desc: sbpl_door_planner_plugin
    license: BSD
    shortdesc: sbpl_door_planner_plugin
    source: https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs/sbpl_door_planning/trunk/clean_door_planner
    website: Coming soon...
  manipulation_msgs:
    author: !!python/unicode 'Wim Meeussen'
    deps:
    - geometry_msgs
    desc: Core messages for manipulation
    license: BSD
    shortdesc: manipulation_msgs
    source: https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs/door_planning/manipulation_common/manipulation_msgs
    website: http://pr.willowgarage.com/wiki/
  manipulation_srvs:
    author: !!python/unicode 'Sachin Chitta, Ioan Sucan'
    deps:
    - manipulation_msgs
    - geometry_msgs
    desc: Core services for manipulation
    license: BSD
    shortdesc: manipulation_srvs
    source: https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs/door_planning/manipulation_common/manipulation_srvs
    website: http://pr.willowgarage.com/wiki/
  sbpl_door_planner_plugin:
    author: !!python/unicode 'Steven Gray'
    deps:
    - roscpp
    - sbpl
    - sbpl_door_planner
    - costmap_2d
    - nav_core
    - pluginlib
    - door_msgs
    - pr2_doors_actions
    - door_handle_detector
    - pr2_navigation_teleop
    - pr2_navigation_perception
    - pr2_navigation_local
    - pr2_controller_manager
    - pr2_mechanism_model
    - move_base
    - manipulation_msgs
    - trajectory
    - pose_base_controller
    - kdl
    - eigen
    desc: sbpl_door_planner_plugin
    license: BSD
    shortdesc: sbpl_door_planner_plugin
    source: https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs/sbpl_door_planning/trunk/sbpl_door_planner_plugin
    website: Coming soon...
  sbpl_doors:
    author: !!python/unicode 'Steven Gray'
    deps:
    - roscpp
    - sbpl
    - sbpl_door_planner
    - costmap_2d
    - door_msgs
    - pr2_doors_actions
    - door_handle_detector
    - pr2_navigation_teleop
    - pr2_navigation_perception
    - pr2_navigation_local
    - pr2_controller_manager
    - pr2_mechanism_model
    - move_base
    - trajectory
    - pose_base_controller
    - kdl
    - eigen
    desc: sbpl_doors
    license: BSD
    shortdesc: sbpl_doors
    source: https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs/sbpl_door_planning/trunk/sbpl_doors
    website: Coming soon...
  torque_check:
    author: !!python/unicode 'steve'
    deps:
    - kinematics_msgs
    - kdl_parser
    - pr2_controller_interface
    - pr2_mechanism_model
    - pluginlib
    desc: torque_check
    license: BSD
    shortdesc: torque_check
    source: https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs/sbpl_door_planning/trunk/torque_check
    website: http://ros.org/wiki/torque_check
  trajectory:
    author: !!python/unicode 'Sachin Chitta'
    deps:
    - rosconsole
    - angles
    - pluginlib
    - manipulation_msgs
    desc: General purpose trajectory library.
    license: BSD
    shortdesc: Trajectory Library
    source: https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs/door_planning/manipulation_common/trajectory
    website: http://pr.willowgarage.com
sbpl_dynamic_env:
  demo_sbpl_dynamic_env:
    author: !!python/unicode 'Michael Phillips'
    deps:
    - roscpp
    - tf
    - nav_msgs
    - sbpl_dynamic_env_global_planner
    - stage
    desc: A demo package which has launch files to test the stack and demonstrate
      uses.
    license: BSD
    shortdesc: demo_sbpl_dynamic_env
    source: https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs/sbpl_dynamic_env/trunk/demo_sbpl_dynamic_env
    website: http://ros.org/wiki/demo_sbpl_dynamic_env
  dynamic_obs_msgs:
    author: !!python/unicode 'Mike Phillips'
    deps:
    - geometry_msgs
    desc: ''
    license: BSD
    shortdesc: Messages for dynamic obstacles
    source: https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs/sbpl_dynamic_env/trunk/dynamic_obs_msgs
    website: http://ros.org/wiki/nav_msgs
  fake_tracking:
    author: !!python/unicode 'Michael Phillips'
    deps:
    - roscpp
    - rosconsole
    - nav_msgs
    - dynamic_obs_msgs
    desc: A fake tracker which polls the simulator for the locations of other robots
      (dynamic obstacles)
    license: BSD
    shortdesc: fake_tracking
    source: https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs/sbpl_dynamic_env/trunk/fake_tracking
    website: http://ros.org/wiki/fake_tracking
  lidar_tracking:
    author: !!python/unicode 'Michael Phillips'
    deps:
    - roscpp
    - rosconsole
    - sensor_msgs
    - geometry_msgs
    - visualization_msgs
    - dynamic_obs_msgs
    - tf
    - costmap_2d
    desc: A very simple (and not very robust) node for tracking dynamic obstacles
      using lidar.
    license: BSD
    shortdesc: lidar_tracking
    source: https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs/sbpl_dynamic_env/trunk/lidar_tracking
    website: http://ros.org/wiki/fake_tracking
  parallel_move_base:
    author: !!python/unicode 'Eitan Marder-Eppstein, Mike Phillips'
    deps:
    - roscpp
    - rosconsole
    - std_msgs
    - move_base_msgs
    - geometry_msgs
    - visualization_msgs
    - actionlib
    - nav_core
    - pluginlib
    - costmap_2d
    - tf
    - nav_msgs
    - roslib
    - rospy
    - rosmsg
    - rostopic
    - std_srvs
    - base_local_planner
    - navfn
    - clear_costmap_recovery
    - rotate_recovery
    desc: A modified version of move_base where the global planner runs in its own
      thread on a clock like the local planner does.
    license: BSD
    shortdesc: A general navigation stack
    source: https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs/sbpl_dynamic_env/trunk/parallel_move_base
    website: http://ros.org/wiki/move_base
  sbpl_dynamic_env_global_planner:
    author: !!python/unicode 'Michael Phillips'
    deps:
    - roscpp
    - sbpl
    - sbpl_dynamic_planner
    - dynamic_obs_msgs
    - costmap_2d
    - nav_core
    - pluginlib
    - actionlib_msgs
    desc: A wrapper around sbpl_dynamic_planner which allows it to be used as a global
      planner for the navigation stack.
    license: BSD
    shortdesc: sbpl_dynamic_env_global_planner
    source: https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs/sbpl_dynamic_env/trunk/sbpl_dynamic_env_global_planner
    website: http://ros.org/wiki/sbpl_dynamic_env_global_planner
  sbpl_dynamic_planner:
    author: !!python/unicode 'Michael Phillips,  Maxim Likhachev'
    deps:
    - sbpl
    desc: An anytime planner for dynamic environments. It takes in a start, goal,
      static costmap, and predicted dynamic obstacle trajectories. It returns a safe
      path (x,y,theta) if one exists.
    license: BSD
    shortdesc: sbpl_dynamic_planner
    source: https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs/sbpl_dynamic_env/trunk/sbpl_dynamic_planner
    website: http://ros.org/wiki/sbpl_dynamic_planner
scan_tools:
  canonical_scan_matcher:
    author: !!python/unicode 'Ivan Dryanovski'
    deps:
    - tf
    - roscpp
    - sensor_msgs
    - geometry_msgs
    - csm_install
    - laser_ortho_projector
    desc: "A wrapper around Andrea Censi's Canonical Scan Matcher implementation,\
      \ used for laser scan registration.\n     More about CSM: http://www.cds.caltech.edu/~andrea/research/sw/csm.html"
    license: GPL
    shortdesc: canonical_scan_matcher
    source: http://robotics.ccny.cuny.edu/git/ccny-ros-pkg/scan_tools.git
    website: http://ros.org/wiki/ccny_csm
  canonical_scan_matcher_xy:
    author: !!python/unicode 'Ivan Dryanovski'
    deps:
    - roscpp
    - sensor_msgs
    - tf
    - pcl
    - pcl_ros
    - geometry_msgs
    - sensor_msgs
    - csm_xy_install
    - nodelet
    desc: Canonical Scan Matcher, with cartesian coordinates.
    license: BSD
    shortdesc: canonical_scan_matcher_xy
    source: http://robotics.ccny.cuny.edu/git/ccny-ros-pkg/scan_tools.git
    website: http://ros.org/wiki/scan_matcher
  csm_install:
    author: !!python/unicode 'Ivan Dryanovski'
    deps: []
    desc: "A meta-package that downloads and installs Andrea Censi's Canonical Scan\
      \ Matcher locally.\n     More about CSM: http://www.cds.caltech.edu/~andrea/research/sw/csm.html"
    license: GPL
    shortdesc: csm_install
    source: http://robotics.ccny.cuny.edu/git/ccny-ros-pkg/scan_tools.git
    website: http://ros.org/wiki/csm_install
  csm_xy_install:
    author: !!python/unicode 'Ivan Dryanovski'
    deps: []
    desc: "A meta-package that downloads and installs Andrea Censi's Canonical Scan\
      \ Matcher locally.\n     Patches are applied to accept scans in cartesian (x,y)\
      \ coordinates.\n     More about CSM: http://www.cds.caltech.edu/~andrea/research/sw/csm.html"
    license: GPL
    shortdesc: csm_xy_install
    source: http://robotics.ccny.cuny.edu/git/ccny-ros-pkg/scan_tools.git
    website: http://ros.org/wiki/csm_install
  laser_ortho_projector:
    author: !!python/unicode 'Ivan Dryanovski'
    deps:
    - roscpp
    - sensor_msgs
    - geometry_msgs
    - message_filters
    - tf
    desc: The laser_ortho_projector package calculates orthogonal projections of LaserScan
      messages.
    license: GPL
    shortdesc: laser_ortho_projector
    source: http://robotics.ccny.cuny.edu/git/ccny-ros-pkg/scan_tools.git
    website: http://ros.org/wiki/laser_ortho_projector
  laser_scan_splitter:
    author: !!python/unicode 'Ivan Dryanovski'
    deps:
    - roscpp
    - nodelet
    - sensor_msgs
    - tf
    desc: The laser_scan_splitter takes in a LaserScan message and splits it into
      a number of other LaserScan messages. Each of the resulting laser scans can
      be assigned an arbitrary coordinate frame, and is published on a separate topic.
    license: GPL
    shortdesc: laser_scan_splitter
    source: http://robotics.ccny.cuny.edu/git/ccny-ros-pkg/scan_tools.git
    website: http://ros.org/wiki/laser_scan_splitter
  ncd_parser:
    author: !!python/unicode 'Ivan Dryanovski'
    deps:
    - tf
    - geometry_msgs
    - sensor_msgs
    desc: The ncd_parser package reads in .alog data files from the New College Dataset
      and broadcasts scan and odometry messages to ROS.
    license: GPL
    shortdesc: ncd_parser
    source: http://robotics.ccny.cuny.edu/git/ccny-ros-pkg/scan_tools.git
    website: http://ros.org/wiki/ncd_parser
  point_cloud_filter:
    author: !!python/unicode 'Ivan Dryanovski'
    deps:
    - roscpp
    - sensor_msgs
    - geometry_msgs
    desc: PointCloud messages provide space for additional channels, allowing values
      such as condifence or intensity to be attached to each point in the cloud. The
      point_cloud_filterreads in a Point Cloud message, and discards any points whose
      channel value falls outside a specified treshold interval.
    license: GPL
    shortdesc: point_cloud_filter
    source: http://robotics.ccny.cuny.edu/git/ccny-ros-pkg/scan_tools.git
    website: http://ros.org/wiki/point_cloud_filter
  polar_scan_matcher:
    author: !!python/unicode 'Ivan Dryanovski'
    deps:
    - tf
    - roscpp
    - sensor_msgs
    - geometry_msgs
    desc: A wrapper around Polar Scan Matcher by Albert Diosi and Lindsay Kleeman,
      used for laser scan registration.
    license: GPL
    shortdesc: polar_scan_matcher
    source: http://robotics.ccny.cuny.edu/git/ccny-ros-pkg/scan_tools.git
    website: http://ros.org/wiki/polar_scan_matcher
seabee3-ros-pkg:
  base_libs:
    author: !!python/unicode 'Edward T. Kaszubski'
    deps:
    - roscpp
    - std_msgs
    - std_srvs
    - opencv2
    - image_geometry
    - cv_bridge
    - image_transport
    - dynamic_reconfigure
    - driver_base
    - geometry_msgs
    - tf
    - joy
    desc: base_libs
    license: BSD
    shortdesc: base_libs
    source: http://seabee3-ros-pkg.googlecode.com/svn/trunk/cturtle/base_libs
    website: http://ros.org/wiki/base_libs
  buoy_identifier:
    author: !!python/unicode 'Dhruv'
    deps:
    - std_msgs
    - roscpp
    desc: buoy_identifier
    license: BSD
    shortdesc: buoy_identifier
    source: http://seabee3-ros-pkg.googlecode.com/svn/trunk/cturtle/buoy_identifier
    website: http://ros.org/wiki/buoy_identifier
  circle_finder:
    author: !!python/unicode 'Kaylyn Sung'
    deps:
    - opencv2
    - roscpp
    - base_libs
    - cv_bridge
    - image_transport
    - geometry_msgs
    desc: circle_finder
    license: BSD
    shortdesc: circle_finder
    source: http://seabee3-ros-pkg.googlecode.com/svn/trunk/cturtle/circle_finder
    website: http://ros.org/wiki/circle_finder
  color_classifier:
    author: !!python/unicode 'Edward T. Kaszubski'
    deps:
    - roscpp
    - std_msgs
    - opencv2
    - image_geometry
    - cv_bridge
    - image_transport
    - dynamic_reconfigure
    - driver_base
    - base_libs
    - libvml
    desc: color_classifier
    license: BSD
    shortdesc: color_classifier
    source: http://seabee3-ros-pkg.googlecode.com/svn/trunk/cturtle/color_classifier
    website: http://code.google.com/p/seabee3-ros-pkg/wiki/color_classifier
  color_segmenter:
    author: !!python/unicode 'Michael Montalbo'
    deps:
    - image_transport
    - sensor_msgs
    - opencv2
    - cv_bridge
    - roscpp
    - std_msgs
    - driver_base
    - dynamic_reconfigure
    - base_libs
    desc: color_segmenter
    license: BSD
    shortdesc: color_segmenter
    source: http://seabee3-ros-pkg.googlecode.com/svn/trunk/cturtle/color_segmenter
    website: http://ros.org/wiki/color_segmenter
  dead_reckoning_odom:
    author: !!python/unicode 'Edward T. Kaszubski'
    deps:
    - roscpp
    - nav_msgs
    - seabee3_driver_base
    - xsens_node
    - geometry_msgs
    - base_libs
    - std_srvs
    - seabee3_common
    desc: dead_reckoning_odom
    license: BSD
    shortdesc: dead_reckoning_odom
    source: http://seabee3-ros-pkg.googlecode.com/svn/trunk/cturtle/dead_reckoning_odom
    website: http://ros.org/wiki/dead_reckoning_odom
  demo1_dhruv:
    author: !!python/unicode 'root'
    deps:
    - roscpp
    - base_libs
    desc: demo1_dhruv
    license: BSD
    shortdesc: demo1_dhruv
    source: http://seabee3-ros-pkg.googlecode.com/svn/trunk/cturtle/demo1/demo1_dhruv
    website: http://ros.org/wiki/demo1_dhruv
  demo1_gerow:
    author: !!python/unicode 'Mike Gerow'
    deps:
    - roscpp
    - base_libs
    desc: demo1_gerow
    license: BSD
    shortdesc: demo1_gerow
    source: http://seabee3-ros-pkg.googlecode.com/svn/trunk/cturtle/demo1/demo1_gerow
    website: http://ros.org/wiki/demo1_gerow
  demo1_kaszubski:
    author: !!python/unicode 'Edward T. Kaszubski'
    deps:
    - base_libs
    desc: demo1_kaszubski
    license: BSD
    shortdesc: demo1_kaszubski
    source: http://seabee3-ros-pkg.googlecode.com/svn/trunk/cturtle/demo1/demo1_kaszubski
    website: http://ros.org/wiki/demo1_kaszubski
  demo1_sagar:
    author: !!python/unicode 'Sagar Pandya'
    deps:
    - base_libs
    desc: demo1_sagar
    license: BSD
    shortdesc: demo1_sagar
    source: http://seabee3-ros-pkg.googlecode.com/svn/trunk/cturtle/demo1/demo1_sagar
    website: http://ros.org/wiki/demo1_sagar
  demo1_sung:
    author: !!python/unicode 'Kaylyn Sung'
    deps:
    - roscpp
    - base_libs
    desc: demo1_sung
    license: BSD
    shortdesc: demo1_sung
    source: http://seabee3-ros-pkg.googlecode.com/svn/trunk/cturtle/demo1/demo1_sung
    website: http://ros.org/wiki/demo1_sung
  demo1_tasha:
    author: !!python/unicode 'uscr'
    deps:
    - roscpp
    - base_image_proc
    desc: demo1_tasha
    license: BSD
    shortdesc: demo1_tasha
    source: http://seabee3-ros-pkg.googlecode.com/svn/trunk/cturtle/demo1/demo1_tasha
    website: http://ros.org/wiki/demo1_tasha
  filtered_odom:
    author: !!python/unicode 'Edward T. Kaszubski'
    deps:
    - geometry_msgs
    - roscpp
    - tf
    - bfl
    desc: filtered_odom
    license: BSD
    shortdesc: filtered_odom
    source: http://seabee3-ros-pkg.googlecode.com/svn/trunk/cturtle/filtered_odom
    website: http://ros.org/wiki/filtered_odom
  flsl:
    author: !!python/unicode 'Edward T. Kaszubski'
    deps:
    - roscpp
    - tf
    - geometry_msgs
    - std_msgs
    - opencv2
    - localization_defs
    - landmark_map_server
    - landmark_finder
    desc: Filtered Landmark Sampling for Localization
    license: BSD
    shortdesc: Filtered Landmark Sampling for Localization
    source: http://seabee3-ros-pkg.googlecode.com/svn/trunk/cturtle/flsl
    website: http://ros.org/wiki/flsl
  image_matcher:
    author: !!python/unicode 'Michael Wei'
    deps:
    - roscpp
    - sensor_msgs
    - image_transport
    - opencv2
    - cv_bridge
    - yaml_cpp
    - base_libs
    desc: image_matcher
    license: BSD
    shortdesc: image_matcher
    source: http://seabee3-ros-pkg.googlecode.com/svn/trunk/cturtle/image_matcher
    website: http://ros.org/wiki/image_matcher
  image_sync:
    author: !!python/unicode 'Edward T. Kaszubski'
    deps:
    - image_transport
    - roscpp
    - sensor_msgs
    desc: image_sync
    license: BSD
    shortdesc: image_sync
    source: http://seabee3-ros-pkg.googlecode.com/svn/trunk/cturtle/image_sync
    website: http://ros.org/wiki/image_sync
  jaus_adapter:
    author: !!python/unicode 'John O''Hollaren, Edward T. Kaszubski'
    deps:
    - roscpp
    - geometry_msgs
    - sensor_msgs
    - xsens_node
    desc: jaus_adapter
    license: BSD
    shortdesc: jaus_adapter
    source: http://seabee3-ros-pkg.googlecode.com/svn/trunk/cturtle/jaus_adapter
    website: http://ros.org/wiki/jaus_adapter
  landmark_finder:
    author: !!python/unicode 'Edward T. Kaszubski'
    deps:
    - roscpp
    - rectangle_finder
    - color_segmenter
    - opencv2
    - tf
    - geometry_msgs
    - localization_defs
    - visualization_msgs
    - image_transport
    desc: landmark_finder
    license: BSD
    shortdesc: landmark_finder
    source: http://seabee3-ros-pkg.googlecode.com/svn/trunk/cturtle/landmark_finder
    website: http://ros.org/wiki/landmark_finder
  landmark_map_server:
    author: !!python/unicode 'Edward T. Kaszubski'
    deps:
    - roscpp
    - localization_defs
    - yaml_cpp
    - opencv2
    - visualization_msgs
    - base_libs
    desc: landmark_map_server
    license: BSD
    shortdesc: landmark_map_server
    source: http://seabee3-ros-pkg.googlecode.com/svn/trunk/cturtle/landmark_map_server
    website: http://ros.org/wiki/landmark_map_server
  landmark_projector:
    author: !!python/unicode 'Mike Gerow'
    deps:
    - base_libs
    - roscpp
    - geometry_msgs
    - opencv2
    - localization_defs
    - color_segmenter
    desc: landmark_projector
    license: BSD
    shortdesc: landmark_projector
    source: http://seabee3-ros-pkg.googlecode.com/svn/trunk/cturtle/landmark_projector
    website: http://ros.org/wiki/landmark_projector
  libseabee3_beestem:
    author: !!python/unicode 'Edward T. Kaszubski'
    deps:
    - seabee3_common
    desc: libseabee3_beeste
    license: BSD
    shortdesc: libseabee3_beestem
    source: http://seabee3-ros-pkg.googlecode.com/svn/trunk/cturtle/libseabee3_beestem
    website: http://ros.org/wiki/libseabee3_beestem
  libvml:
    author: !!python/unicode 'Edward T. Kaszubski'
    deps: []
    desc: libvml
    license: BSD
    shortdesc: libvml
    source: http://seabee3-ros-pkg.googlecode.com/svn/trunk/cturtle/libvml
    website: http://ros.org/wiki/libvml
  libxsens:
    author: !!python/unicode 'Edward T. Kaszubski'
    deps: []
    desc: libxsens
    license: BSD
    shortdesc: libxsens
    source: http://seabee3-ros-pkg.googlecode.com/svn/trunk/cturtle/libxsens
    website: http://ros.org/wiki/libxsens
  localization_defs:
    author: !!python/unicode 'Edward T. Kaszubski'
    deps:
    - roscpp
    - opencv2
    - sonar_node
    - visualization_msgs
    - geometry_msgs
    - tf
    - base_libs
    desc: localization_defs
    license: BSD
    shortdesc: localization_defs
    source: http://seabee3-ros-pkg.googlecode.com/svn/trunk/cturtle/localization_defs
    website: http://ros.org/wiki/localization_defs
  rectangle_finder:
    author: !!python/unicode 'Michael Wei'
    deps:
    - geometry_msgs
    - base_libs
    desc: rectangle_finder
    license: BSD
    shortdesc: rectangle_finder
    source: http://seabee3-ros-pkg.googlecode.com/svn/trunk/cturtle/rectangle_finder
    website: http://ros.org/wiki/rectangle_finder
  seabee3_common:
    author: !!python/unicode 'Edward T. Kaszubski'
    deps:
    - geometry_msgs
    - control_toolbox
    desc: seabee3_common
    license: BSD
    shortdesc: seabee3_common
    source: http://seabee3-ros-pkg.googlecode.com/svn/trunk/cturtle/seabee3_common
    website: http://ros.org/wiki/seabee3_common
  seabee3_dashboard:
    author: !!python/unicode 'Michael Montalbo'
    deps:
    - opencv2
    - cv_bridge
    - sensor_msgs
    - stereo_msgs
    - roscpp
    - image_transport
    - seabee3_driver_base
    desc: seabee3_dashboard
    license: BSD
    shortdesc: seabee3_dashboard
    source: http://seabee3-ros-pkg.googlecode.com/svn/trunk/cturtle/seabee3_dashboard
    website: http://ros.org/wiki/seabee3_dashboard
  seabee3_demo:
    author: !!python/unicode 'Edward T. Kaszubski'
    deps:
    - roscpp
    - base_libs
    - seabee3_common
    - xsens_node
    - seabee3_teleop
    - dead_reckoning_odom
    desc: seabee3_demo
    license: BSD
    shortdesc: seabee3_demo
    source: http://seabee3-ros-pkg.googlecode.com/svn/trunk/cturtle/seabee3_demo
    website: http://ros.org/wiki/seabee3_demo
  seabee3_driver:
    author: !!python/unicode 'Edward T. Kaszubski'
    deps:
    - roscpp
    - control_toolbox
    - seabee3_driver_base
    - geometry_msgs
    - std_msgs
    - base_libs
    - std_srvs
    - seabee3_common
    desc: seabee3_driver
    license: BSD
    shortdesc: seabee3_driver
    source: http://seabee3-ros-pkg.googlecode.com/svn/trunk/cturtle/seabee3_driver
    website: http://ros.org/wiki/seabee3_driver
  seabee3_driver_base:
    author: !!python/unicode 'Edward T. Kaszubski'
    deps:
    - libseabee3_beestem
    - base_libs
    desc: seabee3_driver_base
    license: BSD
    shortdesc: seabee3_driver_base
    source: http://seabee3-ros-pkg.googlecode.com/svn/trunk/cturtle/seabee3_driver_base
    website: http://ros.org/wiki/seabee3_driver_base
  seabee3_launch:
    author: !!python/unicode 'Edward T. Kaszubski'
    deps:
    - seabee3_driver_base
    - seabee3_driver
    - seabee3_teleop
    - sparse_stereo
    - image_sync
    - image_server
    - xsens_node
    - seabee3_physics
    - color_classifier
    - landmark_map_server
    - dead_reckoning_odom
    desc: seabee3_launch
    license: BSD
    shortdesc: seabee3_launch
    source: http://seabee3-ros-pkg.googlecode.com/svn/trunk/cturtle/seabee3_launch
    website: http://ros.org/wiki/seabee3_launch
  seabee3_mission_control:
    author: !!python/unicode 'Michael Montalbo'
    deps:
    - roscpp
    - seabee3_driver
    - seabee3_driver_base
    - geometry_msgs
    - landmark_finder
    - landmark_map_server
    - localization_defs
    - waypoint_controller
    desc: seabee3_mission_control
    license: BSD
    shortdesc: seabee3_mission_control
    source: http://seabee3-ros-pkg.googlecode.com/svn/trunk/cturtle/seabee3_mission_control
    website: http://ros.org/wiki/seabee3_mission_control
  seabee3_physics:
    author: !!python/unicode 'Randolph Voorhies'
    deps:
    - roscpp
    - std_msgs
    - bullet
    - tf
    - base_libs
    - seabee3_driver_base
    - seabee3_common
    desc: seabee3_physics
    license: BSD
    shortdesc: seabee3_physics
    source: http://seabee3-ros-pkg.googlecode.com/svn/trunk/cturtle/seabee3_physics
    website: http://ros.org/wiki/seabee3_physics
  seabee3_teleop:
    author: !!python/unicode 'Edward T. Kaszubski'
    deps:
    - roscpp
    - geometry_msgs
    - joy
    - tf
    - seabee3_driver_base
    - base_libs
    desc: seabee3_teleop
    license: BSD
    shortdesc: seabee3_teleop
    source: http://seabee3-ros-pkg.googlecode.com/svn/trunk/cturtle/seabee3_teleop
    website: http://ros.org/wiki/seabee3_teleop
  sonar_node:
    author: !!python/unicode 'Edward T. Kaszubski'
    deps:
    - roscpp
    desc: sonar_node
    license: BSD
    shortdesc: sonar_node
    source: http://seabee3-ros-pkg.googlecode.com/svn/trunk/cturtle/sonar_node
    website: http://ros.org/wiki/sonar_node
  sparse_stereo:
    author: !!python/unicode 'Edward T. Kaszubski'
    deps:
    - roscpp
    - opencv2
    - sensor_msgs
    - image_transport
    - cv_bridge
    - dynamic_reconfigure
    - driver_base
    - image_geometry
    - base_libs
    desc: sparse_stereo
    license: BSD
    shortdesc: sparse_stereo
    source: http://seabee3-ros-pkg.googlecode.com/svn/trunk/cturtle/sparse_stereo
    website: http://ros.org/wiki/sparse_stereo
  stereo_image_odom:
    author: !!python/unicode 'Michael Wei'
    deps:
    - roscpp
    - sensor_msgs
    - geometry_msgs
    - image_transport
    - opencv2
    - cv_bridge
    desc: stereo_image_odom
    license: BSD
    shortdesc: stereo_image_odom
    source: http://seabee3-ros-pkg.googlecode.com/svn/trunk/cturtle/stereo_image_odom
    website: http://ros.org/wiki/stereo_image_odom
  waypoint_controller:
    author: !!python/unicode 'Edward T. Kaszubski'
    deps:
    - roscpp
    - tf
    - opencv2
    - flsl
    - localization_defs
    - seabee3_driver
    - geometry_msgs
    - xsens_node
    desc: waypoint_controller
    license: BSD
    shortdesc: waypoint_controller
    source: http://seabee3-ros-pkg.googlecode.com/svn/trunk/cturtle/waypoint_controller
    website: http://ros.org/wiki/waypoint_controller
  xsens_node:
    author: !!python/unicode 'Edward T. Kaszubski'
    deps:
    - roscpp
    - geometry_msgs
    - sensor_msgs
    - std_msgs
    - std_srvs
    - tf
    - libxsens
    - base_libs
    desc: xsens_node
    license: BSD
    shortdesc: xsens_node
    source: http://seabee3-ros-pkg.googlecode.com/svn/trunk/cturtle/xsens_node
    website: http://ros.org/wiki/xsens_node
segway-rmp-ros-pkg:
  iri_segway_rmp200:
    author: !!python/unicode 'William Woodall'
    deps:
    - iricomms
    - iriutils
    desc: This is the IRI's Segway RMP200 Library which is brought in and compiled
      under ROS from an external SVN repository.  While this package is maintained
      by William Woodall and licensed BSD, the library it downloads and builds from
      http://wikiri.upc.es/index.php/Segway_RMP_200_driver is licensed LGPL.
    license: BSD
    shortdesc: iri_segway_rmp200
    source: https://github.com/wjwwood/segway-rmp-ros-pkg.git
    website: http://ros.org/wiki/iri_segway_rmp200
  iri_segway_rmp400:
    author: !!python/unicode 'William Woodall'
    deps:
    - iri_segway_rmp200
    - iricomms
    - iriutils
    desc: This is the IRI's Segway RMP400 Library which is brought in and compiled
      under ROS from an external SVN repository.  While this package is maintained
      by William Woodall and licensed BSD, the library it downloads and builds from
      http://wikiri.upc.es/index.php/Segway_RMP_400_driver is licensed LGPL.
    license: BSD
    shortdesc: iri_segway_rmp400
    source: https://github.com/wjwwood/segway-rmp-ros-pkg.git
    website: http://ros.org/wiki/iri_segway_rmp400
  iricomms:
    author: !!python/unicode 'William Woodall'
    deps:
    - iriutils
    desc: This is IRI's Communication library which is brought in and compiled in
      ROS from an external SVN Repository. While this package is maintained by William
      Woodall and licensed BSD, the library it downloads and builds from http://wikiri.upc.es/index.php/Communications_library
      is licensed LGPL.
    license: BSD
    shortdesc: This is IRI's Communication library which is brought in and compiled
      in ROS from an extern...
    source: https://github.com/wjwwood/segway-rmp-ros-pkg.git
    website: http://ros.org/wiki/iricomms
  iriutils:
    author: !!python/unicode 'William Woodall'
    deps: []
    desc: This is the IRI's Utilities Library which is brought in and compiled under
      ROS from an external SVN repository.  While this package is maintained by William
      Woodall and licensed BSD, the library it downloads and builds from http://wikiri.upc.es/index.php/Utilities_library
      is licensed LGPL.
    license: BSD
    shortdesc: This is the IRI's Utilities Library which is brought in and compiled
      under ROS from an ext...
    source: https://github.com/wjwwood/segway-rmp-ros-pkg.git
    website: http://ros.org/wiki/iriutils
  joy2twist:
    author: !!python/unicode 'William Woodall'
    deps:
    - rospy
    - joy
    - geometry_msgs
    desc: joy2twist
    license: BSD
    shortdesc: joy2twist
    source: https://github.com/wjwwood/segway-rmp-ros-pkg.git
    website: http://ros.org/wiki/joy2twist
  segway_rmp200:
    author: !!python/unicode 'William Woodall'
    deps:
    - roscpp
    - tf
    - geometry_msgs
    - nav_msgs
    - iriutils
    - iricomms
    - iri_segway_rmp200
    desc: segway_rmp200
    license: BSD
    shortdesc: segway_rmp200
    source: https://github.com/wjwwood/segway-rmp-ros-pkg.git
    website: http://ros.org/wiki/segway_rmp200
  segway_rmp200_demos:
    author: !!python/unicode 'William Woodall'
    deps:
    - segway_rmp200
    - joy2twist
    desc: segway_rmp200_demos
    license: BSD
    shortdesc: segway_rmp200_demos
    source: https://github.com/wjwwood/segway-rmp-ros-pkg.git
    website: http://ros.org/wiki/segway_rmp200_demos
  segway_rmp400:
    author: !!python/unicode 'William Woodall'
    deps:
    - roscpp
    - tf
    - nav_msgs
    - iriutils
    - iricomms
    - iri_segway_rmp200
    - iri_segway_rmp400
    desc: segway_rmp400
    license: BSD
    shortdesc: segway_rmp400
    source: https://github.com/wjwwood/segway-rmp-ros-pkg.git
    website: http://ros.org/wiki/segway_rmp400
segway_rmp: {}
siue-ros-pkg:
  gps_node:
    author: !!python/unicode 'Nate Roney'
    deps:
    - std_msgs
    - roscpp
    - serial_port_node
    - rospy
    desc: gps_node
    license: GPL
    shortdesc: gps_node
    source: http://github.com/siue-cs/siue-ros-pkg.git
    website: http://ros.org/wiki/gps_node
  gumstix_cam_node:
    author: !!python/unicode 'Nate Roney'
    deps:
    - sensor_msgs
    - std_msgs
    - cv_bridge
    - roscpp
    desc: gumstix_cam_node
    license: GPL
    shortdesc: gumstix_cam_node
    source: http://github.com/siue-cs/siue-ros-pkg.git
    website: http://ros.org/wiki/v4l_cam_node
  marvin:
    author: !!python/unicode 'Nate Roney'
    deps:
    - roscpp
    - tf
    - gmapping
    - p2os_driver
    desc: marvin
    license: BSD
    shortdesc: marvin
    source: http://github.com/siue-cs/siue-ros-pkg.git
    website: http://ros.org/wiki/marvin
  pioneer_motors:
    author: !!python/unicode 'Nate Roney'
    deps:
    - rospy
    - std_msgs
    - p2os_driver
    desc: "A simple set of scripts to enable or disable the motors on a \n\t\tpioneer\
      \ robot when using p2os_driver."
    license: BSD
    shortdesc: pioneer_motors
    source: http://github.com/siue-cs/siue-ros-pkg.git
    website: http://ros.org/wiki/pioneer_motors
  serial_port_node:
    author: !!python/unicode 'Nate Roney'
    deps:
    - std_msgs
    - roscpp
    desc: serial_port
    license: BSD
    shortdesc: serial_port_node
    source: http://github.com/siue-cs/siue-ros-pkg.git
    website: http://ros.org/wiki/serial_port
  siue_pioneer2_configs:
    author: !!python/unicode 'mini'
    deps:
    - roscpp
    - tf
    - gmapping
    - p2os_driver
    desc: siue_pioneer2_configs
    license: BSD
    shortdesc: siue_pioneer2_configs
    source: http://github.com/siue-cs/siue-ros-pkg.git
    website: http://ros.org/wiki/siue_pioneer2_configs
  taz:
    author: !!python/unicode 'mini'
    deps:
    - roscpp
    - tf
    - gmapping
    - p2os_driver
    desc: taz
    license: BSD
    shortdesc: taz
    source: http://github.com/siue-cs/siue-ros-pkg.git
    website: http://ros.org/wiki/taz
  usb_camera_node:
    author: !!python/unicode 'Nate Roney'
    deps:
    - sensor_msgs
    - std_msgs
    - opencv2
    - cv_bridge
    - roscpp
    desc: usb_camera_node
    license: GPL
    shortdesc: usb_camera_node
    source: http://github.com/siue-cs/siue-ros-pkg.git
    website: http://ros.org/wiki/usb_camera_node
  wiimote_utils:
    author: !!python/unicode 'Nate Roney'
    deps:
    - rospy
    - wiimote
    - std_msgs
    desc: Utilities to be used with the wiimote
    license: BSD
    shortdesc: wiimote_utils
    source: http://github.com/siue-cs/siue-ros-pkg.git
    website: http://ros.org/wiki/wiimote_utils
skiller:
  skiller:
    author: !!python/unicode 'Tim Niemueller'
    deps:
    - roscpp
    - roslib
    - lua_utils
    - roslua
    - actionlib_lua
    - actionlib_msgs
    desc: "Skill Execution and Runtime. This is the mid-level for reactive behavior\n\
      \     entities (skills) of the behavior engine."
    license: GPLv2+
    shortdesc: "Skill Execution and Runtime. This is the mid-level for reactive behavior\n\
      \     entities (skills..."
    source: https://github.com/timn/ros-skiller.git
    website: http://ros.org/wiki/skiller
skillgui:
  skillgui:
    author: !!python/unicode 'Tim Niemueller'
    deps:
    - skiller
    - actionlib
    - actionlib_msgs
    desc: A GUI for controlling skiller.
    license: BSD
    shortdesc: A GUI for controlling skiller.
    source: https://github.com/timn/ros-skillgui.git
    website: http://ros.org/wiki/skillgui
smart-robotics-ros-pkg:
  maximus_2dnav:
    author: !!python/unicode 'Joffrey'
    deps:
    - move_base
    - maximus_position
    - maximus_sensors
    desc: maximus_2dnav
    license: BSD
    shortdesc: maximus_2dnav
    source: https://github.com/JBot/smart-robotics-ros-pkg.git
    website: http://ros.org/wiki/maximus_2dnav
  maximus_position:
    author: !!python/unicode 'Joffrey'
    deps:
    - geometry_msgs
    - std_msgs
    - roscpp
    - nav_msgs
    - visualization_msgs
    - sensor_msgs
    - tf
    - joy
    - move_base_msgs
    - actionlib
    desc: maximus_position
    license: BSD
    shortdesc: maximus_position
    source: https://github.com/JBot/smart-robotics-ros-pkg.git
    website: http://ros.org/wiki/maximus_position
  maximus_sensors:
    author: !!python/unicode 'Joffrey'
    deps:
    - avr_bridge
    - geometry_msgs
    - std_msgs
    - roscpp
    - nav_msgs
    - visualization_msgs
    - sensor_msgs
    - tf
    - joy
    - move_base_msgs
    - actionlib
    - laser_geometry
    desc: maximus_sensors
    license: BSD
    shortdesc: maximus_sensors
    source: https://github.com/JBot/smart-robotics-ros-pkg.git
    website: http://ros.org/wiki/maximus_sensors
sr-ros-interface:
  cyberglove:
    author: !!python/unicode 'Ugo Cupcic'
    deps:
    - roslib
    - rospy
    - roscpp
    - std_msgs
    - sensor_msgs
    - diagnostic_msgs
    - tinyxml
    - cereal_port
    desc: "This is a generic ROS interface to the Cyberglove from Immersion. It reads\
      \ data from the Cyberglove, calibrate them\n     and streams them to two different\
      \ /joint_states topic: calibrated and raw data."
    license: GPL
    shortdesc: Cyberglove ROS interface
    source: lp:sr-ros-interface
    website: http://ros.org/wiki/cyberglove
  sr_control_gui:
    author: !!python/unicode 'Sacha Aury, Ugo Cupcic / ugo@shadowrobot.com, contact@shadowrobot.com'
    deps:
    - rospy
    - sr_hand
    - sensor_msgs
    - cyberglove
    desc: sr_control_gui is a graphic application which integrates anything needed
      by the end-user to control the hand.
    license: GPL
    shortdesc: Control interface for Shadow hardware
    source: lp:sr-ros-interface
    website: http://www.shadowrobot.com
  sr_convenient_dependencies:
    author: !!python/unicode 'Ugo Cupcic / ugo@shadowrobot.com, contact@shadowrobot.com'
    deps:
    - rviz
    - gazebo_worlds
    - pr2_gazebo_plugins
    - robot_monitor
    - diagnostic_aggregator
    - robot_state_publisher
    - pr2_mechanism_controllers
    desc: This is an empty package used for a convenient building of our packages.
    license: GPL
    shortdesc: sr_convenient_dependencies
    source: lp:sr-ros-interface
    website: http://www.shadowrobot.com
  sr_hand:
    author: !!python/unicode 'Ugo Cupcic / ugo@shadowrobot.com, contact@shadowrobot.com'
    deps:
    - roslib
    - roscpp
    - rospy
    - std_msgs
    - std_srvs
    - sensor_msgs
    - sr_robot_msgs
    - diagnostic_msgs
    - dynamic_reconfigure
    - gazebo
    desc: "This is a ROS interface to the Shadow Robot's robotic hand. It\n     contains\
      \ both an interface to the real hand (communicating via\n     a CAN interface)\
      \ and a simulated version of the hand. It also\n     contains an interface to\
      \ Shadow Robot's muscle arm."
    license: GPL
    shortdesc: Shadow Robot Hand ROS interface
    source: lp:sr-ros-interface
    website: http://www.shadowrobot.com
  sr_remappers:
    author: !!python/unicode 'Ugo Cupcic'
    deps:
    - roscpp
    - rospy
    - std_msgs
    - sensor_msgs
    - sr_robot_msgs
    - cyberglove
    desc: "Contains different remappers to remap data coming from an\n     actuator\
      \ such as the cyberglove (Immersion) to Shadow Robot's\n     hand. It also contains\
      \ remapper to remap data coming from the\n     Shadow hand to an other mechanism\
      \ such as the cybergrasp\n     (Immersion)."
    license: BSD
    shortdesc: Remaps data from and to the Shadow Robot hardware
    source: lp:sr-ros-interface
    website: http://ros.org/wiki/sr_remappers
  sr_robot_msgs:
    author: !!python/unicode 'Ugo Cupcic/ugo@shadowrobot.com'
    deps:
    - roslib
    desc: sr_robot_msgs contains some messages used in the shadow_robot stack.
    license: BSD
    shortdesc: sr_robot_msgs
    source: lp:sr-ros-interface
    website: http://ros.org/wiki/sr_robot_msgs
  sr_tactile_sensors:
    author: !!python/unicode 'Ugo Cupcic'
    deps:
    - roscpp
    - std_msgs
    - sr_robot_msgs
    - gazebo_plugins
    desc: An interface to the tactile sensors used in the Shadow Dextrous Hand. Also
      Contains a virtual set of sensors.
    license: BSD
    shortdesc: sr_tactile_sensors
    source: lp:sr-ros-interface
    website: http://ros.org/wiki/sr_tactile_sensors
  sr_tests:
    author: !!python/unicode 'Ugo Cupcic'
    deps:
    - roscpp
    - sr_hand
    - cyberglove
    - sr_tactile_sensors
    - sr_remappers
    - sr_control_gui
    - sr_robot_msgs
    desc: sr_tests
    license: BSD
    shortdesc: sr_tests
    source: lp:sr-ros-interface
    website: http://ros.org/wiki/sr_tests
  sr_utilities:
    author: !!python/unicode 'Ugo Cupcic'
    deps:
    - sensor_msgs
    - rospy
    desc: sr_utilities
    license: BSD
    shortdesc: sr_utilities
    source: lp:sr-ros-interface
    website: http://ros.org/wiki/sr_utilities
  threeD_mouse:
    author: !!python/unicode 'Ugo Cupcic'
    deps:
    - roscpp
    - rospy
    - geometry_msgs
    desc: threeD_mouse
    license: BSD
    shortdesc: threeD_mouse
    source: lp:sr-ros-interface
    website: http://ros.org/wiki/threeD_mouse
stanford-ros-pkg:
  ancient_powercube:
    author: !!python/unicode 'Morgan Quigley'
    deps:
    - serial_port
    desc: "We have this ancient blue Amtec powercube sitting around our lab that \n\
      \    still works fine. I doubt there are many other working specimens of this\n\
      \    vintage, so I'm putting it in its own package, since I believe the RS-232\n\
      \    protocol is complete different from their newer products."
    license: BSD
    shortdesc: ancient_powercube
    source: details.php?name=roscpp
    website: https://stanford-ros-pkg.googlecode.com/svn/trunk/ancient_powercube
  cart_interp:
    author: !!python/unicode 'David Mandle'
    deps:
    - roscpp
    - rospy
    - geometry_msgs
    - std_msgs
    - actionlib
    - actionlib_msgs
    - teleop_controllers
    desc: cart_interp
    license: BSD
    shortdesc: cart_interp
    source: https://stanford-ros-pkg.googlecode.com/svn/trunk/chessbot/cart_interp
    website: http://ros.org/wiki/cart_interp
  chessbot:
    author: !!python/unicode 'David Mandle'
    deps:
    - roscpp
    - rospy
    - geometry_msgs
    - std_msgs
    - actionlib
    - actionlib_msgs
    - cart_interp
    - pr2_controllers_msgs
    - checkerboard_pose
    desc: chessbot
    license: BSD
    shortdesc: chessbot
    source: https://stanford-ros-pkg.googlecode.com/svn/trunk/chessbot/chessbot
    website: http://ros.org/wiki/chessbot
  graycode_scanner:
    author: !!python/unicode 'David Mandle'
    deps:
    - rospy
    - opencv2
    - cv_bridge
    - image_geometry
    - projector
    - sensor_msgs
    - geometry_msgs
    desc: picoscanner
    license: BSD
    shortdesc: graycode_scanner
    source: https://stanford-ros-pkg.googlecode.com/svn/trunk/3dscanning/graycode_scanner
    website: http://ros.org/wiki/graycode_scanner
  locloc_erratic:
    author: !!python/unicode 'Morgan Quigley and Brian Chung'
    deps:
    - wifi_sniffer
    desc: Low-cost localization experiments on an erratic robot
    license: BSD
    shortdesc: locloc_erratic
    source: details.php?name=roscpp
    website: https://stanford-ros-pkg.googlecode.com/svn/trunk/low_cost_localization/locloc_erratic
  multiview:
    author: !!python/unicode 'Jiahui Shi'
    deps:
    - opencv2
    - roscpp
    - prosilica_camera
    - polled_camera
    - tf
    - ancient_powercube
    - cv_bridge
    - sensor_msgs
    - std_msgs
    desc: Object recognition from multiple views
    license: BSD
    shortdesc: Object recognition from multiple views
    source: https://stanford-ros-pkg.googlecode.com/svn/trunk/multiview
    website: http://ros.org/wiki/multiview
  openarms:
    author: !!python/unicode 'Morgan Quigley mquigley@cs.stanford.edu and Alan Asbeck
      aasbeck@stanford.edu'
    deps:
    - roscpp
    - eigen
    - serial_port
    - tf
    - joy
    - wiimote
    - robot_state_publisher
    - sensor_msgs
    - geometry_msgs
    - std_msgs
    - visualization_msgs
    desc: Concepts, ideas, and experiments on low-cost manipulator design and control.
    license: BSD
    shortdesc: Concepts, ideas, and experiments on low-cost manipulator design and
      control.
    source: https://stanford-ros-pkg.googlecode.com/svn/trunk/openarms
    website: http://ai.stanford.edu/~mquigley
  pancakebot:
    author: !!python/unicode 'Morgan Quigley mquigley@cs.stanford.edu, Alan Asbeck
      aasbeck@stanford.edu'
    deps:
    - roscpp
    - openarms
    - camera1394
    - opencv2
    - cv_bridge
    - tf
    - joy
    - robot_state_publisher
    - sensor_msgs
    - geometry_msgs
    - std_msgs
    - visualization_msgs
    desc: "An application of the openarms hardware/software stack which hopes to\n\
      \    someday make delicious pancakes."
    license: BSD
    shortdesc: pancakebot makes pancakes for you
    source: https://stanford-ros-pkg.googlecode.com/svn/trunk/pancakebot
    website: http://ai.stanford.edu/~mquigley
  projector:
    author: !!python/unicode 'David Mandle'
    deps:
    - rospy
    - opencv2
    - cv_bridge
    - sensor_msgs
    desc: projector
    license: BSD
    shortdesc: projector
    source: https://stanford-ros-pkg.googlecode.com/svn/trunk/3dscanning/projector
    website: http://ros.org/wiki/projector
  projector_calibration:
    author: !!python/unicode 'David Mandle'
    deps:
    - rospy
    - opencv2
    - cv_bridge
    - sensor_msgs
    - image_geometry
    - projector
    desc: projector_calibration
    license: BSD
    shortdesc: projector_calibration
    source: https://stanford-ros-pkg.googlecode.com/svn/trunk/3dscanning/projector_calibration
    website: http://ros.org/wiki/projector_calibration
  projector_camera_calibration:
    author: !!python/unicode 'David Mandle'
    deps:
    - rospy
    - opencv2
    - cv_bridge
    - sensor_msgs
    - image_geometry
    - projector
    desc: projector_camera_calibration
    license: BSD
    shortdesc: projector_camera_calibration
    source: https://stanford-ros-pkg.googlecode.com/svn/trunk/3dscanning/projector_camera_calibration
    website: http://ros.org/wiki/projector_camera_calibration
  recyclerbot:
    author: !!python/unicode 'Jiahui Shi jiahui@stanford.edu'
    deps:
    - roscpp
    - rospy
    - rosbag
    - tf
    - teleop_controllers
    - std_srvs
    - std_msgs
    - sensor_msgs
    - geometry_msgs
    - visualization_msgs
    - kinematics_msgs
    - move_arm_msgs
    - actionlib
    - actionlib_msgs
    - pr2_msgs
    - pr2_controllers_msgs
    - pr2_mechanism_msgs
    - simple_Jtranspose_controller
    desc: recyclerbot
    license: BSD
    shortdesc: recyclerbot
    source: https://stanford-ros-pkg.googlecode.com/svn/trunk/recyclerbot
    website: http://ros.org/wiki/recyclerbot
  sortbot:
    author: !!python/unicode 'Dave Jackson'
    deps:
    - rospy
    - sensor_msgs
    - geometry_msgs
    - std_msgs
    - visualization_msgs
    - pr2_controllers_msgs
    - actionlib
    desc: AWESUM
    license: BSD
    shortdesc: AWESUM
    source: details.php?name=roscpp
    website: https://stanford-ros-pkg.googlecode.com/svn/trunk/sortbot
  spacepoint:
    author: !!python/unicode 'Morgan Quigley mquigley@cs.stanford.edu, wrapping code
      by Nirav Patel'
    deps:
    - roscpp
    - rospy
    - tf
    - geometry_msgs
    desc: "A simple driver for the PNI spacepoint. The starting point for this driver\
      \ was Nirav Patel's spacepoint python module, which can be found here:\n\n \
      \   http://eclecti.cc/hardware/easy-absolute-orientation-pni-spacepoint-fusion-in-python"
    license: BSD
    shortdesc: PNI spacepoint driver
    source: https://stanford-ros-pkg.googlecode.com/svn/trunk/spacepoint
    website: http://ai.stanford.edu/~mquigley
  wifi_sniffer:
    author: !!python/unicode 'Morgan Quigley'
    deps:
    - tf
    - visualization_msgs
    - std_msgs
    - laser_geometry
    - nav_msgs
    - move_base_msgs
    desc: "Sniffs for nearby wifi access points and publishes the ssid and signal\n\
      \    strengths."
    license: GPL, as some of this package is derived from the Linux wireless tools
    shortdesc: wifi_sniffer
    source: details.php?name=roscpp
    website: https://stanford-ros-pkg.googlecode.com/svn/trunk/low_cost_localization/wifi_sniffer
starmac-ros-pkg:
  flyer_common:
    author: !!python/unicode 'Patrick Bouffard'
    deps:
    - tf
    - rospy
    - visualization_msgs
    - starmac_roshlib
    - rosh
    desc: Libraries and scripts specific to starmac_flyer. Launch files.
    license: BSD
    shortdesc: flyer_common
    source: https://bitbucket.org/bouffard/starmac-ros-pkg
    website: http://ros.org/wiki/flyer_common
  flyer_controller:
    author: !!python/unicode 'Patrick Bouffard'
    deps:
    - dynamic_reconfigure
    - driver_base
    - flyer_common
    - topic_tools
    - control_toolbox
    - nav_msgs
    - nodelet
    - pluginlib
    - joy
    - rospy
    desc: Control and teleoperation. High-level control manager and individual control
      modes.
    license: BSD
    shortdesc: flyer_controller
    source: https://bitbucket.org/bouffard/starmac-ros-pkg
    website: http://ros.org/wiki/flyer_controller
  flyer_est:
    author: !!python/unicode 'Patrick Bouffard'
    deps:
    - tf
    - geometry_msgs
    - diagnostic_updater
    - nav_msgs
    - nodelet
    - pluginlib
    - eigen
    desc: State estimation.
    license: BSD
    shortdesc: State estimation.
    source: https://bitbucket.org/bouffard/starmac-ros-pkg
    website: http://ros.org/wiki/flyer_est
  flyer_sim:
    author: !!python/unicode 'bouffard'
    deps:
    - rospy
    - nav_msgs
    - flyer_controller
    - starmac_roslib
    - tf
    desc: "This package provides tools to simulate a quadrotor's actuators and sensors\
      \ to allow for offline\n     development and make unit testing possible."
    license: BSD
    shortdesc: This package provides tools to simulate a quadrotor's actuators and
      sensors to allow for offl...
    source: https://bitbucket.org/bouffard/starmac-ros-pkg
    website: http://ros.org/wiki/flyer_sim
  starmac_controller_testing:
    author: !!python/unicode 'bouffard'
    deps:
    - starmac_roshlib
    - starmac_mpc_controller
    desc: starmac_controller_testing
    license: BSD
    shortdesc: starmac_controller_testing
    source: https://bitbucket.org/bouffard/starmac-ros-pkg
    website: http://ros.org/wiki/starmac_controller_testing
  starmac_kinect:
    author: !!python/unicode 'bouffard'
    deps:
    - pcl
    - tf
    - nodelet
    - pluginlib
    - message_filters
    - geometry_msgs
    - nav_msgs
    - visualization_msgs
    - openni_camera
    - sensor_msgs
    - opencv2
    - cv_bridge
    - roscpp
    - std_msgs
    - image_transport
    desc: State estimation and obstacle detection using 3D sensor output.
    license: BSD
    shortdesc: starmac_kinect
    source: https://bitbucket.org/bouffard/starmac-ros-pkg
    website: http://ros.org/wiki/flyer_kinect
  starmac_kinect_obstacle_avoidance:
    author: !!python/unicode 'bouffard'
    deps:
    - rospy
    - starmac_kinect
    - flyer_controller
    - starmac_roshlib
    - flyer_common
    - joy
    desc: starmac_kinect_obstacle_avoidance
    license: BSD
    shortdesc: starmac_kinect_obstacle_avoidance
    source: https://bitbucket.org/bouffard/starmac-ros-pkg
    website: http://ros.org/wiki/starmac_kinect_obstacle_avoidance
  starmac_robots_asctec:
    author: !!python/unicode 'Patrick Bouffard'
    deps:
    - std_srvs
    - control_toolbox
    - angles
    - sensor_msgs
    - dynamic_reconfigure
    - driver_base
    - asctec_msgs
    - flyer_common
    - flyer_controller
    desc: Bridge between starmac_flyer vehicle-agnostic code and the asctec_autopilot
      driver package
    license: BSD
    shortdesc: starmac_asctec_adapter
    source: https://bitbucket.org/bouffard/starmac-ros-pkg
    website: http://ros.org/wiki/asctec_adapter
  starmac_roshlib:
    author: !!python/unicode 'bouffard'
    deps:
    - rosh
    desc: "starmac_roshlib is intended to house any generic rosh-related code bits\
      \ used by rosh\n     scripts."
    license: BSD
    shortdesc: starmac_roshlib
    source: https://bitbucket.org/bouffard/starmac-ros-pkg
    website: http://ros.org/wiki/starmac_roshlib
  starmac_roslib:
    author: !!python/unicode 'Patrick Bouffard'
    deps:
    - visualization_msgs
    - rospy
    - std_msgs
    - tf
    desc: starmac_roslib contains no nodes, only library code
    license: BSD
    shortdesc: starmac_roslib
    source: https://bitbucket.org/bouffard/starmac-ros-pkg
    website: http://ros.org/wiki/starmac_roslib
  starmac_templates:
    author: !!python/unicode 'bouffard'
    deps:
    - nodelet
    - pluginlib
    - std_msgs
    - rospy
    - starmac_roslib
    - std_msgs
    desc: Templates/examples for various things, e.g. a C++ nodelet.
    license: BSD
    shortdesc: starmac_templates
    source: https://bitbucket.org/bouffard/starmac-ros-pkg
    website: http://ros.org/wiki/starmac_templates
  starmac_tools:
    author: !!python/unicode 'bouffard'
    deps:
    - rosbag
    - tf
    desc: Various tools, e.g. for loading bagfile data into Python or converting to
      MATLAB.
    license: BSD
    shortdesc: starmac_tools
    source: https://bitbucket.org/bouffard/starmac-ros-pkg
    website: http://ros.org/wiki/starmac_tools
  starmac_vicon_testing:
    author: !!python/unicode 'Patrick Bouffard'
    deps:
    - vicon_mocap
    - flyer_est
    - starmac_tools
    desc: starmac_vicon_testing
    license: BSD
    shortdesc: starmac_vicon_testing
    source: https://bitbucket.org/bouffard/starmac-ros-pkg
    website: http://ros.org/wiki/starmac_vicon_testing
  starmac_viz:
    author: !!python/unicode 'bouffard'
    deps:
    - tf
    - nav_msgs
    - starmac_roslib
    - flyer_controller
    desc: Visualization of quadrotor operations.
    license: BSD
    shortdesc: starmac_viz
    source: https://bitbucket.org/bouffard/starmac-ros-pkg
    website: http://ros.org/wiki/starmac_viz
  vicon_mocap:
    author: !!python/unicode 'Patrick Bouffard'
    deps:
    - tf
    - geometry_msgs
    - diagnostic_updater
    - starmac_roslib
    desc: vicon_mocap
    license: BSD
    shortdesc: vicon_mocap
    source: https://bitbucket.org/bouffard/starmac-ros-pkg
    website: http://ros.org/wiki/vicon_mocap
stereo_webcam:
  stereo_webcam:
    author: !!python/unicode 'Michael Koval/koval.michael@gmail.com'
    deps:
    - cv_bridge
    - dynamic_reconfigure
    - image_transport
    - opencv2
    - sensor_msgs
    desc: "Hardware and software synchronized cameras using physically modified\n\t\
      \tPS3 EyeToy cameras."
    license: BSD
    shortdesc: "Hardware and software synchronized cameras using physically modified\n\
      \t\tPS3 EyeToy cameras."
    source: details.php?name=camera_info_manager
    website: https://github.com/mkoval/stereo_webcam
surveyor:
  surveyor:
    author: !!python/unicode 'Rene Ladan'
    deps:
    - roscpp
    - opencv2
    - image_transport
    desc: Surveyor is a driver for the Surveyor Vision System camera.
    license: BSD
    shortdesc: Surveyor is a driver for the Surveyor Vision System camera.
    source: git://github.com/rene0/ros-surveyor.git
    website: http://www.surveyor.com/stereo/stereo_info.html
transflective_perception:
  transflective_perception:
    author: !!python/unicode 'Cody J Phillips'
    deps:
    - rospy
    - roscpp
    - std_msgs
    - pcl
    - opencv2
    - cv_bridge
    - sensor_msgs
    - rosbag
    - message_filters
    desc: perception_glass
    license: BSD
    shortdesc: transflective_perception
    source: https://mediabox.grasp.upenn.edu/svn/penn-ros-pkgs/transflective_perception/trunk/transflective_perception
    website: http://ros.org/wiki/transflective_perception
tuc-ros-pkg:
  kinect_utils:
    author: !!python/unicode 'Niko Suenderhauf, Peer Neubert'
    deps:
    - roscpp
    - rospy
    - kinect_camera
    - pcl
    - opencv2
    - cv_bridge
    - image_transport
    - visualization_msgs
    desc: This packages contains a node that processes the 3D point cloud provided
      by the kinect sensor to identify walls, obstacles, and the position and orientation
      of the sensor inside a corridor. The node generates a trajectory to navigate
      down the corridor.
    license: BSD
    shortdesc: kinect_utils
    source: https://borstel.etit.tu-chemnitz.de:8080/svn/tuc-ros-pkg/trunk/stacks/tuc_pelican/kinect_utils
    website: http://ros.org/wiki/kinect_utils
tum-ros-pkg:
  SnapMapICP:
    author: !!python/unicode 'Thomas Ruehr'
    deps:
    - pcl
    - nav_msgs
    - laser_geometry
    desc: SnapMapICP
    license: BSD
    shortdesc: SnapMapICP
    source: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/highlevel/SnapMapICP
    website: http://ros.org/wiki/SnapMapICP
  approach_table_tools:
    author: !!python/unicode ''
    deps:
    - rospy
    - tf
    - pr2_tuck_arms_action
    - opencv2
    - cv_bridge
    - tf
    - sensor_msgs
    - geometry_msgs
    - image_geometry
    - drive_base_action
    desc: approach_table_support
    license: BSD
    shortdesc: approach_table_support
    source: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/demos/ros_fall_school_2010/approach_table_tools
    website: http://ros.org/wiki/approach_table_support
  camera_calibration_standalone:
    author: !!python/unicode 'Radu Bogdan Rusu (rusu@cs.tum.edu)'
    deps:
    - opencv2
    - cv_bridge
    desc: Simple tools for stereo camera calibration (to be deprecated by dcam/ost
      from ros-pkg).
    license: BSD
    shortdesc: Simple tools for stereo camera calibration (to be deprecated by dcam/ost
      from ros-pkg).
    source: details.php?name=roscpp
    website: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/calibration/camera_calibration_standalone
  cognitive_perception:
    author: !!python/unicode 'Ulrich F Klank'
    deps:
    - vision_srvs
    - sensor_msgs
    - lo
    - pluginlib
    desc: "Cognitive Perception Server\n        \n         Perception interface to\
      \ highlevel planning  (kipla)"
    license: GPL
    shortdesc: "Cognitive Perception Server\n        \n         Perception interface\
      \ to highlevel planning  (..."
    source: details.php?name=roscpp
    website: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/perception/cognitive_perception
  collada-dom:
    author: !!python/unicode 'Copyright 2004-2008 Sony Computer Entertianment Inc.'
    deps: []
    license: MIT License, refer to dom.txt in the "others" folder.
    shortdesc: ''
    source: list.php
    website: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/3rdparty/collada-dom
  comp_ehow:
    author: !!python/unicode 'Moritz Tenorth, Daniel Nyga'
    deps:
    - ias_knowledge_base
    - opencyc
    - mod_vis
    - rosjava
    - comp_cop
    desc: "Prolog routines for interfacing the ehow.com import functions developed\
      \ at TUM.\n     Code for the paper &quot;Understanding and Executing Instructions\
      \ for Everyday\n     Manipulation Tasks from the World Wide Web&quot;, written\
      \ by Moritz Tenorth\n     and Daniel Nyga (ICRA 2010)"
    license: GPL
    shortdesc: "Prolog routines for interfacing the ehow.com import functions developed\
      \ at TUM.\n     Code for..."
    source: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/knowledge/comp_ehow
    website: http://ros.org/wiki/comp_ehow
  comp_missingobj:
    author: !!python/unicode 'Moritz Tenorth'
    deps:
    - mod_probcog
    - prolog_perception
    - mod_vis
    - json_prolog
    desc: "comp_missingobj\n\n     files for a demo on 'objects missing on the table'"
    license: GPL
    shortdesc: comp_missingobj
    source: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/knowledge/comp_missingobj
    website: http://ias.in.tum.de/kb/wiki/index.php/comp_missingobj
  comp_objclusters:
    author: !!python/unicode 'Moritz Tenorth'
    deps:
    - comp_ros
    - comp_spatial
    desc: "comp_objclusters\n\n     Methods for inferring the most likely object class\
      \ a point cluster\n     belongs to.\n\n     Input:  a list of lo IDs and the\
      \ identifier of the desired object class\n     Output: the list of lo IDs, ordered\
      \ by the probability that the resp. cluster\n             belongs to the desired\
      \ object class"
    license: GPL
    shortdesc: comp_objclusters
    source: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/knowledge/comp_objclusters
    website: http://ias.in.tum.de/kb/wiki/index.php/comp_objclusters
  composite_node:
    author: !!python/unicode 'Radu Bogdan Rusu (rusu@cs.tum.edu)'
    deps:
    - std_msgs
    - opencv2
    - cv_bridge
    - flir_driver
    - stoc_driver
    - composite_swissranger
    - tf
    desc: 'A node for accessing 3 sensing devices at once: a STOC, a SR4k, and a FLIR
      thermal camera.'
    license: BSD
    shortdesc: 'A node for accessing 3 sensing devices at once: a STOC, a SR4k, and
      a FLIR thermal camera.'
    source: details.php?name=roscpp
    website: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/graveyard/composite/composite_node
  composite_swissranger:
    author: !!python/unicode 'Radu Bogdan Rusu (rusu@cs.tum.edu)'
    deps:
    - std_msgs
    - opencv2
    - cv_bridge
    desc: A library for accessing SwissRanger cameras though the use of libusbSR
    license: BSD
    shortdesc: A library for accessing SwissRanger cameras though the use of libusbSR
    source: details.php?name=roscpp
    website: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/graveyard/composite/composite_swissranger
  cop:
    author: !!python/unicode 'U. Klank'
    deps:
    - cognitive_perception
    - sensor_msgs
    - cop_sr4_plugins
    - cop_halcon_plugins
    - ias_gscam
    desc: ''
    license: GPL
    shortdesc: a package to start  cop with a defaul config
    source: details.php?name=pluginlib
    website: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/perception/cop
  cop_for_external_dependencies:
    author: !!python/unicode 'Ulrich Friedrich Klank'
    deps: []
    desc: "package to link against, if not the full functionality of cop is\n    \
      \ necessary, but still some interfaces should be used."
    license: GPL
    shortdesc: cop_for_external_dependencies
    source: details.php?name=cognitive_perception
    website: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/perception/cop_for_external_dependencies
  cop_halcon_plugins:
    author: !!python/unicode 'U. Klank'
    deps:
    - cognitive_perception
    - dxflib
    - libwww
    - collada-dom
    - cop_sr4_plugins
    - cop_ros_plugins
    - opencv2
    - cv_bridge
    - descr_class
    desc: ''
    license: GPL
    shortdesc: a package that provide basic functionality to cop
    source: details.php?name=pluginlib
    website: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/perception/cop_plugins/cop_halcon_plugins
  cop_ros_plugins:
    author: !!python/unicode 'U. Klank, Dejan Pangercic'
    deps:
    - opencv2
    - cognitive_perception
    - cv_bridge
    - ias_table_msgs
    desc: a package to provide a Sensor plugin for cop
    license: BSD
    shortdesc: a package that provides ros-vision functionality in cop
    source: details.php?name=pluginlib
    website: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/perception/cop_plugins/cop_ros_plugins
  cop_rviz_plugin:
    author: !!python/unicode 'U. Klank, Josh Faust'
    deps:
    - roscpp
    - simple_grasp_planner
    - vision_msgs
    - vision_srvs
    - std_msgs
    desc: rviz_shows_cop
    license: BSD
    shortdesc: rviz_shows_cop
    source: details.php?name=rviz
    website: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/stacks/ias_visualization/cop_rviz_plugin
  cop_sr4_plugins:
    author: !!python/unicode 'U. Klank'
    deps:
    - cognitive_perception
    - fixed_point_cloud_mapping
    - eigen
    desc: a package to provide a Sensor plugin for cop
    license: GPL
    shortdesc: a package that provide a cop Sensor plugin
    source: details.php?name=pluginlib
    website: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/perception/cop_plugins/cop_sr4_plugins
  cotesys_ros_grasping:
    author: !!python/unicode 'Gil Jones'
    deps:
    - move_arm
    - actionlib
    - actionlib_msgs
    - geometry_msgs
    - pr2_controllers_msgs
    - collision_environment_msgs
    - pr2_msgs
    - motion_planning_msgs
    - table_objects
    - mapping_msgs
    desc: cotesys_ros_grasping
    license: BSD
    shortdesc: cotesys_ros_grasping
    source: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/simulation/cotesys_ros_grasping
    website: http://ros.org/wiki/cotesys_ros_grasping
  cram_emacs_repl:
    author: !!python/unicode 'Lorenz Moesenlechner'
    deps:
    - rosemacs
    desc: cram_emacs_repl
    license: BSD
    shortdesc: cram_emacs_repl
    source: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/demos/ros_fall_school_2010/cram_emacs_repl
    website: http://ros.org/wiki/cram_emacs_repl
  david_laserscanner:
    author: !!python/unicode 'Andreas Holzbach, Dejan Pangercic'
    deps:
    - perception_srvs
    desc: "A Client to connect to a David server which controls the \n    David laser\
      \ light triangulation software (www.david-laserscanner.com) \n    running on\
      \ a windows machine."
    license: BSD
    shortdesc: david_laserscanner
    source: details.php?name=roscpp
    website: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/controllers/david_laserscanner
  drive_base_action:
    author: !!python/unicode 'Thomas Ruehr'
    deps:
    - roscpp
    - geometry_msgs
    - tf
    - actionlib
    - actionlib_msgs
    - move_base_msgs
    desc: drive_base_action
    license: BSD
    shortdesc: drive_base_action
    source: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/highlevel/drive_base_action
    website: http://ros.org/wiki/drive_base_action
  dxflib:
    author: !!python/unicode 'RibbonSoft, Robert J. Campbell Jr.'
    deps: []
    license: GPL 3.0
    shortdesc: dxflib
    source: list.php
    website: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/3rdparty/dxflib
  espeaktopic:
    author: !!python/unicode 'Ulrich F Klank'
    deps:
    - std_msgs
    - vision_msgs
    - nav_pcontroller
    - cogman_msgs
    desc: Drive to a point in the map
    license: Unknown
    shortdesc: Drive to a point in the map
    source: details.php?name=roscpp
    website: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/utils/espeaktopic
  face_detector_mono:
    author: !!python/unicode 'Dejan Pangercic'
    deps:
    - cv_bridge
    - image_transport
    - sensor_msgs
    desc: "Detects faces in 2D images using Haar-like features and cascade classifier.\n\
      \    Based on facedetect.cpp from openCV."
    license: GPL
    shortdesc: face_detector_mono
    source: details.php?name=opencv2
    website: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/perception/face_detector_mono
  fall_school_executive:
    author: !!python/unicode 'Brian Gerkey'
    deps:
    - approach_table_tools
    - actionlib
    - move_base_msgs
    - pr2_common_action_msgs
    - pr2_controllers_msgs
    - drive_base_action
    desc: fall_school_executive
    license: BSD
    shortdesc: fall_school_executive
    source: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/highlevel/fall_school_executive
    website: http://ros.org/wiki/fall_school_executive
  fast_match_template:
    author: !!python/unicode 'Tristen Georgiou, Dejan Pangercic (for ROS and modifications)'
    deps:
    - opencv2
    - roscpp
    desc: fast_match_template matches target templates in source images using speed-optimized
      cvMatchTemplate.
    license: BSD
    shortdesc: fast_match_template
    source: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/perception/fast_match_template
    website: http://opencv.willowgarage.com/wiki/FastMatchTemplate
  flir_driver:
    author: !!python/unicode 'Radu Bogdan Rusu (rusu@cs.tum.edu)'
    deps:
    - sensor_msgs
    desc: A library for accessing a FLIR thermal camera through libunicap
    license: BSD
    shortdesc: A library for accessing a FLIR thermal camera through libunicap
    source: details.php?name=roscpp
    website: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/drivers/flir_driver
  germandeli_crawler:
    author: !!python/unicode 'Vladimir Haltakov, Dejan Pangercic'
    deps:
    - rospy
    desc: "Germandeli_crawler will download structure and the images of the site www.germandeli.com\n\
      \n===============START=========================\nTo run the crawler execute\
      \ the following command:\n&quot;python3.1 start_extracting.py absolute_path_to_target_data_dir&quot;\n\
      \n===============ABOUT=========================\nThe script first extracts the\
      \ structure of the site in the structure.xml file in the data directory. \n\
      It than follows this file to do the actual extraction of the images. The images\
      \ are stored in the data \ndirectory in subfolders, which follow the structure\
      \ of the site. Additionally some  information \n(like product description, link,\
      \ id, etc.) is added for every product in the structure.xml file and \neach\
      \ page is marked as traced, so if the script is interrupted it can continue\
      \ the crawling, when it is started again."
    license: BSD
    shortdesc: germandeli_crawler
    source: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/utils/germandeli_crawler
    website: http://ros.org/wiki/germandeli_crawler
  gpc:
    author: !!python/unicode 'Alan Murta'
    deps: []
    license: free for non-commercial use
    shortdesc: General Polygon Clipper library (http://www.cs.man.ac.uk/~toby/alan/software/index.html)
    source: list.php
    website: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/3rdparty/gpc
  ias_arm_kinematics:
    author: !!python/unicode 'David Lu - Alexis Maldonado'
    deps:
    - roscpp
    - tf
    - sensor_msgs
    - tf_conversions
    - kdl_parser
    - kinematics_msgs
    desc: ias_arm_kinematics
    license: BSD
    shortdesc: ias_arm_kinematics
    source: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/arm_navigation/rosie_arm_navigation/ias_arm_kinematics
    website: http://ros.org/wiki/arm_kinematics
  ias_descriptors_3d:
    author: !!python/unicode 'Daniel Munoz/ dmunoz@willowgarage.com, Dejan Pangercic
      (patched version)'
    deps:
    - roscpp
    - eigen3
    - opencv2
    - fixed_point_cloud_mapping
    desc: Feature descriptor library for 3-D data
    license: BSD
    shortdesc: ias_descriptors_3d
    source: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/3rdparty/ias_descriptors_3d
    website: http://pr.willowgarage.com/wiki/descriptors_3d
  ias_drawer_executive:
    author: !!python/unicode 'Thomas Ruehr'
    deps:
    - move_arm_msgs
    - actionlib
    - actionlib_msgs
    - kinematics_msgs
    - pr2_arm_move_ik
    - pr2_controllers_msgs
    - tf
    - pr2_msgs
    - move_base_msgs
    - joint_trajectory_action
    - geometry_msgs
    - kinematics_msgs
    - std_srvs
    - visualization_msgs
    - pcl
    - nav_msgs
    - laser_geometry
    - cop_client_cpp
    - pcl_cloud_tools
    - point_cloud_converter
    - ias_table_msgs
    desc: "ias_drawer_executive\n     opens drawers in the ias kitchen.\n     the\
      \ robot is driven to a hardcoded location that is know for each drawer.\n  \
      \   the right hand goes to a hardcoded joint state so that we see the ar toolkit\
      \ marker on the drawer handle in the forearm camera.\n     ik is then used to\
      \ grasp at the marker, and the drawer is opened with some trajectory exploration,\
      \ following the line of least resistance so to say."
    license: BSD
    shortdesc: ias_drawer_executive
    source: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/highlevel/ias_drawer_executive
    website: http://ros.org/wiki/ias_drawer_executive
  ias_gazebo:
    author: !!python/unicode 'Lorenz Moesenlechner'
    deps:
    - rospy
    - ogre_tools
    - ias_robot_defs
    - gazebo_tools
    - pr2_gazebo_plugins
    - jlo
    - gmapping
    - robot_state_chain_publisher
    - pr2_controller_manager
    - pr2_gazebo
    - fake_localization
    - ias_mechanism_controllers
    desc: Launch scripts for working with our simulated robot platforms.
    license: BSD
    shortdesc: Launch scripts for working with our simulated robot platforms.
    source: details.php?name=std_msgs
    website: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/simulation/ias_gazebo
  ias_maps:
    author: !!python/unicode 'Lorenz Moesenlechner'
    deps: []
    desc: ias_maps
    license: BSD
    shortdesc: ias_maps
    source: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/stacks/ias_nav/ias_maps
    website: http://ros.org/wiki/ias_maps
  ias_mechanism_controllers:
    author: !!python/unicode 'Lorenz Moesenlechner'
    deps:
    - std_msgs
    - pr2_controller_interface
    - pr2_mechanism_model
    - pr2_mechanism_controllers
    - pr2_mechanism_msgs
    - nav_msgs
    - control_toolbox
    - pr2_controller_manager
    desc: Mechanism controllers for ias related stuff
    license: BSD
    shortdesc: ias_mechanism_controllers
    source: details.php?name=roscpp
    website: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/controllers/ias_mechanism_controllers
  ias_pr2_2dnav:
    author: !!python/unicode 'Lorenz Moesenlechner'
    deps:
    - ias_maps
    - map_server
    - pr2_navigation_global
    - pr2_navigation_perception
    - pr2_navigation_teleop
    - pr2_machine
    - pr2_nav_pcontroller
    desc: ias_pr2_2dnav
    license: BSD
    shortdesc: ias_pr2_2dnav
    source: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/stacks/ias_nav/ias_pr2_2dnav
    website: http://ros.org/wiki/ias_pr2_2dnav
  ias_pr2_addons_application:
    author: !!python/unicode 'Brian Gerkey, Eitan Marder-Eppstein'
    deps:
    - roslib
    - rospy
    - webui
    - rosweb
    - std_msgs
    - map_server
    - willow_maps
    desc: A collection of nodes that multiple apps depend on at runtime.  Eventually,
      many of these nodes will migrate into pr2_bringup/pr2.launch
    license: BSD
    shortdesc: pr2_addons
    source: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/stacks/ias_web_apps/ias_pr2_addons_application
    website: http://pr.willowgarage.com/wiki/pr2_addons
  ias_robot_defs:
    author: !!python/unicode 'Lorenz Moesenlechner'
    deps: []
    desc: URDF definitions of the platforms used at TU Muenchen.
    license: BSD
    shortdesc: ias_robot_defs
    source: details.php?name=xacro
    website: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/robot_model/ias_robot_defs
  image_algos:
    author: !!python/unicode 'Dejan Pangercic'
    deps:
    - std_msgs
    - opencv2
    - cv_bridge
    - rosconsole
    - sensor_msgs
    - image_transport
    - pluginlib
    - compressed_image_transport
    - dynamic_reconfigure
    - tf
    - image_geometry
    - angles
    - cmvision
    - yaml_cpp
    - ias_table_msgs
    - pcl_tf
    - pcl
    - pcl_ros
    - actionlib
    - pr2_controllers_msgs
    desc: "Robotic perception algorithms for 2D images. They are intended to \n  \
      \  be flexible and tightly work together with following packages:\n    cloud_tools\
      \ (using table_memory functionality)\n    cloud_algos (using IAS 3D perception\
      \ algorithms)\n    pcl stack (using  general 3D perception algorithms and tools)\n\
      \    knowledge stack (for reasoning and inferences)\n    cognitive_perception\
      \ (for some further CV algorithms)."
    license: BSD
    shortdesc: "Robotic perception algorithms for 2D images. They are intended to\
      \ \n    be flexible and tightly ..."
    source: details.php?name=roscpp
    website: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/perception/image_algos
  intersect_polys:
    author: !!python/unicode 'Ulrich F Klank'
    deps:
    - vision_srvs
    desc: Intersect polygons
    license: Unknown
    shortdesc: Intersect polygons
    source: details.php?name=roscpp
    website: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/utils/intersect_polys
  jlo:
    author: !!python/unicode 'Ulrich F Klank'
    deps:
    - roscpp
    - vision_srvs
    - tf
    desc: Located Object Server
    license: GPL
    shortdesc: Located Object Server
    source: details.php?name=lo
    website: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/locations/jlo
  joint_state_gui:
    author: !!python/unicode 'Ingo Kresse'
    deps: []
    desc: small gui to publish joint_states (for debugging robot descriptions)
    license: GPL
    shortdesc: joint_state_gui
    source: details.php?name=sensor_msgs
    website: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/utils/joint_state_gui
  kb_computable_client:
    author: !!python/unicode 'Moritz Tenorth'
    deps:
    - rosjava
    - vision_srvs
    - std_msgs
    desc: "kb_computable_client\n\n     utils for querying external information, e.g.\
      \ the poses of objects from jlo,\n     from within Prolog"
    license: GPL
    shortdesc: kb_computable_client
    source: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/graveyard/kb_computable_client
    website: http://www.ros.org/wiki/kb_computable_client
  knowrob_tutorial:
    author: !!python/unicode 'Moritz Tenorth'
    deps:
    - mod_vis
    - json_prolog
    - rosjava
    - ias_semantic_map
    - tabletop_object_detector
    desc: knowrob_tutorial
    license: BSD
    shortdesc: knowrob_tutorial
    source: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/knowledge/knowrob_tutorial
    website: http://ros.org/wiki/knowrob_tutorial
  kuka_fri:
    author: !!python/unicode 'Ingo Kresse, Alexis Maldonado'
    deps:
    - yarp2
    - sensor_msgs
    - diagnostic_updater
    - kuka_fri_header
    desc: "control node for the KUKA lightweight arm, using the\n    Fast Research\
      \ Interface (FRI) over UDP."
    license: BSD
    shortdesc: "control node for the KUKA lightweight arm, using the\n    Fast Research\
      \ Interface (FRI) over UDP..."
    source: details.php?name=roscpp
    website: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/drivers/kuka_fri
  libsvm:
    author: !!python/unicode 'Chih-Chung Chang, Chih-Jen Lin'
    deps: []
    license: ''
    shortdesc: "LIBSVM is a Support Vector Machine implementation (http://www.csie.ntu.edu.tw/~cjlin/libsvm/)\n\
      \ ..."
    source: list.php
    website: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/3rdparty/libsvm
  libwww:
    author: !!python/unicode "Henrik Frystyk Nielsen\n    Designed and implemented\
      \ libwww from version 2.17 up to version 5.2.8\n    Tim Berners-Lee and Jean-Francois\
      \ Groff\n     Came up with the initial design and implementation of libwww"
    deps: []
    license: "Copyright World Wide Web Consortium,\n      (Massachusetts Institute\
      \ of Technology, European Research Consortium\n      for Informatics and Mathematics,\
      \ Keio University). All Rights\n      Reserved. This work is distributed under\
      \ the W3C c  Software License [1]\n      in the hope that it will be useful,\
      \ but WITHOUT ANY WARRANTY; without\n      even the implied warranty of MERCHANTABILITY\
      \ or FITNESS FOR A\n      PARTICULAR PURPOSE.\n  \n          [1]\n         \
      \ http://www.w3.org/Consortium/Legal/2002/copyright-software-20021231"
    shortdesc: "libwww is a highly modular, general-purpose client side Web API written\
      \ in C\n  for Unix and Windo..."
    source: list.php
    website: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/3rdparty/libwww
  lo:
    author: !!python/unicode 'U. Klank'
    deps: []
    license: GPL
    shortdesc: Located Object Library
    source: list.php
    website: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/locations/lo
  ltk:
    author: !!python/unicode 'Peter Herth'
    deps: []
    license: lgpl
    shortdesc: "LTK\n    http://www.peter-herth.de/ltk/"
    source: list.php
    website: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/3rdparty/lisp/ltk
  mary_tts:
    author: !!python/unicode 'Moritz Tenorth'
    deps:
    - rosjava
    - std_msgs
    desc: "3rdparty wrapper for DFKI's Mary Text-to-speech system. Node listens to\
      \ the /mary/tts topic and reads all published texts.\n\n     Mary is based on\
      \ human speech recordings, i.e. the models are larger than for formant-based\
      \ systems like espeak, but the output is often more natural."
    license: BSD
    shortdesc: 3rdparty wrapper for DFKI's Mary Text-to-speech system. Node listens
      to the /mary/tts topic a...
    source: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/knowledge/3rdparty/mary_tts
    website: http://ros.org/wiki/mary_tts
  mesh_label_node:
    author: !!python/unicode 'Moritz Tenorth'
    deps:
    - mod_vis
    - triangle_mesh_msgs
    desc: mesh_label_node
    license: BSD
    shortdesc: mesh_label_node
    source: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/knowledge/mesh_label_node
    website: http://ros.org/wiki/mesh_label_node
  missing_objects_tutorial:
    author: !!python/unicode 'Dejan Pangercic'
    deps:
    - sensor_msgs
    - json_prolog
    - comp_cop
    - comp_missingobj
    desc: missing_objects
    license: BSD
    shortdesc: missing_objects
    source: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/demos/missing_objects_tutorial
    website: http://ros.org/wiki/missing_objects
  mod_dialog:
    author: !!python/unicode 'Moritz Tenorth'
    deps:
    - mod_vis
    - rosjava
    - std_msgs
    - mary_tts
    - comp_ehow
    - jpl
    - srldb
    - json_prolog
    desc: "Simple dialog module to talk to KnowRob using natural language\n    queries\
      \ and responses."
    license: BSD
    shortdesc: mod_dialog
    source: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/knowledge/mod_dialog
    website: http://ros.org/wiki/mod_dialog
  mod_semantic_map:
    author: !!python/unicode 'Moritz Tenorth'
    deps:
    - rosjava
    desc: "mod_semantic_map\n\n     Node and tools to generate the OWL description\
      \ of the semantic map\n     from ROS messages"
    license: BSD
    shortdesc: mod_semantic_map
    source: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/knowledge/mod_semantic_map
    website: http://ros.org/wiki/mod_semantic_map
  model_completion:
    author: !!python/unicode 'Monica Opris'
    deps:
    - opencv2
    - roscpp
    - sensor_msgs
    - cv_bridge
    - robot_mask
    - tf
    - libsiftfast
    desc: model_completion
    license: BSD
    shortdesc: model_completion
    source: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/perception/model_completion
    website: http://ros.org/wiki/model_completion
  nav_pcontroller:
    author: !!python/unicode 'Ingo Kresse'
    deps:
    - roscpp
    - vision_srvs
    - visualization_msgs
    - actionlib_msgs
    - navp_action
    - move_base_msgs
    desc: simple P-Controller for a holonomic robot base.
    license: BSD
    shortdesc: nav_pcontroller
    source: details.php?name=tf
    website: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/stacks/ias_nav/nav_pcontroller
  objects_of_daily_use_finder:
    author: !!python/unicode 'Vladimir Haltakov, Dejan Pangercic'
    deps:
    - roscpp
    - libsiftfast
    - cv_bridge
    - opencv2
    - vocabulary_tree
    - eigen
    - image_transport
    - ann2
    - vision_msgs
    desc: objects_of_daily_use_finder
    license: BSD
    shortdesc: objects_of_daily_use_finder
    source: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/perception/objects_of_daily_use_finder
    website: http://ros.org/wiki/objects_of_daily_use_finder
  opencyc:
    author: !!python/unicode 'Moritz Tenorth'
    deps:
    - rosprolog
    desc: Wrapper to install and launch the OpenCyc ontology
    license: BSD
    shortdesc: Wrapper to install and launch the OpenCyc ontology
    source: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/knowledge/3rdparty/opencyc
    website: http://ias.in.tum.de/kb/wiki/index.php/opencyc
  oro_chatter:
    author: "S\xC3\xA9verin Lemaignan"
    deps:
    - web_hri
    - rospy
    - oro_ros
    - std_msgs
    desc: 'ORO Chatter listen to human inputs from

      the web_hri ROS node, and try to answer question/execute commands with the

      Naive Natural Language module of ORO.'
    license: BSD
    shortdesc: ORO Chatter
    source: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/knowledge/oro/oro_chatter
    website: http://ros.org/wiki/oro_chatter
  oro_ontology:
    author: !!python/unicode 'Severin Lemaignan'
    deps: []
    desc: oro_ontology
    license: Creative Commons 3.0 by
    shortdesc: oro_ontology
    source: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/knowledge/oro/oro_ontology
    website: http://ros.org/wiki/oro_ontology
  oro_ros:
    author: "S\xC3\xA9verin Lemaignan"
    deps:
    - oro_server
    - oro_ontology
    - rospy
    - std_msgs
    desc: ROS connector for ORO server
    license: BSD
    shortdesc: ROS connector for ORO server
    source: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/knowledge/oro/oro_ros
    website: http://ros.org/wiki/oro_ros
  oro_server:
    author: "S\xC3\xA9verin Lemaignan, LAAS-CNRS/TUM-IAS, 2010"
    deps:
    - jena
    - pellet
    desc: A Java-based knowledge base for cognitive robotic applications
    license: CeCiLL
    shortdesc: A Java-based knowledge base for cognitive robotic applications
    source: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/knowledge/oro/oro_server
    website: http://homepages.laas.fr/slemaign/official/work/oro-server.html
  pc_grasp_position:
    author: !!python/unicode 'Ulrich F Klank'
    deps:
    - sensor_msgs
    - simple_grasp_planner
    desc: 'Reads a poind clound and parameter describing the gripper and

      selects a valid hand position'
    license: GPL
    shortdesc: 'Reads a poind clound and parameter describing the gripper and

      selects a valid hand position'
    source: details.php?name=roscpp
    website: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/stacks/grasping/pc_grasp_position
  people_detector_2d_laser:
    author: !!python/unicode 'Oscar Martinez Mozos'
    deps: []
    license: BSD
    shortdesc: People Detection Library
    source: list.php
    website: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/3rdparty/people_detector_2d_laser
  people_detector_node:
    author: !!python/unicode 'Oscar Martinez Mozos, Dejan Pangercic(ROS)'
    deps:
    - roscpp
    - std_msgs
    - sensor_msgs
    - people_detector_2d_laser
    desc: "people_detector_node wraps around the functionality of the http://tum-ros-pkg.svn.sourceforge.net/viewvc/tum-ros-pkg/3rdparty/people_detector_2d_laser/\n\
      \     package in thus provides the hypotheses about the pose of human legs as\
      \ seen in the 2.5D laser scan. \n     Classsifer's hypotheses are to be found\
      \ in training_data subfolder, please also see the README file in people_detector_2d_laser\
      \ package if you need to train \n     your own classifier."
    license: BSD
    shortdesc: people_detector_node
    source: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/perception/people_detector_node
    website: http://ros.org/wiki/people_detector_node
  player_log_actarray:
    author: !!python/unicode 'Radu Bogdan Rusu'
    deps:
    - sensor_msgs
    - tf
    - angles
    - eigen
    - kdl
    - mapping_srvs
    - point_cloud_mapping
    desc: Convert Player actarray messages to ROS.
    license: BSD
    shortdesc: Convert Player actarray messages to ROS.
    source: details.php?name=roscpp
    website: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/controllers/player_log_actarray
  position_string_msgs:
    author: !!python/unicode 'Nico Blodow'
    deps:
    - geometry_msgs
    - sensor_msgs
    desc: Message for visualizing strings at certain positions..
    license: BSD
    shortdesc: position_string_rviz_plugin
    source: details.php?name=std_msgs
    website: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/stacks/ias_visualization/position_string_msgs
  position_string_rviz_plugin:
    author: !!python/unicode 'Nico Blodow'
    deps:
    - rviz
    - roscpp
    - tf
    desc: rviz plugin for visualizing strings at given positions..
    license: BSD
    shortdesc: position_string_rviz_plugin_no_msgs
    source: details.php?name=position_string_msgs
    website: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/stacks/ias_visualization/position_string_rviz_plugin
  pr2_execution_trace_visualization:
    author: !!python/unicode 'Lorenz Moesenlechner'
    deps:
    - cram_pr2_executive
    - cram_reasoning
    - cram_plan_knowledge
    - cram_execution_trace
    - cram_plan_library
    - cram_roslisp_common
    - cram_utilities
    - designators
    - designators_ros
    - cl_json_pl_server
    - visualization_msgs
    - tf_trajectory_visualization
    - geometry_msgs
    - ias_kitchen_defs
    - table_costmap
    desc: pr2_execution_trace_visualization
    license: BSD
    shortdesc: pr2_execution_trace_visualization
    source: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/stacks/cram_demo_apps/pr2_execution_trace_visualization
    website: http://ros.org/wiki/pr2_execution_trace_visualization
  pr2_nav_pcontroller:
    author: !!python/unicode 'Lorenz Moesenlechner'
    deps:
    - nav_pcontroller
    desc: pr2_nav_pcontroller
    license: BSD
    shortdesc: pr2_nav_pcontroller
    source: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/stacks/ias_nav/pr2_nav_pcontroller
    website: http://ros.org/wiki/pr2_nav_pcontroller
  projected_light:
    author: !!python/unicode 'Dejan Pangercic, Andreas Leha'
    deps:
    - roscpp
    - opencv2
    - sensor_msgs
    - cv_bridge
    desc: "Out-of-the-box solution for projected stereo using\n    a Videre STOC camera\
      \ and a regular wall projector."
    license: BSD
    shortdesc: projected_light
    source: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/demos/projected_light
    website: http://tum-ros-pkg.svn.sourceforge.net/viewvc/tum-ros-pkg/demos/projected_light
  prolog_perception:
    author: !!python/unicode 'Dejan Pangercic'
    deps:
    - mapping_srvs
    - tabletop_msgs
    - vision_srvs
    - vision_msgs
    - geometry_msgs
    - sensor_msgs
    - ias_table_srvs
    - ias_table_msgs
    - ias_table_srvs
    - ias_knowledge_base
    - comp_temporal
    desc: "prolog_perception logically interacts with below enlisted perception nodes\n\
      \     in order to create a multi-purpose multi-level solution space for perception\n\
      \     in robotics."
    license: BSD
    shortdesc: prolog_perception
    source: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/knowledge/prolog_perception
    website: http://www.ros.org/wiki/prolog_perception
  robot_state_chain_publisher:
    author: !!python/unicode 'Lorenz Moesenlechner'
    deps:
    - sensor_msgs
    - roscpp
    - tf
    - tf_conversions
    desc: ''
    license: BSD
    shortdesc: This package allows you to publish the state of a robot to the transform
      library topic. In contrast to robot_state_publisher, it publishes the complete
      kinematic chain.
    source: details.php?name=kdl_parser
    website: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/robot_model/robot_state_chain_publisher
  rosie_2dnav_gazebo:
    author: !!python/unicode 'Lorenz Moesenlechner'
    deps:
    - fake_localization
    - rosie_move_base
    - nav_pcontroller
    desc: rosie_2dnav_gazebo
    license: BSD
    shortdesc: rosie_2dnav_gazebo
    source: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/simulation/rosie_2dnav_gazebo
    website: http://ros.org/wiki/rosie_2dnav_gazebo
  rosie_arm_kinematics:
    author: !!python/unicode 'Alexis Maldonado'
    deps:
    - ias_arm_kinematics
    desc: rosie_arm_kinematics
    license: BSD
    shortdesc: rosie_arm_kinematics
    source: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/arm_navigation/rosie_arm_navigation/rosie_arm_kinematics
    website: http://ros.org/wiki/rosie_arm_kinematics
  rosie_arm_kinematics_test:
    author: !!python/unicode 'Alexis Maldonado'
    deps:
    - kinematics_msgs
    desc: rosie_arm_kinematics_test
    license: BSD
    shortdesc: rosie_arm_kinematics_test
    source: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/arm_navigation/rosie_arm_navigation/rosie_arm_kinematics_test
    website: http://ros.org/wiki/kinematics_tutorials
  rosie_arm_navigation_launch:
    author: !!python/unicode 'E. Gil Jones'
    deps:
    - arm_navigation_tests
    - ias_gazebo
    - rosie_arm_kinematics
    desc: rosie_arm_navigation
    license: BSD
    shortdesc: rosie_arm_navigation
    source: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/arm_navigation/rosie_arm_navigation/rosie_arm_navigation_launch
    website: http://ros.org/wiki/rosie_arm_navigation
  rosie_bringup:
    author: !!python/unicode 'Lorenz Moesenlechner'
    deps:
    - ias_maps
    - powercube_node
    - ias_robot_defs
    - jlo
    - swissranger_camera
    - robot_state_chain_publisher
    - yarp2
    - kdl
    - ias_robot_defs
    - simple_grasp_planner
    - map_server
    - power_relay
    - pr2_computer_monitor
    - cop
    - diagnostic_aggregator
    - tf
    - gmapping
    - amcl
    - teleop_wii
    - nav_pcontroller
    - omni_ethercat
    - soft_runstop
    - motionControl
    - kuka_fri
    - motionControl
    - sahand_api
    - hokuyo_node
    - laser_filters
    - laser_assembler
    - pr2_laser_snapshotter
    desc: Launch files for bringing up the robot.
    license: BSD
    shortdesc: rosie_bringup
    source: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/robot_model/rosie_bringup
    website: http://ros.org/wiki/rosie_bringup
  rosie_execution_trace_visualization:
    author: !!python/unicode 'Lorenz Moesenlechner'
    deps:
    - rosie_executive
    - cram_reasoning
    - cram_plan_knowledge
    - cram_execution_trace
    - cram_plan_library
    - cram_roslisp_common
    - cram_utilities
    - designators
    - designators_ros
    - cl_json_pl_server
    - visualization_msgs
    - tf_trajectory_visualization
    - geometry_msgs
    - ias_kitchen_defs
    - table_costmap
    desc: rosie_execution_trace_visualization
    license: BSD
    shortdesc: rosie_execution_trace_visualization
    source: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/stacks/cram_demo_apps/rosie_execution_trace_visualization
    website: http://ros.org/wiki/rosie_execution_trace_visualization
  rosie_move_base:
    author: !!python/unicode 'Lorenz Moesenlechner'
    deps: []
    desc: rosie_move_base
    license: BSD
    shortdesc: rosie_move_base
    source: details.php?name=move_base
    website: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/stacks/ias_nav/rosie_move_base
  rosie_pr2_gripper_action:
    author: !!python/unicode 'Alexis Maldonado'
    deps:
    - pr2_controllers_msgs
    - cogman_msgs
    - actionlib
    desc: rosie_pr2_gripper_action
    license: BSD
    shortdesc: rosie_pr2_gripper_action
    source: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/arm_navigation/rosie_arm_navigation/rosie_pr2_gripper_action
    website: http://ros.org/wiki/rosie_pr2_gripper_action
  rosie_torso_action:
    author: !!python/unicode 'Alexis Maldonado'
    deps:
    - rospy
    - actionlib
    - actionlib_msgs
    - pr2_common_action_msgs
    - pr2_controllers_msgs
    - cogman_msgs
    desc: rosie_torso_action
    license: GPLv3+
    shortdesc: rosie_torso_action
    source: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/arm_navigation/rosie_arm_navigation/rosie_torso_action
    website: http://ros.org/wiki/rosie_torso_action
  rosie_tuck_arms_action:
    author: !!python/unicode 'Alexis Maldonado'
    deps:
    - rospy
    - actionlib
    - actionlib_msgs
    - pr2_common_action_msgs
    - cogman_msgs
    desc: rosie_tuck_arms_action
    license: GPLv3+
    shortdesc: rosie_tuck_arms_action
    source: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/arm_navigation/rosie_arm_navigation/rosie_tuck_arms_action
    website: http://ros.org/wiki/rosie_tuck_arms_action
  rosjava_deps:
    author: !!python/unicode 'Moritz Tenorth'
    deps:
    - std_msgs
    - std_srvs
    - rxtools
    - rosparam
    - rosemacs
    - rosbag
    - rosbash
    - rxgraph
    - rosmake
    - rospack
    - rosdoc
    - rosbagmigration
    - rosrecord
    - roscreate
    - rosgraph
    - rosboost_cfg
    - rosservice
    - rosnode
    - rxbag
    - rosdep
    - rxdeps
    - rostopic
    - topic_tools
    - roslaunch
    - xdot
    - roswtf
    - rosmsg
    - rosclean
    - rosbuild
    - rosconsole
    - genmsg_cpp
    - roscore_migration_rules
    - rosout
    - roslib
    - roslisp
    - mk
    - roscpp
    - rosmaster
    - rospy
    - message_filters
    - wxPython_swig_interface
    - wxswig
    - xmlrpcpp
    - rostest
    - tabletop_srvs
    - tabletop_msgs
    - wifi_ddwrt
    - wg_pr2_2dnav
    - ectools
    - pr2_drive_life_test
    - roslaunch_caller
    - life_test
    - pr2_hardware_test_monitor
    - pr2_camera_focus
    - pr2_component_descriptions
    - wg_invent_client
    - qualification
    - willow_maps
    - rosweb
    - pyclearsilver
    - launchman
    - web_msgs
    - image_stream
    - rosjson
    - webui
    - ckill
    - suitesparse
    - sba
    - sparselib
    - csparse
    - visualization_marker_tutorials
    - visualization_msgs
    - ogre_tools
    - ogre
    - wxpropgrid
    - rxbag_plugins
    - rviz
    - cv_bridge
    - opencv2
    - image_geometry
    - opencv_tests
    - trajectory_filter_server
    - spline_smoother
    - constraint_aware_spline_smoother
    - joint_normalization_filters
    - tabletop_object_detector
    - tabletop_collision_map_processing
    - database_interface
    - household_objects_database
    - household_objects_database_msgs
    - student_database
    - sound_play
    - karto_scan_matcher
    - karto
    - gmapping
    - stage
    - gazebo_tools
    - gazebo_plugins
    - gazebo
    - gazebo_worlds
    - sbcl
    - roslisp_runtime
    - test_roslisp
    - roscpp_tutorials
    - turtlesim
    - roslisp_tutorials
    - rospy_tutorials
    - lockfree
    - allocators
    - rosrt
    - rosatomic
    - ivcon
    - assimp
    - collada_urdf
    - colladadom
    - convex_decomposition
    - resource_retriever
    - urdf
    - robot_state_publisher
    - kdl_parser
    - dense_laser_assembler
    - laser_cb_detector
    - interval_intersection
    - joint_states_settler
    - settlerlib
    - camera_offsetter
    - laser_joint_processor
    - calibration_msgs
    - monocam_settler
    - laser_joint_projector
    - image_cb_detector
    - teleop_ps3_application
    - camera_application
    - mannequin_application
    - navigation_application
    - pr2_recharge_application
    - tuckarms_application
    - soccer_application
    - doors_application
    - pr2_addons_application
    - map_tiler
    - pr2_pick_and_place_demos
    - pr2_tabletop_manipulation_launch
    - pr2_ogre
    - pr2_gazebo
    - pr2_gazebo_plugins
    - pr2_controller_configuration_gazebo
    - pr2_examples_gazebo
    - pr2_counterbalance_check
    - pr2_self_test_msgs
    - pr2_bringup_tests
    - joint_qualification_controllers
    - pr2_run_stop_auto_restart
    - pr2_bringup
    - pr2_computer_monitor
    - pr2_controller_configuration
    - pr2_camera_synchronizer
    - pr2_etherCAT
    - power_monitor
    - ocean_battery_driver
    - pr2_power_board
    - stereo_wall_detection
    - pr2_plugs_common
    - checkerboard_pose_estimation
    - pr2_plugs_actions
    - visual_pose_estimation
    - pr2_plugs_msgs
    - pr2_plugs_executive
    - outlet_pose_estimation
    - slipgrip_controller
    - simple_Jtranspose_controller
    - pr2_gripper_grasp_planner_cluster
    - pr2_gripper_reactive_approach
    - pr2_object_manipulation_launch
    - pr2_gripper_fingersensor_action
    - pr2_gripper_grasp_controller
    - pr2_2dnav_local
    - pr2_2dnav
    - pr2_2dnav_slam
    - pr2_navigation_self_filter
    - pr2_navigation_perception
    - pr2_navigation_global
    - pr2_navigation_teleop
    - pr2_navigation_local
    - laser_tilt_controller_filter
    - pr2_navigation_config
    - pr2_navigation_slam
    - semantic_point_annotator
    - pr2_move_base
    - pr2_controller_manager
    - pr2_controller_interface
    - pr2_mechanism_model
    - realtime_tools
    - pr2_hardware_interface
    - pr2_mechanism_msgs
    - pr2_mechanism_diagnostics
    - pr2_arm_kinematics_constraint_aware
    - pr2_arm_kinematics
    - pr2_dashboard
    - ethercat_hardware
    - fingertip_pressure
    - eml
    - pr2_doors_actions
    - door_msgs
    - pr2_doors_executive
    - pr2_doors_common
    - tff_controller
    - ANN_doors
    - door_handle_detector
    - pr2_laser_snapshotter
    - pr2_controllers_msgs
    - robot_mechanism_controllers
    - control_toolbox
    - ethercat_trigger_controllers
    - single_joint_position_action
    - pr2_mechanism_controllers
    - trajectory_msgs
    - pr2_gripper_action
    - pr2_calibration_controllers
    - pr2_head_action
    - joint_trajectory_action
    - joint_trajectory_generator
    - joint_trajectory_action_tools
    - pr2_arm_move_ik
    - pr2_tuck_arms_action
    - pr2_common_action_msgs
    - pr2_dashboard_aggregator
    - pr2_msgs
    - pr2_machine
    - pr2_description
    - teleop_microscribe
    - infinity_pedals
    - microscribe
    - pr2_cockpit_msgs
    - teleop_controllers
    - pr2_dense_laser_snapshotter
    - pr2_calibration_propagation
    - pr2_calibration_estimation
    - pr2_calibration_executive
    - pr2_calibration_launch
    - pr2_arm_ik_tests
    - test_collision_space
    - arm_navigation_tests
    - pr2_3dnav
    - pr2_arm_navigation_tutorials
    - pr2_arm_navigation_config
    - pr2_arm_navigation_actions
    - pr2_arm_navigation_kinematics
    - pr2_arm_navigation_filtering
    - pr2_arm_navigation_planning
    - pr2_arm_navigation_perception
    - pr2_tuckarm
    - pr2_mannequin_mode
    - pr2_teleop
    - ann
    - pcl
    - flann
    - vtk
    - cminpack
    - terminal_tools
    - pcl_tf
    - pcl_tutorials
    - pcl_visualization
    - point_cloud_converter
    - pcl_ros
    - opende
    - face_detector
    - people_msgs
    - object_manipulation_msgs
    - object_manipulator
    - grasp_planner_database
    - fake_localization
    - move_base
    - map_server
    - base_local_planner
    - robot_pose_ekf
    - amcl
    - rotate_recovery
    - clear_costmap_recovery
    - move_base_msgs
    - nav_core
    - navfn
    - nav_view
    - carrot_planner
    - costmap_2d
    - voxel_grid
    - mapping_rviz_plugin
    - motion_planning_rviz_plugin
    - planning_environment
    - planning_environment_msgs
    - geometric_shapes_msgs
    - motion_planning_msgs
    - mapping_msgs
    - geometric_shapes
    - robot_self_filter
    - planning_models
    - interpolated_ik_motion_planner
    - ompl_planning
    - ompl_ros
    - ompl_search
    - ompl
    - chomp_motion_planner
    - sbpl
    - laser_assembler
    - laser_filters
    - laser_geometry
    - sicktoolbox
    - hokuyo_node
    - sicktoolbox_wrapper
    - kinematics_base
    - kinematics_msgs
    - turtle_teleop
    - wiimote
    - cwiid
    - spacenav_node
    - spacenav
    - joy
    - ps3joy
    - joystick_remapper
    - microstrain_3dmgx2_imu
    - theora_image_transport
    - libtheora
    - compressed_image_transport
    - image_view
    - camera_calibration
    - image_proc
    - stereo_msgs
    - stereo_image_proc
    - image_rotate
    - polled_camera
    - camera_calibration_parsers
    - image_transport
    - pose_graph
    - occupancy_grid_utils
    - bullet
    - kdl
    - eigen
    - angles
    - tf
    - tf_conversions
    - eigen_conversions
    - smach
    - smach_msgs
    - smach_viewer
    - smach_ros
    - executive_python_common
    - driver_base
    - dynamic_reconfigure
    - timestamp_tools
    - robot_monitor
    - diagnostic_updater
    - test_diagnostic_aggregator
    - runtime_monitor
    - self_test
    - diagnostic_aggregator
    - diagnostic_analysis
    - actionlib_msgs
    - diagnostic_msgs
    - nav_msgs
    - sensor_msgs
    - test_common_msgs
    - geometry_msgs
    - nodelet_tutorial_math
    - nodelet_topic_tools
    - bfl
    - filters
    - nodelet
    - pluginlib
    - xacro
    - actionlib
    - tinyxml
    - yaml_cpp
    - test_nodelet
    - collision_space
    - collision_map
    - collision_environment_msgs
    - distance_field
    - camera1394
    - prosilica_gige_sdk
    - prosilica_camera
    - wge100_camera
    - camera_info_manager
    - collision_free_arm_trajectory_controller
    - move_arm_msgs
    - move_arm
    - octomap
    - octomap_server
    - cl_tf
    - cl_utils
    - actionlib_lisp
    - cl_transforms
    - rxlab
    - rosfs
    - test_rosjava
    - repository_maintenance
    - rosrb
    - bagfs
    - rospy_sessions
    - rosmanual
    - process_info
    - ronin
    - rosjava
    - rosh
    - session_tutorials
    - rospackwtf
    - rosproxy
    - rosoct
    - roscpp_sessions
    - teleop_head
    - pr2_defs
    - swissranger_camera
    - goal_passer
    - pose_follower
    - dwa_local_planner
    - assisted_teleop
    - pose_base_controller
    desc: "rosjava_deps\n\n     Dummy package that depends on every package returned\
      \ by a `find /opt/ros/cturtle/stacks msg` and `find /opt/ros/cturtle/stacks\
      \ srv`\n\n\n     Goal: use this on a source-installation to build the Java Class\
      \ files for messages and services that are not included in the cturtle binary\
      \ packages."
    license: BSD
    shortdesc: rosjava_deps
    source: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/utils/rosjava_deps
    website: http://ros.org/wiki/rosjava_deps
  rotating_unit:
    author: !!python/unicode 'Radu Bogdan Rusu, Dejan Pangercic'
    deps:
    - sensor_msgs
    - geometry_msgs
    - mapping_srvs
    - perception_srvs
    - eigen
    - point_cloud_mapping
    desc: Controls a rotating Directed Perception PTU D47 unit via a serial interface
      and triggers the acquisition of PointCloud messages.
    license: BSD
    shortdesc: Controls a rotating Directed Perception PTU D47 unit via a serial interface
      and triggers the ac...
    source: details.php?name=roscpp
    website: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/highlevel/rotating_unit
  sick_lms400:
    author: !!python/unicode 'Radu Bogdan Rusu (rusu@cs.tum.edu), Dejan Pangercic
      (dejan.pangercic@cs.tum.edu)'
    deps:
    - geometry_msgs
    - sensor_msgs
    - angles
    desc: A library for accessing the SICK LMS400 laser sensor.
    license: BSD
    shortdesc: A library for accessing the SICK LMS400 laser sensor.
    source: details.php?name=roscpp
    website: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/drivers/sick_lms400
  sift_lowe:
    author: !!python/unicode 'David Lowe'
    deps: []
    desc: Classics - Lowe's Sift feature.
    license: BSD
    shortdesc: Classics - Lowe's Sift feature.
    source: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/3rdparty/sift_lowe
    website: http://people.cs.ubc.ca/~lowe/keypoints/
  simple_grasp_planner:
    author: !!python/unicode 'U. Klank'
    deps: []
    license: BSD
    shortdesc: Simple Grasp Planer
    source: list.php
    website: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/stacks/grasping/simple_grasp_planner
  stoc_driver:
    author: !!python/unicode 'Radu Bogdan Rusu (rusu@cs.tum.edu)'
    deps:
    - deprecated_msgs
    - sensor_msgs
    - opencv2
    - cv_bridge
    desc: A library for accessing a camera through the Small Vision System library
    license: BSD
    shortdesc: A library for accessing a camera through the Small Vision System library
    source: details.php?name=roscpp
    website: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/graveyard/composite/stoc_driver
  swissranger_srv:
    author: !!python/unicode 'Radu Bogdan Rusu (rusu@cs.tum.edu)'
    deps: []
    desc: Swissranger driver services. Should be moved later together with other services.
    license: BSD
    shortdesc: Swissranger driver services. Should be moved later together with other
      services.
    source: details.php?name=roscpp
    website: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/drivers/swissranger_srv
  swissranger_visualizer:
    author: !!python/unicode 'Radu Bogdan Rusu (rusu@cs.tum.edu)'
    deps:
    - deprecated_msgs
    - opencv2
    - cv_bridge
    desc: A simple SwissRanger viewer
    license: BSD
    shortdesc: A simple SwissRanger viewer
    source: details.php?name=roscpp
    website: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/drivers/swissranger_visualizer
  table_objects:
    author: !!python/unicode 'Zoltan-Csaba Marton'
    deps:
    - roscpp
    - sensor_msgs
    - geometry_msgs
    - mapping_msgs
    - visualization_msgs
    - pcl
    - pcl_ros
    - terminal_tools
    - flann
    - laser_assembler
    - point_cloud_converter
    - pr2_arm_navigation_perception
    desc: ''
    license: BSD
    shortdesc: table_objects
    source: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/demos/ros_fall_school_2010/table_objects
    website: http://ros.org/wiki/table_objects
  table_pose:
    author: !!python/unicode 'Radu Bogdan Rusu'
    deps:
    - roscpp
    - sensor_msgs
    - geometry_msgs
    desc: ''
    license: BSD
    shortdesc: table_pose
    source: details.php?name=pcl
    website: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/demos/ros_fall_school_2010/table_pose
  teleop_wii:
    author: !!python/unicode 'Ingo Kresse'
    deps:
    - joy
    - roscpp
    desc: "Wiimote teleop control for base control (uses the nunchuk). The hat of\n\
      \     the nunchuck controls forward/sideways, roll controls turning. Z is the\n\
      \     deadman's control."
    license: BSD
    shortdesc: teleop_wii
    source: details.php?name=geometry_msgs
    website: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/utils/teleop_wii
  test_client:
    author: !!python/unicode 'Ulrich F Klank'
    deps:
    - vision_srvs
    desc: test_client
    license: Unknown
    shortdesc: test_client
    source: details.php?name=roscpp
    website: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/utils/test_client
  tf_trajectory_visualization:
    author: !!python/unicode 'Lorenz Moesenlechner'
    deps:
    - tf
    - visualization_msgs
    - rospy
    - geometry_msgs
    - std_msgs
    - rosbag
    desc: tf_trajectory_visualization
    license: BSD
    shortdesc: tf_trajectory_visualization
    source: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/stacks/ias_visualization/tf_trajectory_visualization
    website: http://ros.org/wiki/tf_trajectory_visualization
  triangle_mesh_rviz_plugin:
    author: !!python/unicode ''
    deps:
    - geometry_msgs
    - sensor_msgs
    - triangle_mesh_msgs
    - rviz
    - roscpp
    - tf
    desc: RVIZ plugin to support Triangle Meshes
    license: BSD
    shortdesc: triangle_mesh_rviz_plugin
    source: details.php?name=std_msgs
    website: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/stacks/ias_visualization/triangle_mesh_rviz_plugin
  turtle_cram_demo:
    author: !!python/unicode 'Lorenz Mosenlechner'
    deps:
    - roslisp
    - cram
    desc: turtle_cram_demo
    license: BSD
    shortdesc: turtle_cram_demo
    source: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/demos/turtle_cram_demo
    website: http://ros.org/wiki/turtle_cram_demo
  web_hri:
    author: "S\xC3\xA9verin Lemaignan"
    deps:
    - rospy
    - std_msgs
    desc: "web_hri allows to interface\n  with human, either through a web interface\
      \ or via a XMPP bot."
    license: BSD
    shortdesc: Web/XMPP Human-Robot interface
    source: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/hri/web_hri
    website: http://ros.org/wiki/WebHri
  yarp2:
    author: !!python/unicode "Paul Fitzpatrick,\n    Giorgio Metta,\n    Lorenzo Natale,\n\
      \    Alessandro Scalzo,"
    deps: []
    license: GPL
    shortdesc: "YARP is a library and toolkit for communication and device interfaces,\n\
      \    developed by humanoi..."
    source: list.php
    website: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/3rdparty/yarp2
  yarp_to_ros_image:
    author: !!python/unicode 'Dejan Pangercic, Alexis Maldonado'
    deps:
    - opencv2
    - cv_bridge
    - image_transport
    - sensor_msgs
    - camera_calibration_parsers
    desc: "Converts Yarp to ROS image (through openCV image). \n     Provides launch\
      \ files for getting images from:\n     a)cameras on Icub robot and\n     b)simulated\
      \ camera source."
    license: GPL
    shortdesc: yarp_to_ros_image
    source: details.php?name=yarp2
    website: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/utils/yarp_to_ros_image
  zbar:
    author: !!python/unicode 'Jeff Brown (spadix@users.sourceforge.net)'
    deps: []
    desc: ZBar is an open source software suite for reading bar codes from various
      sources, such as video streams, image files and raw intensity sensors. It supports
      many popular symbologies (types of bar codes) including EAN-13/UPC-A, UPC-E,
      EAN-8, Code 128, Code 39, Interleaved 2 of 5 and QR Code.
    license: GNU LGPL 2.1
    shortdesc: ZBar is an open source software suite for reading bar codes from various
      sources, such as video...
    source: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/3rdparty/zbar
    website: http://zbar.sourceforge.net/index.html
  zbar_barcode_reader_node:
    author: !!python/unicode 'Dejan Pangercic'
    deps:
    - zbar
    - opencv2
    - cv_bridge
    - image_transport
    - sensor_msgs
    desc: zbar_barcode_reader_node
    license: BSD
    shortdesc: zbar_barcode_reader_node
    source: https://tum-ros-pkg.svn.sourceforge.net/svnroot/tum-ros-pkg/perception/zbar_barcode_reader_node
    website: http://ros.org/wiki/zbar_barcode_reader_node
turtlebot:
  pointcloud_to_laserscan:
    author: !!python/unicode 'Tully Foote'
    deps:
    - nodelet
    - sensor_msgs
    - pcl_ros
    desc: Converts a 3D Point Cloud into a 2D laser scan.  This is useful for making
      devices like the Kinect appear like a laser scanner for 2D-based algorithms
      (e.g. laser-based SLAM).
    license: BSD
    shortdesc: pointcloud to laserscan
    source: https://kforge.ros.org/turtlebot/turtlebot
    website: http://ros.org/wiki/pointcloud_to_laserscan
  turtle_drive:
    author: !!python/unicode 'Ken Conley'
    deps:
    - rospy
    - geometry_msgs
    - actionlib
    - actionlib_msgs
    - tf
    - nav_msgs
    desc: turtle_drive
    license: BSD
    shortdesc: turtle_drive
    source: https://kforge.ros.org/turtlebot/turtlebot
    website: http://ros.org/wiki/turtle_drive
  turtlebot_bringup:
    author: !!python/unicode 'Tully Foote'
    deps:
    - app_manager
    - turtlebot_driver
    - turtlebot_node
    - turtlebot_description
    - joy
    - robot_state_publisher
    - pointcloud_to_laserscan
    - openni_camera
    - compressed_image_transport
    desc: turtlebot_bringup provides roslaunch scripts for starting the TurtleBot
      base functionality.
    license: BSD
    shortdesc: turtlebot_bringup
    source: https://kforge.ros.org/turtlebot/turtlebot
    website: http://ros.org/wiki/turtlebot_bringup
  turtlebot_description:
    author: !!python/unicode 'Melonee Wise'
    deps:
    - urdf
    - xacro
    desc: turtlebot_description provides a complete 3D model of the TurtleBot for
      simulation and visualization. The files in this package are parsed and used
      by a variety of other components. Most users will not interact directly with
      this package.
    license: BSD
    shortdesc: turtlebot_description
    source: https://kforge.ros.org/turtlebot/turtlebot
    website: http://ros.org/wiki/turtlebot_description
  turtlebot_driver:
    author: !!python/unicode 'Damon Kohler. Ported and maintained by Ken Conley and
      Melonee Wise'
    deps: []
    desc: "For ROS bindings, please see turtlebot_node. \n\n     This is a generic\
      \ driver for iRobot Turtlebot and Roomba.  Port\n     of pyrobot.py by Damon\
      \ Kohler.  It is currently labeled as\n     turtlebot_driver pending review\
      \ by the entire create community\n     before using the name create_driver."
    license: MIT
    shortdesc: Driver for iRobot Turtlebot and Roomba
    source: https://kforge.ros.org/turtlebot/turtlebot
    website: http://ros.org/wiki/turtlebot_driver
  turtlebot_node:
    author: !!python/unicode 'Ken Conley, Melonee Wise'
    deps:
    - turtlebot_driver
    - rospy
    - tf
    - nav_msgs
    - geometry_msgs
    - diagnostic_msgs
    - kdl
    desc: "ROS bindings for the Turtlebot/Roomba driver.\n\n     This is based on\
      \ otl_roomba driver by OTL, ported to use\n     turtlebot_driver instead.  This\
      \ also contains a 'bonus' feature from\n     the turtlebot driver by Xuwen Cao\
      \ and Morgan Quigley."
    license: BSD
    shortdesc: iRobot Turtlebot ROS driver node
    source: https://kforge.ros.org/turtlebot/turtlebot
    website: http://ros.org/wiki/turtlebot_node
turtlebot_apps:
  chirp:
    author: !!python/unicode 'Dave Hershberger'
    deps: []
    desc: Play a single fixed sound file when chirp.launch is launched, at full volume.
    license: BSD
    shortdesc: Play a single fixed sound file when chirp.launch is launched, at full
      volume.
    source: https://kforge.ros.org/turtlebot/turtlebot_apps
    website: http://ros.org/wiki/chirp
  turtlebot_calibration:
    author: !!python/unicode 'Wim Meeussen'
    deps:
    - rospy
    - sensor_msgs
    - nav_msgs
    - geometry_msgs
    - kdl
    desc: turtlebot_calibration
    license: BSD
    shortdesc: turtlebot_calibration
    source: https://kforge.ros.org/turtlebot/turtlebot_apps
    website: http://ros.org/wiki/turtlebot_calibration
  turtlebot_follower:
    author: !!python/unicode 'Tony Pratkanis'
    deps:
    - nodelet
    - tf
    - roscpp
    - pcl_ros
    desc: "Follower for the turtlebot. Follows humans and robots around\n     by following\
      \ the centroid of a box points infront of the\n     turtlebot."
    license: BSD
    shortdesc: "Follower for the turtlebot. Follows humans and robots around\n   \
      \  by following the centroid o..."
    source: https://kforge.ros.org/turtlebot/turtlebot_apps
    website: http://ros.org/wiki/follower
  turtlebot_navigation:
    author: !!python/unicode 'Tully Foote'
    deps: []
    desc: turtlebot_navigation
    license: BSD
    shortdesc: turtlebot_navigation
    source: https://kforge.ros.org/turtlebot/turtlebot_apps
    website: http://ros.org/wiki/turtlebot_navigation
  turtlebot_teleop:
    author: !!python/unicode 'Melonee Wise'
    deps:
    - joy
    - geometry_msgs
    - roscpp
    desc: turtlebot_teleop
    license: BSD
    shortdesc: turtlebot_teleop
    source: https://kforge.ros.org/turtlebot/turtlebot_apps
    website: http://ros.org/wiki/turtlebot_teleop
turtlebot_viz:
  turtlebot_dashboard:
    author: !!python/unicode 'Melonee Wise'
    deps:
    - rxtools
    - robot_monitor
    - std_msgs
    - std_srvs
    - rospy
    - roslib
    - turtlebot_node
    desc: turtlebot_dashboard
    license: BSD
    shortdesc: turtlebot_dashboard
    source: https://kforge.ros.org/turtlebot/turtlebot_viz
    website: http://ros.org/wiki/turtlebot_dashboard
ua-ros-pkg:
  ax12_controller_core:
    author: !!python/unicode 'Arizona Robotics Research Group'
    deps:
    - rospy
    - std_msgs
    - ax12_driver_core
    - ua_controller_msgs
    - actionlib
    - pr2_controllers_msgs
    - trajectory_msgs
    desc: "This package contains a configurable node, services and a spawner script\n\
      \    to start, stop and restart one or more controller plugins. Reusable\n \
      \   controller types are defined for common AX-12+ motor joints. Both speed\
      \ and\n    torque can be set for each joint. This python package can be used\
      \ by more\n    specific robot controllers and all configurable parameters can\
      \ be loaded\n    via a yaml file."
    license: BSD
    shortdesc: Python AX-12 Controller Manager
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_controllers/ax12_controller_core
    website: http://ros.org/wiki/ax12_controller_core
  ax12_driver_core:
    author: !!python/unicode 'Antons Rebguns, Cody Jorgensen (UA Robotics Research
      Group)'
    deps:
    - rospy
    desc: "This package provides low level IO for Robotis Dynamixel servos. \n   \
      \     Fully supports and was tested with AX-12+, RX-28, RX-64, EX-106+ models.\n\
      \        Hardware specific constants and MotorState messages are defined for\
      \ \n        reading and writing information from/to the AX-12+ servos. This\
      \ low \n        level package won't be used directly by most users. The higher\
      \ \n        level ax12_controller_core and specific robot controllers use this\
      \ \n        package."
    license: BSD
    shortdesc: Python drivers for Robotis Dynamixel servos
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_drivers/ax12_driver_core
    website: http://ros.org/wiki/ax12_driver_core
  background_filters:
    author: !!python/unicode 'Daniel Hewlett, Antons Rebguns'
    deps:
    - roscpp
    - rosconsole
    - sensor_msgs
    - tf
    - pluginlib
    - filters
    - opencv2
    - cv_bridge
    - sensor_msgs
    - image_transport
    - geometry_msgs
    - nmpt
    - pcl
    - visualization_msgs
    desc: Currently only includes a simple filter for filtering floor points out of
      PointCloud data.
    license: BSD
    shortdesc: Filters for removing the background from sensor data
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_vision/background_filters
    website: http://ros.org/wiki/background_filters
  blackboard_demo:
    author: !!python/unicode 'Daniel Hewlett'
    deps:
    - roslisp
    - gbbopen
    - gazebo_plugins
    - wubble_actions
    desc: blackboard_demo
    license: BSD
    shortdesc: Demo application of GBBopen and Wubble Robot
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_experimental/blackboard_demo
    website: http://ros.org/wiki/blackboard_demo
  block_swat:
    author: !!python/unicode 'RobotLab'
    deps:
    - roscpp
    - rospy
    - roslib
    - std_msgs
    - geometry_msgs
    - gazebo
    - move_base_msgs
    - actionlib_msgs
    - wubble_actions
    desc: block_swat
    license: BSD
    shortdesc: block_swat
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_experimental/block_swat
    website: http://ros.org/wiki/block_swat
  charlie_controllers:
    author: !!python/unicode 'Arizona Robotics Research Group'
    deps:
    - rospy
    - rosnode
    - std_msgs
    - ax12_controller_core
    desc: charlie_controllers
    license: BSD
    shortdesc: charlie_controllers
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_controllers/charlie_controllers
    website: http://ros.org/wiki/charlie_controllers
  chr_6dm_imu:
    author: !!python/unicode 'Antons Rebguns'
    deps:
    - rospy
    - tf
    - sensor_msgs
    desc: chr_6dm_imu
    license: BSD
    shortdesc: chr_6dm_imu
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_experimental/chr_6dm_imu
    website: http://ros.org/wiki/chr_6dm_imu
  chr_6dm_imu_description:
    author: !!python/unicode 'Antons Rebguns'
    deps: []
    desc: Continas xacro macros for CHR-6dm IMU.
    license: BSD
    shortdesc: CH Robotics CHR-6dm IMU URDF description
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_robots/chr_6dm_imu_description
    website: http://ros.org/wiki/chr_6dm_imu_description
  color_based_tracking:
    author: !!python/unicode 'Jeremy Wright'
    deps:
    - cv_bridge
    - sensor_msgs
    - image_transport
    - geometry_msgs
    desc: wubble_vision
    license: BSD
    shortdesc: wubble_vision
    source: details.php?name=opencv2
    website: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_vision/color_based_tracking
  espeak:
    author: !!python/unicode 'Daniel Hewlett'
    deps:
    - rospy
    - std_msgs
    - std_srvs
    desc: "A trivial text-to-speech system to serve as a small reference \n    for\
      \ more interesting packages to come."
    license: BSD
    shortdesc: Trivial service interface to eSpeak TTS System
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_language/espeak
    website: http://ros.org/wiki/espeak
  game_faces:
    author: !!python/unicode 'Arizona Robotics Research Group'
    deps:
    - std_msgs
    - rospy
    - roscpp
    - opencv2
    desc: game_faces
    license: BSD
    shortdesc: game_faces
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_game_theory/game_faces
    website: http://ros.org/wiki/game_faces
  gbbopen:
    author: !!python/unicode 'Daniel Hewlett'
    deps:
    - roslisp
    - roslisp_runtime
    desc: gbbopen
    license: BSD
    shortdesc: The GBBopen Blackboard System
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_cognition/gbbopen
    website: http://ros.org/wiki/gbbopen
  gearbox:
    author: !!python/unicode 'Project maintainers Geoffrey Biggs,Alex Makarenko.'
    deps: []
    desc: "Gearbox provides a collection of usable peer-reviewed\n         robotics-related\
      \ libraries. Gearbox is not an integration\n         framework. Rather, it provides\
      \ a set of implementations,\n         without insisting on a standard API, for\
      \ use by any number\n         of existing frameworks."
    license: BSD
    shortdesc: Collection of robotics-related libraries
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_drivers/gearbox
    website: http://ros.org/wiki/gearbox
  hokuyo_urg_description:
    author: !!python/unicode 'UA Robotics Research Group'
    deps:
    - convex_decomposition
    - ivcon
    - urdf
    desc: hokuyo_urg_description
    license: BSD
    shortdesc: 3D Meshes and URDF for Hokuyo URG Laser
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_robots/hokuyo_urg_description
    website: http://ros.org/wiki/hokuyo_urg_description
  joystick_remapper:
    author: !!python/unicode 'Blaise Gassend'
    deps:
    - joy
    - rospy
    desc: "This node can be used to remap the buttons and axes of a joystick to\n\t\
      \tget them into a standard form that other nodes can then use\n\t\tindependently\
      \ of which joystick is actually being used."
    license: BSD
    shortdesc: Remaps joystick buttons and axes.
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_drivers/joystick_remapper
    website: http://ros.org/wiki/joystick_remapper
  logitech_usb_webcam:
    author: !!python/unicode 'Antons Rebguns'
    deps:
    - usb_cam
    desc: logitech_usb_webcam
    license: BSD
    shortdesc: logitech_usb_webcam
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_drivers/logitech_usb_webcam
    website: http://ros.org/wiki/logitech_usb_webcam
  nltk:
    author: !!python/unicode 'Derek Green'
    deps:
    - rospy
    desc: "NLTK is the Natural Langauge Toolkit, available from http://www.nltk.org/.\
      \ \n    This package is a wrapper to make NLTK functionality available in ROS."
    license: BSD
    shortdesc: "NLTK is the Natural Langauge Toolkit, available from http://www.nltk.org/.\
      \ \n    This package is..."
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_language/nltk
    website: http://ros.org/wiki/nltk
  nmpt:
    author: !!python/unicode 'Nicholas Butko, packaged for ROS by Antons Rebguns'
    deps:
    - opencv2
    desc: This package contains Nick's Machine Perception Toolbox (NMPT)
    license: Copyright (c) 2008 Nicholas Butko, Machine Perception Laboratory, University
      of California San Diego
    shortdesc: NMPT (Nick's Machine Perception Toolbox)
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_vision/nmpt
    website: http://mplab.ucsd.edu/~nick/NMPT/
  object_tracking:
    author: !!python/unicode 'Arizona Robotics Research Group'
    deps:
    - roscpp
    - opencv2
    - cv_bridge
    - image_transport
    - message_filters
    - std_msgs
    - sensor_msgs
    - geometry_msgs
    - std_srvs
    - background_filters
    - visualization_msgs
    - image_geometry
    - tf
    desc: object_tracking
    license: BSD
    shortdesc: object_tracking
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_vision/object_tracking
    website: http://ros.org/wiki/object_tracking
  oomdp_msgs:
    author: !!python/unicode 'Daniel Hewlett'
    deps:
    - std_msgs
    desc: Standard messages for communication with OO-MDP enviroments.
    license: BSD
    shortdesc: oomdp_msgs
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_verbs/oomdp_msgs
    website: http://ros.org/wiki/oomdp_msgs
  overhead_cam_description:
    author: !!python/unicode 'Jeremy'
    deps: []
    desc: overhead_cam_description
    license: BSD
    shortdesc: overhead_cam_description
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_robots/overhead_cam_description
    website: http://ros.org/wiki/overhead_cam_description
  path_learning_experiment:
    author: !!python/unicode 'Daniel Hewlett'
    deps:
    - rospy
    - actionlib
    - std_msgs
    - sensor_msgs
    - geometry_msgs
    - move_base_msgs
    - nav_msgs
    desc: path_learning_experiment
    license: BSD
    shortdesc: An experiment in learning path schemas
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_experimental/path_learning_experiment
    website: http://ros.org/wiki/path_learning_experiment
  phidgets_py_api:
    author: !!python/unicode 'Phidgets, Inc.'
    deps:
    - phidgetspp_c_api
    desc: This package contains the Official Phidgets Python API.
    license: Creative Commons Attribution 2.5 Canada License
    shortdesc: The Phidgets Python API
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_drivers/phidgets_py_api
    website: http://www.phidgets.com/programming_resources.php
  phidgets_ros:
    author: !!python/unicode 'UA Robotics Research Group'
    deps:
    - rospy
    - std_msgs
    - phidgets_py_api
    desc: ROSification of Phidgets sensors. Publishes sensor data to ROS topics.
    license: BSD
    shortdesc: ROS wrapper for Phidgets sensors
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_drivers/phidgets_ros
    website: http://ros.org/wiki/phidgets_ros
  plotter:
    author: !!python/unicode 'Daniel Hewlett'
    deps:
    - rospy
    - std_msgs
    - opencv2
    desc: Creates static plots that can be saved to a file or displayed. Basically
      a static version of rxplot.
    license: BSD
    shortdesc: A service for plotting data with matplotlib
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_experimental/plotter
    website: http://ros.org/wiki/plotter
  point_cloud_filters:
    author: !!python/unicode 'Antons Rebguns'
    deps:
    - sensor_msgs
    - roscpp
    - tf
    - filters
    - message_filters
    - pluginlib
    desc: point_cloud_filters
    license: BSD
    shortdesc: point_cloud_filters
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_experimental/point_cloud_filters
    website: http://ros.org/wiki/point_cloud_filters
  pybrain:
    author: !!python/unicode 'Antons Rebguns'
    deps: []
    desc: pybrain
    license: BSD
    shortdesc: pybrain
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_experimental/pybrain
    website: http://ros.org/wiki/pybrain
  saliency_tracking:
    author: !!python/unicode 'Antons Rebguns'
    deps:
    - roscpp
    - opencv2
    - cv_bridge
    - sensor_msgs
    - geometry_msgs
    - image_transport
    - nmpt
    - pr2_controllers_msgs
    - std_msgs
    - dynamic_reconfigure
    - driver_base
    desc: saliency_tracking
    license: BSD
    shortdesc: saliency_tracking
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_vision/saliency_tracking
    website: http://ros.org/wiki/saliency_tracking
  scikits:
    author: !!python/unicode 'Antons Rebguns'
    deps: []
    desc: scikits
    license: BSD
    shortdesc: scikits
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_experimental/scikits
    website: http://ros.org/wiki/scikits
  simulation_semantics:
    author: !!python/unicode 'Daniel Hewlett'
    deps:
    - roslisp
    - roslisp_runtime
    - cl_transforms
    - cl_utils
    - actionlib_lisp
    - gbbopen
    - wubble_description
    - gazebo_plugins
    - simulator_state
    - wubble_mdp
    - verb_learning
    - time_series
    - oomdp_msgs
    - geometry_msgs
    - std_msgs
    - std_srvs
    - plotter
    - map_server
    desc: simulation_semantics
    license: BSD
    shortdesc: simulation_semantics
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_verbs/simulation_semantics
    website: http://ros.org/wiki/simulation_semantics
  simulator_state:
    author: !!python/unicode 'Daniel Hewlett'
    deps:
    - roscpp
    - std_msgs
    - std_srvs
    - geometry_msgs
    - oomdp_msgs
    - gazebo
    - gazebo_tools
    - gazebo_plugins
    - bullet
    desc: Gazebo plugins for publishing the simulation state with relations.
    license: BSD
    shortdesc: simulator_state
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_verbs/simulator_state
    website: http://ros.org/wiki/simulator_state
  smart_arm_affordance:
    author: !!python/unicode 'UARobots'
    deps:
    - rospy
    - ax12_controller_core
    - phidgets_ros
    - std_msgs
    - message_filters
    - ua_controller_msgs
    desc: smart_arm_affordance
    license: BSD
    shortdesc: smart_arm_affordance
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_experimental/smart_arm_affordance
    website: http://ros.org/wiki/smart_arm_affordance
  smart_arm_controller:
    author: !!python/unicode 'UA Robotics Research Group'
    deps:
    - ax12_controller_core
    desc: Crust Crawler AX-12+ Smart Arm controller that uses ax12_driver_core and
      ax12_controller_core for motor control.
    license: BSD
    shortdesc: Crust Crawler AX-12+ Smart Arm controller
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_controllers/smart_arm_controller
    website: http://ros.org/wiki/smart_arm_controller
  smart_arm_description:
    author: !!python/unicode 'UA Robotics Research Group'
    deps:
    - rospy
    - std_msgs
    - convex_decomposition
    - ivcon
    - urdf
    - gazebo
    desc: smart_arm_description
    license: BSD
    shortdesc: 3D Meshes and URDF for the CrustCrawler SmartArm
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_robots/smart_arm_description
    website: http://ros.org/wiki/smart_arm_description
  smart_arm_kinematics:
    author: !!python/unicode 'Antons Rebguns'
    deps:
    - roscpp
    - openrave
    - geometry_msgs
    - tf
    - urdf
    desc: smart_arm_kinematics
    license: BSD
    shortdesc: smart_arm_kinematics
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_controllers/smart_arm_kinematics
    website: http://ros.org/wiki/smart_arm_kinematics
  swissranger_camera_description:
    author: !!python/unicode 'Antons Rebguns'
    deps:
    - convex_decomposition
    - ivcon
    - urdf
    desc: swissranger_camera_description
    license: BSD
    shortdesc: swissranger_camera_description
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_robots/swissranger_camera_description
    website: http://ros.org/wiki/swissranger_camera_description
  swistrack:
    author: !!python/unicode 'Distributed Intelligent Systems and Algorithms Laboratory
      (DISAL) and the LPM Vision Group at EPFL in Lausanne, Switzerland. Packaged
      for ROS build system by Antons Rebguns'
    deps:
    - roscpp
    - opencv2
    desc: "SwisTrack is a powerful tool for tracking robots, humans, animals and\n\
      \        objects using a camera or a recorded video as input source. It uses\n\
      \        OpenCV library for fast image processing and contains interfaces for\n\
      \        USB, FireWire and GigE cameras, as well as AVI files."
    license: GPL v3
    shortdesc: Multi-Object Tracking Software for Robotics and Biology
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_experimental/swistrack
    website: http://www5.epfl.ch/swis/page3080.html
  time_series:
    author: !!python/unicode 'Wesley Kerr (packaged for ROS by Daniel Hewlett)'
    deps:
    - rosjava
    - std_msgs
    - std_srvs
    desc: Algorithms for analyzing multivariate time series, including CAVE (Categorizing
      and Visualizing Episodes).
    license: BSD
    shortdesc: time_series
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_experimental/time_series
    website: http://ros.org/wiki/time_series
  ua_audio_capture:
    author: !!python/unicode 'Morgan Quigley'
    deps:
    - rospy
    - ua_audio_msgs
    - std_srvs
    - scikits
    - pybrain
    desc: "This package grabs a live audio stream from PortAudio and ships it across\
      \ the\n        ROS botnet. The program grabs the &quot;default&quot; audio stream.\
      \ I can't speak for\n        other distros, but on Ubuntu the default stream\
      \ is settable via the GNOME\n        &quot;System-&gt;Preferences-&gt;Sound&quot;\
      \ box. I set the &quot;Sound Capture&quot; field to &quot;ALSA&quot; and\n \
      \       use &quot;alsamixer&quot; on the command line to poke around until I\
      \ get the microphone\n        jack working. Each motherboard seems to be a little\
      \ different in how the\n        various jacks come up in ALSA.\n\n        In\
      \ XFCE (xubuntu), I couldn't find it in the GUI, but either right-click the\n\
      \        speaker icon in the taskbar, or type &quot;gnome-volume-control&quot;\
      \ in the console. \n        This will bring up a handy window which lets you\
      \ select the input device and\n        set the volume.\n\n        I assume there\
      \ is a way to do this all on headless boxen, but I haven't tried.\n        If\
      \ someone is sufficiently motivated to figure it out, let me know."
    license: BSD
    shortdesc: a simple audio capture node which streams raw audio
    source: details.php?name=roscpp
    website: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_experimental/ua_audio_capture
  ua_audio_fft:
    author: !!python/unicode 'robotlab'
    deps:
    - std_msgs
    - rospy
    - roscpp
    - ua_audio_msgs
    desc: ua_audio_fft
    license: BSD
    shortdesc: ua_audio_fft
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_experimental/ua_audio_fft
    website: http://ros.org/wiki/ua_audio_fft
  ua_audio_infomax:
    author: !!python/unicode 'Daniel Ford'
    deps:
    - rospy
    - std_msgs
    - std_srvs
    - pybrain
    desc: ua_audio_infomax
    license: BSD
    shortdesc: ua_audio_infomax
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_experimental/ua_audio_infomax
    website: http://ros.org/wiki/ua_audio_infomax
  ua_audio_msgs:
    author: !!python/unicode 'Morgan Quigley'
    deps: []
    desc: audio_msgs
    license: BSD
    shortdesc: audio_msgs
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_experimental/ua_audio_msgs
    website: http://pr.willowgarage.com/wiki/audio_msgs
  ua_audio_play:
    author: !!python/unicode 'Morgan Quigley'
    deps:
    - ua_audio_msgs
    desc: A minimal node which plays an audio stream captured by the audio_capture
      node.
    license: BSD
    shortdesc: plays an audio stream captured by audio_capture
    source: details.php?name=roscpp
    website: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_experimental/ua_audio_play
  ua_controller_msgs:
    author: !!python/unicode 'UA Robotics Research Group'
    deps: []
    desc: Common messages used throughout ua_controllers stack.
    license: BSD
    shortdesc: Common messages for ua_controllers
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_controllers/ua_controller_msgs
    website: http://ros.org/wiki/ua_controller_msgs
  ua_overhead_cam:
    author: !!python/unicode 'RobotLab'
    deps:
    - roscpp
    - visualization_msgs
    - prosilica_camera
    desc: ua_overhead_cam
    license: BSD
    shortdesc: ua_overhead_cam
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_drivers/ua_overhead_cam
    website: http://ros.org/wiki/ua_overhead_cam
  ua_woz_experiment:
    author: !!python/unicode 'robotlab'
    deps:
    - rospy
    - charlie_controllers
    - phidgets_ros
    - std_msgs
    desc: ua_woz_experiment
    license: BSD
    shortdesc: UA Wizard of Oz experiments with Charlie robot
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_apps/ua_woz_experiment
    website: http://ros.org/wiki/ua_woz_experiment
  ultraspeech:
    author: !!python/unicode 'Arizona Robotics Research Group'
    deps:
    - opencv2
    - image_proc
    - rospy
    - roscpp
    - camera1394
    desc: ultraspeech
    license: BSD
    shortdesc: ultraspeech
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_experimental/ultraspeech
    website: http://ros.org/wiki/ultraspeech
  verb_learning:
    author: !!python/unicode 'Daniel Hewlett'
    deps:
    - rosjava
    - time_series
    - wubble_world_2d
    - oomdp_msgs
    desc: verb_learning
    license: BSD
    shortdesc: verb_learning
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_verbs/verb_learning
    website: http://ros.org/wiki/verb_learning
  videre_stereo_cam:
    author: !!python/unicode 'Antons Rebguns'
    deps:
    - roscpp
    - opencv2
    - stereo_image_proc
    - image_transport
    - diagnostic_updater
    - sensor_msgs
    - stereo_msgs
    - dynamic_reconfigure
    - driver_base
    - tf
    desc: "This driver supports both regular and STOC Videre Stereo cameras. It exposes\
      \ standard ROS interface for\n        cameras and publishes camera_info and\
      \ image_raw topics pair for both left and right imager of the stereo\n     \
      \   camera. This set of topics can change depending on the selected processing\
      \ mode (STOC devices only). Most\n        of the configuration can be done while\
      \ driver is running via dynamic_reconfigure GUI."
    license: BSD
    shortdesc: Driver for Videre Stereo cameras
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_drivers/videre_stereo_cam
    website: http://ros.org/wiki/videre_stereo_cam
  videre_stoc_description:
    author: !!python/unicode 'Daniel Hewlett'
    deps:
    - pr2_description
    desc: videre_stoc_description
    license: BSD
    shortdesc: URDF description of 9cm Videre STOC Camera
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_robots/videre_stoc_description
    website: http://ros.org/wiki/videre_stoc_description
  w2_object_manipulation_launch:
    author: !!python/unicode 'Antons Rebguns'
    deps:
    - rospy
    - tabletop_object_detector
    - tabletop_collision_map_processing
    - object_manipulation_msgs
    - kinematics_msgs
    - move_arm_msgs
    - mapping_msgs
    - actionlib
    - ua_audio_capture
    - ua_audio_infomax
    - ua_controller_msgs
    - ax12_controller_core
    - pr2_controllers_msgs
    - interpolated_ik_motion_planner
    - wubble2_robot
    desc: w2_object_manipulation_launch
    license: BSD
    shortdesc: w2_object_manipulation_launch
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_experimental/w2_object_manipulation_launch
    website: http://ros.org/wiki/w2_object_manipulation_launch
  wubble2_robot:
    author: !!python/unicode 'Antons Rebguns'
    deps:
    - wubble_description
    - erratic_player
    - hokuyo_node
    - wubble_teleop
    - wubble_mapping
    - wubble_actions
    - wubble_2dnav
    - phidgets_ros
    - actionlib
    - actionlib_msgs
    - move_arm_msgs
    - move_base_msgs
    - motion_planning_msgs
    - object_manipulation_msgs
    - geometry_msgs
    - ua_audio_msgs
    - interpolated_ik_motion_planner
    desc: wubble_robot
    license: BSD
    shortdesc: Wubble2 robot hardware
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_apps/wubble2_robot
    website: http://ros.org/wiki/wubble2_robot
  wubble_2dnav:
    author: !!python/unicode 'Antons Rebguns'
    deps:
    - wubble_navigation_global
    desc: This application allows the Wubble robot to navigate autonomously with a
      pre-specified static map.
    license: BSD
    shortdesc: Global navigation for the Wubble robot.
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/wubble_navigation_apps/wubble_2dnav
    website: http://ros.org/wiki/wubble_2dnav
  wubble_2dnav_local:
    author: !!python/unicode 'Antons Rebguns'
    deps:
    - pr2_navigation_local
    desc: This application allows the Wubble to navigate autonomously in an odometric
      frame.
    license: BSD
    shortdesc: Local navigation for the Wubble robot.
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/wubble_navigation_apps/wubble_2dnav_local
    website: http://ros.org/wiki/wubble_2dnav_local
  wubble_2dnav_slam:
    author: !!python/unicode 'Antons Rebguns'
    deps:
    - wubble_navigation_slam
    desc: This application allows the Wubble to navigate autonomously while also building
      a map of its environment as it drives along.
    license: BSD
    shortdesc: SLAM-based navigation for the Wubble robot.
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/wubble_navigation_apps/wubble_2dnav_slam
    website: http://ros.org/wiki/wubble_2dnav_slam
  wubble_actions:
    author: !!python/unicode 'Anh Tran'
    deps:
    - roscpp
    - rospy
    - roslib
    - std_msgs
    - geometry_msgs
    - actionlib_msgs
    - move_base_msgs
    - pr2_msgs
    - pr2_controllers_msgs
    - ua_controller_msgs
    - actionlib
    - tf
    - smart_arm_controller
    - smart_arm_kinematics
    - wubble_controllers
    - ax12_controller_core
    desc: wubble_actions
    license: BSD
    shortdesc: Action libraries for various controllers of the Wubble robot
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_controllers/wubble_actions
    website: http://ros.org/wiki/wubble_actions
  wubble_arm_description:
    author: !!python/unicode 'Antons Rebguns'
    deps:
    - convex_decomposition
    - ivcon
    desc: 3D model of a Wubble Arm (Dynamixel-based 7 DOF robotic arm with 2 DOF gripper).
    license: BSD
    shortdesc: 3D Meshes and URDF for the Wubble Arm
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_robots/wubble_arm_description
    website: http://ros.org/wiki/wubble_arm_description
  wubble_arm_kinematics:
    author: !!python/unicode 'Antons Rebguns, with most of the code borrowed from
      pr2_arm_kinematics'
    deps:
    - roscpp
    - openrave
    - geometry_msgs
    - angles
    - tf
    - tf_conversions
    - urdf
    - kinematics_base
    - kinematics_msgs
    - kdl
    - kdl_parser
    desc: This package provides a kinematics implementation for the Wubble robot arm.
      It can be used to compute forward and inverse kinematics.
    license: BSD
    shortdesc: wubble_arm_kinematics
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_controllers/wubble_arm_kinematics
    website: http://ros.org/wiki/wubble_arm_kinematics
  wubble_arm_kinematics_constraint_aware:
    author: !!python/unicode 'Antons Rebguns'
    deps:
    - wubble_arm_kinematics
    - collision_space
    - planning_models
    - planning_environment
    - mapping_msgs
    desc: wubble_arm_kinematics_constraint_aware
    license: BSD
    shortdesc: wubble_arm_kinematics_constraint_aware
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_controllers/wubble_arm_kinematics_constraint_aware
    website: http://ros.org/wiki/wubble_arm_kinematics_constraint_aware
  wubble_blocks:
    author: !!python/unicode 'Anh Tran'
    deps:
    - roscpp
    - rospy
    - roslib
    - std_msgs
    - geometry_msgs
    - sensor_msgs
    - phidgets_ros
    - ua_controller_msgs
    - wubble_actions
    - rviz
    - object_tracking
    desc: wubble_blocks
    license: BSD
    shortdesc: Blocks World demo of the Wubble robot
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_apps/wubble_blocks
    website: http://ros.org/wiki/wubble_blocks
  wubble_controllers:
    author: !!python/unicode 'Arizona Robotics Research Group'
    deps:
    - ax12_controller_core
    - pr2_controllers_msgs
    - sensor_msgs
    desc: Controllers for Wubble Robot (head pan/tilt, laser tilt, etc.)
    license: BSD
    shortdesc: Controllers for Wubble Robot
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_controllers/wubble_controllers
    website: http://ros.org/wiki/wubble_controllers
  wubble_description:
    author: !!python/unicode 'UA Robotics Research Group'
    deps:
    - xacro
    - erratic_description
    - smart_arm_description
    - hokuyo_urg_description
    - swissranger_camera_description
    - videre_stoc_description
    - gazebo
    - gazebo_tools
    - gazebo_worlds
    - gazebo_plugins
    - erratic_gazebo_plugins
    - wubble_environments
    - fake_localization
    - move_base
    - map_server
    - stereo_image_proc
    - robot_self_filter
    - laser_filters
    - pr2_controller_manager
    - pr2_gazebo_plugins
    - rospy
    - geometry_msgs
    - tf
    - assisted_teleop
    desc: wubble_description
    license: BSD
    shortdesc: URDF description for the Wubble Robot
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_robots/wubble_description
    website: http://ros.org/wiki/wubble_description
  wubble_environments:
    author: !!python/unicode 'Anh Tran'
    deps:
    - gazebo
    - pr2_gazebo
    desc: wubble_environments
    license: BSD
    shortdesc: Gazebo simulation environments for Wubble World
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/wubble_world/wubble_environments
    website: http://ros.org/wiki/wubble_environments
  wubble_mapping:
    author: !!python/unicode 'UA Robot Lab'
    deps:
    - wubble_teleop
    - wubble_description
    - hokuyo_node
    - gmapping
    - rviz
    desc: wubble_mapping
    license: BSD
    shortdesc: Wubble robot gmapping application
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_apps/wubble_mapping
    website: http://ros.org/wiki/wubble_mapping
  wubble_mdp:
    author: !!python/unicode 'Daniel Hewlett'
    deps:
    - roscpp
    - actionlib
    - tf
    - bullet
    - geometry_msgs
    - move_base_msgs
    - oomdp_msgs
    - simulator_state
    - wubble_description
    desc: An OO-MDP Environment for the Wubble Robot in simulation.
    license: BSD
    shortdesc: wubble_mdp
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_verbs/wubble_mdp
    website: http://ros.org/wiki/wubble_mdp
  wubble_navigation_config:
    author: !!python/unicode 'Antons Rebguns'
    deps:
    - move_base
    desc: "This package holds common configuration files for running the\n       \
      \ <a href=\"http://www.ros.org/wiki/move_base\">move_base</a> node\n       \
      \ on the Wubble robot."
    license: BSD
    shortdesc: Wubble-specific move_base configuration
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/wubble_navigation/wubble_navigation_config
    website: http://ros.org/wiki/wubble_navigation_config
  wubble_navigation_global:
    author: !!python/unicode 'Antons Rebguns'
    deps:
    - move_base
    - amcl
    - wubble_navigation_config
    desc: This package holds XML files for running the <a href="http://www.ros.org/wiki/move_base">move_base</a>
      node on a Wubble robot. The <a href="http://www.ros.org/wiki/move_base">move_base</a>
      node is configured to run over a pre-specified static map.
    license: BSD
    shortdesc: XML files for running global navigation assuming a static map on a
      Wubble robot.
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/wubble_navigation/wubble_navigation_global
    website: http://ros.org/wiki/wubble_navigation_global
  wubble_navigation_local:
    author: !!python/unicode 'Antons Rebguns'
    deps:
    - move_base
    - wubble_navigation_config
    desc: This package holds xml files for running the <a href="http://www.ros.org/wiki/move_base">move_base</a>
      node on a Wubble robot in an odometric frame. No static map is needed for the
      <a href="http://www.ros.org/wiki/move_base">move_base</a> node in this configuration.
    license: BSD
    shortdesc: XML files for running the move_base node on a Wubble in an odometric
      frame.
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/wubble_navigation/wubble_navigation_local
    website: http://ros.org/wiki/wubble_navigation_local
  wubble_navigation_slam:
    author: !!python/unicode 'Antons Rebguns'
    deps:
    - gmapping
    - move_base
    - wubble_navigation_config
    desc: This package holds launch files for running the <a href="http://www.ros.org/wiki/move_base">move_base</a>
      node in conjunction with [[gmapping | SLAM]] on a Wubble robot.
    license: BSD
    shortdesc: XML files for running SLAM with the move_base node on a Wubble robot.
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/wubble_navigation/wubble_navigation_slam
    website: http://ros.org/wiki/wubble_navigation_slam
  wubble_robot:
    author: !!python/unicode 'UA Robot Lab'
    deps:
    - wubble_description
    - erratic_player
    - hokuyo_node
    - wubble_teleop
    - wubble_mapping
    - wubble_actions
    - wubble_2dnav
    desc: wubble_robot
    license: BSD
    shortdesc: Wubble robot hardware
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_apps/wubble_robot
    website: http://ros.org/wiki/wubble_robot
  wubble_teach:
    author: !!python/unicode 'Daniel Hewlett'
    deps:
    - rosjava
    - oomdp_msgs
    - verb_learning
    desc: teaching_interface
    license: BSD
    shortdesc: teaching_interface
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_verbs/wubble_teach
    website: http://ros.org/wiki/teaching_interface
  wubble_teleop:
    author: !!python/unicode 'Daniel Hewlett'
    deps:
    - roscpp
    - rospy
    - geometry_msgs
    - sensor_msgs
    - pr2_controllers_msgs
    - joy
    - joystick_remapper
    - move_base
    desc: wubble_teleop
    license: BSD
    shortdesc: Joystick teleop demo of the Wubble robot
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_apps/wubble_teleop
    website: http://ros.org/wiki/wubble_teleop
  wubble_world_2d:
    author: !!python/unicode 'Daniel Hewlett'
    deps:
    - rosjava
    desc: wubble_world_2d
    license: BSD
    shortdesc: wubble_world_2d
    source: http://ua-ros-pkg.googlecode.com/svn/trunk/arrg/ua_verbs/wubble_world_2d
    website: http://ros.org/wiki/wubble_world_2d
ubc-ros-pkg:
  2dnav_powerbot:
    author: !!python/unicode 'Marius Muja'
    deps:
    - amcl
    - gmapping
    - powerbot_player
    - sicktoolbox_wrapper
    - map_server
    - move_base
    desc: Package containing launch files for starting the navigation stack on teh
      PowerBot robot.
    license: BSD
    shortdesc: "Package containing launch files for starting the navigation stack\
      \ on teh PowerBot robot.\n  ..."
    source: https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg/trunk/navigation/2dnav_powerbot
    website: https://bugs.cs.ubc.ca/cgi-bin/twiki/view/LCI/TheSemanticRobotVisionChallenge
  DPM:
    author: !!python/unicode 'Kenji Okuma'
    deps: []
    desc: Python implementation of Pedro Felzenszwalb's deformable part models detector.
    license: ''
    shortdesc: Python implementation of Pedro Felzenszwalb's deformable part models
      detector.
    source: details.php?name=rospy
    website: https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg/trunk/resources/DPM
  batchdetector:
    author: !!python/unicode 'Scott Helmer and David Meger and Marius Muja'
    deps:
    - std_msgs
    - rospy
    - roscpp
    - sensor_msgs
    - image_transport
    - opencv2
    - cv_bridge
    - recognition_msgs
    - hyp_filter
    desc: "This package contains a variety of nodes that distribute requests for detection\
      \ and for\n    collecting the responses from detectors. The code for these nodes\
      \ is found in \n    src/batchdetector/nodes.\n    \n    Collator collects hypotheses\
      \ generated by a set of detectors, and outputs images\n    with bounding boxes\
      \ from this collection. This node is geared towards producing results\n    for\
      \ the SRVC.\n    \n    Dispatcher listens for new scenes that are ready for\
      \ processing and sends messages that \n    dictate which detectors are run on\
      \ the scenes. Currently it simply sends out messages to all\n    detectors."
    license: BSD
    shortdesc: batchdetector
    source: https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg/trunk/recognition/batchdetector
    website: http://ros.org/wiki/batchdetector
  bumblebee1394:
    author: !!python/unicode 'Marius Muja'
    deps:
    - rostest
    - roscpp
    - rospy
    - std_msgs
    - sensor_msgs
    - diagnostic_updater
    - opencv2
    - driver_base
    - libdc1394v2
    - image_transport
    - self_test
    - timestamp_tools
    - camera_calibration_parsers
    desc: This package contains a ROS node for accessing the PtGrey Bumblebee cameras.
    license: BSD
    shortdesc: This package contains a ROS node for accessing the PtGrey Bumblebee
      cameras.
    source: https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg/trunk/drivers/bumblebee1394
    website: http://www.ros.org/wiki/dc1394_camera
  bumblebee_stereo:
    author: !!python/unicode 'Marius Muja'
    deps:
    - triclops
    - digiclops
    - opencv2
    - cv_bridge
    - sensor_msgs
    - image_transport
    - bumblebee1394
    desc: This package contains a node that computes stereo(disparity, point cloud)
      from a pair of stereo images. It uses the PtGrey triclops library.
    license: BSD
    shortdesc: bumblebee_stereo
    source: https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg/trunk/drivers/bumblebee_stereo
    website: http://pr.willowgarage.com/wiki/bumblebee_stereo
  calibration:
    author: !!python/unicode ''
    deps: []
    desc: calibration
    license: BSD
    shortdesc: calibration
    source: https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg/trunk/calibration
    website: http://ros.org/wiki/calibration
  capture:
    author: !!python/unicode ''
    deps: []
    desc: Capture is a tool for periodic image capturing with digital Canon cameras.
      It is licensed under GPL  and it was developed for Linux. Although there were
      some attempts to port the underlying libptp to MacOS, i do not know if this
      effort was successful.
    license: ''
    shortdesc: Capture is a tool for periodic image capturing with digital Canon cameras.
      It is licensed u...
    source: details.php?name=libptp2
    website: https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg/trunk/resources/capture
  contour_detector:
    author: !!python/unicode ''
    deps:
    - rospy
    - opencv2
    - cv_bridge
    - sift_detector
    - recognition_msgs
    - batchdetector
    desc: "This package contains the code for contour detector node, with most of\
      \ the detection\n     and ros interface code lying in src/contour_detector/nodes\
      \ and some c stuff for speed \n     in src/contour_detector/EdgeDetection.\n\
      \     \n     The contour detector node is in contour_driver.py, and this runs\
      \ training and run-time\n     behaviour. At test-time the node listens for detector_request\
      \ messages and returns \n     hypothesis messages. It's a spammy detector, designed\
      \ originally to be used in conjunction\n     with stereo point clouds, but this\
      \ was disabled."
    license: BSD
    shortdesc: contour_detector
    source: https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg/trunk/recognition/contour_detector
    website: http://ros.org/wiki/contour_detector
  correct_drift:
    author: !!python/unicode 'Marius Muja'
    deps:
    - roscpp
    - sensor_msgs
    - tf
    - tf_conversions
    - point_cloud_mapping
    - laser_geometry
    desc: Package that tries to correct from drift of the map frame when integrating
      multiview data.
    license: BSD
    shortdesc: correct_drift
    source: https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg/trunk/mapping/correct_drift
    website: http://ros.org/wiki/correct_drift
  digiclops:
    author: !!python/unicode ''
    deps: []
    license: ''
    shortdesc: PtGrey digiclops library
    source: list.php
    website: https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg/trunk/resources/digiclops
  executive_srvc:
    author: !!python/unicode 'Marius Muja'
    deps:
    - rospy
    - geometry_msgs
    - navigation_srvs
    - move_base_msgs
    - photo_cam
    - table_object_detector
    - ptu_controller
    - launch_manager
    - actionlib
    - navigation_goals
    - artag_register
    - UBC_VRS_utils
    desc: This node contains the executive used during the SRVC contest, responsible
      for the high level behaviour of the robot.
    license: BSD
    shortdesc: executive_srvc
    source: https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg/trunk/highlevel/executive_srvc
    website: http://ros.org/wiki/executive_srvc
  felz_detector:
    author: !!python/unicode 'Ankur Gupta'
    deps:
    - rospy
    - DPM
    - batchdetector
    - recognition_msgs
    - opencv2
    - cv_bridge
    - std_msgs
    - sensor_msgs
    - image_transport
    desc: "A ROS node that wraps DPM(Deformable Parts Model) detector code. One node\
      \ is responsible for publishing \n     hypothesis of one particular class. It\
      \ used the model trained using DPM training code in the DPM node."
    license: BSD
    shortdesc: felz_detector
    source: https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg/trunk/recognition/felz_detector
    website: http://ros.org/wiki/felz_detector
  hyp_filter:
    author: !!python/unicode 'Ankur Gupta'
    deps:
    - rospy
    - recognition_msgs
    - pyUtils
    desc: "A node that filters hypothesis generated by a detector based on the \n\t\
      precision-recall curve for that particluar class and/or algorithm. \n\tIt is\
      \ responsible for assigning a confidence score to each detection \n\thypothesis\
      \ which can be used to compare detection confidences across \n\talgorithms and\
      \ classes."
    license: BSD
    shortdesc: hyp_filter
    source: https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg/trunk/recognition/hyp_filter
    website: http://ros.org/wiki/hyp_filter
  label_scene_3D:
    author: !!python/unicode 'Scott Helmer, David Meger and Marius Muja'
    deps:
    - opencv2
    - UBC_VRS_utils
    desc: label_scene_3D - This module performs scene labeling infernce. Based on
      a number of classifier responses and the scene geometry, finds the set of objects
      that's most likely to be present.
    license: BSD
    shortdesc: label_scene_3D
    source: https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg/trunk/recognition/label_scene_3D
    website: http://ros.org/wiki/label_scene_3D
  launch_manager:
    author: !!python/unicode 'Marius Muja'
    deps:
    - rospy
    - roslaunch
    desc: This package containg a launch manager node capable of starting and stopping
      launch files on teh fly. In the SRVC contest this was used to switch from a
      local navigation stack to a global navigation stack.
    license: BSD
    shortdesc: launch_manager
    source: https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg/trunk/highlevel/launch_manager
    website: http://ros.org/wiki/launch_manager
  libptp2:
    author: !!python/unicode ''
    deps: []
    license: ''
    shortdesc: "libptp2 is a library used to communicate with PTP devices like still\n\
      \        imaging camera..."
    source: list.php
    website: https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg/trunk/resources/libptp2
  navigation_goals:
    author: !!python/unicode 'Marius Muja'
    deps:
    - roscpp
    - geometry_msgs
    - nav_msgs
    - opencv2
    - cv_bridge
    - navigation_srvs
    - point_cloud_mapping
    desc: This package contains several nodes that generate the goals that the robot
      should explore inside an environment.
    license: BSD
    shortdesc: navigation_goals
    source: https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg/trunk/navigation/navigation_goals
    website: http://ros.org/wiki/highlevel
  navigation_srvs:
    author: !!python/unicode 'Marius Muja'
    deps:
    - geometry_msgs
    - sensor_msgs
    desc: This package contains definitions of services used by the different navigation
      algorithms used in the SRVC contest.
    license: BSD
    shortdesc: navigation_srvs
    source: https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg/trunk/navigation/navigation_srvs
    website: http://ros.org/wiki/navigation_srvs
  nips_demo:
    author: !!python/unicode 'Marius Muja'
    deps:
    - srvc
    desc: NIPS demo
    license: BSD
    shortdesc: NIPS demo
    source: https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg/trunk/highlevel/nips_demo
    website: http://ros.org/wiki/srvc
  object_graph:
    author: !!python/unicode 'David Meger'
    deps:
    - point_cloud_mapping
    - roscpp
    - std_msgs
    - sensor_msgs
    - geometry_msgs
    - recognition_msgs
    - tf
    - opencv2
    - cv_bridge
    desc: object_graph
    license: BSD
    shortdesc: object_graph
    source: https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg/trunk/mapping/object_graph
    website: http://ros.org/wiki/scene_server
  online_results:
    author: !!python/unicode 'Dave Meger'
    deps:
    - opencv2
    - cv_bridge
    - sensor_msgs
    - recognition_msgs
    - image_transport
    desc: This package is used for displaying the online results during the contest.
      This image is published on the /online_results topic.
    license: BSD
    shortdesc: online_results
    source: https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg/trunk/recognition/online_results
    website: http://ros.org/wiki/online_results
  photo_cam:
    author: !!python/unicode 'Marius Muja'
    deps:
    - rospy
    - std_msgs
    - sensor_msgs
    - opencv2
    - cv_bridge
    - image_transport
    - capture
    desc: 'A ROS node for remote capturing pictures using a consumer digital camera
      that supports remote capture. For a list of cameras supporting remote control
      see: http://www.gphoto.org/doc/remote/'
    license: BSD
    shortdesc: A ROS node for remote capturing pictures using a consumer digital camera
      that supports remote...
    source: https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg/trunk/drivers/photo_cam
    website: http://ros.org/wiki/photo_cam
  powerbot:
    author: !!python/unicode 'Marius Muja'
    deps:
    - powerbot_defs
    - joy
    - pr2_teleop
    - ptu_controller
    - robot_state_publisher
    - hokuyo_node
    - laser_assembler
    - pr2_laser_snapshotter
    - sicktoolbox_wrapper
    - photo_cam
    - bumblebee_stereo
    desc: Package containing launch files for starting the hardware nodes on the PowerBot
      robot.
    license: BSD
    shortdesc: Package containing launch files for starting the hardware nodes on
      the PowerBot robot.
    source: details.php?name=powerbot_player
    website: https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg/trunk/robots/powerbot
  powerbot_defs:
    author: !!python/unicode 'Marius Muja'
    deps:
    - urdf
    desc: Powerbot URDF definitions.
    license: BSD
    shortdesc: Powerbot URDF definitions.
    source: details.php?name=xacro
    website: https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg/trunk/robots/powerbot_defs
  powerbot_player:
    author: !!python/unicode 'Marius Muja'
    deps:
    - player
    - std_msgs
    - geometry_msgs
    - nav_msgs
    - pr2_msgs
    - tf
    desc: A ROS node that wraps up the Player p2os driver, which provides access to
      the PowerBot robot (also other ActivMedia mobile robots). This node was derived
      from the erratic_player node.
    license: BSD
    shortdesc: powerbot_player
    source: details.php?name=roscpp
    website: https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg/trunk/drivers/powerbot_player
  ptu_controller:
    author: !!python/unicode 'Marius Muja and David Meger'
    deps:
    - roscpp
    - sensor_msgs
    - geometry_msgs
    - angles
    - joy
    - tf
    desc: This package contains a node that controls the PTU-46-17.5 pan-tilt unit
      from Directed Perceptions. It uses the ptu46 driver from Player with slight
      modifications.
    license: BSD
    shortdesc: ptu_controller
    source: https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg/trunk/drivers/ptu_controller
    website: http://ros.org/wiki/ptu_controller
  recognition_msgs:
    author: !!python/unicode 'Marius Muja'
    deps:
    - std_msgs
    - sensor_msgs
    - geometry_msgs
    desc: This package contains messages used by the recognition stack.
    license: BSD
    shortdesc: recognition_msgs
    source: https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg/trunk/recognition/recognition_msgs
    website: http://ros.org/wiki/recognition_msgs
  register_image:
    author: !!python/unicode ''
    deps:
    - sensor_msgs
    - geometry_msgs
    - opencv2
    - cv_bridge
    - roscpp
    - std_msgs
    - image_transport
    - recognition_msgs
    - visualization_msgs
    - eigen
    - tf
    desc: register_image
    license: BSD
    shortdesc: register_image
    source: https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg/trunk/mapping/register_image
    website: http://ros.org/wiki/register_image
  saliency_attention:
    author: !!python/unicode 'LCI USER'
    deps:
    - rospy
    - roscpp
    - MSER
    - visualization_msgs
    - topic_synchronizer2
    - geometry_msgs
    - opencv2
    - cv_bridge
    - sensor_msgs
    - image_transport
    desc: attention
    license: BSD
    shortdesc: saliency_attention
    source: https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg/trunk/attention/saliency_attention
    website: http://ros.org/wiki/saliency_attention
  scene_server:
    author: !!python/unicode 'Marius Muja and David Meger'
    deps:
    - point_cloud_mapping
    - roscpp
    - std_msgs
    - sensor_msgs
    - geometry_msgs
    - image_transport
    - recognition_msgs
    - tf
    - opencv2
    - cv_bridge
    - artag_register
    - UBC_VRS_utils
    desc: "Scene server is a data storage node that allows numerous visual processing\
      \ algorithms \n     such as object recognizers and 3D spatial reasoning nodes\
      \ to run on the same set of data.\n     \n     The function of scene server\
      \ is to synchronize incoming sensor information, serve this information\n  \
      \   to various processing nodes, and finally to correlate the results of each\
      \ of these nodes in a consistent\n     format to be viewed by the remainder\
      \ of the system."
    license: BSD
    shortdesc: scene_server
    source: https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg/trunk/recognition/scene_server
    website: http://ros.org/wiki/scene_server
  sift_detector:
    author: !!python/unicode 'Scott Helmer'
    deps:
    - rospy
    - opencv2
    - cv_bridge
    - batchdetector
    - recognition_msgs
    - scene_server
    desc: "This package contains the object detector based upon sift matching, most\
      \ of the \n     code residing in src/sift_detector/nodes\n     \n     sift_driver\
      \ contains the functions to train sift detector nodes and to run these \n  \
      \   nodes. This module is primiarly an interface between the sift-detector and\
      \ ros. \n     The node itself contains a set of detectors (one for each category)\
      \ and listens \n     for detection_request messages and returns hypothesis messages.\n\
      \     \n     srvc_matcher actually does the detection and the detection with\
      \ the help help of the \n     other modules. It is possible to disentangle this\
      \ and use it seperately from ros.\n     \n      bin/keypoints is binary for\
      \ the sift feature extractor, whose code we cannot release."
    license: BSD
    shortdesc: sift_detector
    source: https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg/trunk/recognition/sift_detector
    website: http://ros.org/wiki/sift_detector
  srvc:
    author: !!python/unicode 'Marius Muja'
    deps:
    - online_results
    - powerbot
    - 2dnav_powerbot
    - felz_detector
    - scene_server
    - sift_detector
    - batchdetector
    - contour_detector
    - hokuyo_node
    - DPM
    - webImages
    - pyUtils
    - executive_srvc
    desc: This package contains scripts and launch files for starting the software
      and robot leagues in the SRVC contest.
    license: BSD
    shortdesc: This package contains scripts and launch files for starting the software
      and robot leagues ...
    source: https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg/trunk/highlevel/srvc
    website: http://ros.org/wiki/srvc
  tablescan:
    author: !!python/unicode 'Matthew Baumann'
    deps:
    - std_msgs
    - sensor_msgs
    - geometry_msgs
    - roscpp
    - rospy
    - opencv2
    - cv_bridge
    desc: tablescan
    license: BSD
    shortdesc: tablescan
    source: https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg/trunk/resources/tablescan
    website: http://ros.org/wiki/tablescan
  training_data:
    author: !!python/unicode ''
    deps: []
    desc: training_data
    license: BSD
    shortdesc: training_data
    source: https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg/trunk/training_data
    website: http://ros.org/wiki/training_data
  ubc_vrs_annotation_tools:
    author: !!python/unicode ''
    deps:
    - opencv2
    desc: visual_annotation
    license: BSD
    shortdesc: visual_annotation
    source: https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg/trunk/ubc_vrs/ubc_vrs_annotation_tools
    website: http://ros.org/wiki/visual_annotation
  ubc_vrs_data_collection:
    author: !!python/unicode 'David Meger'
    deps:
    - sensor_msgs
    - nav_msgs
    - register_image
    - photo_cam
    - sensor_msgs
    - cv_bridge
    - message_filters
    - ubc_vrs_utilities
    - megerLabelSceneCvpr2011
    desc: ubc_vrs_data_collection - Helper scripts to add new data to the database.
    license: BSD
    shortdesc: ubc_vrs_data_collection
    source: https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg/trunk/ubc_vrs/ubc_vrs_data_collection
    website: http://ros.org/wiki/ubc_vrs_data_collection
  ubc_vrs_result_analysis:
    author: !!python/unicode ''
    deps: []
    desc: ubc_vrs_result_analysis
    license: BSD
    shortdesc: ubc_vrs_result_analysis
    source: https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg/trunk/ubc_vrs/ubc_vrs_result_analysis
    website: http://ros.org/wiki/ubc_vrs_result_analysis
  ubc_vrs_utilities:
    author: !!python/unicode 'David Meger'
    deps:
    - rospy
    - opencv2
    - sensor_msgs
    - nav_msgs
    - visualization_msgs
    - geometry_msgs
    - tf
    desc: ubc_vrs_utilities - Support functions that have been used to create the
      dataset and helper functions to access the data and geometry.
    license: BSD
    shortdesc: ubc_vrs_utilities
    source: https://ubc-ros-pkg.svn.sourceforge.net/svnroot/ubc-ros-pkg/trunk/ubc_vrs/ubc_vrs_utilities
    website: http://ros.org/wiki/ubc_vrs_utilities
ucsb-ros-pkg:
  create_joy:
    author: !!python/unicode 'Paul Filitchkin'
    deps:
    - std_msgs
    - roscpp
    - joy
    - geometry_msgs
    - create_node
    desc: Provides joystick control for the iRobot Create.
    license: BSD
    shortdesc: create_joy
    source: https://ucsb-ros-pkg.googlecode.com/svn/trunk/create_joy
    website: http://code.google.com/p/ucsb-ros-pkg/wiki/create_webcam
  create_kinect:
    author: !!python/unicode 'Paul Filitchkin and Brian Satzinger'
    deps:
    - std_msgs
    - sensor_msgs
    - roscpp
    - pcl
    - pcl_ros
    - visualization_msgs
    - geometry_msgs
    - create_node
    - tf
    - joy
    desc: This first test implements a simple bump bot where the Create drives forward
      while avoiding obstacles
    license: BSD
    shortdesc: create_kinect
    source: https://ucsb-ros-pkg.googlecode.com/svn/trunk/create_kinect
    website: https://code.google.com/p/ucsb-ros-pkg/wiki/create_kinect
  create_webcam:
    author: !!python/unicode 'Paul Filitchkin'
    deps:
    - image_transport
    - opencv2
    - cv_bridge
    - create_node
    - joy
    - create_joy
    desc: This package enables users to remotely view/transmit webcam images and control
      an iRobot Create with a joystick.  Webcam images can be viewed locally or they
      can be compressed and transmitted over the network.  A teleoperation node is
      included to provide joystick control using the create_node package.
    license: BSD
    shortdesc: create_webcam
    source: https://ucsb-ros-pkg.googlecode.com/svn/trunk/create_webcam
    website: https://code.google.com/p/ucsb-ros-pkg/wiki/create_webcam
  surf_object_recognition:
    author: !!python/unicode 'Paul Filitchkin'
    deps:
    - image_transport
    - opencv2
    - cv_bridge
    desc: surf_test
    license: BSD
    shortdesc: surf_object_recognition
    source: https://ucsb-ros-pkg.googlecode.com/svn/trunk/surf_object_recognition
    website: http://ros.org/
umd-ros-pkg:
  ctx2140:
    author: !!python/unicode ''
    deps:
    - roscpp
    - power_msgs
    - power_srvs
    desc: "ctx2140 provides power measurement and configuration setting facilities\
      \ for\n     the Carnetix CNX-P2140 DC-DC power supply. It uses the ctxapi library,\
      \ available\n     from http://ram.umd.edu/wiki/Public/Software/ctxapi"
    license: BSD
    shortdesc: "ctx2140 provides power measurement and configuration setting facilities\
      \ for\n     the Carnetix..."
    source: git://ram.umd.edu/ros/power_supplies.git
    website: http://ros.org/wiki/ctx2140
  cuda:
    author: !!python/unicode 'Ken Tossell/ktossell@umd.edu'
    deps:
    - rosbuild
    desc: This package pulls in NVIDIA's CUDA toolkit, drivers and SDK.
    license: BSD
    shortdesc: This package pulls in NVIDIA's CUDA toolkit, drivers and SDK.
    source: git://ram.umd.edu/ros/gpgpu.git
    website: http://ros.org/wiki/cuda
  cuda_tests:
    author: !!python/unicode 'Ken Tossell/ktossell@umd.edu'
    deps:
    - cuda
    - roscpp
    - std_msgs
    desc: Simple CUDA tests to demonstrate that CUDA works in a ROS node
    license: BSD
    shortdesc: cuda_tests
    source: git://ram.umd.edu/ros/gpgpu.git
    website: http://ros.org/wiki/cuda_tests
  gps_common:
    author: !!python/unicode 'Maintained by Ken Tossell'
    deps:
    - roscpp
    - message_filters
    - nav_msgs
    - sensor_msgs
    desc: GPS messages and common routines for use in GPS drivers
    license: BSD
    shortdesc: gps_common
    source: git://ram.umd.edu/ros/gps_umd.git
    website: http://ros.org/wiki/gps_common
  gpsd_client:
    author: !!python/unicode 'Rob Thomson, Ken Tossell'
    deps:
    - roscpp
    - sensor_msgs
    - gps_common
    desc: "gpsd_client connects to a GPSd server and broadcasts\n     GPS fixes using\
      \ the NavSatFix message"
    license: BSD
    shortdesc: gpsd_client
    source: git://ram.umd.edu/ros/gps_umd.git
    website: http://ros.org/wiki/gpsd_client
  jpeg_streamer:
    author: !!python/unicode 'Ken Tossell/ktossell@umd.edu'
    deps:
    - sensor_msgs
    - roscpp
    - image_transport
    desc: tools for streaming JPEG-formatted CompressedImage topics over HTTP
    license: BSD
    shortdesc: jpeg_streamer
    source: git://ram.umd.edu/ros/camera_umd.git
    website: http://ros.org/wiki/jpeg_streamer
  m4atx:
    author: !!python/unicode 'Ken Tossell/ktossell@umd.edu'
    deps:
    - roscpp
    - power_msgs
    - power_srvs
    desc: "m4atx provides monitoring and configuration for the Mini-Box M4-ATX\n \
      \    power supply. It uses the m4api library from http://ram.umd.edu/."
    license: LGPL
    shortdesc: M4-ATX power supply support
    source: git://ram.umd.edu/ros/power_supplies.git
    website: http://ros.org/wiki/m4atx
  power_msgs:
    author: !!python/unicode ''
    deps: []
    desc: power_msgs
    license: BSD
    shortdesc: power_msgs
    source: git://ram.umd.edu/ros/power_supplies.git
    website: http://ros.org/wiki/power_msgs
  power_srvs:
    author: !!python/unicode ''
    deps: []
    desc: power_srvs
    license: BSD
    shortdesc: power_srvs
    source: git://ram.umd.edu/ros/power_supplies.git
    website: http://ros.org/wiki/power_srvs
  proxy:
    author: !!python/unicode 'Ken Tossell'
    deps:
    - roscpp
    - topic_tools
    desc: "Proxy provides a repeater node. Using the proxy, several clients\n    \
      \ can subscribe to a topic on the other side of a slow network connection\n\
      \     using no more bandwidth than what's needed for a single subscriber.\n\n\
      \     This node can relay multiple topics, and it only subscribes to the\n \
      \    topics to which its downstream nodes are listening."
    license: BSD
    shortdesc: "Proxy provides a repeater node. Using the proxy, several clients\n\
      \     can subscribe to a topi..."
    source: git://ram.umd.edu/ros/proxy_tools.git
    website: http://ros.org/wiki/proxy
  ps3joy_umd:
    author: !!python/unicode 'ps3joy: Blaise Gassend and pascal@pabr.org (modified
      by ktossell@umd.edu)'
    deps:
    - roscpp
    - joy
    desc: "Local fork of ps3joy driver. Adds partial support for Bluetooth v1.\n \
      \   Adds controller shutdown on PS3 button, computer shutdown upon press of\n\
      \    all four top buttons, LED control from ROS [this ps3joy.py is a ROS node]\n\
      \    and other details."
    license: BSD
    shortdesc: Playstation 3 SIXAXIS or DUAL SHOCK 3 joystick driver.
    source: git://ram.umd.edu/ros/joystick_umd.git
    website: http://www.ros.org/wiki/ps3joy_umd
  uvc_camera:
    author: !!python/unicode 'Ken Tossell/ktossell@umd.edu'
    deps:
    - sensor_msgs
    - camera_info_manager
    - image_transport
    - nodelet
    - dynamic_reconfigure
    desc: "A collection of node(let)s that stream images from USB cameras (UVC)\n\
      \     and provide CameraInfo messages to consumers. Includes a\n     two-camera\
      \ node that provides rough synchronization\n     for stereo vision.\n\n    \
      \ Currently uses the base driver from Morgan Quigley's uvc_cam package."
    license: GPL
    shortdesc: uvc_camera
    source: git://ram.umd.edu/ros/camera_umd.git
    website: http://ros.org/wiki/uvc_camera
  uvc_stereo:
    author: !!python/unicode 'Ken Tossell/ktossell@umd.edu'
    deps:
    - sensor_msgs
    - camera_info_manager
    - image_transport
    desc: "Deprecated. Please use stereo_node or StereoNodelet in\n    package uvc_camera."
    license: GPL
    shortdesc: uvc_stereo
    source: git://ram.umd.edu/ros/camera_umd.git
    website: http://ros.org/wiki/uvc_stereo
uos-ros-pkg:
  katana:
    author: "Martin G\xC3\xBCnther"
    deps:
    - roscpp
    - kni
    - std_msgs
    - sensor_msgs
    - actionlib
    - actionlib_msgs
    - pr2_controllers_msgs
    - trajectory_msgs
    - urdf
    - kinematics_msgs
    - tf
    - object_manipulation_msgs
    desc: "<p>\n    This package provides ROS interfaces to the the Neuronics Katana\
      \ 450 arm.\n    It wraps the <a href=\"/wiki/kni\">KNI</a> library for low-level\
      \ communication\n    with the Katana arm.\n    </p>\n\n    <p>\n    GPL license\
      \ due to the KNI library.\n    </p>"
    license: GPL
    shortdesc: Driver for the Neuronics Katana 450 arm
    source: http://kos.informatik.uni-osnabrueck.de/uos-ros-pkg.git
    website: http://ros.org/wiki/katana
  katana_arm_kinematics_constraint_aware:
    author: "Martin G\xC3\xBCnther"
    deps:
    - kinematics_msgs
    - roscpp
    desc: "<p>\n\t  This node provides the\n\t  <a href=\"/doc/api/kinematics_msgs/html/srv/GetConstraintAwarePositionIK.html\"\
      >get_constraint_aware_ik</a>\n\t  service. It just strips away all the constraint\
      \ aware stuff and calls a normal (non-constraint aware)\n\t  <a href=\"/doc/api/kinematics_msgs/html/srv/GetPositionIK.html\"\
      >get_ik</a> service instead.\n      </p>\n\n      <p>\n\t  Normally, get_constraint_aware_ik\
      \ checks the space of potential IK solutions (from get_ik) for a\n\t  solution\
      \ that obeys all constraints (i.e., a solution that is not in self-collision\
      \ or in collision\n\t  with the environment). That only really makes sense for\
      \ a redundant (&gt;6 DoF) robot arm. Since the\n\t  Katana only has 5 DoF, we\
      \ only get at most one IK solution, so there is nothing to filter.\n      </p>\n\
      \n      <p>\n\t  If we return a solution that violates constraints - for instance,\
      \ that is in self-collision - then\n\t  move_arm will abort with an error code.\
      \  But if the solution is valid, everything should work.\n      </p>"
    license: BSD
    shortdesc: katana_arm_kinematics_constraint_aware
    source: http://kos.informatik.uni-osnabrueck.de/uos-ros-pkg.git
    website: http://ros.org/wiki/katana_arm_kinematics_constraint_aware
  katana_arm_navigation:
    author: "Martin G\xC3\xBCnther"
    deps:
    - katana
    - katana_description
    - arm_kinematics
    - katana_arm_kinematics_constraint_aware
    - actionlib_msgs
    - collision_environment_msgs
    - collision_map
    - constraint_aware_spline_smoother
    - kinematics_msgs
    - laser_assembler
    - laser_filters
    - motion_planning_msgs
    - move_arm
    - move_arm_msgs
    - planning_environment
    - planning_environment_msgs
    - robot_self_filter
    - sensor_msgs
    - spline_smoother
    - trajectory_filter_server
    - topic_tools
    - ompl_planning
    - ompl_search
    - katana_trajectory_filter
    desc: "<p>\n     This package contains the launch files for arm navigation with\
      \ the Katana robot arm.\n     It is modeled after the <a href=\"/wiki/pr2_arm_navigation\"\
      >pr2_arm_navigation</a>\n     stack. All packages inside that stack are represented\
      \ as subdirectories here.\n     </p>\n\n     <p>\n     The complete arm navigation\
      \ pipeline can be launched via the katana_arm_navigation.launch file.\n    \
      \ </p>"
    license: BSD
    shortdesc: katana_arm_navigation
    source: http://kos.informatik.uni-osnabrueck.de/uos-ros-pkg.git
    website: http://ros.org/wiki/katana_arm_navigation
  katana_description:
    author: "Martin G\xC3\xBCnther"
    deps:
    - urdf
    - convex_decomposition
    - ivcon
    desc: This package contains an URDF description of the Katana arm and all supporting
      mesh files.
    license: BSD
    shortdesc: URDF description of the Katana arm
    source: http://kos.informatik.uni-osnabrueck.de/uos-ros-pkg.git
    website: http://ros.org/wiki/katana_description
  katana_openloop_grasping:
    author: "Martin G\xC3\xBCnther"
    deps:
    - roscpp
    - katana_arm_navigation
    - object_manipulation_msgs
    - actionlib
    - motion_planning_msgs
    - move_arm_msgs
    - kinematics_msgs
    - collision_environment_msgs
    desc: "This package contains a small demo of open loop grasping using the\n  \
      \   <a href=\"/wiki/katana_arm_navigation\">Katana arm navigation pipeline</a>."
    license: BSD
    shortdesc: Demo of open loop grasping using the Katana arm navigation pipeline
    source: http://kos.informatik.uni-osnabrueck.de/uos-ros-pkg.git
    website: http://ros.org/wiki/katana_openloop_grasping
  katana_teleop:
    author: !!python/unicode 'hdeeken'
    deps:
    - std_msgs
    - sensor_msgs
    - rospy
    - joy
    - roscpp
    - katana
    desc: "<p>\n    This package provides a tele-operation node to control a Neuronics\
      \ Katana 450 arm via keyboard commands.\n    </p>\n\n    <p>\n    GPL license\n\
      \    </p>"
    license: GPL
    shortdesc: Katana Teleoperation Node
    source: http://kos.informatik.uni-osnabrueck.de/uos-ros-pkg.git
    website: http://ros.org/wiki/katana_teleop
  katana_trajectory_filter:
    author: "Martin G\xC3\xBCnther"
    deps:
    - roscpp
    - filters
    - spline_smoother
    - trajectory_msgs
    - motion_planning_msgs
    desc: "<p>\n     This filter removes the smallest segments from a trajectory until\
      \ at most\n     MAX_NUM_POINTS (currently 16) are left. The reason for doing\
      \ this is that\n     the Katana arm only supports trajectories with at most\
      \ MAX_NUM_POINTS.\n     </p>\n\n     <p>\n     All desired velocities and accelerations\
      \ are removed from the trajectory.\n     This works if this filter is used in\
      \ conjunction with the\n     JointTrajectoryActionController from the <a href=\"\
      /wiki/katana\">katana</a>\n     package, because it recomputes splines for velocities\
      \ and accelerations\n     anyway. It would not work with PR2's JointTrajectoryActionController,\n\
      \     which only computes linear segments if the velocities are missing.\n \
      \    </p>\n\n     <p>\n     Also, this filter does not check if the resulting\
      \ trajectory is collision-free,\n     although it should.\n     </p>"
    license: BSD
    shortdesc: Filters a trajectory to have at most 16 segments
    source: http://kos.informatik.uni-osnabrueck.de/uos-ros-pkg.git
    website: http://ros.org/wiki/katana_trajectory_filter
  kni:
    author: "Neuronics AG (see AUTHORS.txt); ROS wrapper by Martin G\xC3\xBCnther"
    deps: []
    desc: "This package provides the third-party KNI (Katana Native Interface) library\
      \ for Katana\n     robot arms.\n\n     Instead of using the KNI library directly,\
      \ the <a href=\"/wiki/katana\">katana</a>\n     package should be used for communication\
      \ with the Katana arm."
    license: GPL
    shortdesc: Third-party KNI library for Katana arms
    source: http://kos.informatik.uni-osnabrueck.de/uos-ros-pkg.git
    website: http://ros.org/wiki/kni
  kurt_2dnav:
    author: !!python/unicode 'Jochen Sprickerhof'
    deps:
    - move_base
    - kurt_bringup
    desc: kurt_2dnav
    license: BSD
    shortdesc: kurt_2dnav
    source: http://kos.informatik.uni-osnabrueck.de/uos-ros-pkg.git
    website: http://ros.org/wiki/kurt_2dnav
  kurt_base:
    author: !!python/unicode 'Jochen Sprickerhof'
    deps:
    - roscpp
    - geometry_msgs
    - nav_msgs
    - tf
    desc: kurt_base
    license: BSD
    shortdesc: kurt_base
    source: http://kos.informatik.uni-osnabrueck.de/uos-ros-pkg.git
    website: http://ros.org/wiki/kurt_base
  kurt_bringup:
    author: !!python/unicode 'Jochen Sprickerhof'
    deps:
    - kurt_description
    - kurt_base
    - kurt_teleop
    - robot_state_publisher
    - sicktoolbox_wrapper
    - laser_assembler
    - rotunit_snapshotter
    desc: kurt_bringup
    license: BSD
    shortdesc: kurt_bringup
    source: http://kos.informatik.uni-osnabrueck.de/uos-ros-pkg.git
    website: http://ros.org/wiki/kurt_bringup
  kurt_description:
    author: !!python/unicode 'Jochen Sprickerhof'
    deps:
    - urdf
    - xacro
    desc: kurt_description
    license: BSD
    shortdesc: kurt_description
    source: http://kos.informatik.uni-osnabrueck.de/uos-ros-pkg.git
    website: http://ros.org/wiki/kurt_description
  kurt_freespace:
    author: !!python/unicode 'Jochen Sprickerhof'
    deps:
    - roscpp
    - sensor_msgs
    desc: "<p>\n      This node implements a simple &quot;freespace&quot; (obstacle\
      \ avoidance) behavior.\n      It subscribes to a 2D laser scan and always tries\
      \ to steer towards the\n      largest open space.\n    </p>\n\n    <p>\n   \
      \   It was tested on the Kurt robot platform, but should work on any robot\n\
      \      that has a 2D laser scanner and accepts\n      <a href=\"http://www.ros.org/doc/api/geometry_msgs/html/msg/Twist.html\"\
      >Twist</a>\n      messages.\n    </p>"
    license: BSD
    shortdesc: Simple obstacle avoidance behavior
    source: http://kos.informatik.uni-osnabrueck.de/uos-ros-pkg.git
    website: http://ros.org/wiki/kurt_freespace
  kurt_teleop:
    author: !!python/unicode 'Jochen Sprickerhof'
    deps:
    - roscpp
    - joy
    - geometry_msgs
    desc: kurt_teleop
    license: BSD
    shortdesc: kurt_teleop
    source: http://kos.informatik.uni-osnabrueck.de/uos-ros-pkg.git
    website: http://ros.org/wiki/kurt_teleop
  rotunit_snapshotter:
    author: !!python/unicode 'Jochen Sprickerhof'
    deps:
    - roscpp
    - sensor_msgs
    - laser_assembler
    desc: rotunit_snapshotter
    license: BSD
    shortdesc: rotunit_snapshotter
    source: http://kos.informatik.uni-osnabrueck.de/uos-ros-pkg.git
    website: http://ros.org/wiki/rotunit_snapshotter
  slam_exporter:
    author: !!python/unicode 'Jochen Sprickerhof'
    deps:
    - roscpp
    - sensor_msgs
    - tf
    desc: slam_exporter
    license: BSD
    shortdesc: slam_exporter
    source: http://kos.informatik.uni-osnabrueck.de/uos-ros-pkg.git
    website: http://ros.org/wiki/slam_exporter
  tf_publisher_gui:
    author: "Martin G\xC3\xBCnther"
    deps:
    - rospy
    - tf
    desc: This is a simple GUI for publishing a single TF transform.
    license: BSD
    shortdesc: GUI for publishing tf transforms
    source: http://kos.informatik.uni-osnabrueck.de/uos-ros-pkg.git
    website: http://ros.org/wiki/tf_publisher_gui
usbi2c-ros-pkg:
  usbi2c-ros-pkg:
    author: !!python/unicode 'Bob Mottram'
    deps:
    - std_msgs
    - roscpp
    desc: "A package for use with USB to I2C Communication Module, used to communicate\
      \ with sonar sensors\n     See http://www.robot-electronics.co.uk/htm/usb_i2c_tech.htm"
    license: BSD
    shortdesc: A package for use with USB to I2C Communication Module, used to communicate
      with sonar sensor...
    source: lp:usbi2c-ros-pkg
    website: https://launchpad.net/usbi2c-ros-pkg
usc-ros-pkg:
  GMM_classify:
    author: !!python/unicode 'David Feil-Seifer'
    deps:
    - feature_extractor
    - opencv2
    desc: GMM_classify
    license: BSD
    shortdesc: GMM_classify
    source: https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg/trunk/OIT_experimental/GMM_classify
    website: http://ros.org/wiki/GMM_classify
  checkerboard:
    author: !!python/unicode 'David Feil-Seifer (dfseifer@usc.edu)'
    deps:
    - image_transport
    - image_geometry
    - opencv2
    - cv_bridge
    - tf
    desc: checkerboard_detector node that finds a NxM checkerboard in an image, and
      uses a corresponding camera_info message to return a transform to that checkerboard
      from the camera frame
    license: BSD
    shortdesc: checkerboard_detector
    source: https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg/trunk/OIT/checkerboard
    website: http://ros.org/wiki/checkerboard_detector
  color_blob_finder:
    author: !!python/unicode 'David Feil-Seifer'
    deps:
    - opencv2
    - cv_bridge
    - sensor_msgs
    - image_transport
    - image_geometry
    - oit_msgs
    - tf
    desc: color_blob_finder
    license: BSD
    shortdesc: color_blob_finder
    source: https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg/trunk/OIT/color_blob_finder
    website: http://ros.org/wiki/color_blob_finder
  color_picker:
    author: !!python/unicode 'David Feil-Seifer'
    deps:
    - roscpp
    - sensor_msgs
    - cv_bridge
    - opencv2
    desc: color_picker
    license: BSD
    shortdesc: color_picker
    source: https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg/trunk/OIT/color_picker
    website: http://ros.org/wiki/color_picker
  cylindrical_marker_finder:
    author: !!python/unicode 'Aaron St.Clair'
    deps:
    - std_msgs
    - sensor_msgs
    - geometry_msgs
    - laser_geometry
    - visualization_msgs
    - tf
    - roscpp
    - rospy
    desc: cylindrical_marker_finder
    license: BSD
    shortdesc: cylindrical_marker_finder
    source: https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg/trunk/cylindrical_marker_finder
    website: http://ros.org/wiki/cylindrical_marker_finder
  feature_extractor:
    author: !!python/unicode 'David Feil-Seifer'
    deps:
    - point_map
    - geometry_msgs
    - tf
    desc: feature_extractor
    license: BSD
    shortdesc: feature_extractor
    source: https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg/trunk/OIT_experimental/feature_extractor
    website: http://ros.org/wiki/feature_extractor
  floor_align:
    author: !!python/unicode 'Edward'
    deps:
    - opencv2
    - tf
    desc: floor_align
    license: BSD
    shortdesc: floor_align
    source: https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg/trunk/OIT/floor_align
    website: http://ros.org/wiki/floor_align
  head_follow_people:
    author: !!python/unicode 'David Feil-Seifer'
    deps:
    - people_msgs
    - geometry_msgs
    - opencv2
    - tf
    desc: head_follow_people
    license: BSD
    shortdesc: head_follow_people
    source: https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg/trunk/head_interaction_behavior/head_follow_people
    website: http://ros.org/wiki/head_follow_people
  head_traj_general:
    author: !!python/unicode 'David Feil-Seifer'
    deps:
    - tf
    - bandit_msgs
    - people_msgs
    - opencv2
    desc: head_traj_general
    license: BSD
    shortdesc: head_traj_general
    source: https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg/trunk/head_interaction_behavior/head_traj_general
    website: http://ros.org/wiki/head_traj_general
  image_letterboxer:
    author: !!python/unicode 'dfseifer@usc.edu'
    deps:
    - roscpp
    - sensor_msgs
    - opencv2
    - image_transport
    - cv_bridge
    desc: enlarges an image by adding black bars around image
    license: BSD
    shortdesc: image_letterboxer
    source: https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg/trunk/OIT/image_letterboxer
    website: http://pr.willowgarage.com/wiki/ros
  ir_finder:
    author: !!python/unicode 'David Feil-Seifer'
    deps:
    - tf
    - cv_bridge
    - oit_msgs
    - image_geometry
    desc: ir_finder
    license: BSD
    shortdesc: ir_finder
    source: https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg/trunk/OIT/ir_finder
    website: http://ros.org/wiki/ir_finder
  log_gui:
    author: !!python/unicode 'David Feil-Seifer'
    deps:
    - roscpp
    - log_msgs
    desc: log_gui
    license: BSD
    shortdesc: log_gui
    source: https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg/trunk/logging/log_gui
    website: http://ros.org/wiki/log_gui
  log_msgs:
    author: !!python/unicode 'David Feil-Seifer'
    deps:
    - std_msgs
    desc: log_msgs
    license: BSD
    shortdesc: log_msgs
    source: https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg/trunk/logging/log_msgs
    website: http://ros.org/wiki/log_msgs
  logger:
    author: !!python/unicode 'David Feil-Seifer'
    deps:
    - rosrecord
    - roscpp
    - log_msgs
    desc: logger
    license: BSD
    shortdesc: logger
    source: https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg/trunk/logging/logger
    website: http://ros.org/wiki/logger
  obstacle_avoidance:
    author: !!python/unicode 'David Feil-Seifer'
    deps:
    - oit_msgs
    - point_map
    - sensor_msgs
    - geometry_msgs
    - laser_geometry
    - tf
    desc: obstacle_avoidance
    license: BSD
    shortdesc: obstacle_avoidance
    source: https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg/trunk/OIT/obstacle_avoidance
    website: http://ros.org/wiki/obstacle_avoidance
  oit_launch:
    author: !!python/unicode 'Edward T. Kaszubski'
    deps: []
    desc: oit_launch
    license: BSD
    shortdesc: oit_launch
    source: https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg/trunk/OIT/oit_launch
    website: http://ros.org/wiki/oit_launch
  oit_msgs:
    author: !!python/unicode 'dfseifer@usc.edu'
    deps:
    - std_msgs
    desc: ''
    license: BSD
    shortdesc: ''
    source: https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg/trunk/OIT/oit_msgs
    website: http://robotics.usc.edu/ros
  overhead_planner:
    author: !!python/unicode 'David Feil-Seifer'
    deps:
    - navfn
    - costmap_2d
    - sensor_msgs
    - geometry_msgs
    desc: overhead_planner
    license: BSD
    shortdesc: overhead_planner
    source: https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg/trunk/OIT/overhead_planner
    website: http://ros.org/wiki/overhead_planner
  p2os_dashboard:
    author: !!python/unicode 'David Feil-Seifer (dfseifer@usc.edu)'
    deps:
    - rxtools
    - robot_monitor
    - rospy
    - roslib
    - std_srvs
    - std_msgs
    - p2os_driver
    desc: p2os_dashboard is a GUI for debugging and controlling low-level state of
      the P2OS.  It shows things like battery status and breaker states, as well as
      integrating tools like rxconsole and robot_monitor.
    license: BSD
    shortdesc: P2OS Dashboard
    source: https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg/trunk/p2os/p2os_dashboard
    website: http://ros.org/wiki
  p2os_driver:
    author: !!python/unicode 'dfseifer@usc.edu'
    deps:
    - roscpp
    - std_msgs
    - nav_msgs
    - tf
    - diagnostic_updater
    desc: P2OS driver for ros
    license: BSD
    shortdesc: p2os_driver
    source: https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg/trunk/p2os/p2os_driver
    website: http://pr.willowgarage.com/wiki/ros
  p2os_launch:
    author: !!python/unicode 'Edward Kaszubski'
    deps: []
    desc: This package contains launch and config files designed for use with the
      p2os stack.
    license: BSD
    shortdesc: p2os_launch
    source: https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg/trunk/p2os/p2os_launch
    website: http://ros.org/wiki/launch
  p2os_teleop:
    author: !!python/unicode 'Edward'
    deps:
    - roscpp
    - joy
    - geometry_msgs
    desc: p2os_teleop
    license: BSD
    shortdesc: p2os_teleop
    source: https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg/trunk/p2os/p2os_teleop
    website: http://ros.org/wiki/p2os_teleop
  p2os_urdf:
    author: !!python/unicode 'David Feil-Seifer (dfseifer@usc.edu)'
    deps:
    - xacro
    - robot_state_publisher
    desc: URDF file descriptions for P2OS/ARCOS robots
    license: BSD
    shortdesc: URDF file descriptions for P2OS/ARCOS robots
    source: details.php?name=urdf
    website: https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg/trunk/p2os/p2os_urdf
  phidget:
    author: !!python/unicode 'dfseifer@usc.edu'
    deps:
    - roscpp
    - std_msgs
    desc: Phidget Interface Kit
    license: BSD
    shortdesc: Phidget Interface Kit
    source: https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg/trunk/phidget
    website: http://pr.willowgarage.com/wiki/b3ia
  point_map:
    author: !!python/unicode 'David Feil-Seifer'
    deps:
    - yaml_cpp
    - roscpp
    - nav_msgs
    desc: point_map
    license: BSD
    shortdesc: point_map
    source: https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg/trunk/OIT/point_map
    website: http://ros.org/wiki/point_map
  pr2_finder:
    author: !!python/unicode 'David Feil-Seifer'
    deps:
    - oit_msgs
    - tf
    - image_geometry
    - cv_bridge
    - image_transport
    desc: pr2_finder
    license: BSD
    shortdesc: pr2_finder
    source: https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg/trunk/OIT/pr2_finder
    website: http://ros.org/wiki/pr2_finder
  usc_cameradc1394:
    author: !!python/unicode 'David Feil-Seifer, Original package by Rosen Diankov
      (rdiankov@cs.cmu.edu) for camera1394 with Jeremy Liebs, Kurt Konolige for dcam1394
      files'
    deps:
    - opencv2
    - cv_bridge
    - image_transport
    - sensor_msgs
    - std_msgs
    desc: "Customizable camera streaming using dc1394 ROS driver. Parameters it uses:\n\
      \n    display - shows the image on the local computer\n    cameraguid - hex\
      \ string, if specified will only open a camera with this guid\n    cameraindex\
      \ - index of the camera to start if cameraguid is not present\n    mode - any\
      \ one of opencv modes to set, for example: &quot;MODE_640x480_YUV422&quot;\n\
      \    framerate - number of frames a second to publish\n    KK_fx,KK_fy,KK_cx,KK_cy\
      \ - intrinsic parameters such that KK = [fx 0 cx; 0 fy cy; 0 0 1]\n    kc_k1,kc_k2,kc_p1,kc_2\
      \ - radial distortion coefficients to undistort the image\n    colorfilter -\
      \ color conversion for debayering, can be\n               &quot;COLOR_FILTER_RGGB&quot;,\
      \ &quot;COLOR_FILTER_GBRG&quot;, &quot;COLOR_FILTER_GRBG&quot;, &quot;COLOR_FILTER_BGGR&quot;\n\
      \    compression - how to compress the data before sending, can be &quot;none&quot;,\
      \ &quot;png&quot;, &quot;jpg&quot;, &quot;jpeg&quot;"
    license: Apache License 2.0/BSD
    shortdesc: DC1394 Calibrated Camera Driver
    source: details.php?name=roscpp
    website: https://usc-ros-pkg.svn.sourceforge.net/svnroot/usc-ros-pkg/trunk/usc_cameradc1394
utexas-art-ros-pkg:
  applanix:
    author: !!python/unicode 'Jack O''Quin, Patrick Beeson, Alberto Alonso'
    deps:
    - angles
    - art_common
    - art_msgs
    - nav_msgs
    - roscpp
    - sensor_msgs
    - tf
    desc: "ROS driver for the Applanix Position and Orientation System for\n     Land\
      \ Vehicles (POS-LV)."
    license: BSD
    shortdesc: Applanix POS-LV driver
    source: http://utexas-art-ros-pkg.googlecode.com/svn/trunk/stacks/art_vehicle/applanix
    website: http://www.ros.org/wiki/applanix
  art_common:
    author: !!python/unicode 'Austin Robot Technology'
    deps:
    - angles
    - art_msgs
    - roscpp
    - tf
    desc: "Common headers and utilities for the Austin Robot Technology\n     automomous\
      \ vehicle."
    license: BSD
    shortdesc: ART vehicle common headers
    source: http://utexas-art-ros-pkg.googlecode.com/svn/trunk/stacks/art_vehicle/art_common
    website: http://www.ros.org/wiki/art_common
  art_image:
    author: !!python/unicode ''
    deps:
    - applanix
    - camera1394
    - compressed_image_transport
    - image_transport
    - image_view
    - theora_image_transport
    - velodyne_common
    desc: Visual imaging tools for the Austin Robot Technology autonomous vehicle.
    license: BSD
    shortdesc: ART vehicle imaging tools
    source: http://utexas-art-ros-pkg.googlecode.com/svn/trunk/stacks/art_vehicle/art_image
    website: http://ros.org/wiki/art_image
  art_map:
    author: !!python/unicode "David Li, Patrick Beeson, Bartley Gillen, Tarun Nimmagadda,\n\
      \          Mickey Ristroph, Michael Quinlan, Jack O'Quin"
    deps:
    - angles
    - art_common
    - art_msgs
    - geometry_msgs
    - nav_msgs
    - roscpp
    - sensor_msgs
    - tf
    - visualization_msgs
    desc: ART autonomous vehicle road map.
    license: BSD
    shortdesc: ART road map
    source: http://utexas-art-ros-pkg.googlecode.com/svn/trunk/stacks/art_vehicle/art_map
    website: http://ros.org/wiki/art_map
  art_msgs:
    author: !!python/unicode 'Jack O''Quin'
    deps:
    - geometry_msgs
    - nav_msgs
    - rosbagmigration
    - sensor_msgs
    - std_msgs
    desc: This package defines messages specific to ART autonomous vehicle.
    license: BSD
    shortdesc: ART vehicle messages
    source: http://utexas-art-ros-pkg.googlecode.com/svn/trunk/stacks/art_vehicle/art_msgs
    website: http://ros.org/wiki/art_msgs
  art_nav:
    author: !!python/unicode 'Austin Robot Technology, Jack O''Quin'
    deps:
    - angles
    - art_common
    - art_map
    - art_msgs
    - driver_base
    - dynamic_reconfigure
    - nav_msgs
    - roscpp
    - rospy
    - std_msgs
    desc: "Navigation nodes for controlling the ART autonomous vehicle.\n\n     This\
      \ is a port to ROS of some of the Player 2D navigation code\n     used on the\
      \ vehicle for the 2007 DARPA Urban Challenge\n     competition."
    license: BSD
    shortdesc: ART vehicle navigation
    source: http://utexas-art-ros-pkg.googlecode.com/svn/trunk/stacks/art_vehicle/art_nav
    website: http://www.ros.org/wiki/art_nav
  art_pilot:
    author: !!python/unicode 'Austin Robot Technology, Jack O''Quin'
    deps:
    - angles
    - art_common
    - art_msgs
    - driver_base
    - dynamic_reconfigure
    - roscpp
    - rospy
    - std_msgs
    desc: Servo coordination for the ART autonomous vehicle.
    license: BSD
    shortdesc: ART vehicle pilot
    source: http://utexas-art-ros-pkg.googlecode.com/svn/trunk/stacks/art_vehicle/art_pilot
    website: http://www.ros.org/wiki/art_pilot
  art_run:
    author: !!python/unicode ''
    deps:
    - applanix
    - art_common
    - art_image
    - art_map
    - art_nav
    - art_pilot
    - art_servo
    - art_teleop
    - camera1394
    - joy
    - nodelet
    - rosbag
    - sicktoolbox_wrapper
    - simulator_art
    - tf
    - velodyne_common
    desc: Tools to run the Austin Robot Technology autonomous vehicle.
    license: BSD
    shortdesc: Run the ART vehicle
    source: http://utexas-art-ros-pkg.googlecode.com/svn/trunk/stacks/art_vehicle/art_run
    website: http://ros.org/wiki/art_run
  art_servo:
    author: !!python/unicode 'Austin Robot Technology, Jack O''Quin'
    deps:
    - angles
    - art_common
    - art_msgs
    - roscpp
    - rospy
    - std_msgs
    desc: ROS nodes for the ART autonomous vehicle servo devices.
    license: BSD
    shortdesc: ART vehicle servo device drivers
    source: http://utexas-art-ros-pkg.googlecode.com/svn/trunk/stacks/art_vehicle/art_servo
    website: http://www.ros.org/wiki/art_servo
  art_teleop:
    author: !!python/unicode 'Austin Robot Technology, Jack O''Quin'
    deps:
    - art_common
    - art_msgs
    - driver_base
    - dynamic_reconfigure
    - joy
    - rospy
    - std_msgs
    desc: "Tele-operation scripts for driving the ART autonomous vehicle\n     under\
      \ human control."
    license: BSD
    shortdesc: ART vehicle tele-operation
    source: http://utexas-art-ros-pkg.googlecode.com/svn/trunk/stacks/art_vehicle/art_teleop
    website: http://www.ros.org/wiki/art_teleop
  simulator_art:
    author: !!python/unicode 'Jack O''Quin'
    deps:
    - angles
    - art_common
    - art_msgs
    - geometry_msgs
    - nav_msgs
    - roscpp
    - roslib
    - sensor_msgs
    - stage
    - std_msgs
    - tf
    desc: Simulator for Austin Robot Technology autonomous vehicle.
    license: GPL
    shortdesc: ART vehicle simulator
    source: http://utexas-art-ros-pkg.googlecode.com/svn/trunk/stacks/art_vehicle/simulator_art
    website: http://www.ros.org/wiki/simulator_art
  velodyne_common:
    author: !!python/unicode 'Jack O''Quin, Patrick Beeson, Michael Quinlan, Yaxin
      Liu'
    deps:
    - angles
    - nodelet
    - roscpp
    - rostest
    - sensor_msgs
    - tf
    - velodyne_msgs
    desc: "Basic device driver, message, header, library and utility\n     interfaces\
      \ for the Velodyne HDL-64E 3D LIDAR."
    license: BSD
    shortdesc: Common Velodyne HDL-64E 3D LIDAR support
    source: http://utexas-art-ros-pkg.googlecode.com/svn/trunk/stacks/velodyne/velodyne_common
    website: http://www.ros.org/wiki/velodyne_common
  velodyne_msgs:
    author: !!python/unicode 'Jack O''Quin'
    deps: []
    desc: ROS message definitions for Velodyne HDL-64E 3D LIDAR.
    license: BSD
    shortdesc: Velodyne HDL-64E 3D LIDAR messages
    source: http://utexas-art-ros-pkg.googlecode.com/svn/trunk/stacks/velodyne/velodyne_msgs
    website: http://ros.org/wiki/velodyne_msgs
  velodyne_ringcomp:
    author: !!python/unicode 'Joseph Campbell'
    deps:
    - nodelet
    - roscpp
    - rostest
    - sensor_msgs
    - velodyne_common
    - velodyne_msgs
    desc: "Identify obstacles in Velodyne HDL-64E 3D LIDAR data using a ring\n   \
      \ compression algorithm."
    license: BSD
    shortdesc: Velodyne ring compression obstacle detection
    source: http://utexas-art-ros-pkg.googlecode.com/svn/trunk/stacks/velodyne/velodyne_ringcomp
    website: http://www.ros.org/wiki/velodyne_ringcomp
  velodyne_viz:
    author: !!python/unicode ''
    deps:
    - rosbag
    - rviz
    - velodyne_common
    desc: "Tools for visualizing Velodyne LIDAR data in three dimensions.\n\n    Making\
      \ this a separate package allows the other Velodyne packages\n    to build on\
      \ machines with poor 3D graphics support.  The rviz 3D\n    visualization is\
      \ excellent, but it depends on OGRE, which is hard\n    to build on some machines\
      \ and only useful for machines with good\n    3D graphics."
    license: BSD
    shortdesc: Velodyne HDL-64E LIDAR visualization
    source: http://utexas-art-ros-pkg.googlecode.com/svn/trunk/stacks/velodyne/velodyne_viz
    website: http://ros.org/wiki/velodyne_viz
uuisrc-ros-pkg:
  arm_hand_splitter:
    author: !!python/unicode 'Lorenzo Riano'
    deps:
    - rospy
    - roslib
    - trajectory_msgs
    - sensor_msgs
    - pr2_controllers_msgs
    desc: arm_hand_splitter
    license: BSD
    shortdesc: arm_hand_splitter
    source: https://github.com/cburbridge/uuisrc-ros-pkg.git
    website: http://ros.org/wiki/arm_hand_splitter
  arm_track:
    author: !!python/unicode 'Lorenzo'
    deps:
    - SchunkRos
    - roscpp
    - bullet
    - schunk_kinematics
    desc: arm_track
    license: GPL
    shortdesc: arm_track
    source: https://github.com/cburbridge/uuisrc-ros-pkg.git
    website: http://ros.org/wiki/arm_track
  dynamic_window:
    author: !!python/unicode '"Lorenzo Riano (lorenzo.riano@gmail.com)"'
    deps:
    - roscpp
    - sensor_msgs
    - std_msgs
    - nav_msgs
    - geometry_msgs
    - laser_geometry
    - pcl
    desc: "Dynamic window controller. For more details see      \n\n&quot;Fox, D.;\
      \ Burgard, W.; Thrun, S., &quot;The dynamic window approach to collision avoidance&quot;\
      \ Robotics and Automation Magazine, IEEE , vol.4, no.1, pp.23-33, Mar 1997&quot;"
    license: GNU
    shortdesc: dynamic_window
    source: https://github.com/cburbridge/uuisrc-ros-pkg.git
    website: http://www.ros.org/wiki/dynamic_window
  empty_pointcloud:
    author: !!python/unicode 'Lorenzo Riano'
    deps:
    - roscpp
    - roslib
    - sensor_msgs
    desc: empty_pointcloud
    license: BSD
    shortdesc: empty_pointcloud
    source: https://github.com/cburbridge/uuisrc-ros-pkg.git
    website: http://ros.org/wiki/empty_pointcloud
  joint_fusion:
    author: !!python/unicode 'Lorenzo Riano'
    deps:
    - sensor_msgs
    - rospy
    - roslib
    desc: "A simple node that takes two JointState messages and combines them into\
      \ one.\n\n     Params: rate the rate at with to publish (default 10)\n     Subrcribes:\
      \ source1, source2 of type sensor_msgs/JointState\n     Publishes: joint_state\
      \ of type sensor_msgs/JointState"
    license: BSD
    shortdesc: joint_fusion
    source: https://github.com/cburbridge/uuisrc-ros-pkg.git
    website: http://ros.org/wiki/joint_fusion
  laser_to_pointcloud:
    author: !!python/unicode 'Lorenzo Riano'
    deps:
    - sensor_msgs
    - pcl
    - laser_geometry
    desc: laser_to_pointcloud
    license: BSD
    shortdesc: laser_to_pointcloud
    source: https://github.com/cburbridge/uuisrc-ros-pkg.git
    website: http://ros.org/wiki/laser_to_pointcloud
  libvicon:
    author: !!python/unicode 'Chris Burbridge'
    deps:
    - roscpp
    desc: "Classes for Stream and Request-Reply TCP communications with \n     a Vicon\
      \ Motion Tracking System."
    license: GPL
    shortdesc: "Classes for Stream and Request-Reply TCP communications with \n  \
      \   a Vicon Motion Tracking Sy..."
    source: https://github.com/cburbridge/uuisrc-ros-pkg.git
    website: http://ros.org/wiki/libvicon
  metralabs_ros:
    author: !!python/unicode 'Yianni Gatsoulis and Chris Burbridge and Lorenzo Riano'
    deps:
    - roscpp
    - rospy
    - sensor_msgs
    - urdf
    - sensor_msgs
    - tf
    - geometry_msgs
    - nav_msgs
    - trajectory_msgs
    - pr2_controllers_msgs
    desc: An interface to the MetraLabs Scitos G5 mobile robot with a Schunk Manipulator.
    license: GPL
    shortdesc: metralabs_ros
    source: details.php?name=std_msgs
    website: https://github.com/cburbridge/uuisrc-ros-pkg.git
  move_arm_goal:
    author: !!python/unicode 'Lorenzo Riano'
    deps:
    - move_arm_msgs
    - actionlib
    - kinematics_msgs
    - geometry_msgs
    desc: move_arm_goal
    license: BSD
    shortdesc: move_arm_goal
    source: https://github.com/cburbridge/uuisrc-ros-pkg.git
    website: http://ros.org/wiki/move_arm_goal
  pcl_tests:
    author: !!python/unicode 'Lorenzo'
    deps:
    - pcl
    - roscpp
    - pcl_ros
    - pcl_visualization
    - tf
    - sensor_msgs
    desc: pcl_tests - some simple tests for saving point clouds
    license: GPL
    shortdesc: pcl_tests - some simple tests for saving point clouds
    source: https://github.com/cburbridge/uuisrc-ros-pkg.git
    website: http://ros.org/wiki/pcl_tests
  person_grabber:
    author: !!python/unicode 'Chris Burbridge'
    deps:
    - roslib
    - geometry_msgs
    - openni
    - kdl
    - tf
    - sensor_msgs
    - message_filters
    - pcl_ros
    desc: "This node integrates the the NITE skeleton tracking library with the openni_camera\
      \ point cloud generation. A pointcloud is published, containing only the points\
      \ that belong to the currently tracked human. (Actually, I did not try, but\
      \ maybe a large monkey would also work..) \n    \n    Upon starting the node\
      \ (&quot;rosrun person_grabber person_grabber&quot;), nothing will be published.\
      \ After standing in front of the camera, and calibrating in the usual Y shaped\
      \ position, the pointcloud will start. The console informs of the current status\
      \ of the tracking, and only one user is tracked and published at a time.\n \
      \   \n    The point cloud is of type PointCloud2, contains X, Y, Z and RGB values,\
      \ and is on the topic &quot;/rgbd/points2&quot;. The code for calculating the\
      \ 3D positions of the points is taken from the openni_camera node, but stripped\
      \ of the PrimeSense development kit camera parts. As such, it will only operate\
      \ with a Microsoft Kinect camera."
    license: GPL
    shortdesc: person_grabber
    source: details.php?name=roscpp
    website: https://github.com/cburbridge/uuisrc-ros-pkg.git
  player_camera:
    author: !!python/unicode 'Chris Burbridge'
    deps:
    - sensor_msgs
    - image_transport
    - opencv2
    - cv_bridge
    - camera_calibration_parsers
    desc: ''
    license: WhoCares
    shortdesc: player_camera
    source: details.php?name=roscpp
    website: https://github.com/cburbridge/uuisrc-ros-pkg.git
  player_interface:
    author: !!python/unicode 'Chris Burbridge'
    deps:
    - sensor_msgs
    - tf
    - geometry_msgs
    - visualization_msgs
    - nav_msgs
    - image_transport
    - opencv2
    - cv_bridge
    desc: Player proxies into ROS
    license: GPL
    shortdesc: player_interface
    source: details.php?name=roscpp
    website: https://github.com/cburbridge/uuisrc-ros-pkg.git
  pointcloud_compress:
    author: !!python/unicode 'Chris Burbridge'
    deps:
    - rospy
    - std_msgs
    - sensor_msgs
    desc: pointcloud_compress
    license: BSD
    shortdesc: pointcloud_compress
    source: https://github.com/cburbridge/uuisrc-ros-pkg.git
    website: http://ros.org/wiki/pointcloud_compress
  potential_fields:
    author: !!python/unicode 'Lorenzo Riano'
    deps:
    - rospy
    - std_msgs
    - nav_msgs
    - geometry_msgs
    - tf
    desc: potential_fields
    license: GNU
    shortdesc: potential_fields
    source: https://github.com/cburbridge/uuisrc-ros-pkg.git
    website: http://ros.org/wiki/potential_fields
  pr2_control_gui:
    author: !!python/unicode 'Yiannis Gatsoulis Lorenzo Riano'
    deps:
    - rospy
    - pr2_msgs
    - sensor_msgs
    - geometry_msgs
    - trajectory_msgs
    - pr2_controllers_msgs
    - actionlib
    - pr2_control_utilities
    desc: "A control GUI for the PR2 which allows to save the joint states in a stack.\n\
      \n     Be careful with the values as there are no limits."
    license: BSD
    shortdesc: pr2_control_gui
    source: https://github.com/cburbridge/uuisrc-ros-pkg.git
    website: http://ros.org/wiki/pr2_control_gui
  pr2_control_utilities:
    author: !!python/unicode 'Lorenzo Riano'
    deps:
    - rospy
    - pr2_controllers_msgs
    - geometry_msgs
    - motion_planning_msgs
    - sensor_msgs
    - actionlib
    - actionlib_msgs
    - kinematics_msgs
    - tf
    desc: pr2_control_utilities
    license: BSD
    shortdesc: pr2_control_utilities
    source: https://github.com/cburbridge/uuisrc-ros-pkg.git
    website: http://ros.org/wiki/pr2_control_utilities
  schunk_arm_kinematics_constraint_aware:
    author: !!python/unicode 'Lorenzo Riano'
    deps:
    - roscpp
    - kdl
    - eigen
    - angles
    - tf_conversions
    - urdf
    - geometry_msgs
    - kdl_parser
    - kinematics_msgs
    - tf
    - sensor_msgs
    - kinematics_msgs
    - motion_planning_msgs
    - collision_space
    - planning_models
    - planning_environment
    - mapping_msgs
    - visualization_msgs
    desc: schunk_arm_kinematics_constraint_aware
    license: BSD
    shortdesc: schunk_arm_kinematics_constraint_aware
    source: https://github.com/cburbridge/uuisrc-ros-pkg.git
    website: http://ros.org/wiki/schunk_arm_kinematics_constraint_aware
  schunk_gui:
    author: !!python/unicode 'Chris Burbridge'
    deps:
    - metralabs_ros
    - sensor_msgs
    - tf
    desc: A node for displaying the SCHUNK status flags, and allowing slider control
      of the joint velocities / positions.
    license: GPL
    shortdesc: A gui for the manipulator
    source: details.php?name=rospy
    website: https://github.com/cburbridge/uuisrc-ros-pkg.git
  schunk_kinematics:
    author: !!python/unicode 'David Lu!! // Chris Burbridge'
    deps:
    - tf
    - sensor_msgs
    - tf_conversions
    - kdl_parser
    - kinematics_msgs
    - geometry_msgs
    - motion_planning_msgs
    desc: "Schunk arm kinematics\n     \n     This is essentially David Lu's kinematics\
      \ node with the addition of \n     inverse velocity kinematics."
    license: BSD
    shortdesc: schunk_kinematics
    source: details.php?name=roscpp
    website: https://github.com/cburbridge/uuisrc-ros-pkg.git
  schunk_planning:
    author: !!python/unicode 'Lorenzo Riano lorenzo.riano@gmail.com'
    deps:
    - ompl_planning
    - planning_environment
    - trajectory_filter_server
    - joint_trajectory_action
    - move_arm
    - collision_map
    desc: A collection of packages and launch files to enable planning on a Schunk
      Arm
    license: BSD
    shortdesc: schunk_planning
    source: https://github.com/cburbridge/uuisrc-ros-pkg.git
    website: http://ros.org/wiki/schunk_planning
  surf:
    author: !!python/unicode 'Yianni'
    deps:
    - sensor_msgs
    - opencv2
    - cv_bridge
    - roscpp
    - std_msgs
    - image_transport
    desc: surf
    license: BSD
    shortdesc: surf
    source: https://github.com/cburbridge/uuisrc-ros-pkg.git
    website: http://ros.org/wiki/surf
  velocity_safety:
    author: !!python/unicode 'Chris Burbridge'
    deps:
    - rospy
    - schunk_kinematics
    - sensor_msgs
    desc: A node to filter join velocity messages
    license: GPL
    shortdesc: velocity_safety
    source: https://github.com/cburbridge/uuisrc-ros-pkg.git
    website: http://ros.org/wiki/spline_controller
  vicon_nodes:
    author: !!python/unicode 'Chris Burbridge'
    deps:
    - roscpp
    - libvicon
    - tf
    - visualization_msgs
    desc: "vicon_nodes\n     \n     A collection of simple nodes that use libvicon"
    license: GPL
    shortdesc: vicon_nodes
    source: https://github.com/cburbridge/uuisrc-ros-pkg.git
    website: http://ros.org/wiki/vicon_nodes
vanadium-ros-pkg:
  arbotix_controllers:
    author: !!python/unicode 'Michael Ferguson'
    deps:
    - arbotix_python
    - trajectory_msgs
    desc: Extends the arbotix_node package with a number of more sophisticated ROS
      wrappers for common devices.
    license: BSD
    shortdesc: Basic controllers for ArbotiX connected devices
    source: http://vanadium-ros-pkg.googlecode.com/svn/trunk/arbotix/arbotix_controllers
    website: http://ros.org/wiki/arbotix_controllers
  arbotix_firmware:
    author: !!python/unicode 'Michael Ferguson'
    deps: []
    desc: Firmware source code for ArbotiX ROS bindings.
    license: BSD
    shortdesc: arbotix_firmware
    source: http://vanadium-ros-pkg.googlecode.com/svn/trunk/arbotix/arbotix_firmware
    website: http://ros.org/wiki/arbotix_firmware
  arbotix_msgs:
    author: !!python/unicode 'Michael Ferguson'
    deps:
    - rospy
    - roscpp
    desc: Messages and Services definitions for the ArbotiX.
    license: BSD
    shortdesc: Message/Service definitions for the ArbotiX
    source: http://vanadium-ros-pkg.googlecode.com/svn/trunk/arbotix/arbotix_msgs
    website: http://ros.org/wiki/arbotix_msgs
  arbotix_python:
    author: !!python/unicode 'Michael Ferguson'
    deps:
    - rospy
    - tf
    - arbotix_msgs
    - sensor_msgs
    - geometry_msgs
    - diagnostic_msgs
    - nav_msgs
    - std_srvs
    desc: Bindings and low-level controllers for ArbotiX-powered robots.
    license: BSD
    shortdesc: Drivers for the ArbotiX
    source: http://vanadium-ros-pkg.googlecode.com/svn/trunk/arbotix/arbotix_python
    website: http://ros.org/wiki/arbotix_python
  arbotix_sensors:
    author: !!python/unicode 'Michael Ferguson'
    deps:
    - arbotix_python
    desc: Extends the arbotix_node package with a number of more sophisticated ROS
      wrappers for common devices.
    license: BSD
    shortdesc: Basic sensors for ArbotiX connected devices
    source: http://vanadium-ros-pkg.googlecode.com/svn/trunk/arbotix/arbotix_sensors
    website: http://ros.org/wiki/arbotix_sensors
  armadillo_2wd:
    author: !!python/unicode 'Michael E. Ferguson'
    deps:
    - arbotix_python
    - arbotix_controllers
    - urdf
    desc: Definitions, applications, and launch files for the Vanadium Armadillo mobile
      manipulator.
    license: BSD
    shortdesc: armadillo_2wd
    source: http://vanadium-ros-pkg.googlecode.com/svn/trunk/vanadium_robots/armadillo_2wd
    website: http://ros.org/wiki/armadillo_2wd
  maxwell_defs:
    author: !!python/unicode 'Michael Ferguson'
    deps:
    - urdf
    - xacro
    - ivcon
    - diagnostic_msgs
    - arbotix_python
    desc: Maxwell is a custom mobile manipulator, this package contains his configuration
      and launch files.
    license: BSD
    shortdesc: URDF and bringup info for Maxwell
    source: http://vanadium-ros-pkg.googlecode.com/svn/trunk/maxwell/maxwell_defs
    website: http://ros.org/wiki/maxwell_defs
  maxwell_move_arm:
    author: !!python/unicode 'Michael Ferguson'
    deps:
    - rospy
    - trajectory_msgs
    - kinematics_msgs
    - std_srvs
    - arm_kinematics
    desc: ''
    license: BSD
    shortdesc: maxwell_move_arm
    source: http://vanadium-ros-pkg.googlecode.com/svn/trunk/maxwell/maxwell_move_arm
    website: http://ros.org/wiki/maxwell_move_arm
  maxwell_navigation:
    author: !!python/unicode 'Michael Ferguson'
    deps:
    - hokuyo_node
    - move_base
    - tf
    - pocketsphinx
    desc: ''
    license: BSD
    shortdesc: Navigation configuration for Maxwell mobile manipulator
    source: http://vanadium-ros-pkg.googlecode.com/svn/trunk/maxwell_apps/maxwell_navigation
    website: http://ros.org/wiki/maxwell_navigation
  mini_max_core:
    author: !!python/unicode 'Michael Ferguson'
    deps:
    - rospy
    desc: ''
    license: BSD
    shortdesc: Drivers for Mini Max platform
    source: http://vanadium-ros-pkg.googlecode.com/svn/trunk/mini_max/mini_max_core
    website: http://ros.org/wiki/mini_max_core
  mini_max_defs:
    author: !!python/unicode 'Michael Ferguson'
    deps:
    - urdf
    - xacro
    - ivcon
    - diagnostic_msgs
    - arbotix_python
    - arbotix
    desc: ''
    license: BSD
    shortdesc: URDF/YAML definition, bringup info for Mini Maxwell
    source: http://vanadium-ros-pkg.googlecode.com/svn/trunk/mini_max/mini_max_defs
    website: http://ros.org/wiki/mini_max_defs
  prmini_apps:
    author: !!python/unicode 'Michael Ferguson'
    deps:
    - roscpp
    - rospy
    - pr2_teleop
    - pr2_controllers_msgs
    - actionlib
    desc: Standard applications for demoing PR-MINI.
    license: BSD
    shortdesc: Applications for PR-MINI
    source: http://vanadium-ros-pkg.googlecode.com/svn/trunk/sandbox/prmini/prmini_apps
    website: http://ros.org/wiki/prmini_apps
  prmini_arm_nav:
    author: !!python/unicode 'Michael Ferguson'
    deps: []
    desc: Definitions for the PR-MINI platform.
    license: BSD
    shortdesc: Configurations for PR-MINI's arms
    source: http://vanadium-ros-pkg.googlecode.com/svn/trunk/sandbox/prmini/prmini_arm_nav
    website: http://ros.org/wiki/prmini_arm_navigation
  prmini_defs:
    author: !!python/unicode 'Michael Ferguson'
    deps:
    - roscpp
    - rospy
    - arbotix_node
    - pr2_controller_msgs
    desc: Definitions for the PR-MINI platform.
    license: BSD
    shortdesc: Definitions for the PR-MINI platform
    source: http://vanadium-ros-pkg.googlecode.com/svn/trunk/sandbox/prmini/prmini_defs
    website: http://ros.org/wiki/prmini_defs
  simple_controllers:
    author: !!python/unicode 'Michael Ferguson'
    deps:
    - trajectory_msgs
    - geometry_msgs
    - actionlib
    - actionlib_msgs
    desc: This is a set of simple, robot-independent, action-based controllers for
      heads, and single joint control. While it uses the trajectory_msgs package from
      the PR2 for publishing output, it does not rely on the trajectory state messages
      as found on the PR2 -- instead using joint_states.
    license: BSD
    shortdesc: simple_controllers
    source: http://vanadium-ros-pkg.googlecode.com/svn/trunk/vanadium_drivers/simple_controllers
    website: http://ros.org/wiki/simple_controllers
veltrop-ros-pkg:
  roboard_gui:
    author: !!python/unicode 'Taylor Veltrop'
    deps:
    - roboard_servos
    desc: GUI programs for the roboard stack.
    license: BSD
    shortdesc: roboard_gui
    source: https://veltrop-ros-pkg.svn.sourceforge.net/svnroot/veltrop-ros-pkg/trunk/veltrop-ros-pkg/roboard/roboard_gui
    website: http://taylor.veltrop.com/robotics/khrhumanoidv2.php?topic=veltrop-ros-pkg
  roboard_roboio:
    author: !!python/unicode 'DMP Electronics, Inc. ROS inclusion and patch by Taylor
      Veltrop.'
    deps: []
    desc: This library allows hardware access to the Roboard.
    license: BSD
    shortdesc: Support library for the Roboard.
    source: https://veltrop-ros-pkg.svn.sourceforge.net/svnroot/veltrop-ros-pkg/trunk/veltrop-ros-pkg/roboard/roboard_roboio
    website: http://www.roboard.com
  roboard_sensors:
    author: !!python/unicode 'Taylor Veltrop'
    deps:
    - roscpp
    - std_msgs
    - roboard_roboio
    desc: "Polls the i2c and ad of the Roboard for raw sensor data.\n     Raw data\
      \ should be processed into meaningful data in\n     your own stack, in an other\
      \ node."
    license: BSD
    shortdesc: roboard_sensors
    source: https://veltrop-ros-pkg.svn.sourceforge.net/svnroot/veltrop-ros-pkg/trunk/veltrop-ros-pkg/roboard/roboard_sensors
    website: http://taylor.veltrop.com/robotics/khrhumanoidv2.php?topic=veltrop-ros-pkg
  roboard_servos:
    author: !!python/unicode 'Taylor Veltrop'
    deps:
    - roscpp
    - std_msgs
    - sensor_msgs
    - roboard_roboio
    - veltrobot_msgs
    desc: "Controls the position of servos based on joint_states.\n     Also can modify\
      \ the servo position based on gyroscopic data."
    license: BSD
    shortdesc: roboard_servos
    source: https://veltrop-ros-pkg.svn.sourceforge.net/svnroot/veltrop-ros-pkg/trunk/veltrop-ros-pkg/roboard/roboard_servos
    website: http://taylor.veltrop.com/robotics/khrhumanoidv2.php?topic=veltrop-ros-pkg
  treadmill_control:
    author: !!python/unicode ''
    deps:
    - roscpp
    - joy
    - wiimote
    - tf
    desc: treadmill_control
    license: BSD
    shortdesc: treadmill_control
    source: https://veltrop-ros-pkg.svn.sourceforge.net/svnroot/veltrop-ros-pkg/trunk/veltrop-ros-pkg/treadmill/treadmill_control
    website: http://ros.org/wiki/treadmill_control
  veltrobot_data:
    author: !!python/unicode 'space'
    deps:
    - robot_state_publisher
    - veltrobot_teleop
    - veltrobot_movement
    - veltrobot_sensors
    - roboard_servos
    - roboard_sensors
    desc: "This package has no code.  It contains launchers, config data, \n     and\
      \ pose/motion data for the packages in the veltrop-ros-pkg\n     repository.\
      \  Also contains code to import poses from Kondo's\n     Heart2Heart software."
    license: BSD
    shortdesc: veltrobot_data
    source: https://veltrop-ros-pkg.svn.sourceforge.net/svnroot/veltrop-ros-pkg/trunk/veltrop-ros-pkg/veltrobot/veltrobot_data
    website: http://taylor.veltrop.com/robotics/khrhumanoidv2.php?topic=veltrop-ros-pkg
  veltrobot_gui:
    author: !!python/unicode 'Taylor Veltrop'
    deps:
    - std_msgs
    - veltrobot_msgs
    - veltrobot_movement
    desc: GUI programs for the veltrobot stack.
    license: BSD
    shortdesc: veltrobot_gui
    source: https://veltrop-ros-pkg.svn.sourceforge.net/svnroot/veltrop-ros-pkg/trunk/veltrop-ros-pkg/veltrobot/veltrobot_gui
    website: http://taylor.veltrop.com/robotics/khrhumanoidv2.php?topic=veltrop-ros-pkg
  veltrobot_movement:
    author: !!python/unicode 'Taylor Veltrop'
    deps:
    - roscpp
    - tinyxml
    - std_msgs
    - sensor_msgs
    desc: "Controls the movment of a robot using servos.\n     Servo positons are\
      \ sent as joint_states.  Poses and motions\n     are defined by XML files."
    license: BSD
    shortdesc: veltrobot_movement
    source: https://veltrop-ros-pkg.svn.sourceforge.net/svnroot/veltrop-ros-pkg/trunk/veltrop-ros-pkg/veltrobot/veltrobot_movement
    website: http://taylor.veltrop.com/robotics/khrhumanoidv2.php?topic=veltrop-ros-pkg
  veltrobot_msgs:
    author: !!python/unicode 'Taylor Veltrop'
    deps:
    - roscpp
    desc: Common messages used throughout the Veltrobot system.
    license: BSD
    shortdesc: veltrobot_msgs
    source: https://veltrop-ros-pkg.svn.sourceforge.net/svnroot/veltrop-ros-pkg/trunk/veltrop-ros-pkg/veltrobot/veltrobot_msgs
    website: http://taylor.veltrop.com/robotics/khrhumanoidv2.php?topic=veltrop-ros-pkg
  veltrobot_nao:
    author: !!python/unicode 'Taylor Veltrop'
    deps:
    - veltrobot_msgs
    - sensor_msgs
    - rospy
    - nao_ctrl
    - nao_remote
    - nao_msgs
    - humanoid_nav_msgs
    desc: ''
    license: BSD
    shortdesc: ''
    source: https://veltrop-ros-pkg.svn.sourceforge.net/svnroot/veltrop-ros-pkg/trunk/veltrop-ros-pkg/veltrobot/veltrobot_nao
    website: http://ros.org/wiki/veltrobot_nao
  veltrobot_sensors:
    author: !!python/unicode 'Taylor Veltrop'
    deps:
    - roscpp
    - std_msgs
    - sensor_msgs
    - image_transport
    - opencv2
    - cv_bridge
    desc: "Contains nodes to abstract raw data from sensors.\n     Also contains stereo\
      \ video capture nodes."
    license: BSD
    shortdesc: veltrobot_sensors
    source: https://veltrop-ros-pkg.svn.sourceforge.net/svnroot/veltrop-ros-pkg/trunk/veltrop-ros-pkg/veltrobot/veltrobot_sensors
    website: http://taylor.veltrop.com/robotics/khrhumanoidv2.php?topic=veltrop-ros-pkg
  veltrobot_teleop:
    author: !!python/unicode 'Taylor Veltrop'
    deps:
    - roscpp
    - std_msgs
    - sensor_msgs
    - joy
    - openni
    - nite
    - tf
    - kdl
    - veltrobot_msgs
    - wiimote
    desc: "Control robots with the keyboard, Sony PS3 six axis controller, or \n \
      \    Microsoft XBox Kinect."
    license: BSD
    shortdesc: veltrobot_teleop
    source: https://veltrop-ros-pkg.svn.sourceforge.net/svnroot/veltrop-ros-pkg/trunk/veltrop-ros-pkg/veltrobot/veltrobot_teleop
    website: http://taylor.veltrop.com/robotics/khrhumanoidv2.php?topic=veltrop-ros-pkg
visual_feedback:
  active_shape:
    author: !!python/unicode 'Stephen Miller'
    deps:
    - rospy
    - tf
    - opencv2
    - cv_bridge
    - sensor_msgs
    - std_msgs
    - std_srvs
    - geometry_msgs
    - image_geometry
    - roscpp
    - image_transport
    - shape_window
    - folding_gui
    desc: active_shape
    license: BSD
    shortdesc: active_shape
    source: http://ros.berkeley.edu/svn/berkeley-ros-pkg/stacks/visual_feedback/trunk/visual_feedback/active_shape
    website: http://ros.org/wiki/active_shape
  appearance_utils:
    author: !!python/unicode 'Stephen Miller'
    deps:
    - roscpp
    - opencv2
    - sensor_msgs
    - cv_bridge
    - image_transport
    - socks
    desc: appearance_utils
    license: BSD
    shortdesc: appearance_utils
    source: http://ros.berkeley.edu/svn/berkeley-ros-pkg/stacks/visual_feedback/trunk/visual_feedback/appearance_utils
    website: http://ros.org/wiki/appearance_utils
  image_processor:
    author: !!python/unicode 'Stephen Miller'
    deps:
    - rospy
    - roscpp
    - tf
    - opencv2
    - cv_bridge
    - sensor_msgs
    - std_msgs
    - std_srvs
    - geometry_msgs
    - image_geometry
    - roscpp
    - image_transport
    - dynamic_reconfigure
    - shape_window
    - folding_gui
    - stereo_click
    - snapshotter
    - passive_shape
    - visual_feedback_utils
    desc: image_processor
    license: BSD
    shortdesc: image_processor
    source: http://ros.berkeley.edu/svn/berkeley-ros-pkg/stacks/visual_feedback/trunk/visual_feedback/image_processor
    website: http://ros.org/wiki/image_processor
  passive_shape:
    author: !!python/unicode 'Stephen Miller'
    deps:
    - rospy
    - tf
    - opencv2
    - cv_bridge
    - sensor_msgs
    - std_msgs
    - std_srvs
    - geometry_msgs
    - image_geometry
    - roscpp
    - image_transport
    - shape_window
    - folding_gui
    - stereo_click
    - snapshotter
    - appearance_utils
    - rll_utils
    desc: snapshotter
    license: BSD
    shortdesc: snapshotter
    source: http://ros.berkeley.edu/svn/berkeley-ros-pkg/stacks/visual_feedback/trunk/visual_feedback/passive_shape
    website: http://ros.org/wiki/snapshotter
  snapshotter:
    author: !!python/unicode 'Stephen Miller'
    deps:
    - rospy
    - tf
    - opencv2
    - cv_bridge
    - sensor_msgs
    - std_msgs
    - std_srvs
    - geometry_msgs
    - image_geometry
    - roscpp
    - image_transport
    - visual_feedback_utils
    - stereo_click
    - joy
    desc: snapshotter
    license: BSD
    shortdesc: snapshotter
    source: http://ros.berkeley.edu/svn/berkeley-ros-pkg/stacks/visual_feedback/trunk/visual_feedback/snapshotter
    website: http://ros.org/wiki/snapshotter
  visual_feedback_utils:
    author: !!python/unicode 'Stephen Miller'
    deps:
    - rospy
    - opencv2
    - roscpp
    - polled_camera
    - dynamic_reconfigure
    - shape_window
    desc: visual_feedback_utils
    license: BSD
    shortdesc: visual_feedback_utils
    source: http://ros.berkeley.edu/svn/berkeley-ros-pkg/stacks/visual_feedback/trunk/visual_feedback/visual_feedback_utils
    website: http://ros.org/wiki/visual_feedback_utils
visualization_engine:
  rve_common:
    author: !!python/unicode 'Josh Faust'
    deps:
    - rve_msgs
    - roslib
    - eigen
    desc: rve_common
    license: BSD
    shortdesc: rve_common
    source: https://bitbucket.org/jfaust/visualization_engine
    website: http://ros.org/wiki/rve_common
  rve_common_transformers:
    author: !!python/unicode 'Josh Faust'
    deps:
    - roscpp
    - rve_properties
    - rve_render_client
    - rve_transformer
    - rve_common
    - rve_pluginloader
    - tf2
    desc: rve_common_transformers
    license: BSD
    shortdesc: rve_common_transformers
    source: https://bitbucket.org/jfaust/visualization_engine
    website: http://ros.org/wiki/rve_common_transformers
  rve_dynlib:
    author: !!python/unicode 'Josh Faust'
    deps:
    - rosconsole
    - roslib
    desc: rve_dynlib
    license: BSD
    shortdesc: rve_dynlib
    source: https://bitbucket.org/jfaust/visualization_engine
    website: http://ros.org/wiki/rve_dynlib
  rve_interface_gen:
    author: !!python/unicode 'Josh Faust'
    deps:
    - roslib
    - roscpp
    - rve_rpc
    - std_msgs
    desc: Generates easy to use proxy classes and base classes which wrap rve_rpc
      method calls.
    license: BSD
    shortdesc: RPC Interface Code Generation
    source: https://bitbucket.org/jfaust/visualization_engine
    website: http://ros.org/wiki/rve_interface_gen
  rve_interfaces:
    author: !!python/unicode 'Josh Faust'
    deps:
    - rve_interface_gen
    - rve_msgs
    - geometry_msgs
    - std_msgs
    - sensor_msgs
    desc: rve_interfaces
    license: BSD
    shortdesc: rve_interfaces
    source: https://bitbucket.org/jfaust/visualization_engine
    website: http://ros.org/wiki/rve_interfaces
  rve_mesh_loader:
    author: !!python/unicode 'Josh Faust'
    deps:
    - assimp
    - rosconsole
    - eigen
    - rve_msgs
    - rve_common
    - resource_retriever
    desc: rve_mesh_loader
    license: BSD
    shortdesc: rve_mesh_loader
    source: https://bitbucket.org/jfaust/visualization_engine
    website: http://ros.org/wiki/rve_mesh_loader
  rve_msgs:
    author: !!python/unicode 'Josh Faust'
    deps:
    - geometry_msgs
    - std_msgs
    - roscpp
    desc: rve_msgs
    license: BSD
    shortdesc: rve_msgs
    source: https://bitbucket.org/jfaust/visualization_engine
    website: http://ros.org/wiki/rve_msgs
  rve_pluginloader:
    author: !!python/unicode 'Josh Faust'
    deps:
    - yaml_cpp
    - rosconsole
    - rve_dynlib
    desc: rve_pluginloader
    license: BSD
    shortdesc: rve_pluginloader
    source: https://bitbucket.org/jfaust/visualization_engine
    website: http://ros.org/wiki/rve_pluginloader
  rve_properties:
    author: !!python/unicode 'Josh Faust'
    deps:
    - roscpp
    desc: rve_properties
    license: BSD
    shortdesc: rve_properties
    source: https://bitbucket.org/jfaust/visualization_engine
    website: http://ros.org/wiki/rve_properties
  rve_qt:
    author: !!python/unicode 'Josh Faust'
    deps:
    - roscpp
    - rve_msgs
    - rve_render_client
    - rve_interfaces
    desc: rve_qt
    license: BSD
    shortdesc: rve_qt
    source: https://bitbucket.org/jfaust/visualization_engine
    website: http://ros.org/wiki/rve_qt
  rve_render_client:
    author: !!python/unicode 'Josh Faust'
    deps:
    - rve_interfaces
    - rve_common
    - rve_mesh_loader
    - rve_properties
    - urdf
    desc: rve_render_client
    license: BSD
    shortdesc: rve_render_client
    source: https://bitbucket.org/jfaust/visualization_engine
    website: http://ros.org/wiki/rve_render_client
  rve_render_server:
    author: !!python/unicode 'Josh Faust'
    deps:
    - ogre
    - rve_common
    - rve_interfaces
    - rve_mesh_loader
    - sensor_msgs
    - roscpp
    desc: rve_render_server
    license: BSD
    shortdesc: rve_render_server
    source: https://bitbucket.org/jfaust/visualization_engine
    website: http://ros.org/wiki/rve_render_server
  rve_rpc:
    author: !!python/unicode 'Josh Faust'
    deps:
    - roscpp
    - roslib
    - rve_common
    - rve_msgs
    - std_msgs
    desc: rve_rpc provides a rpc (remote procedure call) mechanism similar to services,
      but using topics for communication.
    license: BSD
    shortdesc: A topic-based rpc mechanism
    source: https://bitbucket.org/jfaust/visualization_engine
    website: http://ros.org/wiki/rve_rpc
  rve_transformer:
    author: !!python/unicode 'Josh Faust'
    deps:
    - roscpp
    - tf
    - tf2
    - tf2_ros
    - message_filters
    - rve_render_client
    - rve_interface_gen
    - rve_interfaces
    - rve_msgs
    - rve_common
    - rve_pluginloader
    - rve_properties
    desc: rve_transformer
    license: BSD
    shortdesc: rve_transformer
    source: https://bitbucket.org/jfaust/visualization_engine
    website: http://ros.org/wiki/rve_transformer
  test_rve:
    author: !!python/unicode 'Josh Faust'
    deps:
    - roscpp
    - rosconsole
    - eigen
    - rve_msgs
    - rve_common
    - rve_interfaces
    - rve_interface_gen
    - rve_render_server
    - rve_render_client
    - rve_qt
    - rve_transformer
    - rve_common_transformers
    - urdf
    desc: A 3d visualization environment for robots using ROS.
    license: BSD
    shortdesc: Robot VIsualiZer
    source: https://bitbucket.org/jfaust/visualization_engine
    website: http://code.ros.org/wiki/rviz
vmi-ros-pkg:
  android:
    author: "Stefan Diewald, Matthias Kranz, Andreas M\xC3\xB6ller, Luis Roalter"
    deps: []
    desc: "VMI Android Mobile Main Package.\n\n    This package is not part of a ROS\
      \ Package. It needs to be handled in a special way. Still - it's beta."
    license: BSD
    shortdesc: "VMI Android Mobile Main Package.\n\n    This package is not part of\
      \ a ROS Package. It needs ..."
    source: https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg/trunk/vmi_android/android
    website: http://ros.org/wiki/android
  android_ce_control:
    author: "Stefan Diewald, Matthias Kranz, Andreas M\xC3\xB6ller, Luis Roalter"
    deps: []
    desc: "VMI Cognitive Environment Control for Android\n\n    This package is not\
      \ part of a ROS Package. It needs to be handled in a special way. Still - it's\
      \ beta."
    license: BSD
    shortdesc: android_ce_control
    source: https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg/trunk/vmi_android/android_ce_control
    website: http://ros.org/wiki/android_ce_control
  artoolkitplus:
    author: !!python/unicode 'Stefan Diewald and Luis Roalter'
    deps: []
    desc: Latest version of ARToolKitPlus from https://launchpad.net/artoolkitplus
    license: GPL
    shortdesc: artoolkitplus
    source: https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg/trunk/vmi_external_dependencies/artoolkitplus
    website: http://ros.org/wiki/artoolkitplus
  ce_common:
    author: !!python/unicode 'Roalter Luis'
    deps: []
    desc: ce_common
    license: BSD
    shortdesc: ce_common
    source: https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg/trunk/ce_common/ce_common
    website: http://ros.org/wiki/ce_common
  ce_environment:
    author: !!python/unicode 'Matthias Kranz, Luis Roalter'
    deps:
    - rospy
    - std_msgs
    - python_feedparser
    desc: "The Environment (ce_environment) package is a package,\n     which provides\
      \ information about the environment including\n     weather, conditions, forcast,\
      \ daylight etc.\n     \n     In a cognitive environment you can reuse these\
      \ information\n     and adapt your robots to it."
    license: BSD
    shortdesc: Environment Information Provider
    source: https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg/trunk/vmi_cognitive_environment/ce_environment
    website: http://www.ros.org/wiki/ce_environment
  ce_fan:
    author: !!python/unicode 'Matthias Kranz'
    deps:
    - rospy
    - std_msgs
    - ce_infratec
    - ce_common
    desc: Fan Controller and IR Interface
    license: GPL
    shortdesc: Fan Controller (IR Interface)
    source: https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg/trunk/vmi_cognitive_environment/ce_fan
    website: http://www.ros.org/wiki/ce_fan
  ce_hardware:
    author: !!python/unicode 'Luis Roalter'
    deps:
    - rospy
    - std_msgs
    - ce_phidgets
    desc: "This packages helps the user to understand binary connections\n    giving\
      \ them a meaningful name and path."
    license: BSD
    shortdesc: Hardware Abstraction Layer for Cognitive Systems
    source: https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg/trunk/ce_common/ce_hardware
    website: http://ros.org/wiki/ce_hardware
  ce_pca:
    author: !!python/unicode 'Matthias.Kranz@TUM.de'
    deps:
    - rospy
    - std_msgs
    desc: Perception-Cognition-Action Loop Controller
    license: BSD
    shortdesc: pcacontrollers
    source: https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg/trunk/vmi_cognitive_environment/ce_pca
    website: http://www.ros.org/wiki/ce_pca
  ce_phidgets:
    author: !!python/unicode 'David Feil-Seifer, Matthias Kranz and Luis Roalter'
    deps:
    - roscpp
    - std_msgs
    - libphidgets21
    desc: Phidget Interface Kit
    license: GPL
    shortdesc: ce_phidgets
    source: https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg/trunk/vmi_cognitive_environment/ce_phidgets
    website: http://ros.org/wiki/ce_phidgets
  ce_plants:
    author: !!python/unicode 'Matthias Kranz, Luis Roalter'
    deps:
    - rospy
    - std_msgs
    - ce_infratec
    - ce_social
    desc: "Botanicalls Cognitive Plants\n     \n     New interaction module."
    license: BSD
    shortdesc: Cognitive Plants Interaction
    source: https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg/trunk/vmi_cognitive_environment/ce_plants
    website: http://ros.org/wiki/ce_plants
  ce_wsn:
    author: !!python/unicode 'Roalter Luis'
    deps: []
    desc: wsnwatch
    license: BSD
    shortdesc: wsnwatch
    source: https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg/trunk/vmi_cognitive_environment/ce_wsn
    website: http://ros.org/wiki/wsnwatch
  cognitive_environment:
    author: !!python/unicode 'Luis Roalter'
    deps:
    - ce_environment
    - ce_fan
    - ce_hardware
    - ce_infratec
    - ce_pca
    - ce_phidgets
    - ce_plants
    - ce_remote
    - ce_social
    - ce_wsn
    desc: "The Cognitive Environment. The main package with Launchers and\n     various\
      \ settings."
    license: BSD
    shortdesc: The Cognitive Environment
    source: https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg/trunk/vmi_cognitive_environment/cognitive_environment
    website: http://ros.org/wiki/cognitive_environment
  driver_infratec:
    author: !!python/unicode 'Matthias Kranz and Luis Roalter'
    deps:
    - rospy
    - ce_common
    - std_msgs
    desc: "InfraTec Modules: You can switch objects in your infrastructure.\n    \
      \ Currently just a IPSwitch, more to come."
    license: BSD
    shortdesc: Infrastructure Systems
    source: https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg/trunk/ipswitch4ros/driver_infratec
    website: http://www.ros.org/wiki/ce_infratec
  driver_netio:
    author: !!python/unicode 'Luis Roalter'
    deps:
    - rospy
    - std_msgs
    desc: "InfraTec Modules: You can switch objects in your infrastructure.\n    \
      \ Currently just a IPSwitch, more to come."
    license: BSD
    shortdesc: NetIO 230B Switch
    source: https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg/trunk/ipswitch4ros/driver_netio
    website: http://www.ros.org/wiki/ce_infratec
  dynamic_uvc_cam:
    author: !!python/unicode 'Stefan Diewald'
    deps:
    - rospy
    - sensor_msgs
    - image_transport
    - opencv2
    - cv_bridge
    - camera_calibration_parsers
    - "uvc_cam\n  Changed major sender parts to fit the whiteboard robot needs from\
      \ VMI, TU Muenchen.\n\n  Package is GPL since some of its code is adapted from\
      \ GPL programs such as guvcview</p>\n<hr />\n<p><a href="
    desc: "A node and utilities for webcams supporting the uvcvideo driver (e.g. Logitech\
      \ cameras and many others).\n\n  It is based on the uvc_cam package from Morgan\
      \ Quigley http://www.ros.org/browse/details.php?name=uvc_cam\n  Changed major\
      \ sender parts to fit the whiteboard robot needs from VMI, TU Muenchen.\n\n\
      \  Package is GPL since some of its code is adapted from GPL programs such as\
      \ guvcview"
    license: GPL
    shortdesc: A node and utilities for webcams supporting the uvcvideo driver (e.g.
      Logitech cameras and many othe...
    source: details.php?name=roscpp
    website: https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg/trunk/wbrobot/dynamic_uvc_cam
  easy_remote:
    author: !!python/unicode 'Roalter Luis'
    deps:
    - rospy
    - std_msgs
    desc: powerremote
    license: BSD
    shortdesc: powerremote
    source: https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg/trunk/roseasy/easy_remote
    website: http://ros.org/wiki/powerremote
  gazebo_video_plugin:
    author: !!python/unicode 'Stefan Diewald'
    deps:
    - gazebo
    - gazebo_tools
    - roscpp
    - std_msgs
    - geometry_msgs
    - sensor_msgs
    - tinyxml
    - image_transport
    - dynamic_reconfigure
    desc: This Gazebo plugin enables dynamic textures. The texture can be set via
      an image topic or by passing a path to an image file.
    license: BSD
    shortdesc: Enable dynamic textures in Gazebo.
    source: https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg/trunk/textvid/gazebo_video_plugin
    website: http://ros.org/wiki/gazebo_video_plugin
  homeeasy_dongle:
    author: !!python/unicode 'Stefan Diewald, Luis Roalter'
    deps:
    - roseasy
    - roscpp
    - rospy
    - std_msgs
    desc: This node allows to control Home Easy components with the help of the HE853
      usb dongle.
    license: BSD
    shortdesc: Node for the Home Easy Donlge HE853.
    source: https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg/trunk/roseasy/homeeasy_dongle
    website: http://ros.org/wiki/homeeasy_dongle
  homeeasy_transciever:
    author: !!python/unicode 'Stefan Diewald, Luis Roalter'
    deps:
    - roscpp
    - rospy
    - roseasy
    - homeeasy_dongle
    desc: "Currently implemented:<br/>\n     <ul>\n     \t<li>Receiver for AnBan RF\
      \ codes (dimming)</li>\n     </ul>\n     The transciever should implement a\
      \ fully functional reciever and \n     transmitter for 433MHz systems."
    license: BSD
    shortdesc: Arduino based transceiver for HomeEasy EU equipment
    source: https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg/trunk/roseasy/homeeasy_transciever
    website: http://ros.org/wiki/homeeasy_transciever
  hotwax:
    author: !!python/unicode 'Stefan Diewald, Luis Roalter'
    deps:
    - wax_sensor
    desc: "<em>hotwax</em> is a meta-package providing launch files for different\
      \ (visualization) applications using the <em>wax_sensor</em> package.\n    \
      \ \n     We acknowledge and are grateful for the WAX sensor nodes provided by\
      \ the <a href=\"http://www.ncl.ac.uk/culturelab/\">Culture Lab</a> at Newcastle\
      \ University and the <a href=\"http://www.side.ac.uk/\">SiDE</a> research project."
    license: BSD
    shortdesc: Collection of different visualization applications and launch files
      for the wax_sensor package.
    source: https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg/trunk/hotwax/hotwax
    website: http://ros.org/wiki/hotwax
  image_sink:
    author: !!python/unicode 'Stefan Diewald'
    deps:
    - roscpp
    - opencv2
    - cv_bridge
    - image_transport
    - sensor_msgs
    desc: "The <b>image_sink</b> writes sensor_msgs/Image to a v4l2 compatible video\
      \ device.<br/>\n    <br/>\n    The included virtual loopback video device <b>v4l2loopback</b>\
      \ is a kernel module\n    which creates /dev/videoX devices that can be written\
      \ to and read from\n    at the same time.<br/>\n    <br/>\n    The combination\
      \ of the image_sink and the loopback device allows to view ROS images\n    in\
      \ every v4l2 compatible image capture application e. g. Skype or VLC Media Player."
    license: BSD
    shortdesc: Send images from sensor_msgs/Image to v4l2 compatible video device.
    source: https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg/trunk/simvid/image_sink
    website: http://ros.org/wiki/image_sink
  ipswitch4ros:
    author: !!python/unicode 'Roalter Luis'
    deps:
    - driver_infratec
    - driver_netio
    desc: ipswitch4ros
    license: BSD
    shortdesc: ipswitch4ros
    source: https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg/trunk/ipswitch4ros/ipswitch4ros
    website: http://ros.org/wiki/ipswitch4ros
  kinect4skype:
    author: !!python/unicode 'Diewald Stefan, Roalter Luis'
    deps:
    - pcl
    - pcl_ros
    - pcl_visualization
    - eigen
    - stereo_msgs
    - sensor_msgs
    - opencv2
    - cv_bridge
    - image_transport
    desc: Allows to work with Kinect Point Cloud Images via Skype.
    license: BSD
    shortdesc: Allows to work with Kinect Point Cloud Images via Skype.
    source: https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg/trunk/kinect4skype/kinect4skype
    website: http://ros.org/wiki/kinect4skype
  kr360:
    author: !!python/unicode 'Maxim Vetrenko, Luis Roalter'
    deps:
    - kr360_controller
    desc: "KUKA KR360-2 Robot Arm\n     \n     Experimental Model for discret and\
      \ continous controllers. \n     \n     See http://www.kuka-robotics.com/germany/de/products/industrial_robots/heavy/kr360_2\
      \ for details."
    license: BSD
    shortdesc: "KUKA KR360-2 Robot Arm\n     \n     Experimental Model for discret\
      \ and continous controllers. \n ..."
    source: https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg/trunk/vmi_experimental/kr360
    website: http://ros.org/wiki/kr360
  kr360_controller:
    author: !!python/unicode 'Roalter Luis'
    deps:
    - pr2_controller_interface
    - pr2_mechanism_model
    - pluginlib
    desc: kr360_controller
    license: BSD
    shortdesc: kr360_controller
    source: https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg/trunk/vmi_experimental/kr360_controller
    website: http://ros.org/wiki/kr360_controller
  learning_tf:
    author: !!python/unicode 'Roalter Luis'
    deps:
    - rospy
    - roslib
    - turtlesim
    - tf
    desc: learning_tf
    license: BSD
    shortdesc: learning_tf
    source: https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg/trunk/test/learning_tf
    website: http://ros.org/wiki/learning_tf
  libphidgets21:
    author: !!python/unicode 'Luis Roalter'
    deps: []
    desc: "Dependencies Tree for libphidgets. Integrates the patched library directly.\n\
      \n     See ce_phidgets for examples."
    license: BSD,GPL
    shortdesc: libphidgets21 - libphidgets wrapper, patched with output possiblities
    source: https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg/trunk/vmi_external_dependencies/libphidgets21
    website: http://ros.org/wiki/libphidgets21
  manualcontroller:
    author: !!python/unicode 'Luis Roalter'
    deps:
    - python_pmw
    desc: manualcontroller
    license: BSD
    shortdesc: manualcontroller
    source: https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg/trunk/vmi_cognitive_environment/manualcontroller
    website: http://ros.org/wiki/manualcontroller
  python_facebook:
    author: !!python/unicode 'Roalter Luis'
    deps: []
    desc: python_facebook
    license: BSD
    shortdesc: python_facebook
    source: https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg/trunk/socialize/python_facebook
    website: http://ros.org/wiki/python_facebook
  python_feedparser:
    author: !!python/unicode 'Roalter Luis'
    deps: []
    desc: python_feedparser
    license: BSD
    shortdesc: python_feedparser
    source: https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg/trunk/socialize/python_feedparser
    website: http://ros.org/wiki/python_feedparser
  python_oauth2:
    author: !!python/unicode 'Roalter Luis'
    deps: []
    desc: python_oauth2
    license: BSD
    shortdesc: python_oauth2
    source: https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg/trunk/socialize/python_oauth2
    website: http://ros.org/wiki/python_oauth2
  python_pmw:
    author: !!python/unicode 'Roalter Luis'
    deps: []
    desc: python_pmw
    license: BSD
    shortdesc: python_pmw
    source: https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg/trunk/vmi_external_dependencies/python_pmw
    website: http://ros.org/wiki/python_pmw
  python_skype:
    author: !!python/unicode 'Luis Roalter'
    deps: []
    desc: "Skype4Py Bindings in Version 1.0.32 -&gt; The only version which is capable\
      \ being used for Ap2Ap communication.\n  You can use the python-skype package\
      \ by ubuntu, but it is known to be in version 1.0.31. This packages contains\n\
      \  version 1.0.32. It will be removed when developer start their work again."
    license: BSD
    shortdesc: python_skype
    source: https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg/trunk/comm_skype/python_skype
    website: http://ros.org/wiki/python_skype
  python_twitter:
    author: !!python/unicode 'Roalter Luis'
    deps:
    - python_oauth2
    desc: python_twitter
    license: BSD
    shortdesc: python_twitter
    source: https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg/trunk/socialize/python_twitter
    website: http://ros.org/wiki/python_twitter
  python_xbee:
    author: !!python/unicode 'Diewald Stefan'
    deps: []
    desc: python_xbee
    license: BSD
    shortdesc: python_xbee
    source: https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg/trunk/xbee/python_xbee
    website: http://ros.org/wiki/python_xbee
  roseasy:
    author: !!python/unicode 'Roalter Luis'
    deps: []
    desc: roseasy
    license: BSD
    shortdesc: roseasy
    source: https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg/trunk/roseasy/roseasy
    website: http://ros.org/wiki/roseasy
  sim_camera:
    author: !!python/unicode 'Stefan Diewald'
    deps:
    - roscpp
    - gazebo
    - joy
    - tf
    desc: "This package implements a flying camera for exploring gazebo worlds.<br/>\n\
      \    The camera_move node is optimized to work with 3Dconnexion's SpaceNavigator."
    license: BSD
    shortdesc: Fly with objects e. g. a camera through gazebo worlds
    source: https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg/trunk/simvid/sim_camera
    website: http://ros.org/wiki/sim_camera
  skype:
    author: !!python/unicode 'Luis Roalter, Simon Koros'
    deps:
    - rospy
    - std_msgs
    - python_skype
    desc: "Skype2ROS Cognitive Interface\n\n     This Interface is meant to controll\
      \ a master Skype instance to obtain information\n     from it and from other\
      \ clients. \n     There is both a crawling client and a rosoverskype client.\n\
      \n     Still in creation. Sky2ROS is being converted. Currently just the services\
      \ are implemented,\n     the Ap2Ap is still missing."
    license: BSD
    shortdesc: "Skype2ROS Cognitive Interface\n\n     This Interface is meant to controll\
      \ a master Skype instan..."
    source: https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg/trunk/comm_skype/skype
    website: http://ros.org/wiki/ce_skype
  socialize:
    author: !!python/unicode 'Matthias Kranz, Luis Roalter'
    deps:
    - rospy
    - std_msgs
    - python_twitter
    - python_facebook
    - python_oauth2
    desc: "Social I/O\n     \n     This API communicatates with that bad ass of twitter.com.\n\
      \     It provides a simple &quot;submit&quot; and &quot;read&quot; path which\
      \ makes\n     it easier to post messages for every application using this\n\
      \     thing.\n     \n     Facebook, MySpace and Co to come."
    license: GPL
    shortdesc: "Social I/O\n     \n     This API communicatates with that bad ass\
      \ of twitter.com.\n     It provid..."
    source: https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg/trunk/socialize/socialize
    website: http://www.ros.org/wiki/ce_social
  sweetgazebo:
    author: !!python/unicode 'Oriol Triquell Conde, Luis Roalter'
    deps: []
    desc: "sweethome3d extended\n\n     sweetgazebo interface"
    license: Various
    shortdesc: sweetgazebo
    source: https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg/trunk/vmi_applications/sweetgazebo
    website: http://ros.org/wiki/sweetgazebo
  teleop:
    author: !!python/unicode 'Kevin Watts'
    deps:
    - joy
    - std_msgs
    - geometry_msgs
    - sensor_msgs
    - pr2_controllers_msgs
    - roscpp
    - topic_tools
    desc: "This package contains launch files for starting joystick or\n  keyboard-based\
      \ teleoperation (remote control) of the PR2."
    license: BSD
    shortdesc: Teleoperated the PR2
    source: https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg/trunk/test/teleop
    website: http://ros.org/wiki/pr2_teleop
  touch_display_interface:
    author: !!python/unicode 'Stefan Diewald'
    deps:
    - std_msgs
    - rospy
    desc: touch_display_interface
    license: BSD
    shortdesc: touch_display_interface
    source: https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg/trunk/wbrobot/touch_display_interface
    website: http://ros.org/wiki/touch_display_interface
  vnc_image_client:
    author: !!python/unicode 'Stefan Diewald'
    deps:
    - rospy
    - std_msgs
    - geometry_msgs
    - sensor_msgs
    - image_transport
    - opencv2
    - cv_bridge
    desc: This package allows to publish a VNC stream to a specified image topic.
    license: BSD
    shortdesc: VNC stream to ROS Image Topic
    source: https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg/trunk/vmi_experimental/vnc_image_client
    website: http://ros.org/wiki/vnc_image_client
  vo_actioncomponents:
    author: !!python/unicode 'Luis Roalter, Li Boxiao'
    deps:
    - gazebo_tools
    - pr2_controller_manager
    desc: Controller for the ImmoBot, the inmobile robots, aka movable parts.
    license: BSD
    shortdesc: Controller for the Simulationenvironment
    source: https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg/trunk/vmi_virtual_office/vo_actioncomponents
    website: http://ros.org/wiki/vo_actioncomponents
  vo_interface:
    author: !!python/unicode 'Luis Roalter'
    deps:
    - ce_hardware
    desc: "Virtual Office Driver\n\n     Driversystem to pull information out of the\
      \ ros system\n     and feed em into the gazebo model"
    license: BSD
    shortdesc: Virtual Driver Bridge
    source: https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg/trunk/vmi_virtual_office/vo_interface
    website: http://www.ros.org/wiki/vo_interface
  vo_virtualoffice:
    author: !!python/unicode 'Luis Roalter, Li Boxiao'
    deps:
    - vo_interface
    - vo_actioncomponents
    - gazebo
    - gazebo_plugins
    - gazebo_worlds
    - ogre
    - pr2_description
    - pr2_gazebo_plugins
    - pr2_ogre
    - robot_mechanism_controllers
    - xacro
    desc: "The Virtual Office from the Cognitive Environment. Contains the modelfiles\
      \ and meshes\n     for the environment."
    license: BSD
    shortdesc: Virtual Office Meshes
    source: https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg/trunk/vmi_virtual_office/vo_virtualoffice
    website: http://ros.org/wiki/vo_virtualoffice
  wax_sensor:
    author: !!python/unicode 'Stefan Diewald'
    deps:
    - rospy
    - geometry_msgs
    desc: "ROS node for reading out the acceleration values of <a href=\"http://axivity.com/devices/wireless/\"\
      >WAX sensors</a>.<br/>\n     <br/>\n     The wax_sensor.py node reads all incoming\
      \ data packets from the WAX receiver and creates automatically topics for every\
      \ sensor (by deviceId).<br/>\n     The acceleration values are published as\
      \ geometry_msgs/Vector3Stamped and are normalized to 1 g = 9.81 m/s^2.<br/>\n\
      \     <br/>\n     We acknowledge and are grateful for the WAX sensor nodes provided\
      \ by the <a href=\"http://www.ncl.ac.uk/culturelab/\">Culture Lab</a> at Newcastle\
      \ University and the <a href=\"http://www.side.ac.uk/\">SiDE</a> research project."
    license: BSD
    shortdesc: Read out WAX acceleration sensors.
    source: https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg/trunk/hotwax/wax_sensor
    website: http://ros.org/wiki/wax_sensor
  wb_robot_control:
    author: !!python/unicode 'Stefan Diewald'
    deps:
    - rospy
    - roscpp
    - opencv2
    - cv_bridge
    - dynamic_uvc_cam
    desc: wb_robot_control
    license: BSD
    shortdesc: wb_robot_control
    source: https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg/trunk/wbrobot/wb_robot_control
    website: http://ros.org/wiki/wb_robot_control
  wb_robot_tracking:
    author: !!python/unicode 'Stefan Diewald'
    deps:
    - std_msgs
    - rospy
    - roscpp
    - yaml_cpp
    - dynamic_uvc_cam
    - sensor_msgs
    - opencv2
    - cv_bridge
    - image_transport
    - dynamic_uvc_cam
    - artoolkitplus
    desc: wb_robot_tracking
    license: BSD
    shortdesc: wb_robot_tracking
    source: https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg/trunk/wbrobot/wb_robot_tracking
    website: http://ros.org/wiki/wb_robot_tracking
  xbee_interface:
    author: !!python/unicode 'Stefan Diewald'
    deps:
    - std_msgs
    - rospy
    - python_xbee
    desc: xbee_interface
    license: BSD
    shortdesc: xbee_interface
    source: https://vmi.lmt.ei.tum.de/svn/vmi-ros-pkg/trunk/xbee/xbee_interface
    website: http://ros.org/wiki/xbee_interface
warehousewg:
  mongodb:
    author: !!python/unicode 'Nate Koenig'
    deps:
    - rospy
    desc: The mongo database
    license: BSD
    shortdesc: The mongo database
    source: https://kforge.ros.org/warehousewg/warehouse-hg
    website: http://ros.org/wiki/mongodb
  warehouse:
    author: !!python/unicode 'Nate Koenig, Bhaskara Marthi'
    deps:
    - roslib
    - roscpp
    - rostest
    - rospy
    - yaml_cpp
    - std_msgs
    - geometry_msgs
    - tf
    - nav_msgs
    - visualization_msgs
    - mongodb
    desc: "This package is part of the Building Manager Project. The warehouse\n \
      \   contains all data about the state of the building, and provides\n    searchable\
      \ access to this information for robot and human use."
    license: BSD
    shortdesc: "This package is part of the Building Manager Project. The warehouse\n\
      \    contains all data about..."
    source: https://kforge.ros.org/warehousewg/warehouse-hg
    website: http://www.ros.org/wiki/Projects/Building%20Manager/warehouse
webots-ros-pkg:
  webots_joystick:
    author: !!python/unicode 'Andreas Breitenmoser'
    deps:
    - roscpp
    - joy
    desc: "This sample ROS node is actually a Webots robot controller that launches\
      \ the\n    ROS joy node and subscribes to its 'joy' topic to read the input\
      \ from a\n    joystick. This input is used to drive a simulated robot in Webots.\n\
      \n    It is a good starting point to implement an interface between Webots and\
      \ ROS\n    for controlling simulated robots in Webots from ROS nodes."
    license: BSD
    shortdesc: Webots ROS joystick interface
    source: http://webots-ros-pkg.svn.sourceforge.net/svnroot/webots-ros-pkg/webots/webots_joystick
    website: http://ros.org/wiki/webots_joystick
wg-ros-pkg:
  2dmapping_pr2:
    author: !!python/unicode 'Brian Gerkey gerkey@willowgarage.com'
    deps:
    - gmapping
    - rosrecord
    - pr2_bringup
    - pr2_teleop
    desc: Runs GMapping on the PR2 to build a map.
    license: BSD
    shortdesc: Runs GMapping on the PR2 to build a map.
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/applications/2dmapping_pr2_app/2dmapping_pr2
    website: http://pr.willowgarage.com/wiki
  2dnav_erratic:
    author: !!python/unicode 'Brian Gerkey'
    deps:
    - amcl
    - erratic_player
    - willow_maps
    - sicktoolbox_wrapper
    - map_server
    - move_base
    desc: A demo of  2-D navigation.
    license: BSD
    shortdesc: A demo of  2-D navigation.
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/demos/2dnav_erratic
    website: http://pr.willowgarage.com/wiki/FIXME
  2dnav_pr2:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - amcl
    - pr2_controller_manager
    - semantic_point_annotator
    - laser_filters
    - pr2_mechanism_controllers
    - pr2_machine
    - pr2_teleop
    - map_server
    - willow_maps
    - move_base
    - topic_tools
    - geometry_msgs
    - pr2_navigation_self_filter
    - gmapping
    - explore_wg
    - dynamic_reconfigure
    - sensor_msgs
    - roscpp
    - tf
    - filters
    - message_filters
    - laser_geometry
    desc: Runs the navigation stack on the pr2
    license: BSD
    shortdesc: Runs the navigation stack on the pr2
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/applications/2dnav_pr2_app/2dnav_pr2
    website: http://pr.willowgarage.com/wiki
  2dnav_slam_stage:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - move_base
    - costmap_2d
    - base_local_planner
    - navfn
    - gmapping
    - nav_view
    - willow_maps
    - stage
    - explore_wg
    desc: 2dnav_slam_stage
    license: BSD
    shortdesc: 2dnav_slam_stage
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/applications/2dnav_slam_stage
    website: http://ros.org/wiki/2dnav_slam_stage
  2dnav_stage:
    author: !!python/unicode 'Brian Gerkey'
    deps:
    - nav_view
    - amcl
    - fake_localization
    - stage
    - map_server
    - wavefront
    desc: A demo of  2-D navigation.
    license: BSD
    shortdesc: A demo of  2-D navigation.
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/demos/2dnav_stage
    website: http://pr.willowgarage.com/wiki/FIXME
  3d_nav_executive:
    author: !!python/unicode 'Armin Hornung'
    deps:
    - rospy
    - sbpl_lattice_planner_3d
    - move_base
    - pr2_common_action_msgs
    - pose_follower_3d
    - octomap_server
    - planning_environment
    - robot_self_filter
    desc: 3d_nav_executive - Launch files and configuration for 3d_navigation
    license: BSD
    shortdesc: 3d_nav_executive - Launch files and configuration for 3d_navigation
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/sandbox/3d_navigation/3d_nav_executive
    website: http://ros.org/wiki/3d_nav_executive
  3d_nav_gazebo:
    author: !!python/unicode 'Armin Hornung'
    deps:
    - gazebo
    - pr2_gazebo
    - dynamic_reconfigure
    - planning_environment
    - octomap_server
    - 3d_nav_executive
    desc: This package provides the launch files and configuration to run 3d_navigation
      in gazebo.
    license: BSD
    shortdesc: 3d_nav_gazebo - Simulation package for 3d_navigation
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/sandbox/3d_navigation/3d_nav_gazebo
    website: http://ros.org/wiki/3d_nav_gazebo
  FTmeas_controller:
    author: !!python/unicode 'DerekKing'
    deps:
    - roscpp
    - ethercat_hardware
    - pr2_controller_interface
    - filters
    desc: "based on 'netft_example_controllers'\n\n     Provides simple access to\
      \ force-torque data provided by netft_ethercat_hardware plugin.\n\n     This\
      \ also provides a convientent way to make sure that\n     netft_ethercat_hardware\
      \ plug-in is actually loaded and working."
    license: BSD
    shortdesc: FTmeas_controller
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/FTmeas_controller
    website: http://ros.org/wiki/netft_example_controllers
  IR:
    author: !!python/unicode 'Ze''ev Klapow'
    deps:
    - rospy
    - geometry_msgs
    - std_msgs
    - topic_tools
    desc: This package contains all of the softawre and information needed to implement
      an IR sensor, based on the ATMega168 and interface it with ROS. The safety node
      implemented here is designed for the texai robot, but other could be easily
      implemented.
    license: BSD
    shortdesc: This package contains all of the softawre and information needed to
      implement an IR sensor, b...
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/IR
    website: http://ros.org/wiki/IR
  Master_controller:
    author: !!python/unicode ''
    deps:
    - rtt_ros_integration_std_msgs
    - rtt_ros_integration_geometry_msgs
    - rtt
    - ocl
    - eigen_conversions
    - OrocosMsgPkg
    - ft_sensor_controller
    desc: This package contains the components of the Master_controller package
    license: ''
    shortdesc: Orocos Master_controller Component package
    source: details.php?name=rtt_ros_integration
    website: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/sandbox/Master_controller
  OrocosMsgPkg:
    author: !!python/unicode 'Bert Willaert'
    deps:
    - rospy
    - roscpp
    desc: "OrocosMsgPkg\t1) contains self-defined msgs-types which are used by Orocos\n\
      \t\t\t2) contains a ROS-node that reads start_time from a message and writes\
      \ this to another message"
    license: BSD
    shortdesc: OrocosMsgPkg
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/OrocosMsgPkg
    website: http://ros.org/wiki/OrocosMsgPkg
  PLASMA:
    author: !!python/unicode 'Conor McGann, with contributions from many others. See
      respective projects.'
    deps:
    - antlr
    desc: "This package contains TREX (initially developed at the Monterey Bay Aquarium\
      \ Research Institute), \n    and EUROPA from the NASA Ames Research Center.\
      \ This package does not modify these \n    3rd party libraries in any way; it\
      \ simply provides a convenient way to download and build the\n    headers and\
      \ libraries in a way that can be managed by the ROS dependency system."
    license: BSD, NOSA
    shortdesc: trex_core contains the core of TREX prior to ROS integration
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/executive_trex/PLASMA
    website: http://code.google.com/p/trex-autonomy/
  ac_power_monitor:
    author: !!python/unicode 'Derek King'
    deps:
    - rospy
    - diagnostic_msgs
    desc: Monitors AC power from Agilent Technologies AC power supply. Uses ethernet
      interface to communicate with device.
    license: BSD
    shortdesc: Driver for Agilent Technologies AC power supply
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/drivers_experimental/ac_power_monitor
    website: http://ros.org/wiki/ac_power_monitor
  action_watcher:
    author: !!python/unicode 'Stuart Glaser'
    deps:
    - rospy
    - rosgraph
    - actionlib_msgs
    - xdot
    desc: action_watcher
    license: BSD
    shortdesc: action_watcher
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/action_watcher
    website: http://ros.org/wiki/action_watcher
  actiondetection:
    author: !!python/unicode 'Hae Jong Seo'
    deps:
    - roscpp
    - opencv2
    - cv_bridge
    - sensor_msgs
    - image_transport
    - image_view
    desc: actiondetection
    license: BSD
    shortdesc: actiondetection
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/actiondetection
    website: http://ros.org/wiki/actiondetection
  actionlib_tests:
    author: !!python/unicode 'Stuart Glaser'
    deps:
    - actionlib
    - actionlib_msgs
    desc: actionlib_tests
    license: BSD
    shortdesc: actionlib_tests
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/actionlib_tests
    website: http://ros.org/wiki/actionlib_tests
  antlr:
    author: !!python/unicode 'Antlr Group'
    deps: []
    desc: This is antlr.
    license: BSD, NOSA
    shortdesc: Contains ANTLR, a parsing library.
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/executive_trex/antlr
    website: http://www.antlr.org/
  apcupsd_node:
    author: !!python/unicode 'Blaise Gassend'
    deps:
    - rospy
    - diagnostic_msgs
    desc: "A node giving access to apcupsd compatible Uninterruptable Power\n    Supplies\
      \ (UPS)."
    license: BSD
    shortdesc: apcupsd_node
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/drivers_experimental/apcupsd_node
    website: http://pr.willowgarage.com/wiki/apcupsd_node
  approximate_time_synchronizer:
    author: !!python/unicode 'Romain Thibaux'
    deps:
    - message_filters
    - geometry_msgs
    desc: approximate_time_synchronizer
    license: BSD
    shortdesc: approximate_time_synchronizer
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/approximate_time_synchronizer
    website: http://ros.org/wiki/approximate_time_synchronizer
  ar_panel:
    author: !!python/unicode 'Ethan Rublee'
    deps:
    - pcl
    - opencv2
    - eigen
    - roscpp
    - pcl_visualization
    desc: ar_panel
    license: BSD
    shortdesc: ar_panel
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/sandbox/ar_panel
    website: http://ros.org/wiki/ar_panel
  arduino:
    author: !!python/unicode 'James Bowman'
    deps:
    - rospy
    - std_msgs
    desc: arduino
    license: BSD
    shortdesc: arduino
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/arduino
    website: http://ros.org/wiki/arduino
  arm_kinematics_constraint_aware:
    author: !!python/unicode 'Sachin Chitta'
    deps:
    - kinematics_base
    - motion_planning_msgs
    - kinematics_msgs
    - kdl
    - roscpp
    - tf
    - sensor_msgs
    - tf_conversions
    - kdl_parser
    - kinematics_msgs
    - pluginlib
    - planning_environment
    - planning_models
    desc: arm_kinematics_constraint_aware
    license: BSD
    shortdesc: arm_kinematics_constraint_aware
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/kinematics/trunk/arm_kinematics_constraint_aware
    website: http://ros.org/wiki/arm_kinematics_constraint_aware
  arm_navigation_tests:
    author: !!python/unicode 'Sachin Chitta'
    deps:
    - move_arm
    - pr2_description
    - pr2_gazebo
    - move_arm
    - pr2_description
    - single_joint_position_action
    - diagnostic_aggregator
    - pr2_controller_manager
    - planning_environment
    - joint_trajectory_action
    - pr2_arm_kinematics
    - pr2_arm_kinematics_constraint_aware
    - gazebo_tools
    - rostopic
    - pr2_gripper_action
    - pr2_head_action
    - gazebo
    - robot_state_publisher
    - pr2_arm_navigation_perception
    - pr2_arm_navigation_filtering
    - pr2_arm_navigation_planning
    - collision_map
    - image_proc
    - pr2_arm_navigation_actions
    - pr2_arm_navigation_kinematics
    desc: Tests for the move arm stack.
    license: BSD
    shortdesc: arm_navigation_tests
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_arm_navigation_tests/trunk/arm_navigation_tests
    website: http://ros.org/wiki/move_arm_tests
  articulate_cart:
    author: !!python/unicode 'Jonathan Scholz'
    deps:
    - pr2_controllers_msgs
    - geometry_msgs
    - manipulation_transforms
    - std_msgs
    - roslib
    - rospy
    - actionlib
    - pr2_mechanism_msgs
    - move_base_msgs
    - pr2_controller_manager
    desc: articulate_cart
    license: BSD
    shortdesc: articulate_cart
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/cart_pushing/trunk/articulate_cart
    website: http://ros.org/wiki/rotate_cart
  auto_grip:
    author: !!python/unicode ''
    deps:
    - rospy
    - pr2_controllers_msgs
    desc: auto_grip
    license: BSD
    shortdesc: auto_grip
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/dance_demo/auto_grip
    website: http://ros.org/wiki/auto_grip
  autocount:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - roscpp
    - image_transport
    - opencv2
    - cv_bridge
    - rospy
    - geometry_msgs
    - dynamic_reconfigure
    desc: autocount
    license: BSD
    shortdesc: autocount
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/autocount
    website: http://ros.org/wiki/autocount
  axis_camera:
    author: !!python/unicode 'Scott Hassan/hassan@willowgarage.com'
    deps:
    - roslib
    - rospy
    - rosservice
    - std_msgs
    - std_srvs
    - sensor_msgs
    desc: A simple driver for the Axis security cameras
    license: BSD
    shortdesc: Axis Camera Driver
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/axis_camera
    website: http://pr.willowgarage.com/wiki/iros
  bag_player:
    author: !!python/unicode 'Tim Field'
    deps:
    - rospy
    - rosrecord
    - trigger_msgs
    desc: bag_player
    license: BSD
    shortdesc: bag_player
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/dance_demo/bag_player
    website: http://ros.org/wiki/bag_player
  bag_to_images:
    author: !!python/unicode 'Ethan Dreyfuss'
    deps:
    - rosrecord
    - image_proc
    - sensor_msgs
    - image_geometry
    - opencv2
    desc: bag_to_images
    license: BSD
    shortdesc: bag_to_images
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/bag_to_images
    website: http://ros.org/wiki/bag_to_images
  bagproc_diagnostics:
    author: !!python/unicode 'Tim Field/tfield@willowgarage.com'
    deps:
    - roslib
    - rospy
    - rosbag
    - std_msgs
    - diagnostic_msgs
    - web_bags_core
    desc: bagproc_diagnostics
    license: BSD
    shortdesc: bagproc_diagnostics
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/web_bags/bagproc_diagnostics
    website: http://ros.org/wiki/bagproc_diagnostics
  bagproc_template:
    author: !!python/unicode ''
    deps:
    - roslib
    - rospy
    - std_msgs
    - rosrecord
    - web_bags_core
    desc: bagproc_template
    license: BSD
    shortdesc: bagproc_template
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/web_bags/bagproc_template
    website: http://ros.org/wiki/bagproc_template
  bagproc_thumbnails:
    author: !!python/unicode 'Tim Field/tfield@willowgarage.com'
    deps:
    - roslib
    - rospy
    - std_msgs
    - rosrecord
    - sensor_msgs
    - web_bags_core
    desc: bagproc_thumbnails
    license: BSD
    shortdesc: bagproc_thumbnails
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/web_bags/bagproc_thumbnails
    website: http://ros.org/wiki/bagproc_thumbnails
  bagproc_video:
    author: !!python/unicode 'Tim Field/tfield@willowgarage.com'
    deps:
    - roslib
    - rospy
    - std_msgs
    - rosbag
    - sensor_msgs
    - web_bags_core
    desc: bagproc_video
    license: BSD
    shortdesc: bagproc_video
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/web_bags/bagproc_video
    website: http://ros.org/wiki/bagproc_video
  barcode2d:
    author: !!python/unicode 'Ethan Rublee'
    deps:
    - opencv2
    - roscpp
    - libdmtx
    - wavelet2d
    - descriptors_2d
    desc: barcode2d
    license: BSD
    shortdesc: barcode2d
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/barcode2d
    website: http://ros.org/wiki/barcode2d
  barcode_from_picture:
    author: !!python/unicode 'Gary Bradski'
    deps:
    - std_msgs
    - rospy
    - roscpp
    - cv_bridge
    - image_transport
    - opencv2
    desc: "barcode_from_picture turns images (with sufficient texture) that humans\
      \ enjoy \n     into trackable planar homography patterns that the robot can\
      \ recognize what it is and \n     where it is."
    license: BSD
    shortdesc: barcode_from_picture
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/stacks/object_recognition/barcode_from_picture
    website: http://ros.org/wiki/barcode_from_picture
  bayesian_grasp_planner:
    author: !!python/unicode 'Matei Ciocarlie'
    deps:
    - roscpp
    - object_manipulation_msgs
    - household_objects_database_msgs
    - household_objects_database
    - object_manipulator
    desc: bayesian_grasp_planner
    license: BSD
    shortdesc: bayesian_grasp_planner
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/object_manipulation/branches/0.4-branch/bayesian_grasp_planner
    website: http://ros.org/wiki/bayesian_grasp_planner
  beckhoff_ethercat_hardware:
    author: !!python/unicode 'Derek King'
    deps:
    - roscpp
    - ethercat_hardware
    desc: ethercat_hardware plugins for Beckhoff EtherCAT devices
    license: BSD
    shortdesc: beckhoff_ethercat_hardware
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/beckhoff_ethercat_hardware
    website: http://ros.org/wiki/beckhoff_ethercat_hardware
  belt_transmission:
    author: !!python/unicode 'Stuart Glaser'
    deps:
    - pr2_mechanism_model
    - rosrt
    desc: belt_transmission
    license: BSD
    shortdesc: belt_transmission
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/belt_transmission
    website: http://ros.org/wiki/belt_transmission
  bfs_3d:
    author: !!python/unicode 'Benjamin Cohen/bencohen2@gmail.com'
    deps: []
    desc: A class that provides a 3D Breadth First Search
    license: BSD
    shortdesc: 3D Breadth First Search
    source: details.php?name=distance_field
    website: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/motion_planning_research/planning_research/bfs_3d
  bigg_detector:
    author: !!python/unicode 'Gary Bradski and Marius Muja'
    deps:
    - nodelet
    - opencv2
    - rein
    - flann
    desc: Binarized Gradient Grid (BiGG) detector and ROS wrapper for the rein.
    license: BSD
    shortdesc: bigg_detector
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/stacks/object_recognition/bigg_detector
    website: http://ros.org/wiki/bigg_detector
  billiard_ball_detector:
    author: !!python/unicode 'Patrick Mihelich'
    deps:
    - roscpp
    - opencv2
    - image_transport
    - image_geometry
    - cv_bridge
    - cvblobslib
    - dynamic_reconfigure
    - tf
    - billiards_msgs
    - visualization_msgs
    - camera_calibration_parsers
    - actionlib
    - camera_info_manager
    desc: billiard_ball_detector
    license: BSD
    shortdesc: billiard_ball_detector
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/billiards/billiard_ball_detector
    website: http://ros.org/wiki/billiard_ball_detector
  billiard_object_detector:
    author: !!python/unicode 'Marius Muja and Matei Ciocarlie'
    deps:
    - roscpp
    - tf
    - std_msgs
    - sensor_msgs
    - geometry_msgs
    - geometric_shapes_msgs
    - pcl
    - distance_field
    - mapping_msgs
    - visualization_msgs
    - model_database
    - billiards_msgs
    desc: Implementation of object detection for tabletop objects with constraints.
    license: BSD
    shortdesc: tabletop_object_detector
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/billiards/billiard_object_detector
    website: http://ros.org/wiki/object_detector
  billiards_checkerboard:
    author: !!python/unicode 'Tully Foote'
    deps:
    - billiards_msgs
    - actionlib
    - tf
    - tf_conversions
    - checkerboard_pose
    desc: billiards_checkerboard
    license: BSD
    shortdesc: billiards_checkerboard
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/billiards/billiards_checkerboard
    website: http://ros.org/wiki/billiards_checkerboard
  billiards_control:
    author: !!python/unicode 'Stuart Glaser'
    deps:
    - rospy
    - actionlib
    - tf
    - tf_conversions
    - pr2_controllers_msgs
    - actionlib_msgs
    - actionlib
    - billiards_msgs
    - kinematics_msgs
    - visualization_msgs
    desc: billiards_control
    license: BSD
    shortdesc: billiards_control
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/billiards/billiards_control
    website: http://ros.org/wiki/billiards_control
  billiards_executive:
    author: !!python/unicode ''
    deps:
    - smach
    - billiards_msgs
    - billiards_navigation
    - move_base_msgs
    - rospy
    - tf
    - tf_conversions
    desc: billiards_executive
    license: BSD
    shortdesc: billiards_executive
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/billiards/billiards_executive
    website: http://ros.org/wiki/billiards_executive
  billiards_launch:
    author: !!python/unicode ''
    deps:
    - camera_offsetter
    desc: billiards_launch
    license: BSD
    shortdesc: billiards_launch
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/billiards/billiards_launch
    website: http://ros.org/wiki/billiards_launch
  billiards_msgs:
    author: !!python/unicode 'John Hsu'
    deps:
    - geometry_msgs
    - actionlib_msgs
    desc: billiards_msgs
    license: BSD
    shortdesc: billiards_msgs
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/billiards/billiards_msgs
    website: http://ros.org/wiki/billiards_msgs
  billiards_navigation:
    author: !!python/unicode 'Brian Gerkey'
    deps:
    - tf
    - amcl
    - map_server
    - actionlib
    - move_base_msgs
    - visualization_msgs
    - pose_base_controller
    desc: billiards_navigation
    license: BSD
    shortdesc: billiards_navigation
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/billiards/billiards_navigation
    website: http://ros.org/wiki/billiards_navigation
  billiards_planner:
    author: !!python/unicode 'John'
    deps:
    - billiards_msgs
    - fastfiz_msgs
    - actionlib
    - eigen
    - tf
    - rostest
    - visualization_msgs
    - roscpp
    desc: billiards_planner
    license: BSD
    shortdesc: billiards_planner
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/billiards/billiards_planner
    website: http://ros.org/wiki/billiards_planner
  billiards_recorder:
    author: !!python/unicode ''
    deps:
    - rospy
    - roscpp
    - rosbag
    desc: billiards_recorder
    license: BSD
    shortdesc: billiards_recorder
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/billiards/billiards_recorder
    website: http://ros.org/wiki/billiards_recorder
  billiards_rviz_plugin:
    author: !!python/unicode 'Josh Faust'
    deps:
    - rviz
    - roscpp
    - tf
    - billiards_msgs
    - actionlib
    desc: billiards_rviz_plugin
    license: BSD
    shortdesc: billiards_rviz_plugin
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/billiards/billiards_rviz_plugin
    website: http://ros.org/wiki/billiards_rviz_plugin
  billiards_table:
    author: !!python/unicode 'Tim Field'
    deps:
    - rospy
    - opencv2
    - cv_bridge
    - actionlib
    - image_geometry
    - message_filters
    - sensor_msgs
    - stereo_msgs
    - pr2_controllers_msgs
    - tf
    - rxbag_plugins
    - visualization_msgs
    - billiards_msgs
    desc: billiards_table
    license: BSD
    shortdesc: billiards_table
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/billiards/billiards_table
    website: http://ros.org/wiki/billiards_table
  billiards_vis:
    author: !!python/unicode 'Josh Faust'
    deps:
    - roscpp
    - visualization_msgs
    - billiards_msgs
    desc: billiards_vis
    license: BSD
    shortdesc: billiards_vis
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/billiards/billiards_vis
    website: http://ros.org/wiki/billiards_vis
  bimanual_manipulation_msgs:
    author: !!python/unicode 'Jonathan Scholz'
    deps:
    - geometry_msgs
    - std_msgs
    - actionlib_msgs
    desc: bimanual_manipulation_msgs
    license: BSD
    shortdesc: bimanual_manipulation_msgs
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/bimanual_manipulation/bimanual_manipulation_msgs
    website: http://ros.org/wiki/bimanual_manipulation_msgs
  binary_matching:
    author: !!python/unicode 'Ethan Rublee'
    deps:
    - opencv2
    desc: binary_matching
    license: BSD
    shortdesc: binary_matching
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/binary_matching
    website: http://ros.org/wiki/binary_matching
  binary_pairs:
    author: !!python/unicode 'Gary Bradski'
    deps:
    - rein
    - nodelet
    desc: binary_pairs
    license: BSD
    shortdesc: binary_pairs
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/stacks/object_recognition_experimental/binary_pairs
    website: http://ros.org/wiki/binary_pairs
  boost_lockfree:
    author: !!python/unicode 'Tim Blechmann'
    deps: []
    desc: "Tim Blechmann's boost_lockfree library, which includes a\n     lock-free\
      \ queue and stack.  Not currently a part of boost, but\n     implemented in\
      \ boost style.\n\n     Code: http://tim.klingt.org/git?p=boost_lockfree.git;a=summary\n\
      \n     Documentation: http://tim.klingt.org/boost_lockfree/\n\n     Be warned:\
      \ boost_lockfree includes a modified version of\n     boost::atomic, which may\
      \ play badly with other packages."
    license: Boost Software License, Version 1.0
    shortdesc: boost_lockfree
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/boost_lockfree
    website: http://tim.klingt.org/git?p=boost_lockfree.git;a=summary
  bounding_box_filter:
    author: !!python/unicode 'James Bowman'
    deps:
    - opencv2
    - stereo_image_proc
    - message_filters
    - mech_turk_standin
    - tf
    - cv_bridge
    - image_geometry
    - image_transport
    - sensor_msgs
    - geometry_msgs
    - laser_assembler
    desc: bounding_box_filter
    license: BSD
    shortdesc: bounding_box_filter
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/bounding_box_filter
    website: http://ros.org/wiki/bounding_box_filter
  brief_descriptor:
    author: !!python/unicode 'Patrick Mihelich'
    deps:
    - opencv2
    desc: brief_descriptor
    license: BSD
    shortdesc: brief_descriptor
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/visual_feature_detectors/brief_descriptor
    website: http://ros.org/wiki/brief_descriptor
  bspline:
    author: !!python/unicode 'Gary Granger (http://www.eol.ucar.edu/homes/granger).
      ROS package maintained by Peter Pastor'
    deps:
    - std_msgs
    - roscpp
    desc: "This software is written by Gary Granger of the National Center for\n \
      \   Atmospheric Research (NCAR), sponsored by the National Science Foundation\n\
      \    (NSF). The algorithm is based on the cubic spline described by Katsuyuki\n\
      \    Ooyama in Montly Weather Review, Vol 115, October 1987.  This\n    implementation\
      \ has benefited from comparisons with a previous FORTRAN\n    implementation\
      \ by James L. Franklin, NOAA/Hurricane Research Division.\n\n    This package\
      \ does not modify the BSpline library in any way; it simply\n    provides a\
      \ convenient way to download and compile the headers and library\n    in a way\
      \ that can be managed by the ROS dependency system."
    license: BSD
    shortdesc: "This software is written by Gary Granger of the National Center for\n\
      \    Atmospheric Research (..."
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/policy_learning/bspline
    website: http://www.eol.ucar.edu/homes/granger/bspline/doc/
  cal_marker_playback:
    author: !!python/unicode 'Vijay Pradeep'
    deps:
    - rospy
    - visualization_msgs
    desc: cal_marker_playback
    license: BSD
    shortdesc: cal_marker_playback
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/calibration_experimental/cal_marker_playback
    website: http://ros.org/wiki/cal_marker_playback
  calonder_descriptor:
    author: !!python/unicode 'Patrick Mihelich'
    deps:
    - opencv2
    - rospy
    - rostest
    - fast_detector
    desc: Calonder feature descriptors.
    license: BSD
    shortdesc: Calonder feature descriptors.
    source: details.php?name=roscpp
    website: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/visual_feature_detectors/calonder_descriptor
  camera_application:
    author: !!python/unicode 'Tim Field'
    deps:
    - roslib
    - rospy
    - webui
    - rosweb
    - std_msgs
    desc: A web application to view camera images.
    license: BSD
    shortdesc: Camera Application
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_web_apps/trunk/camera_application
    website: http://pr.willowgarage.com/wiki/camera_application
  camera_calibration_application:
    author: !!python/unicode 'James Bowman/Rob Wheeler'
    deps:
    - roslib
    - rospy
    - webui
    - rosweb
    - std_msgs
    - camera_calibration
    desc: Web-based camera calibration
    license: BSD
    shortdesc: camera_calibration_application
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/web_apps_experimental/camera_calibration_application
    website: http://www.ros.org/wiki/camera_calibration_application
  camera_calibration_with_circles:
    author: !!python/unicode 'Ilya Lysenkov'
    deps:
    - opencv2
    desc: camera_calibration_with_circles
    license: BSD
    shortdesc: camera_calibration_with_circles
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/camera_calibration_with_circles
    website: http://ros.org/wiki/camera_calibration_with_circles
  camera_trigger_test:
    author: !!python/unicode 'Blaise Gassend'
    deps:
    - pr2_controller_manager
    - roscpp
    - angles
    - std_msgs
    - robot_mechanism_controllers
    - pr2_controller_interface
    - sensor_msgs
    - opencv2
    - cv_bridge
    - diagnostic_updater
    - wge100_camera
    - pr2_etherCAT
    - realtime_tools
    - ethercat_trigger_controllers
    desc: A ROS node to control camera triggering via motor board digitial_out.
    license: BSD
    shortdesc: A ROS node to control camera triggering via motor board digitial_out.
    source: details.php?name=pr2_calibration_controllers
    website: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/drivers_experimental/camera_trigger_test
  canon_calibrate:
    author: !!python/unicode 'Radu Bogdan Rusu'
    deps:
    - canon_gphoto
    - dp_ptu47_pan_tilt_stage
    desc: Calibrate the Canon stereo rig.
    license: BSD
    shortdesc: Calibrate the Canon stereo rig.
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/point_cloud_perception_experimental/canon_calibrate
    website: http://pr.willowgarage.com
  canon_gphoto:
    author: !!python/unicode 'Radu Bogdan Rusu'
    deps:
    - roscpp
    - image_transport
    - sensor_msgs
    desc: "<p>\n      Canon_Gphoto controls a Gphoto2-compatible Canon camera over\
      \ USB.\n    </p>"
    license: BSD
    shortdesc: ''
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/drivers_experimental/canon_gphoto
    website: http://pr.willowgarage.com
  cart_learner:
    author: !!python/unicode 'Matthew Robards'
    deps:
    - roscpp
    - rospy
    - sbpl_cart_planner
    - nav_msgs
    - cart_pushing_msgs
    - nav_core
    - visualization_msgs
    - geometry_msgs
    - roslisp_runtime
    - cl_tf
    - stage
    - base_local_planner
    - nav_core
    - pluginlib
    - costmap_2d
    desc: cart_learner
    license: BSD
    shortdesc: cart_learner
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/cart_learner
    website: http://ros.org/wiki/cart_learner
  cart_local_planner:
    author: !!python/unicode 'Jonathan Scholz'
    deps:
    - base_local_planner
    - nav_core
    - costmap_2d
    - roscpp
    - tf
    - nav_msgs
    - pluginlib
    - cart_pushing_msgs
    - manipulation_transforms
    - articulate_cart
    - costmap_trajectory_checker
    desc: cart_local_planner
    license: BSD
    shortdesc: cart_local_planner
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/cart_pushing/trunk/cart_local_planner
    website: http://ros.org/wiki/cart_local_planner
  cart_pushing_executive:
    author: !!python/unicode 'Jonathan Scholz'
    deps:
    - move_base
    - map_server
    - topic_tools
    - sbpl_cart_planner
    - cart_local_planner
    - tf
    - cart_pushing_msgs
    - cart_state_estimator
    - articulate_cart
    - amcl
    - pr2_controllers_msgs
    - actionlib
    - move_base_msgs
    - pr2_gripper_action
    - pr2_navigation_teleop
    - pr2_machine
    - pr2_navigation_global
    - pr2_navigation_perception
    - pr2_pose_saver
    - laser_filters
    - twist_recovery
    - isolated_point_filter
    - assisted_teleop
    desc: cart_planner_executive
    license: BSD
    shortdesc: cart_planner_executive
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/cart_pushing/trunk/cart_pushing_executive
    website: http://ros.org/wiki/cart_planner_executive
  cart_pushing_msgs:
    author: !!python/unicode 'Sachin Chitta'
    deps:
    - actionlib_msgs
    - geometry_msgs
    - sensor_msgs
    desc: cart_pushing_msgs
    license: BSD
    shortdesc: cart_pushing_msgs
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/cart_pushing/trunk/cart_pushing_msgs
    website: http://ros.org/wiki/cart_pushing_msgs
  cart_pushing_stage:
    author: !!python/unicode 'Bhaskara Marthi'
    deps:
    - cart_pushing_executive
    - stage
    - fake_localization
    - map_server
    - articulate_cart
    - pr2_machine
    - cart_state_estimator
    - rostopic
    - manipulation_transforms
    desc: This package contains launch files for a stage version of the cart pushing
      nav stack, with fake localization and arm control.
    license: BSD
    shortdesc: cart_pushing_stage
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/cart_pushing/trunk/cart_pushing_stage
    website: http://ros.org/wiki/cart_pushing_stage
  cart_state_estimator:
    author: !!python/unicode 'Bhaskara Marthi'
    deps:
    - tf
    - roscpp
    - geometry_msgs
    - manipulation_transforms
    - filters
    - laser_geometry
    desc: Estimate state of cart being pushed by robot
    license: BSD
    shortdesc: cart_state_estimator
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/cart_pushing/trunk/cart_state_estimator
    website: http://ros.org/wiki/cart_state_estimator
  chamfer_matching:
    author: !!python/unicode 'Marius Muja'
    deps:
    - opencv2
    desc: A chamfer matching library, using both edge distance and orientation.
    license: BSD
    shortdesc: A chamfer matching library, using both edge distance and orientation.
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/vision/chamfer_matching
    website: http://pr.willowgarage.com
  checkerboard_detector:
    author: !!python/unicode 'Rosen Diankov (rdiankov@cs.cmu.edu)'
    deps:
    - opencv2
    - cv_bridge
    - sensor_msgs
    - posedetection_msgs
    desc: "Uses opencv to find checkboards and compute their 6D poses with respect\
      \ to the image. Requires the image to be calibrated.\n    Parameters:\n    display\
      \ - show the checkerboard detection\n    rect%d_size_x - size of checker in\
      \ x direction\n    rect%d_size_y - size of checker in y direction\n    grid%d_size_x\
      \ - number of checkers in x direction\n    grid%d_size_y - number of checkers\
      \ in y direction\n    \n    There can be more than one grid%d declared, the\
      \ numbers should grow consecutively starting at 0."
    license: BSD
    shortdesc: Finds checkerboards and returns their 6D poses
    source: details.php?name=roscpp
    website: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/visual_feature_detectors/checkerboard_detector
  checkerboard_finder:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - rospy
    - roslib
    - opencv2
    - cv_bridge
    - sensor_msgs
    - geometry_msgs
    desc: checkerboard_pose
    license: BSD
    shortdesc: checkerboard_pose
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/dance_demo/checkerboard_finder
    website: http://ros.org/wiki/checkerboard_pose
  checkerboard_pose:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - rospy
    - roslib
    - opencv2
    - cv_bridge
    - tf
    - sensor_msgs
    - geometry_msgs
    - image_geometry
    desc: checkerboard_pose
    license: BSD
    shortdesc: checkerboard_pose
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/checkerboard_pose
    website: http://ros.org/wiki/checkerboard_pose
  chomp_motion_planner:
    author: !!python/unicode 'Mrinal Kalakrishnan / mail@mrinal.net'
    deps:
    - roscpp
    - planning_models
    - planning_environment
    - planning_environment_msgs
    - motion_planning_msgs
    - mapping_msgs
    - kdl
    - kdl_parser
    - angles
    - eigen
    - visualization_msgs
    - tf
    - distance_field
    - sensor_msgs
    - trajectory_msgs
    - filters
    - spline_smoother
    desc: 'CHOMP is a motion planner based on trajectory optimization.

      It generates smooth, collision-free trajectories. For technical, algorithmic
      details,

      please refer to:


      &quot;CHOMP: Gradient Optimization Techniques for Efficient Motion Planning&quot;.

      Nathan Ratliff, Matthew Zucker, J. Andrew Bagnell and Siddhartha Srinivasa.

      IEEE International Conference on Robotics and Automation, May 2009.'
    license: BSD
    shortdesc: CHOMP - Covariant Hamiltonian Optimization for Motion Planning
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/motion_planners/trunk/chomp_motion_planner
    website: http://ros.org/wiki/chomp_motion_planner
  ckill:
    author: !!python/unicode 'Scott Hassan'
    deps: []
    desc: Cluster kill
    license: BSD
    shortdesc: Cluster kill
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/web_interface/trunk/ckill
    website: http://pr.willowgarage.com/wiki/ckill
  cmvision:
    author: !!python/unicode 'Nate Koenig'
    deps:
    - roscpp
    - sensor_msgs
    - opencv2
    - cv_bridge
    desc: Node for the Color Machine Vision Project, used for fast color blob detection
    license: LGPL
    shortdesc: Node for the Color Machine Vision Project, used for fast color blob
      detection
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/vision/cmvision
    website: http://pr.willowgarage.com/wiki/cmvision
  collider:
    author: !!python/unicode 'Adam Harmat, Gil E. Jones, Kai M. Wurm, Armin Hornung.
      Maintained by Gil E. Jones'
    deps:
    - octomap
    - octomap_ros
    - tf
    - visualization_msgs
    - mapping_msgs
    - std_msgs
    - std_srvs
    - collision_environment_msgs
    - actionlib
    - actionlib_msgs
    - pcl
    - pcl_ros
    - image_transport
    - image_geometry
    - robot_self_filter
    - planning_environment
    desc: collider - collision avoidance for tabletop manipulation using octomap
    license: BSD
    shortdesc: collider - collision avoidance for tabletop manipulation using octomap
    source: details.php?name=roscpp
    website: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/collider
  collision_environment_msgs:
    author: !!python/unicode 'Sachin Chitta'
    deps:
    - actionlib_msgs
    desc: This package contains a set of messages to deal with the collision environment
      including collision maps and the collision space.
    license: BSD
    shortdesc: collision_environment_msgs
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/motion_planning_common/trunk/collision_environment_msgs
    website: http://ros.org/wiki/collision_environment_msgs
  collision_free_arm_trajectory_controller:
    author: !!python/unicode 'Sachin Chitta'
    deps:
    - move_arm_msgs
    - planning_environment_msgs
    - planning_environment
    - trajectory_msgs
    - pr2_controllers_msgs
    - actionlib_msgs
    - filters
    desc: collision free arm trajectory controller
    license: BSD
    shortdesc: Collision free arm trajectory controller
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/arm_navigation/trunk/collision_free_arm_trajectory_controller
    website: http://ros.org/wiki/collision_free_arm_trajectory_controller
  collision_map:
    author: !!python/unicode 'Radu Bogdan Rusu, Ioan Sucan'
    deps:
    - roscpp
    - tf
    - visualization_msgs
    - mapping_msgs
    - std_msgs
    - std_srvs
    - robot_self_filter
    - collision_environment_msgs
    - actionlib
    desc: A node providing a map of the occupied space around the robot as discretized
      boxes (center, dimension), useful for collision detection.
    license: BSD
    shortdesc: Collision Map
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/motion_planning_common/trunk/collision_map
    website: http://ros.org/wiki/collision_map
  collision_octomap:
    author: !!python/unicode 'Adam Harmat'
    deps:
    - octomap2
    - roscpp
    - tf
    - visualization_msgs
    - mapping_msgs
    - std_msgs
    - std_srvs
    - collision_environment_msgs
    - actionlib
    desc: A node producing a map of the occupied space in the world as discretized
      boxes (center, dimension), used for collision detection.
    license: BSD
    shortdesc: collision_octomap
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/collision_octomap
    website: http://ros.org/wiki/collision_octomap
  collision_proximity:
    author: !!python/unicode 'Gil Jones'
    deps:
    - distance_field
    - planning_models
    - geometric_shapes
    - planning_environment
    - bullet
    - kinematics_msgs
    desc: collision_proximity
    license: BSD
    shortdesc: collision_proximity
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/collision_proximity
    website: http://ros.org/wiki/collision_proximity
  collision_space:
    author: !!python/unicode 'Ioan Sucan/isucan@willowgarage.com'
    deps:
    - planning_models
    - geometric_shapes
    - opende
    - bullet
    desc: This package can be used to build a collision representation of the world
      around the robot.
    license: BSD
    shortdesc: Collision space
    source: details.php?name=rosconsole
    website: https://code.ros.org/svn/wg-ros-pkg/stacks/motion_planning_common/trunk/collision_space
  constraint_aware_spline_smoother:
    author: !!python/unicode 'Sachin Chitta'
    deps:
    - planning_environment
    - spline_smoother
    - tf
    - filters
    - trajectory_msgs
    desc: This package contains filters for joint trajectories. The filters can take
      into account constraints. However, the current set of filters only take collision
      constraints into account, i.e. they will apply only the smoothing that does
      not violate collision constraints.
    license: BSD
    shortdesc: constraint_aware_spline_smoother
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/trajectory_filters/trunk/constraint_aware_spline_smoother
    website: http://ros.org/wiki/constraint_aware_spline_smoother
  constraint_evaluators:
    author: !!python/unicode 'Sachin Chitta'
    deps:
    - motion_planning_msgs
    - geometric_shapes
    - tf
    - angles
    desc: constraint_evaluators
    license: BSD
    shortdesc: constraint_evaluators
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/constraint_evaluators
    website: http://ros.org/wiki/constraint_evaluators
  control_toolbox:
    author: !!python/unicode 'Melonee Wise, Sachin Chitta, John Hsu'
    deps:
    - tinyxml
    - rosconsole
    - tf
    - roscpp
    - angles
    desc: The control toolbox contains modules that are useful across all controllers.
    license: BSD
    shortdesc: Control Toolbox
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_controllers/branches/pr2_controllers-1.4/control_toolbox
    website: http://ros.org/wiki/control_toolbox
  controller_switcher:
    author: !!python/unicode 'Stuart Glaser'
    deps:
    - roscpp
    - actionlib
    - actionlib_msgs
    - pr2_mechanism_msgs
    desc: controller_switcher
    license: BSD
    shortdesc: controller_switcher
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/controller_switcher
    website: http://ros.org/wiki/controller_switcher
  costmap_trajectory_checker:
    author: !!python/unicode 'Jonathan Scholz'
    deps:
    - roscpp
    - costmap_2d
    - base_local_planner
    - tf
    - geometry_msgs
    desc: costmap_trajectory_checker
    license: BSD
    shortdesc: costmap_trajectory_checker
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/cart_pushing/trunk/costmap_trajectory_checker
    website: http://ros.org/wiki/costmap_trajectory_checker
  cpu_overload:
    author: !!python/unicode 'Jeremy Leibs'
    deps:
    - roscpp
    - std_msgs
    desc: cpu_overload
    license: BSD
    shortdesc: cpu_overload
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/cpu_overload
    website: http://ros.org/wiki/cpu_overload
  cuda_thrust:
    author: !!python/unicode 'Jared Hoberock and Nathan Bell'
    deps: []
    desc: thrust, a cuda wrapper, stl-like template library
    license: Apache License 2.0
    shortdesc: cuda_thrust
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/cuda_thrust
    website: http://ros.org/wiki/cuda_thrust
  cv_bridge_redesign:
    author: !!python/unicode 'Patrick Mihelich'
    deps:
    - sensor_msgs
    - opencv2
    - roscpp
    - image_transport
    desc: "Sandbox package for exploring a redesign of the cv_bridge C++ API.\n  \
      \   Do not use this package; the new API is included in cv_bridge\n     proper\
      \ as of Diamondback."
    license: BSD
    shortdesc: cv_bridge_redesign
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/cv_bridge_redesign
    website: http://ros.org/wiki/cv_bridge_redesign
  cvblobslib:
    author: !!python/unicode 'Ricard Borras'
    deps:
    - opencv2
    desc: A library to perform connected component labeling on binary images.
    license: BSD
    shortdesc: cvblobslib
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/billiards/cvblobslib
    website: http://opencv.willowgarage.com/wiki/cvBlobsLib
  daisy:
    author: !!python/unicode 'Engin Tola'
    deps:
    - opencv2
    desc: Daisy is a dense image descriptor package from Vincent Lepetit's lab.  See
      the url for more info.
    license: BSD
    shortdesc: Dense image descriptor
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/visual_feature_detectors/daisy
    website: http://cvlab.epfl.ch/~tola/daisy.html
  dance_bags:
    author: !!python/unicode 'Blaise Gassend'
    deps: []
    desc: dance_bags
    license: BSD
    shortdesc: dance_bags
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/dance_demo/dance_bags
    website: http://ros.org/wiki/dance_bags
  data_acquisition_ptu:
    author: !!python/unicode 'Radu Bogdan Rusu'
    deps:
    - rosbag
    - dp_ptu47_pan_tilt_stage
    - image_transport
    - tf
    - geometry_msgs
    - eigen
    - pcl
    - pcl_ros
    - pcl_tf
    - eigen3
    desc: Object data acquisition using the DP PTU47 unit.
    license: BSD
    shortdesc: Object data acquisition using the DP PTU47 unit.
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/point_cloud_perception_experimental/data_acquisition_ptu
    website: http://pr.willowgarage.com
  data_stream_recorder:
    author: !!python/unicode 'Stuart Glaser'
    deps:
    - std_msgs
    - roscpp
    desc: data_stream_recorder
    license: BSD
    shortdesc: data_stream_recorder
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/data_stream_recorder
    website: http://ros.org/wiki/data_stream_recorder
  database_interface:
    author: !!python/unicode 'Matei Ciocarlie and Lorenz Mosenlechner'
    deps:
    - roscpp
    - yaml_cpp
    desc: "Provides an easy to use and general interface between a SQL\n    database\
      \ and object-oriented C++ code, making it easy to\n    encapsulate the conceptual\
      \ &quot;objects&quot; contained in the database as\n    C++ classes."
    license: BSD
    shortdesc: database_interface
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/sql_database/trunk/database_interface
    website: http://ros.org/wiki/database_interface
  datamatrix:
    author: !!python/unicode 'James Bowman'
    deps:
    - opencv2
    - libdmtx
    - image_geometry
    - cv_bridge
    - message_filters
    - tf
    - tf_conversions
    - kdl
    desc: datamatrix
    license: BSD
    shortdesc: datamatrix
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/datamatrix
    website: http://ros.org/wiki/datamatrix
  demo_synchronizer:
    author: !!python/unicode 'Matei Ciocarlie'
    deps:
    - roscpp
    - rospy
    desc: demo_synchronizer
    license: BSD
    shortdesc: demo_synchronizer
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/demo_synchronizer
    website: http://ros.org/wiki/demo_synchronizer
  demosaic:
    author: !!python/unicode 'James Bowman'
    deps:
    - opencv2
    - cv_bridge
    - message_filters
    desc: demosaic
    license: BSD
    shortdesc: demosaic
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/demosaic
    website: http://ros.org/wiki/demosaic
  desc_match:
    author: !!python/unicode 'Victor  Eruhimov'
    deps:
    - roscpp
    - opencv2
    - features_2d
    - sensor_msgs
    - geometry_msgs
    - cv_bridge
    - image_transport
    desc: desc_match
    license: BSD
    shortdesc: desc_match
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/desc_match
    website: http://ros.org/wiki/desc_match
  descriptors_2d:
    author: !!python/unicode 'Alex Teichman'
    deps:
    - eigen
    - opencv2
    - rosconsole
    - chamfer_matching
    desc: Image descriptors library.  This package provides a common interface to
      many different image descriptors, including, for example, Hog, Surf, superpixel
      color histogram, Haar wavelets, etc.
    license: BSD
    shortdesc: descriptors_2d
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/visual_feature_detectors/descriptors_2d
    website: http://pr.willowgarage.com/wiki/descriptors
  descriptors_2d_gpl:
    author: !!python/unicode 'Alex Teichman'
    deps:
    - opencv2
    - daisy
    - descriptors_2d
    desc: Image descriptors that must be in a GPL package.
    license: GPL
    shortdesc: descriptors_2d_gpl
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/visual_feature_detectors/descriptors_2d_gpl
    website: http://pr.willowgarage.com/wiki/descriptors_2d_gpl
  diagnostic_annotate:
    author: !!python/unicode 'Derek King'
    deps:
    - rospy
    - diagnostic_msgs
    desc: diagnostic_annotate
    license: BSD
    shortdesc: diagnostic_annotate
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/stacks/ethercat_diag_tools/diagnostic_annotate
    website: http://ros.org/wiki/diagnostic_annotate
  distance_field:
    author: !!python/unicode 'Mrinal Kalakrishnan / mail@mrinal.net'
    deps:
    - roscpp
    - visualization_msgs
    - mapping_msgs
    - bullet
    desc: "This package contains algorithms that can compute the\nEuclidean Distance\
      \ Transform (EDT) of a 3-D voxel grid. The input to these algorithms is\nan\
      \ array of points (which could represent the positions of obstacles in the world).\
      \ \nThe EDT provides a voxel grid in which in which each cell contains the distance\
      \ to the\nclosest obstacle. The VoxelGrid class can also be used as a generic,\
      \ templatized container for a discretized 3-D voxel grid."
    license: BSD
    shortdesc: Computes euclidean distance transforms (EDT) of a 3-D voxel grid
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/motion_planning_common/trunk/distance_field
    website: http://ros.org/wiki/distance_field
  dmp_motion_controller:
    author: !!python/unicode 'Peter Pastor'
    deps:
    - roscpp
    - dmp_motion_generation
    - pr2_tasks_transforms
    - control_toolbox
    - rosrt
    - pr2_controller_interface
    - pr2_controllers_msgs
    - pr2_mechanism_model
    - std_msgs
    - geometry_msgs
    - diagnostic_msgs
    - trajectory_msgs
    - visualization_msgs
    - tf
    - tf_conversions
    - angles
    - eigen
    - filters
    - policy_improvement_utilities
    desc: dmp_motion_controller
    license: BSD
    shortdesc: dmp_motion_controller
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/policy_learning/dmp_motion_controller
    website: http://ros.org/wiki/dmp_motion_controller
  dmp_motion_controller_test:
    author: !!python/unicode 'Peter Pastor'
    deps:
    - roscpp
    - eigen
    - dmp_motion_controller
    - dmp_motion_generation
    - dmp_motion_learner
    - policy_library
    - task_manager
    - task_recorder
    - slipgrip_controller
    - pr2_tasks_transforms
    - policy_improvement_utilities
    desc: dmp_motion_controller_test
    license: BSD
    shortdesc: dmp_motion_controller_test
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/policy_learning/dmp_motion_controller_test
    website: http://ros.org/wiki/dmp_motion_controller_test
  dmp_motion_generation:
    author: !!python/unicode 'Peter Pastor'
    deps:
    - std_msgs
    - roscpp
    - lwr
    - bspline
    - rosbag
    - eigen
    - policy_improvement_utilities
    desc: "This package contains an implementation of the Dynamic Movement\n    Primitive\
      \ (DMP) framework, originally developped by Auke Ijspeert\n    and Stefan Schaal,\
      \ and modified by Heiko Hoffmann and Peter Pastor."
    license: BSD
    shortdesc: dmp_motion_generation
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/policy_learning/dmp_motion_generation
    website: http://ros.org/wiki/dmp_motion_generation
  dmp_motion_generation_test:
    author: !!python/unicode 'Peter Pastor'
    deps:
    - dmp_motion_generation
    - policy_library
    - policy_improvement_utilities
    - eigen
    - rosbag
    - sensor_msgs
    desc: dmp_motion_generation_test
    license: BSD
    shortdesc: dmp_motion_generation_test
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/policy_learning/dmp_motion_generation_test
    website: http://ros.org/wiki/dmp_motion_generation_test
  dmp_motion_gui:
    author: !!python/unicode 'Tim Field'
    deps:
    - rospy
    - roslib
    - rosparam
    - dmp_motion_controller
    - dmp_motion_learner
    desc: dmp_motion_gui
    license: BSD
    shortdesc: dmp_motion_gui
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/policy_learning/dmp_motion_gui
    website: http://ros.org/wiki/dmp_motion_gui
  dmp_motion_learner:
    author: !!python/unicode 'Peter Pastor'
    deps:
    - dmp_motion_generation
    - pr2_tasks_transforms
    - policy_improvement_utilities
    - sensor_msgs
    - geometry_msgs
    - eigen
    - kdl
    - kdl_parser
    - angles
    - rosbag
    desc: dmp_motion_learner
    license: BSD
    shortdesc: dmp_motion_learner
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/policy_learning/dmp_motion_learner
    website: http://ros.org/wiki/dmp_motion_learner
  doors_application:
    author: !!python/unicode 'Wim meeussen'
    deps:
    - pr2_doors_executive
    - webui
    desc: ''
    license: BSD
    shortdesc: door_opening_application
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_web_apps/trunk/doors_application
    website: http://pr.willowgarage.com/wiki/pr2_doors
  dp_ptu47_pan_tilt_stage:
    author: !!python/unicode 'Radu Bogdan Rusu'
    deps:
    - roscpp
    - dynamic_reconfigure
    - cv_bridge
    - opencv2
    - tf
    - pcl
    - sensor_msgs
    - visualization_msgs
    - cv_bridge
    desc: "<p>\n      DP_PTU47 controls a DirectedPerception Pan-Tilt-Unit (PTU-47).\
      \ The driver provides an easily accessible service for position commands.\n\
      \    </p>"
    license: BSD
    shortdesc: ''
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/drivers_experimental/dp_ptu47_pan_tilt_stage
    website: http://pr.willowgarage.com
  dpm_detector:
    author: !!python/unicode 'Pedro Felzenszwalb, Ross Girshick, Deva Ramanan; ROS
      wrapper by Marius Muja'
    deps:
    - nodelet
    - dynamic_reconfigure
    - rein
    desc: Deformable Part Models object detector. This package contains a slightly
      patched version that runs in Octave and a ROS wrapper that allows it to run
      in the rein.
    license: ''
    shortdesc: dpm_detector
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/stacks/object_recognition/dpm_detector
    website: http://ros.org/wiki/dpm_detector
  dynamic_planning:
    author: !!python/unicode 'Maxim Likhachev/maximl@seas.upenn.edu'
    deps: []
    desc: A library of search-based planning algorithms
    license: BSD
    shortdesc: Dynamic 3D Planning
    source: details.php?name=sbpl
    website: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/motion_planning_research/planning_research/dynamic_planning
  dynamics_markers:
    author: !!python/unicode 'Daniel Hennes'
    deps:
    - roscpp
    - sensor_msgs
    - geometry_msgs
    - visualization_msgs
    - urdf
    desc: This package provides visual feedback of the current joint motor torques
      using marker displays in rviz.
    license: BSD
    shortdesc: Joint torque visualization in rviz
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/dynamics_markers
    website: http://ros.org/wiki/dynamics_markers
  ectools:
    author: !!python/unicode 'Derek King'
    deps:
    - roscpp
    - eml
    desc: <b>ectools</b> uses the EtherCAT Master Library to make various tools for
      the testing of PR2 electrical components.
    license: BSD
    shortdesc: Uses EtherCAT Master Library for various tools
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/wg_hardware_test/trunk/ectools
    website: http://ros.org/wiki/NO_WIKI_YET
  edges_pose_refiner:
    author: !!python/unicode 'Ilya Lysenkov'
    deps:
    - opencv2
    - posest
    - pcl
    - sensor_msgs
    - image_geometry
    desc: edges_pose_refiner
    license: BSD
    shortdesc: edges_pose_refiner
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/stacks/object_recognition_experimental/edges_pose_refiner
    website: http://ros.org/wiki/edges_pose_refiner
  eigen_allocations:
    author: !!python/unicode 'Stuart Glaser'
    deps:
    - eigen
    - rosrt
    desc: Counts allocations for using various bits of Eigen
    license: BSD
    shortdesc: eigen_allocations
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/eigen_allocations
    website: http://ros.org/wiki/eigen_allocations
  eigen_tests:
    author: !!python/unicode 'Radu Bogdan Rusu'
    deps:
    - eigen
    desc: Various different Eigen optimizations tests.
    license: BSD
    shortdesc: Various different Eigen optimizations tests.
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/point_cloud_perception_experimental/eigen_tests
    website: http://pr.willowgarage.com
  eml:
    author: !!python/unicode 'Tom Panis, Klaas Gadeyne, Bob Koninckx'
    deps: []
    desc: This is an implementation of the EtherCAT master protocol for the PR2 robot
      based on the work done at Flanders' Mechatronics Technology Centre.
    license: binary only
    shortdesc: EtherCAT Master Library
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_ethercat_drivers/trunk/eml
    website: http://ethercatmaster.berlios.de/
  engine9:
    author: !!python/unicode 'Nate Koenig'
    deps: []
    desc: 'engine9: Bayesian Network Library'
    license: BSD
    shortdesc: 'engine9: Bayesian Network Library'
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/engine9
    website: http://launchpad.net/engine9
  erratic_nav:
    author: !!python/unicode 'Brian Gerkey, modified by Kurt Konolige'
    deps:
    - amcl
    - erratic_player
    - sicktoolbox_wrapper
    - map_server
    - move_base
    - stage
    desc: A demo of  2-D navigation for Erratic robots
    license: BSD
    shortdesc: A demo of  2-D navigation for Erratic robots
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/demos/erratic_nav
    website: http://pr.willowgarage.com/wiki/FIXME
  esm_tracking:
    author: !!python/unicode 'Patrick Mihelich'
    deps:
    - roscpp
    - image_transport
    - opencv2
    - cv_bridge
    - dynamic_reconfigure
    desc: esm_tracking
    license: BSD
    shortdesc: esm_tracking
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/esm_tracking
    website: http://ros.org/wiki/esm_tracking
  ess_detector:
    author: !!python/unicode 'Marius Muja, contains ESS implementation from Christoph
      Lampert'
    deps:
    - rein
    - nodelet
    desc: ess_detector
    license: BSD,APACHE 2.0
    shortdesc: ess_detector
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/stacks/object_recognition_experimental/ess_detector
    website: http://ros.org/wiki/ess_detector
  ethercat_hardware:
    author: !!python/unicode 'Rob Wheeler (email: wheeler@willowgarage.com),  Maintained
      by Derek King (email: dking@willowgarage.com)'
    deps:
    - pr2_msgs
    - pr2_hardware_interface
    - eml
    - tinyxml
    - roscpp
    - realtime_tools
    - diagnostic_msgs
    - diagnostic_updater
    - pluginlib
    desc: Package for creating a hardware interface to the robot using the EtherCAT
      motor controller/driver
    license: BSD
    shortdesc: EtherCAT Hardware
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_ethercat_drivers/trunk/ethercat_hardware
    website: http://ros.org/wiki/ethercat_hardware
  ethercat_monitor:
    author: !!python/unicode 'Derek King, dking@willowgarage.com'
    deps:
    - rospy
    - rosbag
    - diagnostic_msgs
    desc: Monitors etherCAT chains for packet drops, allows users to localize a dropped
      packet or link.
    license: BSD
    shortdesc: Diagnostics for etherCAT chains
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/stacks/ethercat_diag_tools/ethercat_monitor
    website: http://ros.org/wiki/ethercat_monitor
  ethercat_trigger_controllers:
    author: !!python/unicode 'Blaise Gassend'
    deps:
    - rospy
    - pr2_controller_interface
    - realtime_tools
    - roscpp
    - diagnostic_msgs
    - pluginlib
    desc: "Controllers to operate the digital output of the motor controller\n   \
      \ boards and the projector board. This package has not been reviewed and\n \
      \   should be considered unstable."
    license: BSD
    shortdesc: Controllers for triggering from the realtime loop
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_controllers/branches/pr2_controllers-1.4/ethercat_trigger_controllers
    website: http://www.ros.org/wiki/ethercat_trigger_controllers
  experimental_calibration_msgs:
    author: !!python/unicode 'Vijay Pradeep / vpradeep@willowgarage.com'
    deps:
    - std_msgs
    - sensor_msgs
    desc: Messages for collecting datasets to perform various robot calibrations.
    license: BSD
    shortdesc: calibration_msgs
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/calibration_experimental/experimental_calibration_msgs
    website: http://pr.willowgarage.com/wiki/calibration_msgs
  explore_wg:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - roscpp
    - std_msgs
    - costmap_2d
    - actionlib
    - move_base_msgs
    - tf
    - roslib
    - navfn
    - visualization_msgs
    - geometry_msgs
    - nav_msgs
    desc: explore_wg
    license: BSD
    shortdesc: explore_wg
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/explore_wg
    website: http://ros.org/wiki/explore_wg
  face_detector:
    author: !!python/unicode 'Caroline Pantofaru'
    deps:
    - roscpp
    - std_msgs
    - geometry_msgs
    - std_srvs
    - opencv2
    - cv_bridge
    - stereo_msgs
    - sensor_msgs
    - tf
    - rosrecord
    - image_transport
    - people_msgs
    - image_geometry
    - actionlib_msgs
    - actionlib
    desc: Face detection in images.
    license: BSD
    shortdesc: face_detector
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/people/trunk/face_detector
    website: http://ros.org/wiki/face_detector
  fake_pointcloud_publisher:
    author: !!python/unicode 'Bhaskara Marthi'
    deps:
    - sensor_msgs
    - rospy
    - tf
    desc: Publishes fake obstacle data as a pointcloud
    license: BSD
    shortdesc: fake_pointcloud_publisher
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/fake_pointcloud_publisher
    website: http://ros.org/wiki/fake_pointcloud_publisher
  fake_robot:
    author: !!python/unicode 'Josh Tyler'
    deps:
    - webui
    - pr2_power_board
    - wifi_ddwrt
    - pr2_dashboard_aggregator
    desc: fake_robot
    license: BSD
    shortdesc: fake_robot
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/web_apps_experimental/fake_robot
    website: http://ros.org/wiki/fake_robot
  fast_detector:
    author: !!python/unicode 'Edward Rosten and Tom Drummond'
    deps: []
    license: BSD
    shortdesc: FAST
    source: list.php
    website: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/visual_feature_detectors/fast_detector
  fast_sift:
    author: !!python/unicode 'zerofrog'
    deps: []
    desc: "A cross-platform library that computes fast and accurate SIFT image features.\n\
      \    libsiftfast provides Octave/Matlab scripts, a command line interface, and\
      \ a\n    python interface (siftfastpy). Optimized with SIMD instructions and\
      \ OpenMP."
    license: LGPL
    shortdesc: "A cross-platform library that computes fast and accurate SIFT image\
      \ features.\n    libsiftfast ..."
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/visual_feature_detectors/fast_sift
    website: http://libsift.sourceforge.net/
  fast_template_detector:
    author: !!python/unicode 'Stefan Holzer'
    deps:
    - std_msgs
    - roscpp
    - sensor_msgs
    - image_transport
    - cv_bridge
    - camera_calibration_parsers
    - opencv2
    - stereo_msgs
    - message_filters
    - pcl
    - pcl_ros
    - tf
    - image_geometry
    - rosrecord
    desc: "<p>\n  The Fast Template Detector (FTD) library is an implementation of\
      \ a \n  template detector based on SSE optimized fast matching of binary data.\
      \ \n  An example of such data are Dominant Orientation Templates (see \n  'Dominant\
      \ orientation templates for real-time detection of texture-less \n  objects'\
      \ by Hinterstoisser et al.).\n</p>"
    license: LGPL
    shortdesc: fast_template_detector
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/stacks/object_recognition/fast_template_detector
    website: http://ros.org/wiki/fast_template_detector
  fastfiz:
    author: !!python/unicode 'Alon Altman'
    deps:
    - billiards_msgs
    - fastfiz_msgs
    - roscpp
    - rospy
    - roslib
    desc: FastFiz is a pool physics simulation developed by Alon Altman, available
      at http://www.stanford.edu/group/billiards/software.html#download
    license: GPL
    shortdesc: A pool physics simulation
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/billiards/fastfiz
    website: http://www.stanford.edu/group/billiards/software.html#download
  fastfiz_msgs:
    author: !!python/unicode 'Josh Faust'
    deps:
    - billiards_msgs
    desc: fastfiz_msgs
    license: BSD
    shortdesc: fastfiz_msgs
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/billiards/fastfiz_msgs
    website: http://ros.org/wiki/fastfiz_msgs
  features_2d:
    author: !!python/unicode 'Patrick Mihelich'
    deps:
    - opencv2
    - calonder_descriptor
    desc: features_2d
    license: BSD
    shortdesc: features_2d
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/visual_feature_detectors/features_2d
    website: http://ros.org/wiki/features_2d
  features_2d_ros:
    author: !!python/unicode 'Patrick Mihelich'
    deps:
    - opencv2
    - dynamic_reconfigure
    - roscpp
    - image_transport
    - cv_bridge
    desc: features_2d_ros
    license: BSD
    shortdesc: features_2d_ros
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/visual_feature_detectors/features_2d_ros
    website: http://ros.org/wiki/features_2d_ros
  feeling_controller:
    author: !!python/unicode 'Stuart Glaser'
    deps:
    - roscpp
    - geometry_msgs
    - actionlib_msgs
    - angles
    - pr2_controller_interface
    - eigen
    - actionlib
    - control_toolbox
    - tf
    - realtime_tools
    - eigen_conversions
    - kdl
    - spline_interp
    desc: feeling_controller
    license: BSD
    shortdesc: feeling_controller
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/feeling_controller
    website: http://ros.org/wiki/feeling_controller
  fiducial:
    author: !!python/unicode 'Ethan Rublee'
    deps:
    - opencv2
    - opencv_candidate
    - cv_bridge
    - roscpp
    - rospy
    - message_filters
    - std_msgs
    - pcl
    - pcl_ros
    - tf
    desc: "fiducial is a set of tools for easily\n  using fiducial markers in code\
      \ and in ROS. \n  It currently supports... checker-boards. \n  It will support...\
      \ 2d barcodes. \n  It will never support(directly)... ARTag."
    license: BSD
    shortdesc: "fiducial is a set of tools for easily\n  using fiducial markers in\
      \ code and in ROS. \n  It current..."
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/stacks/object_recognition/fiducial
    website: http://ros.org/wiki/fiducial
  fiducial_common:
    author: !!python/unicode 'Ethan Rublee'
    deps:
    - opencv2
    desc: fiducial_common
    license: BSD
    shortdesc: fiducial_common
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/fiducials/fiducial_common
    website: http://ros.org/wiki/fiducial_common
  find_object_actions:
    author: !!python/unicode 'Bhaskara Marthi'
    deps:
    - rospy
    - roscpp
    - actionlib
    - actionlib_msgs
    - geometry_msgs
    - nav_msgs
    - tf
    - control_toolbox
    - stage_msgs
    - find_object_msgs
    - sensor_msgs
    - costmap_2d
    - move_base_msgs
    - pr2_controllers_msgs
    - object_manipulation_msgs
    - object_manipulator
    - tabletop_object_detector
    - tabletop_collision_map_processing
    - smach
    - smach_ros
    - pr2_pick_and_place_demos
    desc: find_object_actions
    license: BSD
    shortdesc: find_object_actions
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/find_object/find_object_actions
    website: http://ros.org/wiki/find_object_actions
  find_object_executive:
    author: !!python/unicode 'Bhaskara Marthi'
    deps:
    - tf
    - smach
    - actionlib_msgs
    - actionlib
    - move_base_msgs
    - geometry_msgs
    - sensor_msgs
    - nav_msgs
    - rospy
    - roscpp
    - laser_geometry
    - find_object_actions
    - find_object_planner
    desc: find_object_executive
    license: BSD
    shortdesc: find_object_executive
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/find_object/find_object_executive
    website: http://ros.org/wiki/find_object_executive
  find_object_msgs:
    author: !!python/unicode 'Feng Wu'
    deps:
    - geometry_msgs
    desc: find_object_msgs
    license: BSD
    shortdesc: find_object_msgs
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/find_object/find_object_msgs
    website: http://ros.org/wiki/find_object_msgs
  find_object_planner:
    author: !!python/unicode 'Bhaskara Marthi'
    deps:
    - roscpp
    - nav_msgs
    - sensor_msgs
    - geometry_msgs
    - tf
    - actionlib
    - costmap_2d
    - navfn
    - move_base_msgs
    - occupancy_grid_utils
    - find_object_msgs
    - table_boundary_detector
    - stage_msgs
    desc: find_object_planner
    license: BSD
    shortdesc: find_object_planner
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/find_object/find_object_planner
    website: http://ros.org/wiki/find_object_planner
  fingertip_pressure:
    author: !!python/unicode 'Blaise Gassend/blaise@willowgarage.com'
    deps:
    - pr2_msgs
    - rospy
    - geometry_msgs
    - visualization_msgs
    - rostest
    - wxswig
    desc: "This package provides access to the PR2 fingertip pressure sensors. This\
      \ information includes:\n<ul>\n  <li>visualization of the pressure map in <a\
      \ href=\"http://ros.org/wiki/rviz\">Rviz</a> or in a standalone panel.</li>\n\
      \  <li>calibration-related data such as scaling factors, zero points and reference\
      \ frames. </li>\n</ul>"
    license: BSD
    shortdesc: Fingertip Pressure
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_ethercat_drivers/trunk/fingertip_pressure
    website: http://ros.org/wiki/fingertip_pressure
  follow_person:
    author: !!python/unicode 'Nikhil Karnad'
    deps:
    - tf
    - nav_msgs
    - visualization_msgs
    - move_base_msgs
    - assisted_teleop
    - actionlib
    - pr2_controllers_msgs
    - angles
    desc: follow_person
    license: BSD
    shortdesc: follow_person
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/follow_person
    website: http://ros.org/wiki/follow_person
  foo_boost_python:
    author: !!python/unicode 'Troy Straszheim, Ethan Rublee'
    deps:
    - rospy
    desc: foo_boost_python - tutorial on using boost python to wrap cpp.
    license: BSD
    shortdesc: foo_boost_python
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/foo_boost_python
    website: http://ros.org/wiki/foo_boost_python
  forearm_camera_ik:
    author: !!python/unicode 'Troy Straszheim'
    deps:
    - actionlib
    - roscpp
    - actionlib_msgs
    - geometry_msgs
    - pr2_controllers_msgs
    - pr2_common_action_msgs
    - tf
    - pr2_arm_kinematics
    - urdf
    - eigen
    - std_srvs
    desc: "Forearm camera IK via particle swarm optimization.  There is a\n    'fitness'\
      \ function that can easily be tweaked to prefer accuracy\n    in one dimension\
      \ to others.  By default pitch and yaw are favored\n    over position, and roll\
      \ is ignored completely.\n\n    This package is a HACK and will be superceded\
      \ by a more general IK\n    toolkit."
    license: BSD
    shortdesc: forearm_camera_ik
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/forearm_camera_ik
    website: http://ros.org/wiki/iktk
  forearm_teleop:
    author: !!python/unicode 'Stuart Glaser'
    deps:
    - rospy
    - simple_cartesian_controller
    - geometry_msgs
    - joy
    - actionlib
    - pr2_controllers_msgs
    desc: forearm_teleop
    license: BSD
    shortdesc: forearm_teleop
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/forearm_teleop
    website: http://ros.org/wiki/forearm_teleop
  ft_eval:
    author: !!python/unicode 'Stuart Glaser'
    deps:
    - rospy
    - rosrt
    - geometry_msgs
    - std_msgs
    - eigen_conversions
    - pr2_controller_interface
    - pr2_mechanism_model
    - robot_mechanism_controllers
    desc: ft_eval
    license: BSD
    shortdesc: ft_eval
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/ft_eval
    website: http://ros.org/wiki/ft_eval
  ft_sensor_controller:
    author: !!python/unicode 'BertWillaert'
    deps:
    - std_msgs
    - roscpp
    - ethercat_hardware
    - pr2_controller_interface
    - filters
    - tf
    - tf_conversions
    - angles
    - kdl
    - pr2_controller_manager
    - kdl_parser
    - pr2_mechanism_model
    - control_toolbox
    - realtime_tools
    - eigen_conversions
    - filters
    - rosatomic
    - allocators
    - lockfree
    desc: "based on 'netft_example_controllers'\n\n     Provides simple access to\
      \ force-torque data provided by netft_ethercat_hardware plugin.\n     Inludes\
      \ compensation for gripper mass"
    license: BSD
    shortdesc: ft_sensor_controller
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/sandbox/ft_sensor_controller
    website: http://ros.org/wiki/ft_sensor_controller
  ftd_pt_learner:
    author: !!python/unicode 'Stefan Holzer'
    deps:
    - roscpp
    - sensor_msgs
    - image_transport
    - cv_bridge
    - camera_calibration_parsers
    - opencv2
    - stereo_msgs
    - nav_msgs
    - message_filters
    - pcl
    - pcl_tf
    - pcl_ros
    - tf
    - image_geometry
    - pcl_point_cloud2_image_color
    - rosrecord
    - dp_ptu47_pan_tilt_stage
    - fast_template_detector
    desc: ftd
    license: LGPL
    shortdesc: fast_template_detector
    source: details.php?name=std_msgs
    website: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/stacks/object_recognition_experimental/ftd_pt_learner
  functional_m3n:
    author: !!python/unicode 'Daniel Munoz/ dmunoz@willowgarage.com'
    deps:
    - roscpp
    - opencv2
    desc: "<p>\n    Implementation of Max-Margin Markov Networks using functional\
      \ gradient boosting\n    as described in Munoz et al., &quot;Contextual Classification\
      \ with Functional Max-Margin\n    Markov Networks&quot;, CVPR 2009.\n</p>\n\
      <p>\nThe learning component of this package is under BSD License.  The inference/classification\
      \ \ncomponent can either use the Graph Boost Library (Boost Software License)\
      \ or another \n3rd party library (from Vladimir Kolmogorov) which has a &quot;research-only&quot;\
      \ license.\n</p>"
    license: BSD (learning) and Boost/research-only (inference)
    shortdesc: functional_m3n
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/segmentation_3d/functional_m3n
    website: http://pr.willowgarage.com/wiki/functional_m3n
  gazebo_benchmarks:
    author: !!python/unicode 'John Hsu'
    deps:
    - pr2_gazebo_plugins
    - gazebo_plugins
    - gazebo_tools
    - pr2_ogre
    - gazebo_worlds
    - pr2_tuckarm
    - pr2_controller_configuration_gazebo
    - robot_mechanism_controllers
    - pr2_mechanism_controllers
    - robot_state_publisher
    - pr2_gazebo
    - gazebo
    - parallel_quickstep
    - pr2_controller_manager
    - pr2_controller_interface
    - rospy
    - std_srvs
    - std_msgs
    desc: Package for basic physics tests
    license: BSD
    shortdesc: Package for basic physics tests
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/wg_robots_gazebo/trunk/gazebo_benchmarks
    website: http://pr.willowgarage.com/wiki/
  gazebo_render_stl:
    author: !!python/unicode 'John'
    deps:
    - gazebo
    - gazebo_plugins
    - gazebo_worlds
    - image_view
    - geometry_msgs
    desc: "renders an stl mesh given some parameters about the model, the camera and\
      \ the environment.\n     TBD"
    license: BSD
    shortdesc: gazebo_render_stl
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/sandbox/gazebo_render_stl
    website: http://ros.org/wiki/gazebo_render_stl
  geometric_shapes:
    author: !!python/unicode 'Ioan Sucan'
    deps:
    - bullet
    - assimp
    - rosconsole
    desc: The geometric shapes package provides implementations of basic geometric
      primitives. It can be used for collision checking, ray intersection and other
      operations with geoemtric primitives.
    license: BSD
    shortdesc: geometric_shapes
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/motion_planning_common/trunk/geometric_shapes
    website: http://ros.org/wiki/geometric_shapes
  geometric_shapes_msgs:
    author: !!python/unicode 'Ioan Sucan'
    deps:
    - std_msgs
    - geometry_msgs
    desc: This package contains messages for representing primitive geometric shapes.
    license: BSD
    shortdesc: geometric_shapes_msgs
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/motion_planning_common/trunk/geometric_shapes_msgs
    website: http://ros.org/wiki/geometric_shapes_msgs
  gestures:
    author: !!python/unicode 'Bill Smart'
    deps:
    - rospy
    - actionlib
    - pr2_controllers_msgs
    - move_arm_msgs
    - motion_planning_msgs
    - actionlib_msgs
    - smach
    - smach_ros
    desc: Social gestures for the PR2
    license: BSD
    shortdesc: Social gestures for the PR2
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/stacks/social/gestures
    website: http://ros.org/wiki/gestures
  gevicam_camera:
    author: !!python/unicode 'Radu Bogdan Rusu, Blaise Gassend'
    deps:
    - gevicam_puregev
    - rostest
    - roscpp
    - std_msgs
    - sensor_msgs
    - diagnostic_updater
    - driver_base
    - self_test
    - dynamic_reconfigure
    - timestamp_tools
    - image_transport
    - camera_info_manager
    - cv_bridge
    - opencv2
    desc: A ROS node and assorted tools to provide access to the GeViCAM stereo camera
      of the PR2 robot.
    license: unknown
    shortdesc: Driver for the GeViCAM camera
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/drivers_experimental/gevicam_camera
    website: http://www.ros.org/wiki/gevicam_camera
  gevicam_puregev:
    author: !!python/unicode 'Maintained by Radu Bogdan Rusu'
    deps: []
    desc: GeViCam camera PureGev libraries.
    license: Proprietary
    shortdesc: PureGev libraries for GeViCam cameras
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/drivers_experimental/gevicam_puregev
    website: http://www.ros.org/wiki/gevicam_puregev
  gevicam_trigger:
    author: !!python/unicode ''
    deps:
    - rospy
    - dynamic_reconfigure
    - ethercat_trigger_controllers
    - pr2_camera_synchronizer
    desc: gevicam_trigger
    license: BSD
    shortdesc: gevicam_trigger
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/drivers_experimental/gevicam_trigger
    website: http://ros.org/wiki/gevicam_trigger
  grasp_evaluation_msgs:
    author: !!python/unicode 'Peter Brook'
    deps:
    - object_manipulation_msgs
    desc: Contains the messages and services required for evaluating a potential grasp
      on a grasp planner.
    license: BSD
    shortdesc: grasp_evaluation_msgs
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/grasp_evaluation_msgs
    website: http://ros.org/wiki/grasp_evaluation_msgs
  grasp_playpen:
    author: !!python/unicode 'Kaijen Hsiao'
    deps:
    - pr2_pick_and_place_demos
    - rospy
    - std_srvs
    - std_msgs
    - pr2_controllers_msgs
    - object_manipulation_msgs
    - object_manipulator
    - rxbag
    - rosbag
    - polled_camera
    - message_filters
    - sensor_msgs
    - visualization_msgs
    - motion_planning_msgs
    - household_objects_database_msgs
    desc: grasp_playpen
    license: BSD
    shortdesc: grasp_playpen
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/grasp_playpen
    website: http://ros.org/wiki/grasp_playpen
  graspable_features:
    author: !!python/unicode 'Matei Ciocarlie, Li (Emma) Zhang'
    deps:
    - rviz
    - roscpp
    - geometry_msgs
    - sensor_msgs
    - pcl_ros
    - pcl
    - octomap2
    - pr2_gripper_click
    - household_objects_database_msgs
    - household_objects_database
    - geometric_shapes_msgs
    - pcl_visualization
    - rviz_interaction_tools
    desc: graspable_features will be used to decide local graspable features given
      user's click-and-drag operation on the stereo image.
    license: BSD
    shortdesc: graspable_features
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/sandbox/graspable_features
    website: http://ros.org/wiki/graspable_features
  graspable_features_data_generation:
    author: !!python/unicode 'Matei Ciocarlie, Li (Emma) Zhang'
    deps:
    - roscpp
    - graspit_interface_msgs
    - rosbag
    - graspable_features
    desc: graspable_features_data_generation are used to generate bad grasps and voxelgrids
      to the database
    license: BSD
    shortdesc: graspable_features_data_generation
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/sandbox/graspable_features_data_generation
    website: http://ros.org/wiki/graspable_features_data_generation
  grasping_classifier:
    author: !!python/unicode 'Ellen Klingbeil, Radu Bogdan Rusu'
    deps:
    - std_srvs
    - roscpp
    - sensor_msgs
    - image_transport
    - image_geometry
    - cv_bridge
    - opencv2
    - ogre
    - bullet
    - sensor_msgs
    - geometry_msgs
    - kinematics_msgs
    - move_arm_msgs
    - pr2_msgs
    - visualization_msgs
    - pcl
    - pcl_point_cloud2_image_color
    - tf
    - actionlib
    - pr2_mechanism_msgs
    - teleop_controllers
    - pr2_controllers_msgs
    - collision_environment_msgs
    desc: Classifier for grasping points using image and point cloud features.
    license: BSD
    shortdesc: grasping_classifier
    source: details.php?name=std_msgs
    website: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/stacks/object_recognition_experimental/grasping_classifier
  graspit:
    author: !!python/unicode ''
    deps:
    - household_objects_database_msgs
    - object_manipulation_msgs
    - graspit_interface_msgs
    - household_objects_database
    desc: "This package downloads and builds the GraspIt! simulator, \n    developed\
      \ in the Robotics Lab at Columbia University.\n\n    It also downloads and build\
      \ the SoQt library which is needed \n    for GraspIt."
    license: GPL
    shortdesc: "This package downloads and builds the GraspIt! simulator, \n    developed\
      \ in the Robotics Lab a..."
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/stacks/graspit_simulator/graspit
    website: http://ros.org/wiki/graspit
  graspit_interface:
    author: !!python/unicode 'Matei Ciocarlie'
    deps:
    - roscpp
    - geometry_msgs
    - sensor_msgs
    - object_manipulation_msgs
    - graspit
    - graspit_interface_msgs
    desc: graspit_interface
    license: BSD
    shortdesc: graspit_interface
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/stacks/graspit_simulator/graspit_interface
    website: http://ros.org/wiki/graspit_interface
  graspit_interface_msgs:
    author: !!python/unicode 'Peter Brook'
    deps:
    - sensor_msgs
    - geometry_msgs
    - object_manipulation_msgs
    desc: graspit_interface_msgs
    license: BSD
    shortdesc: graspit_interface_msgs
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/stacks/graspit_simulator/graspit_interface_msgs
    website: http://ros.org/wiki/graspit_interface_msgs
  graspit_pipeline:
    author: !!python/unicode 'Peter Brook'
    deps:
    - graspit_interface_msgs
    - graspit_interface
    - probabilistic_grasp_planner
    - pcl
    - tf
    - object_manipulation_msgs
    - household_objects_database_msgs
    - sensor_msgs
    - tabletop_object_detector
    - rosbag
    - rospy
    - grasp_playpen
    desc: graspit_pipeline
    license: BSD
    shortdesc: graspit_pipeline
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/stacks/graspit_simulator/graspit_pipeline
    website: http://ros.org/wiki/graspit_pipeline
  gripper_pose_solver:
    author: !!python/unicode 'Jonathan Scholz'
    deps:
    - roscpp
    - bullet
    - geometry_msgs
    - tf
    desc: gripper_pose_solver
    license: BSD
    shortdesc: gripper_pose_solver
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/bimanual_manipulation/gripper_pose_solver
    website: http://ros.org/wiki/gripper_pose_solver
  handhold:
    author: !!python/unicode 'Stuart Glaser'
    deps:
    - roscpp
    - tf
    - pr2_controller_configuration
    - geometry_msgs
    desc: This demo allows you to lead the robot around by its hand.
    license: BSD
    shortdesc: Handholding demo
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/demos/handhold
    website: http://pr.willowgarage.com
  haptic_fb_controller:
    author: !!python/unicode 'Bert Willaert'
    deps:
    - rospy
    - roscpp
    - rosrt
    - angles
    - tf
    - tf_conversions
    - kdl
    - pluginlib
    - std_msgs
    - geometry_msgs
    - diagnostic_msgs
    - pr2_controller_interface
    - pr2_controller_manager
    - kdl_parser
    - pr2_mechanism_model
    - control_toolbox
    - realtime_tools
    - eigen_conversions
    - filters
    - rosatomic
    - allocators
    - lockfree
    - ft_sensor_controller
    desc: "This package contains the controller for the PR2 arm that allows model-mediated\
      \ haptic feedback\n     Arm controller is a Jtranspose controller."
    license: BSD
    shortdesc: haptic_fb_controller
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/sandbox/haptic_fb_controller
    website: http://ros.org/wiki/haptic_fb_controller
  haptic_fb_controller_nac:
    author: !!python/unicode 'Bert Willaert'
    deps:
    - rospy
    - roscpp
    - rosrt
    - angles
    - tf
    - tf_conversions
    - kdl
    - pluginlib
    - std_msgs
    - geometry_msgs
    - diagnostic_msgs
    - pr2_controller_interface
    - pr2_controller_manager
    - kdl_parser
    - pr2_mechanism_model
    - control_toolbox
    - realtime_tools
    - eigen_conversions
    - filters
    - rosatomic
    - allocators
    - lockfree
    - ft_sensor_controller
    desc: "This package contains the controller for the PR2 arm that allows model-mediated\
      \ haptic feedback\n     Arm controller is a Jtranspose controller."
    license: BSD
    shortdesc: haptic_fb_controller_nac
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/sandbox/haptic_fb_controller_nac
    website: http://ros.org/wiki/haptic_fb_controller_nac
  haptic_fb_controller_plane:
    author: !!python/unicode 'Bert Willaert'
    deps:
    - rospy
    - roscpp
    - rosrt
    - angles
    - tf
    - tf_conversions
    - kdl
    - pluginlib
    - std_msgs
    - geometry_msgs
    - diagnostic_msgs
    - pr2_controller_interface
    - pr2_controller_manager
    - kdl_parser
    - pr2_mechanism_model
    - control_toolbox
    - realtime_tools
    - eigen_conversions
    - filters
    - rosatomic
    - allocators
    - lockfree
    - OrocosMsgPkg
    - ft_sensor_controller
    - fast_plane_detection
    desc: haptic_fb_controller_plane
    license: BSD
    shortdesc: haptic_fb_controller_plane
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/sandbox/haptic_fb_controller_plane
    website: http://ros.org/wiki/haptic_fb_controller_plane
  hark:
    author: !!python/unicode ''
    deps:
    - rospy
    - roscpp
    - std_msgs
    desc: hark
    license: BSD
    shortdesc: hark
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/hark
    website: http://ros.org/wiki/hark
  heat_equation_solver:
    author: !!python/unicode 'Romain Thibaux'
    deps:
    - roscpp
    - eigen
    desc: A special purpose linear system solver to solve the heat equation on an
      nD grid, given inputs of temperature 0 or 1 and given a uniform conductivity
      between neighboring cells. It is designed primarily for use by model_assembler.
    license: BSD
    shortdesc: heat_equation_solver
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/point_cloud_perception_experimental/heat_equation_solver
    website: http://ros.org/wiki/heat_equation_solver
  height_tracker:
    author: !!python/unicode 'Caroline Pantofaru'
    deps:
    - roscpp
    - std_msgs
    - geometry_msgs
    - std_srvs
    - opencv2
    - cv_bridge
    - stereo_msgs
    - sensor_msgs
    - tf
    - visualization_msgs
    - image_transport
    - people_msgs
    desc: height_tracker
    license: BSD
    shortdesc: height_tracker
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/people_experimental/height_tracker
    website: http://ros.org/wiki/height_tracker
  hierarchical_kmeans:
    author: !!python/unicode 'Romain Thibaux'
    deps:
    - eigen
    desc: hierarchical_kmeans
    license: BSD
    shortdesc: hierarchical_kmeans
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/machine_learning/hierarchical_kmeans
    website: http://ros.org/wiki/hierarchical_kmeans
  hokuyo_node_plus:
    author: !!python/unicode 'Brian P. Gerkey, Jeremy Leibs, Blaise Gassend'
    deps:
    - roscpp
    - sensor_msgs
    - driver_base
    - self_test
    - diagnostic_updater
    - dynamic_reconfigure
    desc: A ROS node to provide access to SCIP 2.0-compliant Hokuyo laser range finders
      (including 04LX).
    license: LGPL
    shortdesc: Hokuyo laser rangefinder drivers
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/drivers_experimental/hokuyo_node_plus
    website: http://www.ros.org/wiki/hokuyo_node_plus
  household_objects_database:
    author: !!python/unicode 'Matei Ciocarlie, except for source files individually
      marked otherwise'
    deps:
    - database_interface
    - roscpp
    - tf
    - household_objects_database_msgs
    - object_manipulation_msgs
    - rospy
    - rosgraph
    - roslib
    - rosservice
    desc: "Class definitions and a few convenience functions for interfacing\n   \
      \ with a specific SQL database, containing 3D models of a set of\n    common\
      \ household objects."
    license: BSD, except for source files individually marked otherwise
    shortdesc: household_objects_database
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/object_manipulation/branches/0.4-branch/household_objects_database
    website: http://ros.org/wiki/household_objects_database
  household_objects_database_msgs:
    author: !!python/unicode 'Matei Ciocarlie'
    deps:
    - geometric_shapes_msgs
    - geometry_msgs
    - sensor_msgs
    desc: "ROS message wrappers for some of the data retrieval functions of\n    the\
      \ household_objects_database."
    license: BSD
    shortdesc: household_objects_database_msgs
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/object_manipulation/branches/0.4-branch/household_objects_database_msgs
    website: http://ros.org/wiki/household_objects_database_msgs
  hviz:
    author: !!python/unicode 'aleeper'
    deps:
    - pr2_controller_interface
    - pr2_mechanism_model
    - pluginlib
    - eigen
    - kdl
    - visualization_msgs
    - joy
    - geometry_msgs
    - stereo_msgs
    - tf2
    - tf2_bullet
    - tf2_geometry_msgs
    - tf2_kdl
    - tf2_msgs
    - tf2_ros
    - tf2_tools
    - rospy
    - roscpp
    - pcl
    - pcl_ros
    - dynamic_reconfigure
    - profiling
    - rviz_interaction_tools
    - object_manipulator
    - chai3d
    desc: Experimental work for haptic rendering of point clouds
    license: BSD
    shortdesc: haptic_points
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/sandbox/hviz
    website: http://ros.org/wiki/
  icra2010_ros_tutorial:
    author: !!python/unicode 'Eitan Marder-Eppstein, Melonee Wise'
    deps: []
    license: BSD
    shortdesc: Implementations of the demo task for the ICRA 2010 ROS tutorial.
    source: list.php
    website: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/demos/icra2010_ros_tutorial
  icra_navigation_gazebo:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - gazebo
    - gazebo_tools
    - roslib
    - rospy
    - actionlib
    - pr2_2dnav_local
    - pr2_gazebo
    - move_base_msgs
    - ros_epic_fail
    desc: icra_navigation_gazebo
    license: BSD
    shortdesc: icra_navigation_gazebo
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/wg_robots_gazebo/trunk/icra_navigation_gazebo
    website: http://ros.org/wiki/icra_navigation_gazebo
  image_pcl_provider:
    author: !!python/unicode 'Ethan Rublee'
    deps:
    - rospy
    - pcl
    - roscpp
    - image_geometry
    - image_transport
    - opencv2
    - cv_bridge
    - tf
    - pcl_tf
    - image_view
    - rosbag
    - yaml_cpp
    desc: "image_pcl_provider is a package of tools\n\t\tfor aligning point clouds\
      \ to images. For example, say one wants to get\n\t\tthe point cloud from the\
      \ narrow stereo camera in the frame of the\n\t\tprosilica camera."
    license: BSD
    shortdesc: image_pcl_provider
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/image_pcl_provider
    website: http://ros.org/wiki/image_pcl_provider
  image_segmentation:
    author: !!python/unicode 'Caroline Pantofaru'
    deps:
    - roscpp
    - image_transport
    - opencv2
    - cv_bridge
    - ann
    desc: ROS nodes for image segmentation.
    license: BSD and GPL
    shortdesc: ROS nodes for image segmentation.
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/vision/image_segmentation
    website: http://pr.willowgarage.com/wiki/ImageSegmentation
  image_stream:
    author: !!python/unicode 'Rob Wheeler'
    deps:
    - rosweb
    - rospy
    - cv_bridge
    - opencv2
    desc: rosweb plugin to serve images as streams (MJPEG, Theora, FLV, etc)
    license: BSD
    shortdesc: image_stream
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/web_interface/trunk/image_stream
    website: http://ros.org/wiki/image_stream
  imu_monitor:
    author: !!python/unicode 'Wim Meeussen'
    deps:
    - sensor_msgs
    - pr2_mechanism_controllers
    - kdl
    - rospy
    desc: 'This package contains a single node that monitors the drift of the IMU

      gyroscopes. The results are published to the ''/diagnostics'' topic and

      are aggregated in the PR2 dashboard.'
    license: BSD
    shortdesc: imu_monitor
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_robot/trunk/imu_monitor
    website: http://ros.org/wiki/imu_monitor
  infinity_pedals:
    author: !!python/unicode 'Stuart Glaser'
    deps:
    - rospy
    - joy
    desc: infinity_pedals
    license: BSD
    shortdesc: infinity_pedals
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_cockpit/trunk/infinity_pedals
    website: http://ros.org/wiki/infinity_pedals
  interaction_controller:
    author: !!python/unicode 'Sami Haddadin'
    deps:
    - rospy
    - roscpp
    - rosrt
    - angles
    - tf
    - tf_conversions
    - kdl
    - pluginlib
    - std_msgs
    - geometry_msgs
    - diagnostic_msgs
    - pr2_controller_interface
    - pr2_controller_manager
    - kdl_parser
    - pr2_mechanism_model
    - control_toolbox
    - realtime_tools
    - eigen_conversions
    - filters
    - rosatomic
    - allocators
    - lockfree
    - ft_sensor_controller
    - wbc_msgs
    - wbc_core
    - wbc_urdf
    desc: This package contains the controller for the PR2 arm that allows some kind
      of weired interaction with a robot
    license: BSD
    shortdesc: interaction_controller
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/sandbox/interaction_controller
    website: http://ros.org/wiki/haptic_fb_controller_nac
  interpolated_ik_motion_planner:
    author: !!python/unicode 'Kaijen Hsiao'
    deps:
    - rospy
    - kinematics_msgs
    - geometry_msgs
    - motion_planning_msgs
    - visualization_msgs
    - sensor_msgs
    - trajectory_msgs
    - planning_environment_msgs
    desc: 'The interpolated ik motion planner does Cartesian interpolation: it takes
      in Cartesian start and end poses, and tries to find consistent joint angles
      for equally-spaced waypoints along the Cartesian path.'
    license: BSD
    shortdesc: interpolated_ik_motion_planner
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/motion_planners/trunk/interpolated_ik_motion_planner
    website: http://ros.org/wiki/interpolated_ik_motion_planner
  inverse_dynamics:
    author: !!python/unicode 'Daniel Hennes'
    deps:
    - roscpp
    - rospy
    - sensor_msgs
    - wbc_core
    - pr2_controller_interface
    - pr2_mechanism_model
    - actionlib
    - control_toolbox
    - filters
    - realtime_tools
    - trajectory_msgs
    - pr2_controllers_msgs
    - pluginlib
    desc: This package provides tools to create a nonparametric inverse dynamics model
      for the PR2 using Gaussion Process Regression. Interfaces to the KDL and Stanford
      WBC Newton-Euler ID models are included as are tools for motion generation.
    license: BSD
    shortdesc: Inverse dynamics model for the PR2
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/inverse_dynamics
    website: http://ros.org/wiki/inverse_dynamics
  inverse_dynamics_solver:
    author: !!python/unicode 'Daniel Hennes'
    deps:
    - roscpp
    - sensor_msgs
    - wbc_core
    - pr2_controller_interface
    - pr2_mechanism_model
    - actionlib
    - control_toolbox
    - filters
    - realtime_tools
    - trajectory_msgs
    - pr2_controllers_msgs
    - pluginlib
    - inverse_dynamics
    desc: This package provides a Newton-Euler based model using the Stanford Whole-Body
      Control (WBC) package and tools to create a nonparametric regression model using
      Gaussion Process Regression.
    license: BSD
    shortdesc: Inverse dynamics model for the PR2
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/inverse_dynamics_solver
    website: http://ros.org/wiki/inverse_dynamics_solver
  inverse_dynamics_tools:
    author: !!python/unicode 'Daniel Hennes'
    deps: []
    desc: Motion generation for GPR based inverse dynamics models. Motion visualization
      and convenience tools for bag file handling.
    license: BSD
    shortdesc: Tools to create GPR based inverse dynamics models
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/inverse_dynamics_tools
    website: http://ros.org/wiki/inverse_dynamics_tools
  joint_normalization_filters:
    author: !!python/unicode 'Sachin Chitta'
    deps:
    - spline_smoother
    - angles
    - filters
    desc: This package implements a set of filters that can deal with wrapping or
      unwrapping continuous joints.
    license: BSD
    shortdesc: joint_normalization_filters
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/trajectory_filters/trunk/joint_normalization_filters
    website: http://ros.org/wiki/joint_normalization_filters
  joint_qualification_controllers:
    author: !!python/unicode 'Kevin Watts, Melonee Wise'
    deps:
    - pr2_controller_interface
    - pr2_mechanism_model
    - pr2_hardware_interface
    - control_toolbox
    - roscpp
    - robot_mechanism_controllers
    - pluginlib
    - std_msgs
    - sensor_msgs
    - realtime_tools
    - urdf
    desc: Controllers used in PR2 hardware testing. For testing counterbalance of
      PR2, and for internal WG use.
    license: BSD
    shortdesc: Joint Qualification Controllers
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_self_test/trunk/joint_qualification_controllers
    website: http://www.ros.org/wiki/joint_qualification_controllers
  joint_trajectory_action:
    author: !!python/unicode 'Stuart Glaser'
    deps:
    - roscpp
    - trajectory_msgs
    - actionlib_msgs
    - pr2_controllers_msgs
    - actionlib
    desc: "The joint_trajectory_action is a node that exposes an action interface\n\
      \     to a joint trajectory controller."
    license: BSD
    shortdesc: joint_trajectory_action
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_controllers/branches/pr2_controllers-1.4/joint_trajectory_action
    website: http://ros.org/wiki/joint_trajectory_action
  joint_trajectory_action_tools:
    author: !!python/unicode 'Melonee Wise'
    deps:
    - joint_trajectory_action
    - trajectory_msgs
    - pr2_controllers_msgs
    - rospy
    - roslib
    desc: joint_trajectory_action_tools
    license: BSD
    shortdesc: joint_trajectory_action_tools
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_common_actions/trunk/joint_trajectory_action_tools
    website: http://ros.org/wiki/joint_trajectory_action_tools
  joint_trajectory_generator:
    author: !!python/unicode 'Eitan Marder-Eppstein, Wim Meeussen'
    deps:
    - actionlib
    - angles
    - kdl
    - joint_trajectory_action
    - roscpp
    - urdf
    desc: joint_trajectory_generator
    license: BSD
    shortdesc: joint_trajectory_generator
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_common_actions/trunk/joint_trajectory_generator
    website: http://ros.org/wiki/joint_trajectory_generator
  joint_trajectory_replay:
    author: !!python/unicode 'Blaise Gassend'
    deps:
    - pr2_controllers_msgs
    - trajectory_msgs
    - rosrecord
    - rosbag
    - pr2_mannequin_mode
    - trigger_msgs
    desc: dance_move_joint_replay
    license: BSD
    shortdesc: dance_move_joint_replay
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/dance_demo/joint_trajectory_replay
    website: http://ros.org/wiki/dance_move_joint_replay
  jsk_tidyup_demos:
    author: !!python/unicode 'K.Yamazaki, H.Yaguchi and R.Hanai'
    deps:
    - actionlib
    - roscpp
    - rospy
    - pr2_controllers_msgs
    - kinematics_msgs
    - move_arm_msgs
    - geometry_msgs
    - std_msgs
    - sensor_msgs
    - trajectory_msgs
    - pr2_mechanism_msgs
    - tf
    - laser_geometry
    - move_base
    - move_base_msgs
    - actionlib_msgs
    - visualization_msgs
    - opencv2
    - cv_bridge
    - image_transport
    - tabletop_object_detector
    - dynamic_reconfigure
    - polled_camera
    - sound_play
    desc: 'Jsk_tidyup_demos is a set of demonstrations using PR2 and several ROS packages.

      It includes PR2:

      1. collects small objects on the table and carrying them them to another place
      using a tray.

      2. finds a dish by detecting circlar figures, grasps it and carries it to another
      place.

      3. collects washing on a chair by finding wrinkle feature

      4. finds an object using stereo points and then identifies it by comparing SURF
      feature on it and what the robot learned previously.'
    license: BSD
    shortdesc: jsk_tidyup_demos
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/jsk_tidyup_demos
    website: http://ros.org/wiki/jsk_tidyup_demos
  kidnapped_robot:
    author: !!python/unicode 'Patrick Mihelich'
    deps:
    - roscpp
    - vocabulary_tree
    - frame_common
    - posest
    - tf
    - geometry_msgs
    - pr2_controllers_msgs
    - actionlib
    - image_transport
    - image_geometry
    - cv_bridge
    - topic_tools
    desc: kidnapped_robot
    license: BSD
    shortdesc: kidnapped_robot
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/kidnapped_robot
    website: http://ros.org/wiki/kidnapped_robot
  kinect_slam:
    author: !!python/unicode 'Dirk Holz'
    deps:
    - pcl
    - pcl_ros
    - pcl_visualization
    - terminal_tools
    - stereo_msgs
    - image_geometry
    - rbrief
    - cv_bridge
    - opencv2
    - pcl_registration_experimental
    desc: (On-line/real-time) SLAM on the kinect camera.
    license: BSD
    shortdesc: kinect_slam
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/kinect_slam
    website: http://pr.willowgarage.com/kinect_slam
  kinematics_base:
    author: !!python/unicode 'Sachin Chitta'
    deps:
    - kinematics_msgs
    desc: This is a base class for kinematics implementations
    license: BSD
    shortdesc: kinematics_base
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/kinematics/trunk/kinematics_base
    website: http://ros.org/wiki/kinematics_base
  kinematics_msgs:
    author: !!python/unicode 'Sachin Chitta'
    deps:
    - geometry_msgs
    - trajectory_msgs
    - motion_planning_msgs
    desc: This package provides general-purpose messages and services that can be
      used for kinematic computation using a ROS interface.
    license: BSD
    shortdesc: kinematics_msgs
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/kinematics/trunk/kinematics_msgs
    website: http://ros.org/wiki/kinematics_msgs
  kitting:
    author: !!python/unicode 'Nate Koenig Local'
    deps:
    - tabletop_object_detector
    - object_manipulation_msgs
    - tabletop_collision_map_processing
    - pcl
    - opencv2
    - laser_assembler
    - image_transport
    - pr2_machine
    - roscpp
    - rospy
    - pr2_tuckarm
    - visualization_msgs
    - actionlib
    - actionlib_msgs
    - sensor_msgs
    - trajectory_msgs
    - motion_planning_msgs
    - robot_mechanism_controllers
    - pr2_gazebo
    - stereo_image_proc
    - move_arm_msgs
    - rviz
    - nav_msgs
    - cmvision
    - sound_play
    - move_arm
    - bullet
    - rosjson
    - roslaunch_caller
    - pr2_arm_kinematics_constraint_aware
    - trajectory_filter_server
    - constraint_aware_spline_smoother
    - joint_normalization_filters
    - spline_smoother
    - pr2_mechanism_msgs
    desc: kitting
    license: BSD
    shortdesc: kitting
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/kitting
    website: http://ros.org/wiki/kitting
  knem:
    author: !!python/unicode 'INRIA Runtime Team-Project'
    deps: []
    desc: "KNEM is a Linux kernel module enabling high-performance intra-node MPI\n\
      \    communication for large messages. KNEM works on all Linux kernel since\
      \ 2.6.15\n    and offers support for asynchronous and vectorial data transfers\
      \ as well as\n    offloading memory copies on to Intel I/OAT hardware."
    license: BSD
    shortdesc: "KNEM is a Linux kernel module enabling high-performance intra-node\
      \ MPI\n    communication for l..."
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/mpi/trunk/knem
    website: http://runtime.bordeaux.inria.fr/knem/
  kt2_gazebo_plugins:
    author: !!python/unicode 'Kevin Watts'
    deps:
    - rospy
    - geometry_msgs
    - sensor_msgs
    - stereo_msgs
    - tf
    - driver_base
    - dynamic_reconfigure
    - gazebo
    - gazebo_plugins
    - gazebo_tools
    - wge100_camera
    - pr2_gazebo
    - xacro
    - kt2_pr2_defs
    - image_geometry
    - kinematics_msgs
    - pr2_controllers_msgs
    - trajectory_msgs
    desc: kt2_gazebo_plugins
    license: ''
    shortdesc: kt2_gazebo_plugins
    source: details.php?name=roscpp
    website: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_electric/kt2_simulator/kt2_gazebo_plugins
  kt2_pr2_defs:
    author: !!python/unicode 'Kevin Watts'
    deps:
    - ivcon
    - urdf
    - roscpp
    - tinyxml
    - angles
    - pluginlib
    - pr2_hardware_interface
    - pr2_mechanism_model
    - pr2_controller_manager
    - pr2_head_action
    - pr2_gripper_action
    desc: ''
    license: ''
    shortdesc: kt2_pr2_defs
    source: details.php?name=convex_decomposition
    website: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_electric/kt2_simulator/kt2_pr2_defs
  lab_perception:
    author: !!python/unicode 'Victor  Eruhimov'
    deps:
    - opencv2
    desc: lab_perception
    license: BSD
    shortdesc: lab_perception
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/lab_perception
    website: http://ros.org/wiki/lab_perception
  laban_requestors:
    author: !!python/unicode 'Andreas Paepcke'
    deps:
    - laban_service
    desc: "Package holds clients who generate motion waypoint sequences in\n     Cartesian\
      \ space. The sequences follow Laban principles. The\n     sequences are submitted\
      \ to laban_service for execution."
    license: BSD
    shortdesc: laban_requestors
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/stacks/social/laban_requestors
    website: http://ros.org/wiki/laban_requestors
  laban_service:
    author: !!python/unicode 'John Hsu'
    deps:
    - pr2_gazebo
    - gazebo
    - pr2_tuckarm
    - robot_state_publisher
    - pr2_common_action_msgs
    - actionlib
    - roscpp
    - joint_trajectory_action
    - geometry_msgs
    - kinematics_msgs
    - pr2_controllers_msgs
    - tf
    - std_msgs
    desc: "Service that executes arm motions, given information just about\n     the\
      \ PR2 wrist. Expected coordinates are Cartesian. Translates to\n     joint coordinates,\
      \ and uses lower-level controllers to execute\n     the motion."
    license: BSD
    shortdesc: laban_service
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/stacks/social/laban_service
    website: http://ros.org/wiki/laban_service
  larks:
    author: !!python/unicode 'haejong seo'
    deps:
    - rein
    - nodelet
    desc: lark
    license: BSD
    shortdesc: lark
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/stacks/object_recognition_experimental/larks
    website: http://ros.org/wiki/larks
  laser_cliff_safety:
    author: !!python/unicode 'Ze''ev Klapow'
    deps:
    - roscpp
    - rospy
    - sensor_msgs
    - geometry_msgs
    desc: laser_cliff_safety
    license: BSD
    shortdesc: laser_cliff_safety
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/laser_cliff_safety
    website: http://ros.org/wiki/laser_cliff_safety
  laser_slam_mapper:
    author: !!python/unicode 'Bhaskara Marthi'
    deps:
    - laser_slam
    - topological_map_2d
    - warehouse
    - tf
    - roscpp
    - visualization_msgs
    desc: A mapper that builds a 2d topological map using the output from the slam
      algorithm in the laser_slam package.
    license: BSD
    shortdesc: laser_slam_mapper
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/topological_navigation/trunk/laser_slam_mapper
    website: http://ros.org/wiki/laser_slam_mapper
  laser_threshold:
    author: !!python/unicode 'Lane Haury'
    deps:
    - rospy
    - sensor_msgs
    desc: laser_threshold
    license: BSD
    shortdesc: laser_threshold
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/stacks/ride-transitional/laser_threshold
    website: http://pr.willowgarage.com/wiki/laser_threshold
  laser_tilt_controller_filter:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - filters
    - sensor_msgs
    - roscpp
    - pluginlib
    - pr2_msgs
    desc: laser_tilt_controller_filter
    license: BSD
    shortdesc: laser_tilt_controller_filter
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_navigation/branches/cturtle_branch/laser_tilt_controller_filter
    website: http://ros.org/wiki/laser_tilt_controller_filter
  launchman:
    author: !!python/unicode 'Scott Hassan'
    deps:
    - rospy
    - roslaunch
    - std_msgs
    desc: Launch Manager
    license: BSD
    shortdesc: Launch Manager
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/web_interface/trunk/launchman
    website: http://ros.org/wiki/launchman
  ledwiz:
    author: !!python/unicode 'Blaise Gassend'
    deps:
    - roscpp
    - diagnostic_updater
    desc: ''
    license: BSD
    shortdesc: leg_detector
    source: details.php?name=std_msgs
    website: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/drivers_experimental/ledwiz
  levmar:
    author: !!python/unicode 'Kevin Watts'
    deps: []
    desc: levmar
    license: No Clue
    shortdesc: levmar
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/levmar
    website: http://ros.org/wiki/levmar
  libdmtx:
    author: !!python/unicode 'James Bowman'
    deps: []
    desc: libdmtx
    license: BSD
    shortdesc: libdmtx
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/libdmtx
    website: http://ros.org/wiki/libdmtx
  libsunflower:
    author: !!python/unicode 'Roland Philippsen'
    deps: []
    desc: "Libsunflower contains mobile robotic programming abstractions\n    developed\
      \ at the Autonomous Systems Lab of the Swiss Federal\n    Institute of Technology.\
      \ It is written in C++ and provides a\n    framework of classes and utilities\
      \ for common tasks and patterns\n    in mobile robotics. As a concrete application\
      \ of those\n    abstractions, libsunflower contains obstacle avoidance code."
    license: GPL
    shortdesc: A ROS wrapper for libsunflower.sourceforge.net
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/motion_planning_research/libsunflower
    website: http://libsunflower.sourceforge.net/
  life_test:
    author: !!python/unicode 'Kevin Watts'
    deps:
    - pr2_component_descriptions
    - pr2_controller_configuration
    - pr2_etherCAT
    - pr2_power_board
    - pr2_mechanism_controllers
    - robot_mechanism_controllers
    - pr2_controller_manager
    - pr2_bringup
    - runtime_monitor
    - wg_invent_client
    - diagnostic_msgs
    - roslaunch_caller
    - pr2_mechanism_msgs
    - geometry_msgs
    - robot_state_publisher
    - wge100_camera
    - rospy
    - sensor_msgs
    - std_srvs
    - hokuyo_node
    - joint_qualification_controllers
    - ectools
    - pr2_camera_synchronizer
    - pr2_drive_life_test
    - robot_monitor
    - pr2_teleop
    - joy
    - pr2_hardware_test_monitor
    - pr2_self_test_msgs
    - rosbag
    - pr2_transmission_check
    - rostopic
    - planning_environment
    - collision_free_arm_trajectory_controller
    - trajectory_filter_server
    - pr2_arm_navigation_actions
    - joint_trajectory_action
    - geometric_shapes_msgs
    desc: "This package contains the scripts needed to run burn in and life tests\
      \ on PR2 components.\n\n    Use Test Manager to run tests:\n    roscd life_test\n\
      \    ./test_manager.py"
    license: BSD
    shortdesc: Runs life/burn-in tests on PR2 components and robots
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/wg_hardware_test/trunk/life_test
    website: http://www.ros.org/wiki/life_test
  linphone:
    author: !!python/unicode 'Dave Hershberger'
    deps:
    - rospy
    desc: Provides two-way audio (voice-centric) communication between a remote operator
      and a robot.
    license: BSD
    shortdesc: 'Provides two-way audio (voice-centric) communication between a remote
      operator and a robot.


      ...'
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/linphone
    website: http://ros.org/wiki/linphone
  long_term_study:
    author: !!python/unicode 'Bill Smart'
    deps:
    - rospy
    - smach
    - smach_ros
    - actionlib
    - rosbag
    - tf
    - geometry_msgs
    - move_base_msgs
    - nav_msgs
    - sensor_msgs
    - pr2_common_action_msgs
    - pr2_controllers_msgs
    desc: long_term_study
    license: BSD
    shortdesc: long_term_study
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/stacks/social/long_term_study
    website: http://ros.org/wiki/long_term_study
  low_dimensional_descriptor:
    author: !!python/unicode 'Ethan Rublee'
    deps:
    - opencv2
    desc: low_dimensional_descriptor
    license: BSD
    shortdesc: low_dimensional_descriptor
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/low_dimensional_descriptor
    website: http://ros.org/wiki/low_dimensional_descriptor
  lwpr2_trajectory_controller:
    author: !!python/unicode 'Daniel Hennes'
    deps:
    - rospy
    - roscpp
    - pr2_controller_interface
    - pr2_mechanism_model
    - pluginlib
    - eigen
    - angles
    - filters
    - tf
    - tf_conversions
    - kdl
    - actionlib
    - std_msgs
    - geometry_msgs
    - diagnostic_msgs
    - trajectory_msgs
    - pr2_controllers_msgs
    - pr2_controller_manager
    - control_toolbox
    - kdl_parser
    - realtime_tools
    - message_filters
    desc: Provides a feedforward controller based on inverse dynamics learned using
      Linear Weighted Projection Regression.
    license: BSD
    shortdesc: Linear Weighted Projection Regression Inverse Dynamics Controller
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/lwpr2_trajectory_controller
    website: http://ros.org/wiki/lwpr2_trajectory_controller
  lwr:
    author: !!python/unicode 'Peter Pastor'
    deps:
    - roscpp
    - eigen
    - rosbag
    - policy_improvement_utilities
    desc: lwr
    license: BSD
    shortdesc: lwr
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/policy_learning/lwr
    website: http://ros.org/wiki/lwr
  m3_arm_navigation_test:
    author: !!python/unicode 'Sachin Chitta'
    deps:
    - move_arm_msgs
    - motion_planning_msgs
    - planning_environment
    desc: m3_arm_navigation_test
    license: BSD
    shortdesc: m3_arm_navigation_test
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/meka_robot/m3_arm_navigation_test
    website: http://ros.org/wiki/m3_arm_navigation_test
  m3_controller_configuration:
    author: !!python/unicode 'John Hsu'
    deps: []
    desc: m3_controller_configuration
    license: BSD
    shortdesc: m3_controller_configuration
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/meka_robot/m3_controller_configuration
    website: http://ros.org/wiki/m3_controller_configuration
  m3_full_description:
    author: !!python/unicode 'John Hsu'
    deps:
    - m3_description
    - urdf
    - xacro
    desc: m3_full_description
    license: BSD
    shortdesc: m3_full_description
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/meka_robot/m3_full_description
    website: http://ros.org/wiki/m3_full_description
  m3_gazebo:
    author: !!python/unicode 'John Hsu'
    deps:
    - gazebo_worlds
    - m3_description
    - m3_full_description
    - m3_gazebo_plugins
    - gazebo
    desc: m3_gazebo
    license: BSD
    shortdesc: m3_gazebo
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/meka_robot/m3_gazebo
    website: http://ros.org/wiki/m3_gazebo
  m3_gazebo_plugins:
    author: !!python/unicode 'John Hsu'
    deps:
    - gazebo
    desc: m3_gazebo_plugins
    license: BSD
    shortdesc: m3_gazebo_plugins
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/meka_robot/m3_gazebo_plugins
    website: http://ros.org/wiki/m3_gazebo_plugins
  m3_planning:
    author: !!python/unicode 'Sachin Chitta'
    deps:
    - ompl_ros_interface
    - planning_environment
    - trajectory_filter_server
    - move_arm
    - pr2_controller_manager
    - joint_trajectory_action
    - pr2_msgs
    - collision_environment_msgs
    - move_arm_head_monitor
    - spline_smoother
    - constraint_aware_spline_smoother
    - dynamic_reconfigure
    desc: m3_planning
    license: BSD
    shortdesc: m3_planning
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/meka_robot/m3_planning
    website: http://ros.org/wiki/m3_planning
  manipulation_transforms:
    author: !!python/unicode 'Jonathan Scholz'
    deps:
    - roscpp
    - bullet
    - kdl
    - tf
    - tf_conversions
    - geometry_msgs
    - std_msgs
    desc: "manipulation_transforms: a library for mapping poses and twists back and\
      \ forth\n    between an object and the one or more effectors in rigid contact\
      \ with it.  Can\n    be used for querying object position and velocity from\
      \ effector actions, and \n    for achieving desired object trajectories with\
      \ the effectors.  This will probably\n    see use mainly for 2-arm manipulation\
      \ tasks like cart pushing."
    license: BSD
    shortdesc: manipulation_transforms
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/cart_pushing/trunk/manipulation_transforms
    website: http://ros.org/wiki/manipulation_transforms
  mannequin_application:
    author: !!python/unicode 'Vijay Pradeep, Scott Hassan'
    deps:
    - roslib
    - rospy
    - webui
    - rosweb
    - std_msgs
    - pr2_mannequin_mode
    desc: A super simple tool for letting a person position the arms manually, by
      simply pushing the arm to the location that want. Without out this tool, users
      are often stuck tweaking joint angles in a script, or holding the arm steady
      while hitting keys to freeze the arm.
    license: BSD
    shortdesc: mannequin_application
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_web_apps/trunk/mannequin_application
    website: http://pr.willowgarage.com/wiki/pr2_mannequin_mode
  map_tiler:
    author: !!python/unicode 'Rob Wheeler'
    deps:
    - rosweb
    - nav_msgs
    - geometry_msgs
    - tf
    - rospy
    desc: rosweb plugin to serve map tiles as jpeg
    license: BSD
    shortdesc: rosweb plugin to serve map tiles as jpeg
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_web_apps/trunk/map_tiler
    website: http://ros.org/wiki/map_tiler
  mapping3d:
    author: !!python/unicode 'Kai M. Wurm'
    deps:
    - pcl_registration_experimental
    - tf
    - visualization_msgs
    - octomap2
    - terminal_tools
    desc: mappin3d, a set of tools for 3d mapping.
    license: BSD
    shortdesc: mappin3d, a set of tools for 3d mapping.
    source: details.php?name=pcl
    website: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/mapping3d
  mapping_msgs:
    author: !!python/unicode 'Ioan Sucan'
    deps:
    - std_msgs
    - sensor_msgs
    - geometry_msgs
    - geometric_shapes_msgs
    desc: mapping_msgs
    license: BSD
    shortdesc: mapping_msgs
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/motion_planning_common/trunk/mapping_msgs
    website: http://ros.org/wiki/mapping_msgs
  mapping_rviz_plugin:
    author: !!python/unicode 'Josh Faust'
    deps:
    - rviz
    - roscpp
    - mapping_msgs
    - tf
    desc: mapping_rviz_plugin
    license: BSD
    shortdesc: mapping_rviz_plugin
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/motion_planning_common/trunk/mapping_rviz_plugin
    website: http://ros.org/wiki/mapping_rviz_plugin
  mapping_tools:
    author: !!python/unicode 'Kai Wurm'
    deps:
    - angles
    - pr2_teleop_general
    - pr2_tilt_laser_interface
    - actionlib
    desc: mapping_tools
    license: BSD
    shortdesc: mapping_tools
    source: details.php?name=tf
    website: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/point_cloud_perception_experimental/mapping_tools
  microscribe:
    author: !!python/unicode 'Stuart Glaser'
    deps:
    - rospy
    - sensor_msgs
    - joy
    desc: microscribe
    license: BSD
    shortdesc: microscribe
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_cockpit/trunk/microscribe
    website: http://ros.org/wiki/microscribe
  mocap_msgs:
    author: !!python/unicode 'Ken Conley/ kwc@willowgarage.com'
    deps:
    - geometry_msgs
    desc: Messages for motion capture, in particular, phase_space
    license: BSD
    shortdesc: mocap_msgs
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/calibration_experimental/mocap_msgs
    website: http://pr.willowgarage.com/wiki/mocap_msgs
  model_database:
    author: !!python/unicode 'Matei Ciocarlie'
    deps:
    - roscpp
    - geometry_msgs
    - tf
    - yaml_cpp
    desc: Interface with a database of 3D models and various other information.
    license: BSD
    shortdesc: model_database
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/model_database
    website: http://ros.org/wiki/model_database
  model_database_update:
    author: !!python/unicode 'Radu Bogdan Rusu and Matei Ciocarlie'
    deps:
    - roscpp
    - model_database
    desc: Package that updates the model database with various useful things.
    license: BSD
    shortdesc: model_database_update
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/grasping/model_database_update
    website: http://pr.willowgarage.com
  monitors:
    author: !!python/unicode 'Bill Smart'
    deps:
    - rospy
    - roscpp
    - geometry_msgs
    - pr2_msgs
    - message_filters
    desc: Monitoring packages for the janitorial stack.
    license: BSD
    shortdesc: Monitoring packages for the janitorial stack.
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/stacks/janitorial/monitors
    website: http://ros.org/wiki/monitors
  mono_stereo:
    author: !!python/unicode 'Ethan Rublee'
    deps:
    - tod_core
    - tod_training
    - pcl
    - pcl_visualization
    - opencv2
    desc: mono_stereo
    license: BSD
    shortdesc: mono_stereo
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/sandbox/mono_stereo
    website: http://ros.org/wiki/mono_stereo
  motion_planning_msgs:
    author: !!python/unicode 'Ioan Sucan/isucan@willowgarage.com, Sachin Chitta/sachinc@willowgarage.com'
    deps:
    - rosbag
    - std_msgs
    - geometry_msgs
    - mapping_msgs
    - trajectory_msgs
    - geometric_shapes_msgs
    - sensor_msgs
    - tf
    desc: This package defines a set of general-purpose messages and services for
      motion planning and control. It includes messages that can be used to specify
      joint and cartesian trajectories, represent robot state and services to compute
      motion plans. It also includes a set of conversion methods that can be used
      to convert messages from one form to another.
    license: BSD
    shortdesc: motion_planning_msgs
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/motion_planning_common/trunk/motion_planning_msgs
    website: http://ros.org/wiki/motion_planning_msgs
  motion_planning_rviz_plugin:
    author: !!python/unicode 'Josh Faust'
    deps:
    - rviz
    - roscpp
    - tf
    - planning_models
    - planning_environment
    - motion_planning_msgs
    desc: The motion_planning_rviz_plugin enables the display of joint paths for the
      robot in the rviz visualizer.
    license: BSD
    shortdesc: motion_planning_rviz_plugin
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/motion_planning_common/trunk/motion_planning_rviz_plugin
    website: http://ros.org/wiki/motion_planning_rviz_plugin
  motor_halt_scheduler_trace:
    author: !!python/unicode 'Blaise Gassend'
    deps:
    - std_msgs
    - rospy
    desc: "Collects a trace of scheduler activity, inserting a mark each time the\n\
      \    motors halt."
    license: BSD
    shortdesc: motor_halt_scheduler_trace
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/motor_halt_scheduler_trace
    website: http://ros.org/wiki/motor_halt_scheduler_trace
  move_arm:
    author: !!python/unicode 'Ioan Sucan, Sachin Chitta(sachinc@willowgarage.com)'
    deps:
    - roscpp
    - rosconsole
    - std_msgs
    - motion_planning_msgs
    - geometry_msgs
    - mapping_msgs
    - visualization_msgs
    - geometric_shapes
    - planning_models
    - planning_environment
    - actionlib
    - actionlib_msgs
    - tf_conversions
    - planning_environment_msgs
    - pr2_controllers_msgs
    - kinematics_msgs
    - move_arm_msgs
    - geometric_shapes_msgs
    - move_arm_head_monitor
    - geometry_msgs
    desc: The move_arm package provides an implementation of a action (see the <a
      href="http://www.ros.org/wiki/actionlib">actionlib</a> package) that, given
      a goal in the world, will attempt to reach it with a robot arm. The move_arm
      node links together a planner, trajectory monitor and trajectory controller
      to acheive its goal. It supports any planner that provides a GetMotionPlan interface
      and any controller that provides services for setting, querying and canceling
      trajectories. The node is designed to be modular and so uses ROS services for
      planning, control and IK and does minimal computation within the node itself.
    license: BSD
    shortdesc: A general arm planning and control interface
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/arm_navigation/trunk/move_arm
    website: http://ros.org/wiki/move_arm
  move_arm_head_monitor:
    author: !!python/unicode 'Adam Harmat'
    deps:
    - roscpp
    - actionlib
    - actionlib_msgs
    - pr2_controllers_msgs
    - kinematics_msgs
    - visualization_msgs
    - tf
    desc: A node that provides monitoring capability for robot arms by continuously
      pointing the head at the location in space where an arm will be in the future.
    license: BSD
    shortdesc: move_arm_head_monitor
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/arm_navigation/trunk/move_arm_head_monitor
    website: http://ros.org/wiki/move_arm_head_monitor
  move_arm_msgs:
    author: !!python/unicode 'Sachin Chitta'
    deps:
    - actionlib_msgs
    - motion_planning_msgs
    - geometry_msgs
    - planning_environment_msgs
    - trajectory_msgs
    desc: This package contains the messages needed to communicate with the move_arm
      action through an action interface.
    license: BSD
    shortdesc: move_arm_msgs
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/arm_navigation/trunk/move_arm_msgs
    website: http://ros.org/wiki/move_arm_msgs
  move_base_stage:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - move_base
    - stage
    - amcl
    - map_server
    - fake_localization
    - nav_view
    - willow_maps
    - topic_tools
    desc: Tests for the navigation stack
    license: BSD
    shortdesc: Navigation stack tests
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/demos/move_base_stage
    website: http://pr.willowgarage.com
  move_head:
    author: !!python/unicode 'Alex Sorokin'
    deps:
    - rospy
    - sensor_msgs
    - actionlib_msgs
    - geometry_msgs
    - actionlib
    desc: move_head
    license: BSD
    shortdesc: move_head
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/move_head
    website: http://ros.org/wiki/move_head
  mpbench:
    author: !!python/unicode 'Roland Philippsen'
    deps:
    - libsunflower
    - nepumuk
    - mpglue
    - costmap_2d
    - door_msgs
    desc: ''
    license: BSD
    shortdesc: tools for comparing motion planners
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/motion_planning_research/mpbench
    website: http://pr.willowgarage.com/pr-docs/ros-packages/mpbench/html/
  mpglue:
    author: !!python/unicode 'Roland Philippsen'
    deps:
    - std_msgs
    - door_msgs
    - roscpp
    - costmap_2d
    - sbpl
    - sbpl_door_planner
    - libsunflower
    - navfn
    desc: ''
    license: BSD
    shortdesc: wrappers and tools for generically handling motion planners
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/motion_planning_research/mpglue
    website: http://www.ros.org/wiki/mpglue
  mpi_test:
    author: !!python/unicode 'John Hsu'
    deps:
    - roscpp
    - eigen3
    - openmpi_devel
    desc: mpi_test
    license: BSD
    shortdesc: mpi_test
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/mpi/trunk/mpi_test
    website: http://ros.org/wiki/mpi_test
  mprdf:
    author: !!python/unicode 'John Hsu'
    deps:
    - urdf
    - colladadom
    - collada_urdf
    desc: "Motion Planning Robot Descripotion Format (MPRDF)\n     Attempt to consolidate\
      \ all things motion planning specific."
    license: BSD
    shortdesc: "Motion Planning Robot Descripotion Format (MPRDF)\n     Attempt to\
      \ consolidate all things moti..."
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/mprdf
    website: http://ros.org/wiki/mprdf
  mtrace_tools:
    author: !!python/unicode 'Derek'
    deps:
    - rospy
    - roscpp
    - ethercat_hardware
    - pr2_controller_interface
    - pr2_mechanism_model
    - pr2_hardware_interface
    - pluginlib
    - std_msgs
    - control_toolbox
    - diagnostic_msgs
    desc: mtrace_tools
    license: BSD
    shortdesc: mtrace_tools
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/mtrace_tools
    website: http://ros.org/wiki/mtrace_tools
  multi_table_actions:
    author: !!python/unicode 'Adam Harmat'
    deps:
    - rospy
    - smach
    - smach_ros
    - multi_table_msgs
    - multi_table_detector
    - geometry_msgs
    - move_base_msgs
    - move_arm_msgs
    - motion_planning_msgs
    - pr2_controllers_msgs
    - tabletop_object_detector
    - tabletop_collision_map_processing
    - object_manipulation_msgs
    - pr2_pick_and_place_demos
    - trajectory_msgs
    desc: multi_table_states
    license: BSD
    shortdesc: multi_table_states
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/multi_table_app/multi_table_actions
    website: http://ros.org/wiki/multi_table_states
  multi_table_demo:
    author: !!python/unicode 'Adam Harmat'
    deps:
    - rospy
    - smach
    - smach_ros
    - multi_table_msgs
    - multi_table_detector
    - pr2_controllers_msgs
    - move_arm_msgs
    - sensor_msgs
    - mapping_msgs
    - geometry_msgs
    - actionlib
    - actionlib_msgs
    desc: multi_table_demo
    license: BSD
    shortdesc: multi_table_demo
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/multi_table_app/multi_table_demo
    website: http://ros.org/wiki/multi_table_demo
  multi_table_detector:
    author: !!python/unicode 'Adam Harmat'
    deps:
    - roscpp
    - tf
    - visualization_msgs
    - sensor_msgs
    - geometry_msgs
    - nav_msgs
    - pcl
    - geometric_shapes_msgs
    desc: Performs segmentation of point clouds to detect tables, objects on the tables,
      and good manipulation poses around the tables
    license: BSD
    shortdesc: multi_table_detector
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/multi_table_detector
    website: http://ros.org/wiki/multi_table_detector
  multi_table_msgs:
    author: !!python/unicode 'Adam Harmat'
    deps:
    - rospy
    - smach
    - smach_ros
    - actionlib_msgs
    - geometry_msgs
    - object_manipulation_msgs
    desc: multi_table_msgs
    license: BSD
    shortdesc: multi_table_msgs
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/multi_table_app/multi_table_msgs
    website: http://ros.org/wiki/multi_table_msgs
  navigation_application:
    author: !!python/unicode 'Scott Hassan'
    deps:
    - roslib
    - rospy
    - webui
    - pr2_navigation_global
    - pr2_navigation_perception
    - pr2_navigation_teleop
    - pr2_machine
    - tf
    - laser_geometry
    - sensor_msgs
    - message_filters
    - nav_msgs
    desc: Navigation Application
    license: BSD
    shortdesc: navigation
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_web_apps/trunk/navigation_application
    website: http://pr.willowgarage.com/wiki/navigation_application
  nepumuk:
    author: !!python/unicode 'Roland Philippsen'
    deps:
    - roscpp
    - std_msgs
    - libsunflower
    desc: "Nepumuk is a simple kinematic 2D simulator for robots with some\n    simple\
      \ sensors. It was originally developed to test the\n    libsunflower code and\
      \ has been later used as integration sandbox\n    in some other mobile robotics\
      \ projects."
    license: GPL
    shortdesc: The ROSified Nepumuk simulator from libsunflower.sourceforge.net
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/motion_planning_research/nepumuk
    website: http://libsunflower.sourceforge.net/
  netft_ethercat_hardware:
    author: !!python/unicode 'Derek King'
    deps:
    - roscpp
    - realtime_tools
    - ethercat_hardware
    - netft_rdt_driver
    - geometry_msgs
    desc: "pr2_etherCAT/ethercat_hardware driver plugin for NetFT sensor\n    NetFT\
      \ does not use EtherCAT, however, having plugin allows \n    realtime controllers\
      \ get data from NetFT box."
    license: BSD
    shortdesc: netft_ethercat_hardware
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/netft/trunk/netft_ethercat_hardware
    website: http://ros.org/wiki/netft_ethercat_hardware
  netft_example_controllers:
    author: !!python/unicode 'DerekKing'
    deps:
    - roscpp
    - ethercat_hardware
    - pr2_controller_interface
    desc: "netft_example_controllers\n\n     Provides simple example controller that\
      \ shows how to \n     access force-torque data provided by netft_ethercat_hardware\
      \ plugin.\n\n     This also provides a convientent way to make sure that\n \
      \    netft_ethercat_hardware plug-in is actually loaded and working."
    license: BSD
    shortdesc: netft_example_controllers
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/netft/trunk/netft_example_controllers
    website: http://ros.org/wiki/netft_example_controllers
  netft_rdt_driver:
    author: !!python/unicode 'Derek King'
    deps:
    - roscpp
    - diagnostic_updater
    - diagnostic_msgs
    - geometry_msgs
    desc: Driver for NetFT sensor that uses Raw Data Transfer (RDT) protocol.
    license: BSD
    shortdesc: netft_rdt_driver
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/netft/trunk/netft_rdt_driver
    website: http://ros.org/wiki/netft_rdt_driver
  nvidia_gpu_monitor:
    author: !!python/unicode 'Kevin Watts'
    deps:
    - rospy
    - diagnostic_msgs
    desc: Monitors usage and temperature of nVidia GPU's using nvidia-smi.
    license: BSD
    shortdesc: Monitors temperature and usage of nVidia GPU
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/drivers_experimental/nvidia_gpu_monitor
    website: http://ros.org/wiki/nvidia_gpu_monitor
  obj_pose_commander:
    author: !!python/unicode 'Jonathan Scholz'
    deps:
    - pr2_controllers_msgs
    - geometry_msgs
    - cart_grasp_solver
    desc: rotate_cart
    license: BSD
    shortdesc: rotate_cart
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/bimanual_manipulation/obj_pose_commander
    website: http://ros.org/wiki/rotate_cart
  object_manipulation_msgs:
    author: !!python/unicode 'Matei Ciocarlie'
    deps:
    - actionlib_msgs
    - std_msgs
    - geometry_msgs
    - sensor_msgs
    - trajectory_msgs
    - sensor_msgs
    - household_objects_database_msgs
    - motion_planning_msgs
    desc: "Generic messages for pickup and place functionality. The messages\n   \
      \ contained here define a complete interface for pickup and place\n    tasks.\
      \ \n\n    Note that for some of the general services and actions defined\n \
      \   here, robot-specific implementations might exist elsewhere and be\n    used\
      \ at run time."
    license: BSD
    shortdesc: object_manipulation_msgs
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/object_manipulation/branches/0.4-branch/object_manipulation_msgs
    website: http://ros.org/wiki/object_manipulation_msgs
  object_manipulator:
    author: !!python/unicode 'Matei Ciocarlie'
    deps:
    - roscpp
    - rospy
    - tf
    - actionlib
    - object_manipulation_msgs
    - move_arm_msgs
    - sensor_msgs
    - kinematics_msgs
    - pr2_controllers_msgs
    - motion_planning_msgs
    - geometry_msgs
    - planning_environment_msgs
    - visualization_msgs
    - mapping_msgs
    - interpolated_ik_motion_planner
    desc: "Core functionality for pickup and place tasks. Services Pickup\n     and\
      \ Place action goals."
    license: BSD
    shortdesc: object_manipulator
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/object_manipulation/branches/0.4-branch/object_manipulator
    website: http://ros.org/wiki/object_manipulator
  object_mapping:
    author: !!python/unicode 'Kai Wurm'
    deps:
    - pcl_ros
    - tf
    - pcl_visualization
    - terminal_tools
    - visualization_msgs
    - octomap2
    - move_base_msgs
    - actionlib
    - actionlib_msgs
    - nav_msgs
    desc: object_mapping
    license: ???
    shortdesc: object_mapping
    source: details.php?name=pcl
    website: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/point_cloud_perception_experimental/object_mapping
  object_names:
    author: !!python/unicode 'Alex Sorokin'
    deps:
    - rospy
    - rostest
    - std_msgs
    desc: "Object names service maps between object names and object IDs. \n     Float32\
      \ object ids are used to annotated point clouds with object labels."
    license: BSD
    shortdesc: object_names
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/segmentation_3d/object_names
    website: http://pr.willowgarage.com/wiki/object_names
  object_recognition_gui:
    author: !!python/unicode 'David Gossow'
    deps:
    - roscpp
    - actionlib
    - actionlib_msgs
    - rviz
    - ogre_tools
    - rviz_interaction_tools
    - sensor_msgs
    - stereo_msgs
    - geometry_msgs
    - geometric_shapes_msgs
    desc: "A package for user-aided object detection and pose estimation\n     on\
      \ pre-segmented point clouds."
    license: BSD
    shortdesc: object_detection_gui
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/tabletop_object_perception/branches/0.4-branch/object_recognition_gui
    website: http://ros.org/wiki/object_detection_gui
  obstacle_sim:
    author: !!python/unicode 'Bhaskara Marthi'
    deps:
    - stage_srvs
    - roslisp
    desc: An obstacle simulator for stage.
    license: BSD
    shortdesc: obstacle_sim
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/obstacle_sim
    website: http://ros.org/wiki/obstacle_sim
  ocean_battery_driver:
    author: !!python/unicode 'Tully Foote, Curt Meyers'
    deps:
    - roscpp
    - rospy
    - pr2_msgs
    - diagnostic_updater
    - diagnostic_msgs
    desc: This is an interface to the Ocean Server Technology Intelligent Battery
      and Power System.
    license: BSD
    shortdesc: Ocean Server Battery Drivers
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_power_drivers/trunk/ocean_battery_driver
    website: http://www.ros.org/wiki/ocean_battery_driver
  octomap2:
    author: !!python/unicode 'Kai M. Wurm, Armin Hornung'
    deps:
    - roscpp
    - geometry_msgs
    desc: A probabilistic, flexible, and compact 3D mapping library for robotic systems.
    license: BSD
    shortdesc: A probabilistic, flexible, and compact 3D mapping library for robotic
      systems.
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/point_cloud_perception_experimental/octomap2
    website: http://ros.org/wiki/octomap2
  octomap_collision_check:
    author: !!python/unicode 'Armin Hornung'
    deps:
    - octomap
    - octomap_ros
    - roscpp
    - pcl
    - visualization_msgs
    - mapping_msgs
    - planning_environment
    - planning_models
    desc: Experimental package for octomap collision checks. Not used by anything
      at the moment.
    license: BSD
    shortdesc: octomap_collision_check
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/sandbox/3d_navigation/octomap_collision_check
    website: http://ros.org/wiki/octomap_collision_check
  octovis2:
    author: !!python/unicode 'Kai Wurm'
    deps:
    - octomap2
    desc: octovis2
    license: BSD
    shortdesc: octovis2
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/point_cloud_perception_experimental/octovis2
    website: http://ros.org/wiki/octovis2
  ompl:
    author: !!python/unicode 'Ioan Sucan/isucan@rice.edu, Mark Moll/mmoll@rice.edu,
      Lydia Kavraki/kavraki@rice.edu'
    deps:
    - rosconsole
    desc: A library of sampling-based motion planning algorithms
    license: BSD
    shortdesc: Open Motion Planning Library (OMPL)
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/motion_planners/trunk/ompl
    website: http://ros.org/wiki/ompl
  ompl_ros_interface:
    author: !!python/unicode 'Sachin Chitta'
    deps:
    - ompl
    - sensor_msgs
    - planning_models
    - planning_environment
    - motion_planning_msgs
    - kinematics_base
    - pluginlib
    desc: ompl_ros_interface
    license: BSD
    shortdesc: ompl_ros_interface
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/motion_planners/trunk/ompl_ros_interface
    website: http://ros.org/wiki/ompl_ros_interface
  opencv_candidate:
    author: !!python/unicode 'Ethan Rublee'
    deps:
    - eigen
    - opencv2
    - sensor_msgs
    desc: opencv_candidate
    license: BSD
    shortdesc: opencv_candidate
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/stacks/vision_bleeding/opencv_candidate
    website: http://ros.org/wiki/opencv_candidate
  opencv_ostream:
    author: !!python/unicode 'Ethan Rublee'
    deps:
    - opencv2
    desc: opencv_ostream
    license: BSD
    shortdesc: opencv_ostream
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/opencv_ostream
    website: http://ros.org/wiki/opencv_ostream
  openmpi_devel:
    author: !!python/unicode 'The Open MPI project'
    deps:
    - knem
    desc: "The Open MPI Project is an open source MPI-2 implementation that is developed\n\
      \    and maintained by a consortium of academic, research, and industry partners.\n\
      \    Open MPI is therefore able to combine the expertise, technologies, and\n\
      \    resources from all across the High Performance Computing community in order\
      \ to\n    build the best MPI library available. Open MPI offers advantages for\
      \ system and\n    software vendors, application developers and computer science\
      \ researchers."
    license: BSD (new)
    shortdesc: openmpi_devel
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/mpi/trunk/openmpi_devel
    website: http://www.open-mpi.org/
  outlet_test:
    author: !!python/unicode 'Victor Eruhimov'
    deps:
    - opencv2
    - outlet_pose_estimation
    desc: outlet_test
    license: BSD
    shortdesc: outlet_test
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/outlet_test
    website: http://ros.org/wiki/outlet_test
  party_follow_me:
    author: !!python/unicode ''
    deps:
    - rospy
    - geometry_msgs
    - pr2_controllers_msgs
    - sensor_msgs
    - tf
    - trigger_commands
    - trigger_msgs
    desc: party_follow_me
    license: BSD
    shortdesc: party_follow_me
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/dance_demo/party_follow_me
    website: http://ros.org/wiki/party_follow_me
  pcl_cv_bridge:
    author: !!python/unicode 'Ethan Rublee'
    deps:
    - roscpp
    - pcl
    - pcl_ros
    - opencv2
    desc: pcl_cv_bridge
    license: BSD
    shortdesc: pcl_cv_bridge
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/sandbox/pcl_cv_bridge
    website: http://ros.org/wiki/pcl_cv_bridge
  pcl_detectors:
    author: !!python/unicode 'Radu Bogdan Rusu'
    deps:
    - pcl
    - pcl_ros
    - actionlib_msgs
    - geometry_msgs
    - sensor_msgs
    - actionlib
    - pcl_tf
    - message_filters
    - eigen3
    desc: "pcl_detectors contains several 3D detectors that are based on PCL, but\
      \ in\n    addition require extra packages as dependencies."
    license: BSD
    shortdesc: "pcl_detectors contains several 3D detectors that are based on PCL,\
      \ but in\n    addition require ..."
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/point_cloud_perception_experimental/pcl_detectors
    website: http://ros.org/wiki/pcl_detectors
  pcl_detectors_clients:
    author: !!python/unicode ''
    deps:
    - pcl_detectors
    - actionlib
    - visualization_msgs
    - geometry_msgs
    - std_msgs
    - kdl
    desc: pcl_detectors_clients
    license: BSD
    shortdesc: pcl_detectors_clients
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/point_cloud_perception_experimental/pcl_detectors_clients
    website: http://ros.org/wiki/pcl_detectors_clients
  pcl_opencv_bridge:
    author: !!python/unicode 'Radu Bogdan Rusu, Suat Gedikli'
    deps:
    - pcl
    - opencv2
    - terminal_tools
    - cv_bridge
    - pcl_point_cloud2_image_color
    desc: "PCL-OpenCV is a bridge from PCL to OpenCV and viceversa, that contains\
      \ the\n    best of both worlds: 2D-3D processing. This package should not be\
      \ ROS\n    dependendent other than using the primitive ROS message types Image\
      \ and\n    PointCloud2."
    license: BSD
    shortdesc: A bridge from PCL to OpenCV and viceversa
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/point_cloud_perception_experimental/pcl_opencv_bridge
    website: http://ros.org/wiki/pcl_opencv_bridge
  pcl_point_cloud2_image_color:
    author: !!python/unicode 'Radu Bogdan Rusu'
    deps:
    - roscpp
    - sensor_msgs
    - message_filters
    - pcl
    - pcl_ros
    - opencv2
    - cv_bridge
    desc: Color PointCloud2 point clouds using RGB values from a camera image.
    license: BSD
    shortdesc: pcl_point_cloud2_image_color
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/point_cloud_perception_experimental/pcl_point_cloud2_image_color
    website: http://pr.willowgarage.com
  pcl_registration_experimental:
    author: !!python/unicode 'Dirk Holz'
    deps:
    - ann
    - pcl
    - pcl_ros
    - pcl_visualization
    - terminal_tools
    - stereo_msgs
    desc: Register point clouds (new experimental stuff).
    license: BSD
    shortdesc: pcl_registration_experimental
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/point_cloud_perception_experimental/pcl_registration_experimental
    website: http://pr.willowgarage.com
  pcl_ros_test:
    author: !!python/unicode 'Patrick Mihelich'
    deps:
    - roscpp
    - pcl
    - pcl_ros
    desc: pcl_ros_test
    license: BSD
    shortdesc: pcl_ros_test
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/pcl_ros_test
    website: http://ros.org/wiki/pcl_ros_test
  pedestrian_detector_HOG:
    author: !!python/unicode 'Caroline Pantofaru'
    deps:
    - roscpp
    - std_msgs
    - geometry_msgs
    - opencv2
    - cv_bridge
    - stereo_msgs
    - sensor_msgs
    - tf
    - visualization_msgs
    - image_transport
    - people_msgs
    desc: pedestrian_detector_HOG
    license: BSD
    shortdesc: pedestrian_detector_HOG
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/people_experimental/pedestrian_detector_HOG
    website: http://ros.org/wiki/pedestrian_detector_HOG
  people_dataset_interface:
    author: !!python/unicode 'Caroline Pantofaru'
    deps:
    - rosbag
    - rxbag
    - rxbag_plugins
    - people_dataset_msgs
    desc: people_dataset_interface
    license: BSD
    shortdesc: people_dataset_interface
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/people_dataset/people_dataset_interface
    website: http://ros.org/wiki/people_dataset_interface
  people_dataset_msgs:
    author: !!python/unicode 'Caroline Pantofaru'
    deps:
    - std_msgs
    - geometry_msgs
    desc: people_dataset_msgs
    license: BSD
    shortdesc: people_dataset_msgs
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/people_dataset/people_dataset_msgs
    website: http://ros.org/wiki/people_dataset_msgs
  people_msgs:
    author: !!python/unicode 'Caroline Pantofaru'
    deps:
    - geometry_msgs
    desc: Messages used by nodes in the people stack.
    license: BSD
    shortdesc: people_msgs
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/people/trunk/people_msgs
    website: http://ros.org/wiki/people_msgs
  people_tracking_filter:
    author: !!python/unicode 'Caroline Pantofaru'
    deps:
    - roscpp
    - std_msgs
    - geometry_msgs
    - tf
    - bfl
    - bullet
    - message_filters
    - people_msgs
    - sensor_msgs
    desc: tracker
    license: BSD
    shortdesc: people_tracking_filter
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/people_experimental/people_tracking_filter
    website: http://ros.org/wiki/filter
  periodic_window_snapshotter:
    author: !!python/unicode ''
    deps:
    - laser_assembler
    - roscpp
    desc: periodic_window_snapshotter
    license: BSD
    shortdesc: periodic_window_snapshotter
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/periodic_window_snapshotter
    website: http://ros.org/wiki/periodic_window_snapshotter
  person_data:
    author: !!python/unicode 'Ethan Dreyfuss (dreyfuss@willowgarage.com), Caroline
      Pantofaru (pantofaru@willowgarage.com), Ian Goodfellow/ goodfellow@willowgarage.com'
    deps:
    - pr2_machine
    - roscpp
    - rospy
    - std_msgs
    - joy
    - opencv2
    - cv_bridge
    - sensor_msgs
    - geometry_msgs
    - tf
    - nav_msgs
    - pr2_msgs
    - rosrecord
    - image_transport
    - message_filters
    - pr2_teleop
    - pr2_tuckarm
    - amcl
    - map_server
    - 2dnav_pr2
    - tinyxml
    - stereo_image_proc
    - image_geometry
    - people_msgs
    desc: Tools for collecting and managing data for the indoor person detection and
      tracking dataset.
    license: BSD
    shortdesc: person_data
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/person_data
    website: http://pr.willowgarage.com/wiki/person_data
  petsc_test:
    author: !!python/unicode 'John Hsu'
    deps: []
    desc: petsc_test
    license: BSD
    shortdesc: petsc_test
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/petsc_test
    website: http://ros.org/wiki/petsc_test
  photo_booth:
    author: !!python/unicode 'Scott Hassan'
    deps:
    - roslib
    - rospy
    - webui
    - rosweb
    - std_msgs
    - sensor_msgs
    - joy
    desc: A simple application for taking photos with a PR2.
    license: BSD
    shortdesc: photo_booth
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/web_apps_experimental/photo_booth
    website: http://ros.org/wiki/teleop_ps3_application
  photo_processing:
    author: !!python/unicode ''
    deps:
    - rospy
    - sensor_msgs
    - opencv2
    - cv_bridge
    - image_geometry
    - message_filters
    - stereo_msgs
    - tf
    desc: photo_processing
    license: BSD
    shortdesc: photo_processing
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/stacks/photography/photo_processing
    website: http://ros.org/wiki/photo_processing
  photographer:
    author: !!python/unicode 'Bill Smart'
    deps:
    - rospy
    - smach
    - smach_ros
    - actionlib
    - actionlib_msgs
    - sensor_msgs
    - opencv2
    - cv_bridge
    - polled_camera
    - std_srvs
    - move_base_msgs
    - visualization_msgs
    - nav_msgs
    - tf
    - pr2_controllers_msgs
    - face_detector
    desc: The high-level controller for the robot photographer.
    license: BSD
    shortdesc: photographer
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/stacks/photography/photographer
    website: http://ros.org/wiki/photographer
  pictorial_2D_barcode:
    author: !!python/unicode 'Gary Bradski/bradski@gmail.com'
    deps:
    - opencv2
    - cv_bridge
    - sensor_msgs
    - dynamic_reconfigure
    - image_transport
    desc: 'pictorial_2D_barcode

      Given a rectified image from a calibrated video camera (there''s an app for
      that), using a calibration pattern next to a sufficiently textured image, the
      user can select the image and this application will find sufficiently robust
      keypoints (to view angle and discriminative) to allow a run time app to find
      that image, and use the image as both a run time homography pattern as well
      as reproducing the image with an embedded numerical code.'
    license: BSD
    shortdesc: pictorial_2D_barcode
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/pictorial_2D_barcode
    website: http://ros.org/wiki/pictorial_2D_barcode
  planning_environment:
    author: !!python/unicode 'Ioan Sucan'
    deps:
    - roscpp
    - rosconsole
    - tf
    - std_srvs
    - message_filters
    - angles
    - sensor_msgs
    - motion_planning_msgs
    - mapping_msgs
    - visualization_msgs
    - geometric_shapes
    - geometric_shapes_msgs
    - planning_models
    - collision_space
    - planning_environment_msgs
    desc: "Define the robot model and collision environment based on ROS\n    parameters."
    license: BSD
    shortdesc: planning_environment
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/motion_planning_common/trunk/planning_environment
    website: http://ros.org/wiki/planning_environment
  planning_environment_msgs:
    author: !!python/unicode 'Sachin Chitta'
    deps:
    - trajectory_msgs
    - mapping_msgs
    - motion_planning_msgs
    - actionlib
    - actionlib_msgs
    - geometry_msgs
    desc: The planning_environment_msgs package contains a set of messages and services
      that can be used to query for information about the environment, determine the
      current state of the robot, determine whether the robot is in collision with
      the world and whether it is safe to execute a planned trajectory.
    license: BSD
    shortdesc: planning_environment_msgs
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/motion_planning_common/trunk/planning_environment_msgs
    website: http://ros.org/wiki/planning_environment_msgs
  planning_models:
    author: !!python/unicode 'Ioan Sucan/isucan@willowgarage.com'
    deps:
    - urdf
    - rosconsole
    - geometric_shapes
    - bullet
    - resource_retriever
    - angles
    - assimp
    desc: A set of robot models that can be instantiated from a parsed URDF file.
    license: BSD
    shortdesc: A set of robot models
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/motion_planning_common/trunk/planning_models
    website: http://www.ros.org/wiki/urdf
  point_cloud_bag_file_reader:
    author: !!python/unicode ''
    deps:
    - pcl
    - pcl_ros
    desc: point_cloud_bag_file_reader
    license: BSD
    shortdesc: point_cloud_bag_file_reader
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/point_cloud_bag_file_reader
    website: http://ros.org/wiki/point_cloud_bag_file_reader
  point_cloud_python:
    author: !!python/unicode 'Bhaskara Marthi'
    deps:
    - sensor_msgs
    desc: Python code for unpacking PointCloud2 messages
    license: BSD
    shortdesc: point_cloud_python
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/point_cloud_perception_experimental/point_cloud_python
    website: http://ros.org/wiki/point_cloud_python
  point_head_at_planes:
    author: !!python/unicode ''
    deps:
    - roslisp_runtime
    - pr2_controllers_msgs
    - pcl_detectors
    - actionlib_lisp
    - visualization_msgs
    - periodic_window_snapshotter
    - laser_assembler
    - cram_language
    desc: point_head_at_planes
    license: BSD
    shortdesc: point_head_at_planes
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/point_head_at_planes
    website: http://ros.org/wiki/point_head_at_planes
  policy_improvement:
    author: !!python/unicode 'Ludovic Righetti'
    deps:
    - roscpp
    - eigen
    - rosbag
    - policy_library
    - policy_improvement_utilities
    - dmp_motion_generation
    desc: policy_improvement
    license: BSD
    shortdesc: policy_improvement
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/policy_learning/policy_improvement
    website: http://ros.org/wiki/policy_improvement
  policy_improvement_loop:
    author: !!python/unicode 'Mrinal Kalakrishnan'
    deps:
    - policy_improvement_utilities
    - policy_improvement
    - policy_library
    - task_manager
    - rosbag
    desc: policy_improvement_loop
    license: BSD
    shortdesc: policy_improvement_loop
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/policy_learning/policy_improvement_loop
    website: http://ros.org/wiki/policy_improvement_loop
  policy_improvement_test:
    author: !!python/unicode 'Peter Pastor'
    deps:
    - roscpp
    - eigen
    - rosbag
    - policy_improvement
    - policy_library
    desc: policy_improvement_test
    license: BSD
    shortdesc: policy_improvement_test
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/policy_learning/policy_improvement_test
    website: http://ros.org/wiki/policy_improvement_test
  policy_improvement_utilities:
    author: !!python/unicode 'Mrinal Kalakrishnan'
    deps:
    - rosconsole
    - roscpp
    - kdl
    - kdl_parser
    - sensor_msgs
    - eigen
    - rosbag
    - bspline
    desc: policy_improvement_utilities
    license: BSD
    shortdesc: policy_improvement_utilities
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/policy_learning/policy_improvement_utilities
    website: http://ros.org/wiki/policy_improvement_utilities
  policy_library:
    author: !!python/unicode 'Peter Pastor'
    deps:
    - rosbag
    - roscpp
    - eigen
    - dmp_motion_generation
    - policy_improvement_utilities
    desc: policy_library
    license: BSD
    shortdesc: policy_library
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/policy_learning/policy_library
    website: http://ros.org/wiki/policy_library
  pose_filter:
    author: !!python/unicode 'Wim Meeussen'
    deps:
    - bfl
    - roscpp
    - actionlib
    - actionlib_msgs
    - geometry_msgs
    - pluginlib
    - nodelet
    - tf
    - tf_conversions
    - kdl
    desc: pose_filter
    license: BSD
    shortdesc: pose_filter
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/pose_filter
    website: http://ros.org/wiki/pose_filter
  pose_follower_3d:
    author: !!python/unicode 'Eitan Marder-Eppstein, Armin Hornung'
    deps:
    - nav_core
    - base_local_planner
    - costmap_2d
    - roscpp
    - tf
    - nav_msgs
    - pluginlib
    - octomap_server
    - planning_models
    - planning_environment
    - planning_environment_msgs
    - mapping_msgs
    desc: This package provides an extended pose_follwer to perform 3D collision checks
      against the robot's full kinematic configuration. It should serve as a drop-in
      replacement as local planner in the navigation stack, to be used with global
      plans from sbpl_lattice_planner_3d. The 3D collision map is usually sent out
      from octomap_server.
    license: BSD
    shortdesc: pose_follower_3d - an extended pose_follower local planner which performs
      collision checks in 3D
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/sandbox/3d_navigation/pose_follower_3d
    website: http://ros.org/wiki/pose_follower_3d
  pose_projector:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - tf
    - geometry_msgs
    desc: pose_projector
    license: BSD
    shortdesc: pose_projector
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/dance_demo/pose_projector
    website: http://ros.org/wiki/pose_projector
  posedetection_msgs:
    author: !!python/unicode 'Rosen Diankov'
    deps:
    - std_msgs
    - sensor_msgs
    - geometry_msgs
    - opencv2
    - cv_bridge
    desc: posedetection_msgs provides messages and services to facilitate passing
      pose detection results and features.
    license: BSD
    shortdesc: Messages for passing pose/object detection results
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/visual_feature_detectors/posedetection_msgs
    website: http://ros.org/wiki/posedetection_msgs
  power_monitor:
    author: !!python/unicode 'Tim Field, Curt Meyers'
    deps:
    - roscpp
    - std_msgs
    - pr2_msgs
    - dynamic_reconfigure
    desc: "The power_monitor collects messages from the ocean_battery_server and\n\
      \     the pr2_power_board, and publishes a summary of their data in a\n    \
      \ friendlier message format."
    license: BSD
    shortdesc: Monitor PR2 batteries and power board
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_power_drivers/trunk/power_monitor
    website: http://www.ros.org/wiki/power_monitor
  pr2_2dnav:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - pr2_navigation_global
    - pr2_navigation_perception
    - pr2_navigation_teleop
    - pr2_machine
    desc: This application allows the PR2 robot to navigate autonomously with a pre-specified
      static map.
    license: BSD
    shortdesc: Global navigation for the PR2 robot.
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_navigation_apps/trunk/pr2_2dnav
    website: http://ros.org/wiki/pr2_2dnav
  pr2_2dnav_explore:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - explore_wg
    - pr2_navigation_slam
    - pr2_navigation_perception
    - pr2_navigation_teleop
    - pr2_machine
    desc: pr2_2dnav_explore
    license: BSD
    shortdesc: pr2_2dnav_explore
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/pr2_2dnav_explore
    website: http://ros.org/wiki/pr2_2dnav_explore
  pr2_2dnav_gazebo:
    author: !!python/unicode 'John Hsu'
    deps:
    - std_msgs
    - move_base
    - map_server
    - amcl
    - fake_localization
    - pr2_gazebo
    - pr2_gazebo_plugins
    - gazebo_plugins
    - gazebo_worlds
    - gazebo_tools
    - rviz
    - pr2_navigation_perception
    - pr2_navigation_teleop
    - pr2_navigation_global
    - pr2_machine
    - pr2_tuckarm
    desc: A clone of  2-D navigation stack \b rosstage using a 3D simulation environment.
    license: BSD
    shortdesc: A clone of  2-D navigation stack \b rosstage using a 3D simulation
      environment.
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/wg_robots_gazebo/trunk/pr2_2dnav_gazebo
    website: http://pr.willowgarage.com/wiki/Simulator
  pr2_2dnav_local:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - pr2_navigation_perception
    - pr2_navigation_local
    - pr2_navigation_teleop
    - pr2_machine
    desc: This application allows the PR2 to navigate autonomously in an odometric
      frame.
    license: BSD
    shortdesc: Local navigation for the PR2 robot.
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_navigation_apps/trunk/pr2_2dnav_local
    website: http://ros.org/wiki/pr2_2dnav_local
  pr2_2dnav_slam:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - pr2_navigation_slam
    - pr2_navigation_perception
    - pr2_navigation_teleop
    - pr2_machine
    desc: This application allows the PR2 to navigate autonomously while also building
      a map of its environment as it drives along.
    license: BSD
    shortdesc: SLAM-based navigation for the PR2 robot.
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_navigation_apps/trunk/pr2_2dnav_slam
    website: http://ros.org/wiki/pr2_2dnav_slam
  pr2_3dnav:
    author: !!python/unicode 'Sachin Chitta'
    deps:
    - pr2_arm_navigation_kinematics
    - pr2_arm_navigation_perception
    - pr2_arm_navigation_filtering
    - pr2_arm_navigation_actions
    - pr2_arm_navigation_planning
    desc: This application for the PR2 launches the navigation stack for the arm and
      allows you to move the arms using collision free motion planning
    license: BSD
    shortdesc: This application for the PR2 launches the navigation stack for the
      arm and allows you to move t...
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_arm_navigation/trunk/pr2_3dnav
    website: http://ros.org/wiki/pr2_3dnav
  pr2_addons_application:
    author: !!python/unicode 'Brian Gerkey, Eitan Marder-Eppstein'
    deps:
    - roslib
    - rospy
    - webui
    - rosweb
    - std_msgs
    - pr2_navigation_global
    - map_server
    - willow_maps
    desc: A collection of nodes that multiple apps depend on at runtime.  Eventually,
      many of these nodes will migrate into pr2_bringup/pr2.launch
    license: BSD
    shortdesc: pr2_addons
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_web_apps/trunk/pr2_addons_application
    website: http://pr.willowgarage.com/wiki/pr2_addons
  pr2_arm_gazebo:
    author: !!python/unicode 'John Hsu'
    deps:
    - pr2_gazebo_plugins
    - gazebo_plugins
    - gazebo_tools
    - pr2_ogre
    - gazebo_worlds
    - pr2_controller_configuration_gazebo
    - robot_mechanism_controllers
    - pr2_mechanism_controllers
    - robot_state_publisher
    - rospy
    - nav_msgs
    - std_msgs
    - actionlib
    - pr2_controllers_msgs
    desc: Start a PR2 arm in 3D simulation environment.
    license: BSD
    shortdesc: Start a PR2 arm in 3D simulation environment.
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/wg_robots_gazebo/trunk/pr2_arm_gazebo
    website: http://pr.willowgarage.com/wiki/pr2_simulator
  pr2_arm_ik_tests:
    author: !!python/unicode 'Sachin Chitta'
    deps:
    - pr2_arm_kinematics
    - gazebo
    - pr2_gazebo
    - robot_state_publisher
    - pr2_controller_manager
    - pr2_arm_navigation_kinematics
    - pr2_arm_navigation_perception
    - pluginlib
    - kinematics_base
    desc: pr2_arm_ik_tests
    license: BSD
    shortdesc: pr2_arm_ik_tests
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_arm_navigation_tests/trunk/pr2_arm_ik_tests
    website: http://ros.org/wiki/pr2_arm_ik_tests
  pr2_arm_kinematics:
    author: !!python/unicode 'Sachin Chitta'
    deps:
    - roscpp
    - kdl
    - eigen
    - angles
    - tf_conversions
    - urdf
    - geometry_msgs
    - kdl_parser
    - kinematics_msgs
    - pluginlib
    - kinematics_base
    desc: This package provides a kinematics implementation for the PR2 robot. It
      can be used to compute forward and inverse kinematics.
    license: BSD
    shortdesc: pr2_arm_kinematics
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_kinematics/trunk/pr2_arm_kinematics
    website: http://ros.org/wiki/pr2_arm_kinematics
  pr2_arm_kinematics_constraint_aware:
    author: !!python/unicode 'Sachin Chitta'
    deps:
    - pr2_arm_kinematics
    - collision_space
    - planning_models
    - planning_environment
    - mapping_msgs
    desc: pr2_arm_kinematics_constraint_aware
    license: BSD
    shortdesc: pr2_arm_kinematics_constraint_aware
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_kinematics/trunk/pr2_arm_kinematics_constraint_aware
    website: http://ros.org/wiki/pr2_arm_kinematics_constraint_aware
  pr2_arm_move_ik:
    author: !!python/unicode 'Melonee Wise, Wim Meeussen'
    deps:
    - actionlib
    - roscpp
    - actionlib_msgs
    - geometry_msgs
    - pr2_controllers_msgs
    - pr2_common_action_msgs
    - tf
    - pr2_arm_kinematics
    - urdf
    desc: Move the pr2 arm using inverse kinematics
    license: BSD
    shortdesc: pr2_arm_move_ik
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_common_actions/trunk/pr2_arm_move_ik
    website: http://ros.org/wiki/pr2_arm_move_ik
  pr2_arm_navigation_actions:
    author: !!python/unicode 'Sachin Chitta'
    deps:
    - collision_free_arm_trajectory_controller
    - pr2_arm_navigation_config
    - planning_environment
    - trajectory_filter_server
    - move_arm
    - pr2_controller_manager
    - joint_trajectory_action
    - pr2_msgs
    - collision_environment_msgs
    - move_arm_head_monitor
    - pr2_machine
    - dynamic_reconfigure
    desc: pr2_arm_navigation_actions
    license: BSD
    shortdesc: pr2_arm_navigation_actions
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_arm_navigation/trunk/pr2_arm_navigation_actions
    website: http://ros.org/wiki/pr2_arm_navigation_actions
  pr2_arm_navigation_config:
    author: !!python/unicode 'Sachin Chitta'
    deps: []
    desc: pr2_arm_navigation_config
    license: BSD
    shortdesc: pr2_arm_navigation_config
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_arm_navigation/trunk/pr2_arm_navigation_config
    website: http://ros.org/wiki/pr2_arm_navigation_config
  pr2_arm_navigation_filtering:
    author: !!python/unicode 'Sachin Chitta'
    deps:
    - pr2_machine
    - trajectory_filter_server
    - spline_smoother
    - constraint_aware_spline_smoother
    desc: This package contains a set of launch files and configuration files for
    license: BSD
    shortdesc: pr2_arm_navigation_filtering
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_arm_navigation/trunk/pr2_arm_navigation_filtering
    website: http://ros.org/wiki/pr2_arm_navigation_filtering
  pr2_arm_navigation_kinematics:
    author: !!python/unicode 'Sachin Chitta'
    deps:
    - pr2_arm_kinematics_constraint_aware
    - pr2_arm_kinematics
    - pr2_arm_navigation_config
    desc: pr2_arm_navigation_kinematics
    license: BSD
    shortdesc: pr2_arm_navigation_kinematics
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_arm_navigation/trunk/pr2_arm_navigation_kinematics
    website: http://ros.org/wiki/pr2_arm_navigation_kinematics
  pr2_arm_navigation_perception:
    author: !!python/unicode 'Sachin Chitta'
    deps:
    - pr2_machine
    - sensor_msgs
    - pr2_msgs
    - laser_filters
    - laser_assembler
    - robot_self_filter
    - collision_map
    - stereo_image_proc
    - point_cloud_converter
    - planning_environment
    - pr2_arm_navigation_config
    - pr2_mechanism_controllers
    desc: This package contains launch file for launching the perception components
      of the pr2_arm_navigation stack. The perception components allow you to build
      a collision space representation of the world.
    license: BSD
    shortdesc: pr2_arm_navigation_perception
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_arm_navigation/trunk/pr2_arm_navigation_perception
    website: http://ros.org/wiki/pr2_arm_navigation_perception
  pr2_arm_navigation_planning:
    author: !!python/unicode 'Sachin Chitta'
    deps:
    - pr2_machine
    - chomp_motion_planner
    - ompl_ros_interface
    desc: pr2_arm_navigation_planning
    license: BSD
    shortdesc: pr2_arm_navigation_planning
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_arm_navigation/trunk/pr2_arm_navigation_planning
    website: http://ros.org/wiki/pr2_arm_navigation_planning
  pr2_arm_navigation_tutorials:
    author: !!python/unicode 'Sachin Chitta'
    deps:
    - planning_environment_msgs
    - kinematics_msgs
    - actionlib_msgs
    - pr2_controllers_msgs
    - move_arm_msgs
    - planning_environment
    - motion_planning_msgs
    - pr2_arm_navigation_perception
    - mapping_rviz_plugin
    desc: This package contains code for tutorials that work with the arm navigation
      stack.
    license: BSD
    shortdesc: pr2_arm_navigation_tutorials
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_arm_navigation/trunk/pr2_arm_navigation_tutorials
    website: http://ros.org/wiki/pr2_arm_navigation_tutorials
  pr2_assisted_teleop:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - assisted_teleop
    desc: pr2_assisted_teleop
    license: BSD
    shortdesc: pr2_assisted_teleop
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/pr2_assisted_teleop
    website: http://ros.org/wiki/pr2_assisted_teleop
  pr2_balance:
    author: !!python/unicode 'Daniel Hennes'
    deps:
    - rospy
    - sensor_msgs
    - std_msgs
    - std_srvs
    - gazebo
    - opencv2
    - cv_bridge
    - image_transport
    desc: Reinforcement learning controller for 1D and 2D pole balancing. Based on
      Policy Gradient RL techniques. Includes a OpenCV visual marker tracker for pole
      balancing.
    license: BSD
    shortdesc: RL control for pole balancing
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/pr2_balance
    website: http://ros.org/wiki/pr2_balancing
  pr2_base_application:
    author: !!python/unicode 'Wim Meeussen'
    deps:
    - roslib
    - rospy
    - webui
    - rosweb
    - std_msgs
    - pr2_tuck_arms_action
    - pr2_arm_move_ik
    - joint_trajectory_generator
    - dwa_local_planner
    - wg_pr2_2dnav
    - move_slow_and_clear
    - sbpl_recovery
    desc: A collection of nodes that multiple apps depend on at runtime.  Eventually,
      many of these nodes will migrate into pr2_bringup/pr2.launch
    license: BSD
    shortdesc: A collection of nodes that multiple apps depend on at runtime.  Eventually,
      many of these nodes wil...
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_web_apps/trunk/pr2_base_application
    website: http://pr.willowgarage.com/wiki/pr2_base
  pr2_battery_charge_discharge:
    author: !!python/unicode 'Kevin Watts'
    deps:
    - rospy
    - pr2_msgs
    desc: pr2_battery_charge_discharge
    license: BSD
    shortdesc: pr2_battery_charge_discharge
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/pr2_battery_charge_discharge
    website: http://ros.org/wiki/pr2_battery_charge_discharge
  pr2_billiards_sim:
    author: !!python/unicode 'John Hsu'
    deps:
    - pr2_gazebo
    - gazebo_plugins
    - gazebo_tools
    - pr2_description
    - pr2_controllers_msgs
    desc: pr2_billiards_sim
    license: BSD
    shortdesc: pr2_billiards_sim
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/billiards/pr2_billiards_sim
    website: http://ros.org/wiki/pr2_billiards_sim
  pr2_bringup:
    author: !!python/unicode 'Wim Meeussen'
    deps:
    - pr2_description
    - pr2_machine
    - pr2_etherCAT
    - pr2_controller_manager
    - pr2_controller_configuration
    - pr2_calibration_controllers
    - robot_mechanism_controllers
    - ethercat_trigger_controllers
    - pr2_head_action
    - pr2_gripper_action
    - joint_trajectory_action
    - single_joint_position_action
    - tf2_ros
    - robot_state_publisher
    - robot_pose_ekf
    - pr2_camera_synchronizer
    - stereo_image_proc
    - hokuyo_node
    - wifi_ddwrt
    - microstrain_3dmgx2_imu
    - wge100_camera
    - prosilica_camera
    - sound_play
    - joy
    - std_srvs
    - pr2_run_stop_auto_restart
    - rosbag
    - pr2_power_board
    - ocean_battery_driver
    - power_monitor
    - pr2_computer_monitor
    - diagnostic_aggregator
    - pr2_dashboard_aggregator
    desc: Launch files and scripts needed to bring a PR2 up into a running state.
    license: BSD
    shortdesc: pr2_bringup
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_robot/trunk/pr2_bringup
    website: http://ros.org/wiki/pr2_bringup
  pr2_bringup_gazebo_demo:
    author: !!python/unicode 'Wim Meeussen'
    deps:
    - pr2_gazebo
    - pr2_bringup
    - pr2_mechanism_model
    - std_msgs
    desc: This package contains a simulator-based demo of the PR2 robot executing
      its calibration sequence. During this sequence, all the joints move in order
      to trigger the optical flags that define the reference position of the joint.
    license: BSD
    shortdesc: pr2_bringup_gazebo_demo
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/wg_robots_gazebo/trunk/pr2_bringup_gazebo_demo
    website: http://ros.org/wiki/pr2_bringup_gazebo_demo
  pr2_bringup_tests:
    author: !!python/unicode 'Kevin Watts'
    deps:
    - pr2_bringup
    - pr2_controller_manager
    - ethercat_trigger_controllers
    - pr2_mannequin_mode
    - image_view
    - camera_calibration
    desc: Complete functionality tests for PR2. Contains utilities designed to test
      and verify devices, mechanicals and sensors.
    license: BSD
    shortdesc: Tests for verifying functionality of complete PR2
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_self_test/trunk/pr2_bringup_tests
    website: http://ros.org/wiki/pr2_bringup_tests
  pr2_build_map_gazebo_demo:
    author: !!python/unicode 'John Hsu'
    deps:
    - pr2_gazebo
    - pr2_tuckarm
    - rviz
    - gmapping
    - pr2_teleop
    desc: Map building example in simulation.
    license: BSD
    shortdesc: pr2_build_map_gazebo_demo
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/wg_robots_gazebo/trunk/pr2_build_map_gazebo_demo
    website: http://ros.org/wiki/pr2_build_map_gazebo_demo
  pr2_calibration_controllers:
    author: !!python/unicode 'Stuart Glaser'
    deps:
    - std_msgs
    - std_srvs
    - pr2_controller_interface
    - roscpp
    - pr2_mechanism_model
    - realtime_tools
    - robot_mechanism_controllers
    - pr2_mechanism_controllers
    - pluginlib
    - rosconsole
    - angles
    - control_toolbox
    desc: "The pr2_calibration_controllers package contains the controllers\n    \
      \ used to bring all the joints in the PR2 to a calibrated state."
    license: BSD
    shortdesc: pr2_calibration_controllers
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_controllers/branches/pr2_controllers-1.4/pr2_calibration_controllers
    website: http://ros.org/wiki/pr2_calibration_controllers
  pr2_calibration_launch_old:
    author: !!python/unicode 'Vijay Pradeep'
    deps:
    - pr2_dense_laser_snapshotter
    - laser_cb_detector
    - laser_joint_processor
    - laser_joint_projector
    - stereo_image_proc
    - image_cb_detector
    - monocam_settler
    - image_view
    - robot_mechanism_controllers
    - pr2_calibration_executive
    - calibration_msgs
    - sensor_msgs
    - geometry_msgs
    desc: pr2_calibration_launch
    license: BSD
    shortdesc: pr2_calibration_launch
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/calibration_experimental/pr2_calibration_launch_old
    website: http://pr.willowgarage.com/wiki/pr2_calibration_launch
  pr2_calibration_rxbag_plugins:
    author: !!python/unicode ''
    deps:
    - rospy
    - roslib
    - std_msgs
    - rxbag
    - geometry_msgs
    - sensor_msgs
    - rxbag_plugins
    - pr2_calibration_estimation
    desc: ''
    license: BSD
    shortdesc: rxbag visualization plugins for calibration
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/calibration_experimental/pr2_calibration_rxbag_plugins
    website: http://ros.org/wiki/calibration_rxbag_plugins
  pr2_camera_focus:
    author: !!python/unicode 'Blaise Gassend'
    deps:
    - wge100_camera
    - prosilica_camera
    - opencv2
    - cv_bridge
    - rospy
    - sensor_msgs
    - std_msgs
    - pr2_self_test_msgs
    - stereo_image_proc
    desc: "This package is used to output a signal indicating how well a camera is\n\
      \    focused. It is used during production to focus the cameras."
    license: BSD
    shortdesc: Tools for camera focusing.
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/wg_hardware_test/trunk/pr2_camera_focus
    website: http://pr.willowgarage.com/wiki/camera_focus
  pr2_camera_hammer:
    author: !!python/unicode 'Kevin Watts'
    deps:
    - rospy
    - roslaunch_caller
    - pr2_bringup
    - life_test
    desc: pr2_camera_hammer
    license: BSD
    shortdesc: pr2_camera_hammer
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/pr2_camera_hammer
    website: http://ros.org/wiki/pr2_camera_hammer
  pr2_camera_synchronizer:
    author: !!python/unicode 'Blaise Gassend'
    deps:
    - ethercat_trigger_controllers
    - rospy
    - dynamic_reconfigure
    - wge100_camera
    - diagnostic_msgs
    desc: "<p>\n    The PR2 is equipped with a texture projector that can be used\
      \ to\n    project a texture onto featureless surfaces, allowing their\n    three-dimensional\
      \ structure to be determined using stereoscopy. The\n    projector operates\
      \ in a pulsed mode, producing brief (2ms) pulses of\n    light. Cameras that\
      \ want to see the texture must expose during the\n    projector pulse; other\
      \ cameras should be expose while the projector is\n    off.\n    </p>\n    \n\
      \    <p>\n      This package contains the pr2_projector_synchronizer node. Based\
      \ on its dynamically reconfigurable parameters, this node controls the projector\
      \ pulsing, and sets up triggering of the WGE100 cameras. \n    </p>"
    license: BSD
    shortdesc: Node to manage synchronization of the pr2 cameras and     the texture
      projector.
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_robot/trunk/pr2_camera_synchronizer
    website: http://pr.willowgarage.com/wiki/pr2_camera_synchronizer
  pr2_cockpit_msgs:
    author: !!python/unicode 'Stuart Glaser'
    deps:
    - std_msgs
    desc: pr2_cockpit_msgs
    license: BSD
    shortdesc: pr2_cockpit_msgs
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_cockpit/trunk/pr2_cockpit_msgs
    website: http://ros.org/wiki/pr2_cockpit_msgs
  pr2_cockpit_teleop:
    author: !!python/unicode 'Jonathan Scholz'
    deps:
    - rospy
    - pr2_controllers_msgs
    - actionlib
    - geometry_msgs
    - spacenav_node
    desc: "A python script for doing whole-body teleop\n\tand cartesian arm control\
      \ with pr2_cockpit.\n\tAlso supports the space navigator for arm control"
    license: BSD
    shortdesc: pr2_cockpit_teleop
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/pr2_cockpit_teleop
    website: http://ros.org/wiki/my_teleop
  pr2_common_action_msgs:
    author: !!python/unicode 'Wim Meeussen'
    deps:
    - actionlib_msgs
    - geometry_msgs
    - sensor_msgs
    desc: pr2_common_action_msgs
    license: BSD
    shortdesc: pr2_common_action_msgs
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_common_actions/trunk/pr2_common_action_msgs
    website: http://ros.org/wiki/pr2_common_action_msgs
  pr2_component_descriptions:
    author: !!python/unicode 'Kevin Watts'
    deps:
    - urdf
    - xacro
    - pr2_description
    desc: Robot descriptions in this package are used in PR2 hardware testing. This
      package relies on the URDF macros in pr2_description to make &quot;robots&quot;
      for PR2 components and PR2 configurations.
    license: BSD
    shortdesc: URDF descriptions of PR2 components for testing
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/wg_hardware_test/trunk/pr2_component_descriptions
    website: http://ros.org/wiki/pr2_component_descriptions
  pr2_computer_monitor:
    author: !!python/unicode 'Kevin Watts (watts@willowgarage.com)'
    deps:
    - diagnostic_msgs
    - rospy
    - pr2_msgs
    - roscpp
    - std_msgs
    desc: Monitors the computer's processor and hard drives of the PR2 and publishes
      data to diagnostics.
    license: BSD
    shortdesc: Monitors computers on PR2 for temperature and usage
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_robot/trunk/pr2_computer_monitor
    website: http://www.ros.org/wiki/pr2_computer_monitor
  pr2_computer_performance:
    author: !!python/unicode 'Kevin Watts'
    deps:
    - rospy
    - pr2_bringup
    desc: pr2_computer_performance
    license: BSD
    shortdesc: pr2_computer_performance
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/pr2_computer_performance
    website: http://ros.org/wiki/pr2_computer_performance
  pr2_controller_configuration:
    author: !!python/unicode 'Wim Meeussen'
    deps:
    - pr2_machine
    desc: Configuration files for PR2 controllers.
    license: BSD
    shortdesc: pr2_controller_configuration
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_robot/trunk/pr2_controller_configuration
    website: http://ros.org/wiki/pr2_controller_configuration
  pr2_controller_configuration_gazebo:
    author: !!python/unicode 'Wim Meeussen,John Hsu'
    deps:
    - pr2_controller_manager
    - single_joint_position_action
    - pr2_head_action
    - pr2_gripper_action
    desc: "A copy of the pr2_controller_configuration package, for use in \n  the\
      \ PR2 simulator.  We maintain two copies to allow for controller\n  gains to\
      \ be set differently between hardware and simulation."
    license: BSD
    shortdesc: pr2_controller_configuration_gazebo
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_simulator/trunk/pr2_controller_configuration_gazebo
    website: http://ros.org/wiki/pr2_controller_configuration_gazebo
  pr2_controller_interface:
    author: !!python/unicode 'Wim Meeussen'
    deps:
    - roscpp
    - pr2_mechanism_model
    desc: "This package specifies the interface to a realtime controller. A\n   controller\
      \ that implements this interface can be executed by the\n    <a href=\"http://www.ros.org/wiki/pr2_controller_manager\"\
      >controller\n  manager</a> in the real time control loop. The package basically\n\
      \  contains the C++ controller base class that all controllers need to\n  inherit\
      \ from."
    license: BSD
    shortdesc: C++ interface class for controllers
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_mechanism/trunk/pr2_controller_interface
    website: http://ros.org/wiki/pr2_controller_interface
  pr2_controller_manager:
    author: !!python/unicode 'Eric Berger berger@willowgarage.com, Stuart Glaser,
      Wim Meeussen'
    deps:
    - pr2_hardware_interface
    - pr2_mechanism_model
    - pr2_mechanism_diagnostics
    - pr2_description
    - pr2_controller_interface
    - pr2_mechanism_msgs
    - diagnostic_msgs
    - sensor_msgs
    - robot_state_publisher
    - realtime_tools
    - roscpp
    - tinyxml
    - rospy
    - rosparam
    - pluginlib
    desc: "<p>\nThe controller manager (CM) package provides the infrastructure to\n\
      run controllers in a hard realtime loop. In every cycle of the control\nloop,\
      \ all controllers loaded into CM will get triggered. The order in in\nwhich\
      \ the controllers are triggered is determined by the CM scheduler.\nCM provides\
      \ ROS services to load/start/stop/unload controllers.\n</p>\n<p>\nThe controller\
      \ manager also enforces low level safety limits \non the effort/velocity/position\
      \ of each joint.\n</p>"
    license: BSD
    shortdesc: PR2 Controller Manager
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_mechanism/trunk/pr2_controller_manager
    website: http://ros.org/pr2_controller_manager
  pr2_controllers_msgs:
    author: !!python/unicode 'Stuart Glaser'
    deps:
    - actionlib_msgs
    - trajectory_msgs
    - geometry_msgs
    desc: Messages, services, and actions used in the pr2_controllers stack.
    license: BSD
    shortdesc: pr2_controllers_msgs
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_controllers/branches/pr2_controllers-1.4/pr2_controllers_msgs
    website: http://ros.org/wiki/pr2_controllers_msgs
  pr2_counterbalance_check:
    author: !!python/unicode 'Kevin Watts'
    deps:
    - joint_qualification_controllers
    - rospy
    - std_msgs
    - pr2_self_test_msgs
    - pr2_controller_configuration
    - actionlib
    - pr2_controllers_msgs
    - pr2_controller_manager
    desc: <b>pr2_counterbalance_check</b> can be used as either a stand-alone tool
      to check the counterbalance, or as part of the PR2 Production Qualification
      system.
    license: BSD
    shortdesc: Checks the counterbalance of the PR2, recommends adjustments
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_self_test/trunk/pr2_counterbalance_check
    website: http://ros.org/wiki/pr2_counterbalance_check
  pr2_dashboard:
    author: !!python/unicode 'Josh Faust'
    deps:
    - rxtools
    - robot_monitor
    - rospy
    - roslib
    - std_srvs
    - std_msgs
    - pr2_power_board
    - pr2_msgs
    desc: pr2_dashboard is a GUI for debugging and controlling low-level state of
      the PR2.  It shows things like battery status and breaker states, as well as
      integrating tools like rxconsole and robot_monitor.
    license: BSD
    shortdesc: PR2 Dashboard
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_gui/trunk/pr2_dashboard
    website: http://ros.org/wiki/pr2_dashboard
  pr2_dashboard_aggregator:
    author: !!python/unicode 'Rob Wheeler'
    deps:
    - rospy
    - std_msgs
    - pr2_msgs
    desc: A simple script that aggregates all of the topics that a &quot;pr2_dashboard&quot;
      app might be interested in.
    license: BSD
    shortdesc: pr2_dashboard_aggregator
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_common/trunk/pr2_dashboard_aggregator
    website: http://ros.org/wiki/pr2_dashboard_aggregator
  pr2_defs:
    author: !!python/unicode 'Eric Berger, Sachin Chitta, John Hsu'
    deps:
    - urdf
    - xacro
    - convex_decomposition
    - ivcon
    desc: "This package contains XML (and xacro macros) descriptions of robot kinematics\
      \ in the format\n    defined at Willow Garage."
    license: BSD
    shortdesc: PR2 Robot Definitions
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_common_alpha/trunk/pr2_defs
    website: http://pr.willowgarage.com/wiki/RobotDescriptionFormat
  pr2_description:
    author: !!python/unicode 'John Hsu, Eric Berger'
    deps:
    - convex_decomposition
    - ivcon
    - urdf
    desc: "This package contains the description (mechanical, kinematic, visual,\n\
      \  etc.) of the PR2 robot.  The files in this package are parsed and used by\n\
      \  a variety of other components.  Most users will not interact directly\n \
      \ with this package."
    license: BSD
    shortdesc: pr2_description
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_common/trunk/pr2_description
    website: http://ros.org/wiki/pr2_description
  pr2_doors_gazebo_demo:
    author: !!python/unicode 'John Hsu'
    deps:
    - pr2_doors_executive
    - pr2_doors_actions
    - actionlib
    - pr2_gazebo
    - pr2_controller_manager
    - gazebo_tools
    - rostopic
    - pr2_tuckarm
    - gazebo
    - ros_epic_fail
    - move_base_msgs
    desc: Launch files for door opening in Gazebo.
    license: BSD
    shortdesc: Launch files for door opening in Gazebo.
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/wg_robots_gazebo/trunk/pr2_doors_gazebo_demo
    website: http://pr.willowgarage.com/wiki/FIXME
  pr2_drive_life_test:
    author: !!python/unicode 'Eric Berger, Kevin Watts'
    deps:
    - tf
    - amcl
    - map_server
    - rospy
    - roscpp
    - geometry_msgs
    - visualization_msgs
    - sensor_msgs
    - topic_tools
    - std_msgs
    - std_srvs
    desc: '<p><b>pr2_drive_life_test</b> contains utilities for localizing and commanding
      the PR2 in a special fixture. This is used in a PR2 burn in test.</p>


      <p>This is intended for Willow Garage personnel only, and has no public API.</p>'
    license: BSD
    shortdesc: Drives PR2 base to for a burn-in test
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/wg_hardware_test/trunk/pr2_drive_life_test
    website: http://ros.org/wiki/pr2_drive_life_test
  pr2_etherCAT:
    author: !!python/unicode 'Rob Wheeler/wheeler@willowgarage.com'
    deps:
    - pr2_controller_manager
    - pr2_mechanism_model
    - pr2_hardware_interface
    - roscpp
    - ethercat_hardware
    - std_srvs
    - realtime_tools
    - diagnostic_msgs
    - diagnostic_updater
    desc: Main loop that runs the robot.
    license: BSD
    shortdesc: Main robot execution loop
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_robot/trunk/pr2_etherCAT
    website: http://pr.willowgarage.com
  pr2_examples_gazebo:
    author: !!python/unicode 'John Hsu'
    deps:
    - pr2_gazebo_plugins
    - gazebo_plugins
    - gazebo_tools
    - pr2_mechanism_model
    desc: Sample pendulum simulations using ROS-Gazebo plugins that demonstrate PR2
      joint control.
    license: BSD
    shortdesc: PR2 Pendulum Simulation Example
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_simulator/trunk/pr2_examples_gazebo
    website: http://ros.org/wiki/pr2_examples_gazebo
  pr2_gazebo:
    author: !!python/unicode 'John Hsu'
    deps:
    - pr2_gazebo_plugins
    - gazebo_plugins
    - gazebo_tools
    - pr2_ogre
    - gazebo_worlds
    - pr2_description
    - robot_state_publisher
    - diagnostic_aggregator
    - pr2_dashboard_aggregator
    - pr2_controller_configuration_gazebo
    - robot_mechanism_controllers
    - pr2_mechanism_controllers
    - pr2_head_action
    - joint_trajectory_action
    - pr2_gripper_action
    - single_joint_position_action
    - stereo_image_proc
    - image_proc
    - robot_pose_ekf
    - tf2_ros
    - pr2_msgs
    - geometry_msgs
    - rospy
    - std_msgs
    - fingertip_pressure
    desc: "Launch scripts for simulating the PR2 in <a href=\"http://ros.org/wiki/gazebo\"\
      >gazebo</a>.\n    The simulation equivalent of pr2.launch is found here.\n \
      \   pr2_fingertip_pressure_contact_translator produces the same ROS topics as\
      \ fingertip_pressure package for simulated PR2."
    license: BSD
    shortdesc: Launch scripts for simulating the PR2 in
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_simulator/trunk/pr2_gazebo
    website: http://ros.org/wiki/pr2_gazebo
  pr2_gazebo_cartworld:
    author: !!python/unicode 'Jonathan Scholz'
    deps:
    - pr2_gazebo
    - rospy
    - tf
    - sensor_msgs
    - geometry_msgs
    desc: pr2_gazebo_cartworld
    license: BSD
    shortdesc: pr2_gazebo_cartworld
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/cart_pushing/trunk/pr2_gazebo_cartworld
    website: http://ros.org/wiki/pr2_gazebo_cartworld
  pr2_gazebo_plugins:
    author: !!python/unicode 'Sachin Chitta, Stu Glaser, John Hsu'
    deps:
    - gazebo
    - gazebo_plugins
    - gazebo_tools
    - opende
    - roscpp
    - rospy
    - std_msgs
    - nav_msgs
    - sensor_msgs
    - cv_bridge
    - pr2_msgs
    - geometry_msgs
    - opencv2
    - diagnostic_updater
    - cv_bridge
    - diagnostic_msgs
    - angles
    - pr2_hardware_interface
    - pr2_controller_manager
    - pr2_mechanism_model
    - tinyxml
    - bullet
    - urdf
    - polled_camera
    - dynamic_reconfigure
    desc: Gazebo Plugins for various PR2-specific sensors and actuators on the robot.
    license: BSD
    shortdesc: Gazebo Plugins for Personal Robots
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_simulator/trunk/pr2_gazebo_plugins
    website: http://ros.org/wiki/pr2_gazebo_plugins
  pr2_gazebo_wg:
    author: !!python/unicode 'John Hsu'
    deps:
    - pr2_gazebo_plugins
    - gazebo_plugins
    - gazebo_tools
    - pr2_ogre
    - gazebo_worlds
    - pr2_description
    - pr2_tuckarm
    - pr2_controller_configuration_gazebo
    - robot_mechanism_controllers
    - pr2_mechanism_controllers
    - robot_state_publisher
    - rospy
    - std_msgs
    - household_objects_database
    - pr2_controllers_msgs
    - actionlib
    - rviz
    - actionlib_msgs
    - trajectory_msgs
    - pr2_common_action_msgs
    desc: Gazebo 3D simulation PR2 examples.
    license: BSD
    shortdesc: Gazebo 3D simulation PR2 examples.
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/wg_robots_gazebo/trunk/pr2_gazebo_wg
    website: http://pr.willowgarage.com/wiki/pr2_gazebo_wg
  pr2_gripper_action:
    author: !!python/unicode 'Stuart Glaser'
    deps:
    - roscpp
    - actionlib_msgs
    - actionlib
    - pr2_mechanism_controllers
    - robot_mechanism_controllers
    - pr2_controllers_msgs
    - pr2_mechanism_model
    desc: "The pr2_gripper_action provides an action interface for using the\n  gripper.\
      \ Users can specify what position to move to (while limiting the\n  force) and\
      \ the action will report success when the position is reached or\n  failure\
      \ when the gripper cannot move any longer."
    license: BSD
    shortdesc: pr2_gripper_action
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_controllers/branches/pr2_controllers-1.4/pr2_gripper_action
    website: http://ros.org/wiki/pr2_gripper_action
  pr2_gripper_click:
    author: !!python/unicode 'Matei Ciocarlie'
    deps:
    - rviz
    - ogre_tools
    - actionlib
    - tf
    - actionlib_msgs
    - sensor_msgs
    - stereo_msgs
    - geometry_msgs
    - object_manipulation_msgs
    - roscpp
    - rviz_interaction_tools
    desc: "A package for user-aided grasp planning, where the user provides\n    \
      \ some sort of information based on sensor data from the\n     robot. Examples\
      \ include the user clicking somewhere in an image\n     to tell the robot where\
      \ to grasp from."
    license: BSD
    shortdesc: pr2_gripper_click
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_object_manipulation/branches/0.4-branch/pr2_gripper_click
    website: http://ros.org/wiki/pr2_gripper_click
  pr2_gripper_grasp_adjust:
    author: !!python/unicode 'Adam Leeper'
    deps:
    - roscpp
    - sensor_msgs
    - std_msgs
    - tf
    - pcl
    - dynamic_reconfigure
    - visualization_msgs
    - geometry_msgs
    - pcl_ros
    - pr2_controllers_msgs
    - eigen
    - tabletop_collision_map_processing
    - pr2_gripper_grasp_controller
    - pr2_gripper_reactive_approach
    - pr2_gripper_sensor_action
    - object_manipulation_msgs
    - object_manipulator
    - actionlib
    desc: The pr2_gripper_grasp_adjust package provides a service call interface for
      finding grasp poses near a given input pose.
    license: BSD
    shortdesc: pr2_gripper_grasp_adjust
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/sandbox/pr2_gripper_grasp_adjust
    website: http://ros.org/wiki/pr2_gripper_grasp_adjust
  pr2_gripper_grasp_controller:
    author: !!python/unicode 'Matei Ciocarlie'
    deps:
    - actionlib
    - pr2_controllers_msgs
    - object_manipulation_msgs
    - sensor_msgs
    desc: "Implementation of the hand posture grasp controller for the PR2\n    gripper."
    license: BSD
    shortdesc: pr2_gripper_grasp_controller
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_object_manipulation/branches/0.4-branch/pr2_gripper_grasp_controller
    website: http://ros.org/wiki/pr2_gripper_grasp_controller
  pr2_gripper_grasp_planner_cluster:
    author: !!python/unicode 'Kaijen Hsiao'
    deps:
    - rospy
    - tf
    - geometry_msgs
    - visualization_msgs
    - interpolated_ik_motion_planner
    - object_manipulator
    - object_manipulation_msgs
    desc: "Plans grasps for unknown objects using the PR2 gripper. Uses only\n   \
      \ a (segmented) point cloud of the target object, often originating\n    from\
      \ a single view or scan."
    license: BSD
    shortdesc: pr2_gripper_grasp_planner_cluster
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_object_manipulation/branches/0.4-branch/pr2_gripper_grasp_planner_cluster
    website: http://ros.org/wiki/pr2_gripper_grasp_planner_cluster
  pr2_gripper_grasp_planner_primitives:
    author: !!python/unicode 'Kaijen Hsiao'
    deps: []
    desc: pr2_gripper_grasp_planner_primitives
    license: BSD
    shortdesc: pr2_gripper_grasp_planner_primitives
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/pr2_gripper_grasp_planner_primitives
    website: http://ros.org/wiki/pr2_gripper_grasp_planner_primitives
  pr2_gripper_grasp_planner_roi:
    author: !!python/unicode 'Kaijen Hsiao'
    deps:
    - roscpp
    - grasping
    - pr2_manipulation_primitives
    - object_manipulation_msgs
    - sensor_msgs
    - object_manipulator
    - grasp_playpen
    - rosbag
    - tf
    desc: pr2_gripper_grasp_planner_roi
    license: BSD
    shortdesc: pr2_gripper_grasp_planner_roi
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/pr2_gripper_grasp_planner_roi
    website: http://ros.org/wiki/pr2_gripper_grasp_planner_roi
  pr2_gripper_reactive_approach:
    author: !!python/unicode 'Kaijen Hsiao'
    deps:
    - rospy
    - tf
    - actionlib
    - std_srvs
    - move_arm_msgs
    - pr2_controllers_msgs
    - pr2_mechanism_msgs
    - motion_planning_msgs
    - geometry_msgs
    - geometric_shapes_msgs
    - interpolated_ik_motion_planner
    - trajectory_msgs
    - pr2_gripper_action
    - pr2_mechanism_controllers
    - sensor_msgs
    - simple_Jtranspose_controller
    - joint_trajectory_action
    - object_manipulator
    - object_manipulation_msgs
    - pr2_gripper_sensor_action
    - pr2_gripper_sensor_msgs
    desc: "Executes a grasp with the PR2 gripper, starting from the\n     pre-grasp\
      \ stage and using the tactile sensors to correct for\n     unexpected contacts\
      \ encountered along the way."
    license: BSD
    shortdesc: pr2_gripper_reactive_approach
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_object_manipulation/branches/0.4-branch/pr2_gripper_reactive_approach
    website: http://ros.org/wiki/pr2_gripper_reactive_approach
  pr2_gripper_sensor_action:
    author: !!python/unicode 'Joe Romano'
    deps:
    - actionlib_msgs
    - actionlib
    - pr2_gripper_sensor_msgs
    - pr2_mechanism_controllers
    - robot_mechanism_controllers
    - pr2_controllers_msgs
    - pr2_mechanism_model
    - pr2_gripper_sensor_controller
    desc: "The pr2_gripper_sensor_action package provides an action interface for\
      \ talking to the pr2_gripper_sensor_controller real-time controller.\n\n  It\
      \ provides several different actions for getting high-level sensor information\
      \ from the PR2 palm-mounted accelerometers, fingertip pressure arrays, and gripper\
      \ motor/encoder, as well as several sensor-based gripper control actions that\
      \ respond with low-latency in real-time."
    license: BSD
    shortdesc: pr2_gripper_sensor_action
    source: details.php?name=roscpp
    website: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_object_manipulation/branches/0.4-branch/pr2_gripper_sensor_action
  pr2_gripper_sensor_controller:
    author: !!python/unicode 'Joe Romano'
    deps:
    - pr2_controller_interface
    - pr2_mechanism_model
    - pr2_controllers_msgs
    - realtime_tools
    - pluginlib
    - actionlib_msgs
    - roscpp
    - rosrt
    - roslib
    - std_msgs
    - std_srvs
    - pr2_gripper_sensor_msgs
    desc: The pr2_gripper_sensor_controller package is a real-time controller that
      integrates signals from the PR2 hand-mounted accelerometer and finger-mounted
      pressure sensors with motor control of the gripper joint to do highly responsive
      sensing and low-latency closed-loop control.
    license: BSD
    shortdesc: pr2_gripper_sensor_controller
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_object_manipulation/branches/0.4-branch/pr2_gripper_sensor_controller
    website: http://ros.org/wiki/pr2_gripper_sensor_controller
  pr2_gripper_sensor_msgs:
    author: !!python/unicode 'Joe Romano'
    deps:
    - actionlib_msgs
    - actionlib
    desc: "The pr2_gripper_sensor_msgs package contains various actions and messages\
      \ that are used in the pr2_gripper_sensor* packages. The structure of the API\
      \ used by pr2_gripper_sensor_action, and pr2_gripper_sensor_controller packages\
      \ is as follows: \n\nUsers will send a goal to an Action in the message format\
      \ of PR2Gripper*Command (where * replaces the name of the particular Action\
      \ from pr2_gripper_sensor_action). Feedback and Result information for the action\
      \ is then returned in the format of PR2Gripper*Data."
    license: BSD
    shortdesc: pr2_gripper_sensor_msgs
    source: details.php?name=roscpp
    website: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_object_manipulation/branches/0.4-branch/pr2_gripper_sensor_msgs
  pr2_gripper_stereo:
    author: !!python/unicode 'Adam Leeper'
    deps:
    - roscpp
    - sensor_msgs
    - std_msgs
    - camera_info_manager
    - tf
    - pcl
    - dynamic_reconfigure
    - visualization_msgs
    - geometry_msgs
    - pcl_tf
    - actionlib
    - actionlib_msgs
    - pr2_controllers_msgs
    - eigen3
    - profiling
    - tabletop_collision_map_processing
    - pr2_gripper_grasp_controller
    - pr2_gripper_reactive_approach
    - pr2_gripper_sensor_action
    - object_mapping
    - octomap2
    - ethercat_trigger_controllers
    - rospy
    - dynamic_reconfigure
    - wge100_camera
    - diagnostic_msgs
    desc: A package for managing and launching stereo cameras attached to the PR2
      gripper.
    license: BSD
    shortdesc: pr2_gripper_stereo
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/pr2_gripper_stereo
    website: http://ros.org/wiki/pr2_gripper_stereo
  pr2_hardware_interface:
    author: !!python/unicode 'Eric Berger berger@willowgarage.com'
    deps:
    - roscpp
    - geometry_msgs
    desc: "This package contains the C++ interfaces to the PR2 hardware\n  components\
      \ that are controlled over EtherCAT. This includes the\n  motors and encoders\
      \ needed to control the PR2 mechanism, as well as\n  components like the pressure\
      \ sensors in the fingertips, camera\n  triggers, etc... All of the hardware\
      \ components in this interface are\n  directly available to the controllers\
      \ inside the hard realtime\n  control loop."
    license: BSD
    shortdesc: PR2 Hardware Interface
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_mechanism/trunk/pr2_hardware_interface
    website: http://ros.org/wiki/pr2_hardware_interface
  pr2_hardware_test_monitor:
    author: !!python/unicode 'Kevin Watts'
    deps:
    - pr2_self_test_msgs
    - rospy
    - diagnostic_msgs
    - std_msgs
    - std_srvs
    - pr2_mechanism_msgs
    - rostopic
    - robot_monitor
    - ectools
    - pr2_mechanism_diagnostics
    - pr2_transmission_check
    - xacro
    desc: Test monitoring utilities for runtime monitoring of PR2 component testing.
    license: BSD
    shortdesc: Utilities for monitoring status of PR2 during hardware testing
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/wg_hardware_test/trunk/pr2_hardware_test_monitor
    website: http://ros.org/wiki/pr2_hardware_test_monitor
  pr2_head_action:
    author: !!python/unicode 'Stuart Glaser'
    deps:
    - geometry_msgs
    - trajectory_msgs
    - sensor_msgs
    - pr2_controllers_msgs
    - roscpp
    - message_filters
    - tf
    - actionlib
    desc: "The PR2 head action is a node that provides an action interface for\n \
      \ pointing the head of the PR2.  It passes trajectory goals to the\n  controller,\
      \ and reports success when they have finished executing."
    license: BSD
    shortdesc: pr2_head_action
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_controllers/branches/pr2_controllers-1.4/pr2_head_action
    website: http://ros.org/wiki/pr2_head_action
  pr2_interactive_manipulation:
    author: !!python/unicode 'Matei Ciocarlie'
    deps:
    - rviz
    - tf
    - tabletop_collision_map_processing
    - object_manipulation_msgs
    - pr2_interactive_object_detection
    - rviz_interaction_tools
    - object_manipulator
    - pr2_object_manipulation_launch
    desc: "A package that allows a remote user to request and assist with\n     grasping\
      \ and manipulation tasks, primarily using an rviz display."
    license: BSD
    shortdesc: pr2_interactive_manipulation
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_tabletop_manipulation_apps/branches/0.4-branch/pr2_interactive_manipulation
    website: http://ros.org/wiki/pr2_interactive_manipulation
  pr2_interactive_object_detection:
    author: !!python/unicode 'David Gossow'
    deps:
    - roscpp
    - rviz
    - tf
    - tabletop_object_detector
    - household_objects_database
    - object_manipulator
    - sensor_msgs
    - stereo_msgs
    - object_recognition_gui
    - actionlib_msgs
    - rgbd_assembler
    desc: "A package that allows a remote user to request and assist\n     the detection,\
      \ recognition and pose estimation of tabletop objects,\n     primarily using\
      \ an rviz display."
    license: BSD
    shortdesc: pr2_interactive_object_detection
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_tabletop_manipulation_apps/branches/0.4-branch/pr2_interactive_object_detection
    website: http://ros.org/wiki/pr2_interactive_object_detection
  pr2_joint_limit_verification:
    author: !!python/unicode 'Kevin Watts'
    deps:
    - sensor_msgs
    - rosrecord
    - rospy
    desc: pr2_joint_limit_verification
    license: BSD
    shortdesc: pr2_joint_limit_verification
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/pr2_joint_limit_verification
    website: http://ros.org/wiki/pr2_joint_limit_verification
  pr2_kernel_hammer:
    author: !!python/unicode 'Kevin Watts, Nathan Grennen'
    deps:
    - rospy
    - roslaunch_caller
    desc: pr2_kernel_hammer
    license: BSD
    shortdesc: Test PR2 kernel until it breaks
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/pr2_kernel_hammer
    website: http://ros.org/wiki/pr2_kernel_hammer
  pr2_laban_gazebo_demo:
    author: !!python/unicode 'John Hsu'
    deps:
    - pr2_gazebo
    - gazebo
    - pr2_tuckarm
    - robot_state_publisher
    - pr2_common_action_msgs
    - actionlib
    - roscpp
    - joint_trajectory_action
    - geometry_msgs
    - kinematics_msgs
    - pr2_controllers_msgs
    - tf
    desc: "PR2 Laban motion analysis template project.\n     For now it starts a PR2\
      \ and loads some default trajectory controllers."
    license: BSD
    shortdesc: pr2_laban_gazebo_demo
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/wg_robots_gazebo/trunk/pr2_laban_gazebo_demo
    website: http://ros.org/wiki/pr2_laban_gazebo_demo
  pr2_led_detector:
    author: !!python/unicode 'Vijay Pradeep'
    deps:
    - roscpp
    - opencv2
    - sensor_msgs
    - calibration_msgs
    - cv_bridge
    - tf
    - message_filters
    - image_geometry
    - image_transport
    - geometry_msgs
    - dynamic_reconfigure
    - driver_base
    - visual_arm_calibration
    desc: pr2_led_detector
    license: BSD
    shortdesc: pr2_led_detector
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/pr2_led_detector
    website: http://ros.org/wiki/pr2_led_detector
  pr2_led_servo:
    author: !!python/unicode 'Vijay Pradeep'
    deps:
    - pr2_led_detector
    - kdl
    - roscpp
    - eigen
    - kdl_parser
    - kdl
    - trajectory_msgs
    - std_srvs
    - pluginlib
    - pr2_mechanism_model
    - kdl_parser
    - message_filters
    - filters
    - visual_arm_calibration
    desc: pr2_led_servo
    license: BSD
    shortdesc: pr2_led_servo
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/pr2_led_servo
    website: http://ros.org/wiki/pr2_led_servo
  pr2_machine:
    author: !!python/unicode 'Wim Meeussen'
    deps: []
    desc: This package contains the xxx.machine files that describe the different
      hosts a node can be spawned on. Currently there is one machine file for the
      pr2 robot, and one for the simulated pr2 robot.
    license: BSD
    shortdesc: pr2_machine
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_common/trunk/pr2_machine
    website: http://ros.org/wiki/pr2_machine
  pr2_mannequin_mode:
    author: !!python/unicode 'Vijay Pradeep'
    deps:
    - trajectory_msgs
    - pr2_controllers_msgs
    - pr2_controller_manager
    desc: "A super-simple tool for letting a person position the arms manually, by\n\
      \    simply pushing the arm to the location that want. Without this tool,\n\
      \    users are often stuck tweaking joint angles in a script, or holding the\n\
      \    arm steady while hitting keys to freeze the arm."
    license: BSD
    shortdesc: Lets a person position the arms and head manually
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_apps/trunk/pr2_mannequin_mode
    website: http://ros.org/wiki/pr2_mannequin_mode
  pr2_mechanism_controllers:
    author: !!python/unicode 'Sachin Chita, John Hsu, Melonee Wise'
    deps:
    - std_msgs
    - geometry_msgs
    - pr2_mechanism_msgs
    - nav_msgs
    - pr2_msgs
    - visualization_msgs
    - diagnostic_msgs
    - pr2_controller_interface
    - roscpp
    - pr2_controllers_msgs
    - pr2_mechanism_model
    - realtime_tools
    - robot_mechanism_controllers
    - rospy
    - pluginlib
    - rosconsole
    - eigen
    - tf
    - angles
    - control_toolbox
    - filters
    - diagnostic_updater
    desc: "The pr2_mechanism_controllers package contains realtime\n    controllers\
      \ that are meant for specific mechanisms of the PR2."
    license: BSD
    shortdesc: Controllers for the PR2
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_controllers/branches/pr2_controllers-1.4/pr2_mechanism_controllers
    website: http://ros.org/pr2_mechanism_controllers
  pr2_mechanism_diagnostics:
    author: !!python/unicode 'Kevin Watts'
    deps:
    - roscpp
    - urdf
    - rospy
    - diagnostic_updater
    - diagnostic_msgs
    - pr2_mechanism_msgs
    - pr2_mechanism_model
    - angles
    - std_srvs
    - std_msgs
    - xacro
    desc: The `pr2_mechanism_diagnostics` node subscribes to `mechanism_statistics`
      and publishes diagnostics data for joints and controllers on `/diagnostics`.
    license: BSD
    shortdesc: Produces diagnostics from pr2_controller_manager for joints and controllers
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_mechanism/trunk/pr2_mechanism_diagnostics
    website: http://ros.org/wiki/pr2_mechanism_diagnostics
  pr2_mechanism_model:
    author: !!python/unicode 'Eric Berger berger@willowgarage.com, Stuart Glaser,
      Wim Meeussen'
    deps:
    - roscpp
    - pr2_hardware_interface
    - tinyxml
    - urdf
    - kdl_parser
    - pluginlib
    - angles
    desc: "<p>\n  This package contains the robot model that is used by the realtime\n\
      \  controllers\n  inside <a href=\"http://www.ros.org/wiki/pr2_controller_manager\"\
      >controller\n  manager</a>. This robot model focuses on controlling the robot\n\
      \  mechanism in a realtime control loop, and therefore it only contains\n  the\
      \ components of a robot that are relevant in realtime: the robot\n  joints (with\
      \ encoders, transmisisons and actuators) and the\n  kinematic/dynamic model\
      \ of the robot. \n</p>\n<p>\n  The pr2_mechanism_model package is well tested\
      \ and is released with a stable API.\n</p>"
    license: BSD
    shortdesc: PR2 Mechanism model
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_mechanism/trunk/pr2_mechanism_model
    website: http://ros.org/wiki/pr2_mechanism_model
  pr2_mechanism_msgs:
    author: !!python/unicode 'Stuart Glaser sglaser@willowgarage.com, Wim Meeussen'
    deps:
    - std_msgs
    desc: "This package defines services that are used to communicate with\n     the\
      \ realtime control loop. It also defines messages\n     that represent the state\
      \ of the realtime controllers, the joints\n     and the actuators."
    license: BSD
    shortdesc: pr2_mechanism_msgs
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_mechanism/trunk/pr2_mechanism_msgs
    website: http://ros.org/wiki/pr2_mechanism_msgs
  pr2_motion_planning_description:
    author: !!python/unicode 'John Hsu'
    deps:
    - pr2_description
    desc: "pr2_motion_planning_description\n\n     motion planning counterpart of\
      \ pr2_description"
    license: BSD
    shortdesc: pr2_motion_planning_description
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/pr2_motion_planning_description
    website: http://ros.org/wiki/pr2_motion_planning_description
  pr2_move_base:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - move_base_msgs
    - pr2_msgs
    - actionlib
    - actionlib_msgs
    - rospy
    - dynamic_reconfigure
    - pr2_controllers_msgs
    desc: pr2_move_base
    license: BSD
    shortdesc: pr2_move_base
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_navigation/branches/cturtle_branch/pr2_move_base
    website: http://ros.org/wiki/pr2_move_base
  pr2_msgs:
    author: !!python/unicode 'Eric Berger and many others'
    deps:
    - std_msgs
    - geometry_msgs
    - rostest
    - rosbag
    - rosbagmigration
    desc: Messages for representing PR2 state, such as battery information and the
      PR2 fingertip sensors.
    license: BSD
    shortdesc: PR2 Messages
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_common/trunk/pr2_msgs
    website: http://ros.org/wiki/pr2_msgs
  pr2_navigation_config:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - move_base
    desc: This package holds common configuration files for running the <a href="http://www.ros.org/wiki/move_base">move_base</a>
      node on the PR2 robot.
    license: BSD
    shortdesc: PR2-specific move_base configuration
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_navigation/branches/cturtle_branch/pr2_navigation_config
    website: http://pr.willowgarage.com/wiki
  pr2_navigation_global:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - move_base
    - amcl
    - pr2_machine
    - pr2_navigation_config
    - pr2_move_base
    desc: This package holds XML files for running the <a href="http://www.ros.org/wiki/move_base">move_base</a>
      node on a PR2 robot. The <a href="http://www.ros.org/wiki/move_base">move_base</a>
      node is configured to run over a pre-specified static map.
    license: BSD
    shortdesc: XML files for running global navigation assuming a static map on a
      PR2 robot.
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_navigation/branches/cturtle_branch/pr2_navigation_global
    website: http://ros.org/wiki/pr2_navigation_global
  pr2_navigation_local:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - move_base
    - pr2_machine
    - pr2_navigation_config
    - pr2_move_base
    desc: This package holds xml files for running the <a href="http://www.ros.org/wiki/move_base">move_base</a>
      node on a PR2 robot in an odometric frame. No static map is needed for the <a
      href="http://www.ros.org/wiki/move_base">move_base</a> node in this configuration.
    license: BSD
    shortdesc: XML files for running the move_base node on a PR2 in an odometric frame.
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_navigation/branches/cturtle_branch/pr2_navigation_local
    website: http://ros.org/wiki/pr2_navigation_local
  pr2_navigation_perception:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - semantic_point_annotator
    - laser_filters
    - pr2_machine
    - topic_tools
    - pr2_navigation_self_filter
    - geometry_msgs
    - dynamic_reconfigure
    - sensor_msgs
    - roscpp
    - tf
    - filters
    - message_filters
    - laser_geometry
    - laser_tilt_controller_filter
    desc: This package holds navigation-specific sensor configuration options and
      launch files for the PR2.
    license: BSD
    shortdesc: PR2 navigation-specific sensor configurations.
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_navigation/branches/cturtle_branch/pr2_navigation_perception
    website: http://ros.org/wiki/pr2_navigation_perception
  pr2_navigation_self_filter:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - roscpp
    - tf
    - filters
    - sensor_msgs
    - urdf
    - bullet
    - resource_retriever
    - visualization_msgs
    desc: Filters the robot's body out of point clouds.
    license: BSD
    shortdesc: pr2_navigation_self_filter
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_navigation/branches/cturtle_branch/pr2_navigation_self_filter
    website: http://ros.org/wiki/pr2_navigation_self_filter
  pr2_navigation_slam:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - gmapping
    - pr2_machine
    - move_base
    - pr2_navigation_config
    - pr2_move_base
    desc: This package holds launch files for running the <a href="http://www.ros.org/wiki/move_base">move_base</a>
      node in conjunction with [[gmapping | SLAM]] on a PR2 robot.
    license: BSD
    shortdesc: XML files for running SLAM with the move_base node on a PR2 robot.
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_navigation/branches/cturtle_branch/pr2_navigation_slam
    website: http://ros.org/wiki/pr2_navigation_slam
  pr2_navigation_teleop:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - pr2_teleop
    - pr2_machine
    - topic_tools
    desc: "This package holds a special teleop configuration for the PR2 robot that\n\
      \     should be used when running applications that use autonomous navigation."
    license: BSD
    shortdesc: Teleop configuration for the PR2 while running navigation.
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_navigation/branches/cturtle_branch/pr2_navigation_teleop
    website: http://ros.org/wiki/pr2_navigation_teleop
  pr2_object_manipulation_launch:
    author: !!python/unicode 'Matei Ciocarlie'
    deps:
    - dynamic_reconfigure
    - pr2_arm_navigation_perception
    - pr2_arm_navigation_planning
    - pr2_arm_navigation_actions
    - pr2_arm_navigation_filtering
    - pr2_arm_navigation_kinematics
    - interpolated_ik_motion_planner
    - trajectory_filter_server
    - simple_Jtranspose_controller
    - object_manipulator
    - probabilistic_grasp_planner
    - bayesian_grasp_planner
    - pr2_gripper_grasp_controller
    - pr2_gripper_reactive_approach
    - pr2_gripper_grasp_planner_cluster
    - pr2_gripper_click
    desc: "Contains launch and configuration files for starting the\n    manipulation\
      \ pipeline, along with all needed controllers,\n    planners, etc., on the PR2\
      \ robot."
    license: BSD
    shortdesc: pr2_object_manipulation_launch
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_object_manipulation/branches/0.4-branch/pr2_object_manipulation_launch
    website: http://ros.org/wiki/pr2_object_manipulation_launch
  pr2_ogre:
    author: !!python/unicode 'John Hsu'
    deps:
    - convex_decomposition
    - gazebo
    - ivcon
    - ogre_tools
    - pr2_description
    desc: "This package contains PR2 Ogre mesh files used for visualization and collision\
      \ as\n    defined at Willow Garage."
    license: BSD
    shortdesc: PR2 Ogre Mesh Files
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_simulator/trunk/pr2_ogre
    website: http://ros.org/wiki/pr2_ogre
  pr2_pick_and_place_demos:
    author: !!python/unicode 'Matei Ciocarlie and Kaijen Hsiao'
    deps:
    - roscpp
    - actionlib
    - actionlib_msgs
    - geometry_msgs
    - tf_conversions
    - object_manipulation_msgs
    - object_manipulator
    - tabletop_object_detector
    - tabletop_collision_map_processing
    - household_objects_database
    - pr2_gripper_reactive_approach
    - simple_Jtranspose_controller
    - pr2_tabletop_manipulation_launch
    desc: "Example applications that call the services provided by the\n    manipulation\
      \ pipeline."
    license: BSD
    shortdesc: pr2_pick_and_place_demos
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_tabletop_manipulation_apps/branches/0.4-branch/pr2_pick_and_place_demos
    website: http://ros.org/wiki/pr2_pick_and_place_demos
  pr2_pick_and_place_tutorial:
    author: !!python/unicode 'Matei Ciocarlie'
    deps:
    - actionlib
    - object_manipulation_msgs
    - tabletop_object_detector
    - tabletop_collision_map_processing
    desc: pr2_pick_and_place_tutorial
    license: BSD
    shortdesc: pr2_pick_and_place_tutorial
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/pr2_pick_and_place_tutorial
    website: http://ros.org/wiki/pr2_pick_and_place_tutorial
  pr2_plugs_gazebo_demo:
    author: !!python/unicode 'John Hsu'
    deps:
    - pr2_gazebo
    - gazebo_tools
    - geometry_msgs
    - roscpp
    - nav_msgs
    - bullet
    - pr2_plugs_actions
    - wg_pr2_2dnav
    - pr2_arm_move_ik
    - joint_trajectory_generator
    - pr2_tuck_arms_action
    - gazebo
    desc: Launch files for pluggin in in Gazebo.
    license: BSD
    shortdesc: Launch files for pluggin in in Gazebo.
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/wg_robots_gazebo/trunk/pr2_plugs_gazebo_demo
    website: http://pr.willowgarage.com/wiki/FIXME
  pr2_pose_saver:
    author: !!python/unicode 'Jonathan Scholz'
    deps:
    - rospy
    - pr2_controllers_msgs
    - geometry_msgs
    desc: Simple util for taking snapshots of pr2 body positions, and loading them
      back up
    license: BSD
    shortdesc: pr2_pose_saver
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/cart_pushing/trunk/pr2_pose_saver
    website: http://ros.org/wiki/pr2__bookmarker
  pr2_power_board:
    author: !!python/unicode 'Curt Meyers, Blaise Gassend'
    deps:
    - roscpp
    - rospy
    - diagnostic_updater
    - diagnostic_msgs
    - pr2_msgs
    desc: This provides a ROS node for the PR2 Power Board.
    license: BSD
    shortdesc: PR2 power board drivers
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_power_drivers/trunk/pr2_power_board
    website: http://www.ros.org/wiki/pr2_power_board
  pr2_power_cord_tester:
    author: !!python/unicode ''
    deps:
    - rospy
    - pr2_mechanism_controllers
    - trajectory_msgs
    desc: pr2_power_cord_tester
    license: BSD
    shortdesc: pr2_power_cord_tester
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/pr2_power_cord_tester
    website: http://ros.org/wiki/pr2_power_cord_tester
  pr2_power_data_analysis:
    author: !!python/unicode 'Kevin Watts'
    deps:
    - rosbag
    - pr2_msgs
    desc: pr2_power_data_analysis
    license: BSD
    shortdesc: pr2_power_data_analysis
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/pr2_power_data_analysis
    website: http://ros.org/wiki/pr2_power_data_analysis
  pr2_recharge_application:
    author: !!python/unicode 'Brian Gerkey, Wim Meeussen'
    deps:
    - roslib
    - rospy
    - webui
    - rosweb
    - std_msgs
    - pr2_plugs_actions
    - map_server
    - willow_maps
    desc: A web application to make a PR2 plug itself into a standard wall outlet.
    license: BSD
    shortdesc: PR2 Recharge Application
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_web_apps/trunk/pr2_recharge_application
    website: http://pr.willowgarage.com/wiki/pr2_recharge_application
  pr2_remote_teleop:
    author: !!python/unicode 'Eric Berger, Adam Leeper'
    deps:
    - rospy
    - joy
    - pr2_controllers_msgs
    - geometry_msgs
    - actionlib
    - tf
    - std_msgs
    - trajectory_msgs
    - pr2_controllers_msgs
    - dynamic_reconfigure
    - object_manipulator
    - pr2_gripper_grasp_adjust
    - ui_preempter
    - ui_responder
    - application_client
    - pr2_plugs_msgs
    desc: "An application that allows control of the pr2 arms, head, and base \n \
      \    through a joystick interface such as the PS3 controller or a spacenav device.\n\
      \n     Any joystick will work; the mapping is read from a configuration file."
    license: BSD
    shortdesc: pr2_remote_teleop
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/sandbox/pr2_remote_teleop
    website: http://ros.org/wiki/pr2_remote_teleop
  pr2_robust_grasping:
    author: !!python/unicode 'Peter Brook'
    deps:
    - roscpp
    - actionlib
    - actionlib_msgs
    - geometry_msgs
    - object_manipulation_msgs
    - object_manipulator
    - tabletop_object_detector
    - tabletop_collision_map_processing
    - household_objects_database
    - household_objects_database_msgs
    - tf
    - tf_conversions
    - robust_database_planner
    desc: "Contains code for selecting grasps from a database which are robust\n \
      \     to both model and pose uncertainty."
    license: BSD
    shortdesc: pr2_robust_grasping
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/pr2_robust_grasping
    website: http://ros.org/wiki/pr2_robust_grasping
  pr2_run_stop_auto_restart:
    author: !!python/unicode 'Wim Meeussen'
    deps:
    - pr2_msgs
    - pr2_power_board
    - std_srvs
    desc: "This package provides a node that monitors the state of the run stops of\
      \ the pr2_robot. When the state of the\n   run stop changes from off to on,\
      \ this node will automatically enable the power to the motors, and reset\n \
      \  the motors. This allows you to use the run stop as a 'pause' button. By using\
      \ the run stop as a tool to\n   power up the robot, the run stop is also in\
      \ reach of the user once the robot starts moving."
    license: BSD
    shortdesc: pr2_run_stop_auto_restart
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_robot/trunk/pr2_run_stop_auto_restart
    website: http://ros.org/wiki/pr2_run_stop_auto_restart
  pr2_self_test_msgs:
    author: !!python/unicode 'Kevin Watts'
    deps: []
    desc: Messages used in PR2 hardware testing.
    license: BSD
    shortdesc: Messages used for PR2 hardware testing
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_self_test/trunk/pr2_self_test_msgs
    website: http://ros.org/wiki/pr2_self_test_msgs
  pr2_simulator_benchmarks:
    author: !!python/unicode 'John Hsu'
    deps:
    - pr2_gazebo
    - roscpp
    - gazebo
    - std_msgs
    - gazebo_benchmarks
    desc: pr2_simulator_benchmarks contains default benchmarks for pr2 simulation
    license: BSD
    shortdesc: pr2_simulator_benchmarks
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/wg_robots_gazebo/trunk/pr2_simulator_benchmarks
    website: http://ros.org/wiki/pr2_simulator_benchmarks
  pr2_spring_transmission_example:
    author: !!python/unicode 'John Hsu'
    deps:
    - pr2_gazebo_plugins
    - gazebo_plugins
    - gazebo_tools
    - pr2_mechanism_model
    desc: PR2 Transmission Simulation Example Demonstrating Spring Link
    license: BSD
    shortdesc: PR2 Transmission Simulation Example Demonstrating Spring Link
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/pr2_spring_transmission_example
    website: http://ros.org/wiki/pr2_spring_transmission_example
  pr2_sr_hand_gazebo_demo:
    author: !!python/unicode 'John Hsu'
    deps: []
    desc: "PR2 with shadow robotics forearm and hands.\n     Taken meshes and models\
      \ from http://bazaar.launchpad.net/~shadowrobot/sr-ros-interface/trunk repository,\n\
      \     modified slightly to allow for attachment to PR2."
    license: BSD
    shortdesc: pr2_sr_hand_gazebo_demo
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/wg_robots_gazebo/trunk/pr2_sr_hand_gazebo_demo
    website: http://ros.org/wiki/pr2_sr_hand_gazebo_demo
  pr2_state_player:
    author: !!python/unicode 'Jonathan Scholz'
    deps:
    - pr2_controllers_msgs
    - rospy
    desc: pr2_state_player
    license: BSD
    shortdesc: pr2_state_player
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/pr2_state_player
    website: http://ros.org/wiki/pr2_state_player
  pr2_tabletop_manipulation_gazebo_demo:
    author: !!python/unicode 'John Hsu'
    deps:
    - pr2_tabletop_manipulation_launch
    - pr2_gazebo
    - gazebo
    - pr2_tuckarm
    - robot_state_publisher
    - household_objects_database
    - actionlib
    - pr2_controllers_msgs
    - pr2_common_action_msgs
    - pr2_pick_and_place_demos
    desc: "Tests pr2_tabletop_manipulation in gazebo simulation.\n     Uses the grasping\
      \ pipeline and runs through a single pick and place routine."
    license: BSD
    shortdesc: pr2_tabletop_manipulation_gazebo_demo
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/wg_robots_gazebo/trunk/pr2_tabletop_manipulation_gazebo_demo
    website: http://ros.org/wiki/pr2_tabletop_manipulation_gazebo_demo
  pr2_tabletop_manipulation_launch:
    author: !!python/unicode 'Matei Ciocarlie'
    deps:
    - pr2_object_manipulation_launch
    - household_objects_database
    - tabletop_object_detector
    - tabletop_collision_map_processing
    - pr2_interactive_manipulation
    desc: "Launch files for starting the manipulation pipeline, complete with\n  \
      \  sensor processing for manipulation, on the PR2 robot."
    license: BSD
    shortdesc: pr2_tabletop_manipulation_launch
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_tabletop_manipulation_apps/branches/0.4-branch/pr2_tabletop_manipulation_launch
    website: http://ros.org/wiki/pr2_tabletop_manipulation_launch
  pr2_tasks:
    author: !!python/unicode 'Peter Pastor'
    deps:
    - task_manager
    - dmp_motion_controller
    - dmp_motion_learner
    - dmp_motion_generation
    - policy_library
    - policy_improvement
    - policy_improvement_utilities
    - actionlib
    - task_recorder
    - pr2_tasks_transforms
    - angles
    desc: pr2_tasks
    license: BSD
    shortdesc: pr2_tasks
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/policy_learning/pr2_tasks
    website: http://ros.org/wiki/pr2_tasks
  pr2_tasks_transforms:
    author: !!python/unicode 'Peter Pastor'
    deps:
    - roscpp
    - eigen
    - kdl
    - rosrt
    - visualization_msgs
    - geometry_msgs
    - sensor_msgs
    - dmp_motion_generation
    - pr2_mechanism_model
    - angles
    - policy_improvement_utilities
    desc: pr2_tasks_transforms
    license: BSD
    shortdesc: pr2_tasks_transforms
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/policy_learning/pr2_tasks_transforms
    website: http://ros.org/wiki/pr2_tasks_transforms
  pr2_teleop:
    author: !!python/unicode 'Kevin Watts'
    deps:
    - joy
    - std_msgs
    - geometry_msgs
    - sensor_msgs
    - pr2_controllers_msgs
    - roscpp
    - topic_tools
    desc: "This package contains launch files for starting joystick or\n  keyboard-based\
      \ teleoperation (remote control) of the PR2."
    license: BSD
    shortdesc: Teleoperated the PR2
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_apps/trunk/pr2_teleop
    website: http://ros.org/wiki/pr2_teleop
  pr2_teleop_booth:
    author: !!python/unicode 'Gil Jones'
    deps:
    - actionlib
    - actionlib_msgs
    - roscpp
    - pr2_controllers_msgs
    - ps3joy
    - joy
    - pr2_msgs
    - sensor_msgs
    - pr2_controllers_msgs
    - pr2_mechanism_msgs
    - pr2_arm_kinematics
    - trajectory_filter_server
    - planning_environment
    - robot_self_filter
    - pr2_arm_navigation_perception
    - pr2_common_action_msgs
    - pr2_tuck_arms_action
    - polled_camera
    desc: pr2_teleop_booth
    license: BSD
    shortdesc: pr2_teleop_booth
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/pr2_teleop_booth
    website: http://ros.org/wiki/pr2_teleop_booth
  pr2_teleop_general:
    author: !!python/unicode 'Gil Jones'
    deps:
    - roscpp
    - actionlib
    - actionlib_msgs
    - geometry_msgs
    - sensor_msgs
    - pr2_msgs
    - pr2_controllers_msgs
    - pr2_controller_manager
    - pr2_mechanism_msgs
    - kinematics_msgs
    - urdf
    - ps3joy
    - pr2_common_action_msgs
    - polled_camera
    desc: pr2_teleop_general
    license: BSD
    shortdesc: pr2_teleop_general
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_apps/trunk/pr2_teleop_general
    website: http://ros.org/wiki/pr2_teleop_general
  pr2_tilt_laser_interface:
    author: !!python/unicode 'Radu Rusu, Wim Meeussen, Vijay Pradeep'
    deps:
    - actionlib
    - actionlib_msgs
    - sensor_msgs
    - pr2_msgs
    - eigen
    - laser_geometry
    - pcl_ros
    desc: "Provides a set of tools/actions for manipulating the pr2's tilting\n  \
      \  laser. Simplifies previously complex tasks, such as fetching\n    a single\
      \ sweep, given a set of desired parameters for both the laser\n    driver and\
      \ tilting platform."
    license: BSD
    shortdesc: Tools for using th PR2's tilting laser
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_common_actions/trunk/pr2_tilt_laser_interface
    website: http://ros.org/wiki/pr2_tilt_laser
  pr2_transmission_check:
    author: !!python/unicode 'Kevin Watts'
    deps:
    - roscpp
    - rospy
    - pr2_msgs
    - std_msgs
    - std_srvs
    - diagnostic_msgs
    - pr2_description
    - pr2_component_descriptions
    - pr2_mechanism_msgs
    - angles
    - urdf
    - xacro
    - diagnostic_updater
    - pr2_mechanism_model
    desc: pr2_transmission_check
    license: BSD
    shortdesc: pr2_transmission_check
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/wg_hardware_test/trunk/pr2_transmission_check
    website: http://ros.org/wiki/pr2_transmission_check
  pr2_tuck_arms_action:
    author: !!python/unicode 'Wim Meeussen'
    deps:
    - actionlib
    - rospy
    - actionlib_msgs
    - trajectory_msgs
    - pr2_common_action_msgs
    - pr2_controllers_msgs
    desc: pr2_tuck_arms_action
    license: BSD
    shortdesc: pr2_tuck_arms_action
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_common_actions/trunk/pr2_tuck_arms_action
    website: http://ros.org/wiki/pr2_tuck_arms_action
  pr2_tuckarm:
    author: !!python/unicode 'Wim Meeussen'
    deps:
    - rospy
    - trajectory_msgs
    - pr2_mechanism_msgs
    - pr2_tuck_arms_action
    desc: "Tucks the arms of the PR2 robot into a safe position for moving the base\
      \ of the robot.\n     This also moves the arms out of the view of the tilting\
      \ laser scanner, as much as possible."
    license: BSD
    shortdesc: PR2 Tuck Arms
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_apps/trunk/pr2_tuckarm
    website: http://ros.org/wiki/pr2_tuckarm
  probabilistic_grasp_planner:
    author: !!python/unicode 'Peter Brook'
    deps:
    - std_msgs
    - visualization_msgs
    - geometry_msgs
    - sensor_msgs
    - household_objects_database
    - household_objects_database_msgs
    - object_manipulator
    - object_manipulation_msgs
    - eigen
    desc: "Takes potentially found models and clusters in a scene, and plans\n   \
      \ grasps which are robust to positioning and model uncertainty."
    license: BSD
    shortdesc: probabilistic_grasp_planner
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/object_manipulation/branches/0.4-branch/probabilistic_grasp_planner
    website: http://ros.org/wiki/probabilistic_grasp_planner
  profiling:
    author: !!python/unicode 'Matei Ciocarlie'
    deps: []
    desc: "A simple tool for defining timers and profiling code in C++;\n     Brought\
      \ in from GraspIt!."
    license: GPL
    shortdesc: "A simple tool for defining timers and profiling code in C++;\n   \
      \  Brought in from GraspIt!.\n\n..."
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/sandbox/profiling
    website: http://ros.org/wiki/profiler
  proprioception:
    author: !!python/unicode 'Jivko Sinapov'
    deps:
    - roscpp
    - roslib
    - pr2_controllers_msgs
    - trajectory_msgs
    - actionlib
    - rospy
    - std_msgs
    - sensor_msgs
    desc: proprioception_demo_learner
    license: BSD
    shortdesc: proprioception
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/proprioception
    website: http://ros.org/wiki/proprioception
  putdown_controllers:
    author: !!python/unicode 'Stuart Glaser'
    deps:
    - roscpp
    - pr2_controller_interface
    - pr2_mechanism_model
    - control_toolbox
    - geometry_msgs
    - data_stream_recorder
    - realtime_tools
    - eigen_conversions
    desc: putdown_controllers
    license: BSD
    shortdesc: putdown_controllers
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/putdown_controllers
    website: http://ros.org/wiki/putdown_controllers
  pyclearsilver:
    author: !!python/unicode 'Scott Hassan/hassan@willowgarage.com'
    deps: []
    desc: A bunch of libraries to interface clearsilver with python and many databases.
    license: BSD
    shortdesc: Python Clearsilver
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/web_interface/trunk/pyclearsilver
    website: http://ros.org/wiki/pyclearsilver
  pygeoip:
    author: !!python/unicode 'ROS package maintained by Tim Field'
    deps: []
    desc: pygeoip
    license: LGPL
    shortdesc: pygeoip
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/web_bags/pygeoip
    website: http://ros.org/wiki/pygeoip
  pytoro:
    author: !!python/unicode 'James Bowman'
    deps:
    - rostest
    - rospy
    desc: Python bindings for toro
    license: BSD
    shortdesc: Python bindings for toro
    source: details.php?name=toro
    website: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/vision/pytoro
  qcalc:
    author: !!python/unicode 'Nate Koenig'
    deps:
    - bullet
    desc: qcalc
    license: BSD
    shortdesc: qcalc
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/qcalc
    website: http://pr.willowgarage.com/wiki/qcalc
  qualification:
    author: !!python/unicode 'Kevin Watts (watts@willowgarage.com), Josh Faust (jfaust@willowgarage.com)'
    deps:
    - rospy
    - pr2_camera_focus
    - std_msgs
    - pr2_msgs
    - fingertip_pressure
    - diagnostic_msgs
    - hokuyo_node
    - microstrain_3dmgx2_imu
    - ethercat_trigger_controllers
    - robot_mechanism_controllers
    - joint_qualification_controllers
    - pr2_etherCAT
    - ethercat_hardware
    - runtime_monitor
    - rviz
    - pr2_power_board
    - wg_invent_client
    - roslaunch_caller
    - wge100_camera
    - opencv2
    - cv_bridge
    - rxtools
    - image_view
    - image_proc
    - prosilica_camera
    - pr2_component_descriptions
    - pr2_camera_synchronizer
    - sensor_msgs
    - pr2_controller_manager
    - pr2_controller_configuration
    - pr2_bringup
    - robot_state_publisher
    - ectools
    - pr2_self_test_msgs
    - actionlib
    - single_joint_position_action
    - xacro
    - pr2_counterbalance_check
    - pr2_transmission_check
    desc: Tests PR2 hardware as individual components and assembled robots. Tests,
      analyzes and logs results of the qualification/self-tests.
    license: BSD
    shortdesc: PR2 Hardware Qualification and Testing
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/wg_hardware_test/trunk/qualification
    website: http://www.ros.org/wiki/qualification
  range_image_tests:
    author: !!python/unicode 'Bastian Steder'
    deps:
    - roscpp
    - pcl
    - pcl_ros
    - pcl_visualization
    - stereo_msgs
    - eigen
    desc: "<p>\n      Some experimantal PCL/range image stuff.\n    </p>"
    license: BSD
    shortdesc: range_image
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/point_cloud_perception_experimental/range_image_tests
    website: http://ros.org/wiki/range_image
  rbrief:
    author: !!python/unicode 'Ethan Rublee, Vincent Rabaud'
    deps:
    - opencv2
    - eigen
    desc: rbrief
    license: BSD
    shortdesc: rbrief
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/stacks/object_recognition_experimental/rbrief
    website: http://ros.org/wiki/rbrief
  realtime_publisher_test:
    author: !!python/unicode 'Derek'
    deps:
    - roscpp
    - std_msgs
    - realtime_tools
    desc: realtime_publisher_test
    license: BSD
    shortdesc: realtime_publisher_test
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/realtime_publisher_test
    website: http://ros.org/wiki/realtime_publisher_test
  realtime_tools:
    shortdesc: Realtime tools
  rec_templates:
    author: !!python/unicode 'Gary Bradski'
    deps:
    - rein
    - nodelet
    desc: rec_templates
    license: BSD
    shortdesc: rec_templates
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/stacks/object_recognition_experimental/rec_templates
    website: http://ros.org/wiki/rec_templates
  rein:
    author: !!python/unicode 'Marius Muja, Radu Bogdan Rusu'
    deps:
    - sensor_msgs
    - geometry_msgs
    - roscpp
    - nodelet
    - dynamic_reconfigure
    - tf
    - pcl_ros
    - image_geometry
    - cv_bridge
    - image_transport
    - opencv2
    - pcl
    desc: "The Recognition Infrastructure (ReIn) is a software library that\n    facilitates\
      \ rapid development for 2D/3D object and scene recognition. ReIn\n    can create\
      \ different computational graphs from its various modules by\n    combining\
      \ them together in parallel or in a cascade fashion. Examples\n    include:\
      \ object detectors, pose estimators, attention operators, etc.\n\n    The backbone\
      \ of ReIn is supported by OpenCV\n    (http://opencv.willowgarage.com/) and\
      \ PCL (http://pcl.ros.org)."
    license: BSD
    shortdesc: "The Recognition Infrastructure (ReIn) is a software library that\n\
      \    facilitates rapid develop..."
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/stacks/object_recognition/rein
    website: http://ros.org/wiki/rein
  resistance_monitor:
    author: !!python/unicode 'Derek King'
    deps:
    - rospy
    - sensor_msgs
    - actionlib
    - pr2_controllers_msgs
    - rxtools
    desc: resistance_monitor
    license: BSD
    shortdesc: resistance_monitor
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/resistance_monitor
    website: http://ros.org/wiki/resistance_monitor
  rgbd_assembler:
    author: !!python/unicode 'Jeannette Bohg'
    deps:
    - roscpp
    - tf
    - sensor_msgs
    - stereo_msgs
    - geometry_msgs
    - rviz_interaction_tools
    desc: "Upon a request, this service collects the necessary \n    sensory data\
      \ to transfer the colour information from \n    the wide field to the narrow\
      \ field camera image. \n\n    Since the narrow field cameras of the PR2 are\
      \ monochrome,\n    this can be useful for any algorithm that does, e.g., \n\
      \    segmentation or recognition based partially on colour information."
    license: BSD
    shortdesc: rgbd_assembler
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/tabletop_object_perception/branches/0.4-branch/rgbd_assembler
    website: http://ros.org/wiki/rgbd_assembler
  ride2:
    author: !!python/unicode 'Dave Hershberger'
    deps:
    - roscpp
    - rosconsole
    - eigen
    - rve_common
    - rve_common_transformers
    - rve_dynlib
    - rve_interface_gen
    - rve_interfaces
    - rve_mesh_loader
    - rve_msgs
    - rve_pluginloader
    - rve_properties
    - rve_qt
    - rve_render_client
    - rve_render_server
    - rve_rpc
    - rve_transformer
    - rve_geometry
    - urdf
    - nav_msgs
    - sensor_msgs
    desc: 2nd major version of RIDE, a multi-robot control GUI.
    license: BSD
    shortdesc: 2nd major version of RIDE, a multi-robot control GUI.
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/sandbox/ride2
    website: http://ros.org/wiki/ride2
  ride_agent:
    author: !!python/unicode 'Marshall Strother/ mcstrother@gmail.com'
    deps:
    - geometry_msgs
    - std_msgs
    - actionlib
    - actionlib_msgs
    - rospy
    - roslib
    - stage
    - sensor_msgs
    - nav_msgs
    - move_base_msgs
    - ride_msgs
    - ride_core
    desc: RIDE Agent
    license: BSD
    shortdesc: ride_agent
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/stacks/ride-transitional/ride_agent
    website: http://www.ros.org/wiki/ride_agent
  ride_core:
    author: !!python/unicode 'Erik Karulf'
    deps:
    - rospy
    - nav_msgs
    - sensor_msgs
    - geometry_msgs
    - ride_msgs
    - std_msgs
    desc: "A meta package for containing RIDE code common to both the agent and UI\n\
      \     There is no ROS code in here, but it beats duplicating the library inside\n\
      \     multiple nodes."
    license: BSD
    shortdesc: "A meta package for containing RIDE code common to both the agent and\
      \ UI\n     There is no ROS ..."
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/stacks/ride-transitional/ride_core
    website: http://kermit.cse.wustl.edu/project/ride/
  ride_msgs:
    author: !!python/unicode 'Erik Karulf'
    deps:
    - std_srvs
    - geometry_msgs
    desc: ride_msgs
    license: BSD
    shortdesc: ride_msgs
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/stacks/ride-transitional/ride_msgs
    website: http://pr.willowgarage.com/wiki/ride_msgs
  ride_stage:
    author: !!python/unicode 'Erik Karulf'
    deps:
    - ride_core
    - ride_agent
    - stage
    - fake_localization
    - map_server
    - move_base
    desc: Runs the RIDE user interface on several simulated robots
    license: BSD
    shortdesc: ride_stage
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/stacks/ride-transitional/ride_stage
    website: http://ros.org/wiki/ride_stage
  riq_hand_cli:
    author: !!python/unicode 'Derek King'
    deps:
    - rospy
    - riq_msgs
    desc: riq_hand_cli
    license: BSD
    shortdesc: riq_hand_cli
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/riq_hand/trunk/riq_hand_cli
    website: http://ros.org/wiki/riq_hand_cli
  riq_hand_ethercat_hardware:
    author: !!python/unicode 'Derek King'
    deps:
    - roscpp
    - ethercat_hardware
    - riq_msgs
    desc: riq_hand_ethercat_hardware
    license: BSD
    shortdesc: riq_hand_ethercat_hardware
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/riq_hand/trunk/riq_hand_ethercat_hardware
    website: http://ros.org/wiki/riq_hand_ethercat_hardware
  riq_hand_gui:
    author: !!python/unicode 'Derek King'
    deps:
    - rospy
    - riq_msgs
    - wxswig
    desc: riq_hand_gui
    license: BSD
    shortdesc: riq_hand_gui
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/riq_hand/trunk/riq_hand_gui
    website: http://ros.org/wiki/riq_hand_gui
  riq_msgs:
    author: !!python/unicode 'Derek King'
    deps: []
    desc: riq_msgs
    license: BSD
    shortdesc: riq_msgs
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/riq_hand/trunk/riq_msgs
    website: http://ros.org/wiki/riq_msgs
  rl_utils:
    author: !!python/unicode 'Bhaskara Marthi'
    deps:
    - roslisp_runtime
    - cl_utils
    desc: rl_utils
    license: BSD
    shortdesc: rl_utils
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/rl_utils
    website: http://ros.org/wiki/rl_utils
  robot_kaleidoscope:
    author: !!python/unicode 'Blaise Gassend'
    deps:
    - tf
    - rospy
    - joy
    - turtlesim
    - geometry_msgs
    desc: This node allow a group of robots to be moved in kaleidoscopic patterns
      to achieve primitive robot ballet.
    license: BSD
    shortdesc: Move multiple robots in kaleidoscopic patterns.
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/dance_demo/robot_kaleidoscope
    website: http://ros.org/wiki/robot_kaleidoscope
  robot_mechanism_controllers:
    author: !!python/unicode 'John Hsu, Melonee Wise, Stuart Glaser'
    deps:
    - rospy
    - roscpp
    - angles
    - filters
    - tf
    - tf_conversions
    - kdl
    - pluginlib
    - actionlib
    - std_msgs
    - geometry_msgs
    - diagnostic_msgs
    - trajectory_msgs
    - pr2_controllers_msgs
    - pr2_controller_interface
    - pr2_controller_manager
    - kdl_parser
    - pr2_mechanism_model
    - control_toolbox
    - realtime_tools
    - message_filters
    - control_msgs
    desc: ''
    license: BSD
    shortdesc: Generic Mechanism Controller Library
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_controllers/branches/pr2_controllers-1.4/robot_mechanism_controllers
    website: http://ros.org/wiki/robot_mechanism_controllers
  robot_self_filter:
    author: !!python/unicode 'Ioan Sucan'
    deps:
    - roscpp
    - tf
    - filters
    - sensor_msgs
    - visualization_msgs
    - geometric_shapes
    - urdf
    - resource_retriever
    - assimp
    - pcl
    desc: The robot self filter is a package that allows you to filter out robot body
      parts from sensor information using the known positions and orientations of
      these parts.
    license: BSD
    shortdesc: robot_self_filter
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/motion_planning_common/trunk/robot_self_filter
    website: http://ros.org/wiki/robot_self_filter
  ros_apache2:
    author: !!python/unicode ''
    deps:
    - webui
    desc: ros_apache2
    license: BSD
    shortdesc: ros_apache2
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/web_interface/trunk/ros_apache2
    website: http://ros.org/wiki/ros_apache2
  rosh_demo:
    author: !!python/unicode 'Ken Conley'
    deps:
    - rosh
    - rosh_common
    - rosh_geometry
    - roscpp
    - tf
    - geometry_msgs
    - actionlib
    - pr2_controllers_msgs
    - sensor_msgs
    - angles
    - pr2_props
    desc: ''
    license: BSD
    shortdesc: ROSH demo scripts
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/sandbox/rosh_demo
    website: http://ros.org/wiki/rosh_common
  rosjson:
    author: !!python/unicode 'Ken Conley/kwc@willowgarage.com'
    deps:
    - rospy
    - roslib
    desc: "rosjson is a Python library for converting ROS messages to JSON\n     (JavaScript\
      \ Object Notation) representation."
    license: BSD
    shortdesc: "rosjson is a Python library for converting ROS messages to JSON\n\
      \     (JavaScript Object Notat..."
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/web_interface/trunk/rosjson
    website: http://ros.org/wiki/rosjson
  roslaunch_caller:
    author: !!python/unicode 'Kevin Watts (watts@willowgarage.com), Ken Conley (kwc@willowgarage.com)'
    deps:
    - rospy
    - roslaunch
    desc: ''
    license: BSD
    shortdesc: Puts roslaunch in a library for API use
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/wg_hardware_test/trunk/roslaunch_caller
    website: http://www.ros.org/wiki/roslaunch_caller
  roslaunch_parse_tester:
    author: !!python/unicode 'Kevin Watts'
    deps:
    - roslaunch
    - rostest
    desc: Roslaunch parse tester can check a launch file, package with launch files,
      or collection of launch files for parsing and loading.
    license: BSD
    shortdesc: roslaunch_parse_tester
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/test_wg_hardware_test_systems/roslaunch_parse_tester
    website: http://www.ros.org/wiki/roslaunch_parse_tester
  rosmpi:
    author: !!python/unicode 'Radu Bogdan Rusu, John Hsu'
    deps:
    - roscpp
    - pcl
    - openmpi_devel
    desc: "ROSMPI provides a compact library for Publisher/Subscriber ROS-like\n \
      \   mechanisms over OpenMPI."
    license: BSD
    shortdesc: ROS OpenMPI bridge
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/mpi/trunk/rosmpi
    website: http://ros.org/wiki/rosmpi
  rossql:
    author: !!python/unicode 'Bhaskara Marthi'
    deps:
    - roslib
    - rospy
    desc: SQL bindings for ros
    license: BSD
    shortdesc: SQL bindings for ros
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/rossql
    website: http://ros.org/wiki/rossql
  rossql_examples:
    author: !!python/unicode 'Bhaskara Marthi'
    deps:
    - rospy
    - rossql
    - geometry_msgs
    desc: Examples for the rossql package
    license: BSD
    shortdesc: rossql_examples
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/rossql_examples
    website: http://ros.org/wiki/rossql_examples
  rosweb:
    author: !!python/unicode 'Scott Hassan, Rob Wheeler, Nate Koenig'
    deps:
    - roslib
    - rospy
    - rosservice
    - rosjson
    - std_msgs
    desc: "rosweb is a temporary package to replace the original rosweb in the ROS\n\
      \     repository.  It is placed in the sandbox while development is ongoing,\
      \ so\n     we are not gated on ROS stack releases.  When the server is more\
      \ stable,\n     it will be moved to the ROS repository and replace the old rosweb."
    license: BSD
    shortdesc: "rosweb is a temporary package to replace the original rosweb in the\
      \ ROS\n     repository.  It ..."
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/web_interface/trunk/rosweb
    website: http://ros.org/wiki/rosweb
  rttuning_controllers:
    author: !!python/unicode 'Gunter Niemeyer'
    deps:
    - roscpp
    - pluginlib
    - pr2_controller_interface
    - pr2_mechanism_model
    - rttuning_utils
    desc: Realtime Tuning Controllers
    license: BSD
    shortdesc: rttuning_controllers
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/rttuning/rttuning_controllers
    website: http://ros.org/wiki/rttuning_controllers
  rttuning_scripts:
    author: !!python/unicode 'Gunter Niemeyer'
    deps:
    - rttuning_utils
    desc: Realtime Tuning Scripts
    license: BSD
    shortdesc: rttuning_scripts
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/rttuning/rttuning_scripts
    website: http://ros.org/wiki/rttuning_scripts
  rttuning_utils:
    author: !!python/unicode 'Gunter Niemeyer'
    deps:
    - roscpp
    - pluginlib
    - pr2_controller_interface
    - pr2_mechanism_model
    - std_srvs
    desc: Realtime Tuning Utilities
    license: BSD
    shortdesc: rttuning_utils
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/rttuning/rttuning_utils
    website: http://ros.org/wiki/rttuning_utils
  rve_gui:
    author: !!python/unicode 'Dave Hershberger'
    deps:
    - roscpp
    - rosconsole
    - eigen
    - rve_common
    - rve_common_transformers
    - rve_dynlib
    - rve_interface_gen
    - rve_interfaces
    - rve_mesh_loader
    - rve_msgs
    - rve_pluginloader
    - rve_properties
    - rve_qt
    - rve_render_client
    - rve_render_server
    - rve_rpc
    - rve_transformer
    - urdf
    - nav_msgs
    - sensor_msgs
    desc: aviz
    license: BSD
    shortdesc: aviz
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/sandbox/rve_gui
    website: http://ros.org/wiki/aviz
  rviz_interaction_tools:
    author: !!python/unicode 'David Gossow'
    deps:
    - rviz
    - ogre_tools
    - sensor_msgs
    - stereo_msgs
    - geometry_msgs
    - geometric_shapes_msgs
    desc: "Various tools for realizing 3D user interfaces in rviz,\n     e.g. for\
      \ scene segmentation, object recognition or\n     grasping."
    license: BSD
    shortdesc: rviz_interaction_tools
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/object_manipulation/branches/0.4-branch/rviz_interaction_tools
    website: http://ros.org/wiki/rviz_interaction_tools
  saliencydetection:
    author: !!python/unicode 'Hae Jong Seo'
    deps:
    - roscpp
    - opencv2
    - cv_bridge
    - sensor_msgs
    - image_transport
    - image_view
    desc: saliencydetection
    license: BSD
    shortdesc: saliencydetection
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/saliencydetection
    website: http://ros.org/wiki/saliencydetection
  sample_application:
    author: !!python/unicode 'Scott Hassan'
    deps:
    - roslib
    - rospy
    - webui
    - rosweb
    - std_msgs
    desc: Sample Application
    license: BSD
    shortdesc: sample_app
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/web_apps_experimental/sample_application
    website: http://ros.org/wiki/sample_application
  sbpl:
    author: !!python/unicode 'Maxim Likhachev/maximl@seas.upenn.edu'
    deps:
    - roscpp
    desc: A library of search-based planning algorithms
    license: BSD
    shortdesc: Search-based Planning Library (SBPL)
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/motion_planners/trunk/sbpl
    website: http://ros.org/wiki/sbpl
  sbpl_cart_planner:
    author: !!python/unicode 'Sachin Chitta'
    deps:
    - sbpl
    - roscpp
    - rosconsole
    - std_msgs
    - geometry_msgs
    - angles
    - tf
    - costmap_2d
    - nav_core
    - pluginlib
    - visualization_msgs
    - cart_pushing_msgs
    desc: sbpl_cart_planner
    license: BSD
    shortdesc: sbpl_cart_planner
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/cart_pushing/trunk/sbpl_cart_planner
    website: http://ros.org/wiki/sbpl_cart_planner
  sbpl_door_planner:
    author: !!python/unicode 'Maxim Likhachev/maximl@seas.upenn.edu, Sachin Chitta/schitta@willowgarage.com'
    deps:
    - roscpp
    - rosconsole
    - std_msgs
    - geometry_msgs
    - door_msgs
    - pr2_doors_common
    - angles
    - tf
    desc: ''
    license: BSD
    shortdesc: Doorway Planning Research
    source: details.php?name=sbpl
    website: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/motion_planning_research/planning_research/sbpl_door_planner
  sbpl_global_planner:
    author: !!python/unicode 'Gil Jones'
    deps:
    - sbpl
    - roscpp
    - rosconsole
    - std_msgs
    - geometry_msgs
    - costmap_2d
    - tf
    - mpglue
    - pluginlib
    - nav_core
    - libsunflower
    - map_server
    desc: sbpl_global_planner
    license: BSD
    shortdesc: sbpl_global_planner
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/motion_planning_research/planning_research/sbpl_global_planner
    website: http://ros.org/wiki/sbpl_global_planner
  sbpl_lattice_planner_3d:
    author: !!python/unicode 'Michael Phillips, Armin Hornung'
    deps:
    - roscpp
    - sbpl
    - costmap_2d
    - nav_core
    - pluginlib
    - geometry_msgs
    - nav_msgs
    - sbpl_lattice_planner
    - octomap_server
    - planning_models
    - planning_environment
    - pose_follower
    desc: This package provides an extended sbpl_lattice_planner to perform 3D collision
      checks against the robot's full kinematic configuration. It should serve as
      a drop-in replacement as global planner in the navigation stack, to be used
      with pose_follower_3d as local planner. The 3D collision map is usually sent
      out from octomap_server.
    license: BSD
    shortdesc: sbpl_lattice_planner_3d - an extended sbpl_lattice_planner which performs
      collision checks in 3D
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/sandbox/3d_navigation/sbpl_lattice_planner_3d
    website: http://ros.org/wiki/sbpl_lattice_planner_3d
  sbpl_planner_node:
    author: !!python/unicode 'Sachin Chitta/schitta@willowgarage.com'
    deps:
    - roscpp
    - rosconsole
    - std_msgs
    - geometry_msgs
    - costmap_2d
    - tf
    - mpglue
    desc: ''
    license: BSD
    shortdesc: ROS ified SBPL planning
    source: details.php?name=sbpl
    website: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/motion_planning_research/planning_research/sbpl_planner_node
  scanmatcher:
    author: !!python/unicode 'Kurt Konolige'
    deps:
    - std_msgs
    - roscpp
    - eigen
    desc: scanmatcher
    license: BSD
    shortdesc: scanmatcher
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/vision/scanmatcher
    website: http://ros.org/wiki/scanmatcher
  semantic_point_annotator:
    author: !!python/unicode 'Radu Bogdan Rusu'
    deps:
    - roscpp
    - eigen
    - tf
    desc: A node which annotates 3D point cloud data with semantic labels.
    license: BSD
    shortdesc: A node which annotates 3D point cloud data with semantic labels.
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_navigation/branches/cturtle_branch/semantic_point_annotator
    website: http://pr.willowgarage.com
  serial_port:
    author: !!python/unicode 'Morgan Quigley (email: mquigley@cs.stanford.edu)'
    deps: []
    desc: These are used all over the place for talking to hardware. These implementations
      are certainly suboptimal, but they do seem to work.
    license: BSD
    shortdesc: A few simple serial port classes
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/drivers_experimental/serial_port
    website: http://stair.stanford.edu
  service_optimizer:
    author: !!python/unicode 'Peter Brook'
    deps:
    - rospy
    desc: service_optimizer
    license: BSD
    shortdesc: service_optimizer
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/service_optimizer
    website: http://ros.org/wiki/service_optimizer
  shape_detection:
    author: !!python/unicode 'Victor Eruhimov'
    deps:
    - opencv2
    - chamfer_matching
    desc: shape_detection
    license: BSD
    shortdesc: shape_detection
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/stacks/object_recognition/shape_detection
    website: http://ros.org/wiki/shape_detection
  sim_contact_translator:
    author: !!python/unicode 'Kaijen Hsiao'
    deps:
    - gazebo_plugins
    - pr2_msgs
    - geometry_msgs
    desc: sim_contact_translator
    license: BSD
    shortdesc: sim_contact_translator
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/sim_contact_translator
    website: http://ros.org/wiki/sim_contact_translator
  simple_Jtranspose_controller:
    author: !!python/unicode 'Kaijen Hsiao'
    deps:
    - pluginlib
    - kdl
    - tf
    - geometry_msgs
    - pr2_controller_interface
    - roscpp
    - robot_mechanism_controllers
    - std_srvs
    desc: simple_Jtranspose_controller
    license: BSD
    shortdesc: simple_Jtranspose_controller
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_object_manipulation/branches/0.4-branch/simple_Jtranspose_controller
    website: http://ros.org/wiki/simple_Jtranspose_controller
  simple_cartesian_controller:
    author: !!python/unicode 'Stuart Glaser'
    deps:
    - rospy
    - roscpp
    - angles
    - tf
    - tf_conversions
    - kdl
    - pluginlib
    - std_msgs
    - geometry_msgs
    - diagnostic_msgs
    - pr2_controller_interface
    - pr2_controller_manager
    - kdl_parser
    - pr2_mechanism_model
    - control_toolbox
    - realtime_tools
    - eigen_conversions
    - data_stream_recorder
    desc: simple_cartesian_controller
    license: BSD
    shortdesc: simple_cartesian_controller
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/simple_cartesian_controller
    website: http://ros.org/wiki/simple_cartesian_controller
  single_joint_position_action:
    author: !!python/unicode 'Stuart Glaser'
    deps:
    - roscpp
    - pr2_controllers_msgs
    - actionlib
    desc: "The single joint position action is a node that provides an action\n  interface\
      \ for commanding a trajectory to move a joint to a particular\n  position. The\
      \ action reports success when the joint reaches the desired\n  position."
    license: BSD
    shortdesc: single_joint_position_action
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_controllers/branches/pr2_controllers-1.4/single_joint_position_action
    website: http://ros.org/wiki/single_joint_position_action
  soccer_application:
    author: !!python/unicode 'Brian Gerkey, Eitan Marder-Eppstein'
    deps:
    - actionlib
    - move_base_msgs
    - sound_play
    - webui
    desc: ''
    license: BSD
    shortdesc: soccer_application
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_web_apps/trunk/soccer_application
    website: http://pr.willowgarage.com/wiki/pr2_addons
  spline_interp:
    author: !!python/unicode 'Stuart Glaser'
    deps:
    - tf
    - geometry_msgs
    desc: spline_interp
    license: BSD
    shortdesc: spline_interp
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/spline_interp
    website: http://ros.org/wiki/spline_interp
  spline_smoother:
    author: !!python/unicode 'Mrinal Kalakrishnan / mail@mrinal.net'
    deps:
    - urdf
    - angles
    - roscpp
    - filters
    - trajectory_msgs
    - motion_planning_msgs
    desc: 'This package takes in position trajectories (with times), and can fill
      in

      velocities and accelerations at the knot points using various schemes, like

      numerical differentiation, clamped cubic splines, or the Fritsch-Butland monotonic
      cubic interpolator.'
    license: BSD
    shortdesc: Converts a position trajectory to a smooth spline trajectory
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/trajectory_filters/trunk/spline_smoother
    website: http://ros.org/wiki/spline_smoother
  sr_hand_ethercat:
    author: !!python/unicode 'fawad@shadowrobot.com'
    deps:
    - roscpp
    - diagnostic_aggregator
    - diagnostic_updater
    - diagnostic_msgs
    - self_test
    - urdf
    - xacro
    - convex_decomposition
    - ivcon
    - srh_controller_configuration
    - srh_calibration_controllers
    - robot_mechanism_controllers
    desc: "This package contains XML (and xacro macros) descriptions of robot kinematics\
      \ in the format\n    defined at Willow Garage."
    license: BSD
    shortdesc: Shadow Robot Hand Definitions Main Directory
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/shadow_robot_ethercat/sr_hand_ethercat
    website: http://pr.willowgarage.com/wiki/RobotDescriptionFormat
  srh_calibration_controllers:
    author: !!python/unicode 'Ugo Cupcic'
    deps:
    - std_msgs
    - std_srvs
    - pr2_controller_interface
    - roscpp
    - pr2_mechanism_model
    - realtime_tools
    - robot_mechanism_controllers
    - pr2_mechanism_controllers
    - pluginlib
    - rosconsole
    - angles
    - control_toolbox
    desc: "The srh_calibration_controllers package contains the controllers\n    \
      \ used to bring all the joints in the PR2 to a calibrated state."
    license: BSD
    shortdesc: srh_calibration_controllers
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/shadow_robot_ethercat/srh_calibration_controllers
    website: http://ros.org/wiki/srh_calibration_controllers
  srh_controller_configuration:
    author: !!python/unicode 'Ugo Cupcic'
    deps:
    - pr2_controller_manager
    - robot_mechanism_controllers
    desc: Configuration files for Shadow Robot hand controllers.
    license: BSD
    shortdesc: srh_controller_configuration
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/shadow_robot_ethercat/srh_controller_configuration
    website: http://ros.org/wiki/srh_controller_configuration
  srh_defs:
    author: !!python/unicode 'Derek King'
    deps: []
    desc: srh_defs
    license: BSD
    shortdesc: srh_defs
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/shadow_robot_ethercat/srh_defs
    website: http://ros.org/wiki/srh_defs
  srh_ethercat_hardware:
    author: !!python/unicode 'Ugo Cupcic, Derek King'
    deps:
    - roscpp
    - ethercat_hardware
    desc: EtherCAT device plugin for Shadow Hand.
    license: '?'
    shortdesc: shadow_ethercat_hardware
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/shadow_robot_ethercat/srh_ethercat_hardware
    website: http://ros.org/wiki/shadow_ethercat_hardware
  srh_mtrace:
    author: !!python/unicode 'Derek King'
    deps:
    - srh_ethercat_hardware
    desc: srh_mtrace
    license: BSD
    shortdesc: srh_mtrace
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/shadow_robot_ethercat/srh_mtrace
    website: http://ros.org/wiki/srh_mtrace
  stage_extensions:
    author: !!python/unicode 'Feng Wu'
    deps:
    - roscpp
    - nav_msgs
    - geometry_msgs
    - sensor_msgs
    - pr2_controllers_msgs
    - roslib
    - tf
    - laser_geometry
    - actionlib
    - stage_msgs
    desc: stage_extensions
    license: BSD
    shortdesc: stage_extensions
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/find_object/stage_extensions
    website: http://ros.org/wiki/stage_extensions
  stage_msgs:
    author: !!python/unicode 'Feng Wu'
    deps:
    - geometry_msgs
    desc: stage_msgs
    license: BSD
    shortdesc: stage_msgs
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/find_object/stage_msgs
    website: http://ros.org/wiki/stage_msgs
  state_machine_actions:
    author: !!python/unicode 'Alex Sorokin'
    deps:
    - state_machine_core
    - actionlib
    - actionlib_msgs
    - geometry_msgs
    - move_base_msgs
    - move_head
    - joy
    desc: state_machine_actions
    license: BSD
    shortdesc: state_machine_actions
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/state_machine_actions
    website: http://ros.org/wiki/state_machine_actions
  state_machine_core:
    author: !!python/unicode 'Siddhartha Srinivasa (siddhartha.srinivasa@intel.com),
      Alexander Sorokin (syrnick@gmail.com)'
    deps:
    - rospy
    - rostest
    desc: Abstract state machine implementation. This package provides base classes
      for specialized states. Those in turn can perform different actions.
    license: BSD
    shortdesc: state_machine_core
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/state_machine_core
    website: http://ros.org/wiki/state_machine_core
  static_transform_broadcaster:
    author: !!python/unicode 'Matei Ciocarlie'
    deps:
    - tf
    - geometry_msgs
    desc: static_transform_broadcaster
    license: BSD
    shortdesc: static_transform_broadcaster
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/object_manipulation/branches/0.4-branch/static_transform_broadcaster
    website: http://ros.org/wiki/static_transform_broadcaster
  stereo_benchmark_gpu:
    author: !!python/unicode 'Kevin Watts'
    deps:
    - roscpp
    - stereo_image_proc
    - stereo_image_proc_gpu
    - stereo_gpu
    - image_transport
    - image_geometry
    - rosbag
    - message_filters
    - sensor_msgs
    desc: stereo_test loads bag files of stereo data into memory, and then processes
      them with both a normal stereo_image_proc::Processor and a GPU version in stereo_image_proc_gpu.
    license: BSD
    shortdesc: Benchmark GPU vs CPU stereo implementations
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/stereo_benchmark_gpu
    website: http://ros.org/wiki/stereo_benchmark_gpu
  stereo_gpu:
    author: !!python/unicode 'andrey'
    deps:
    - opencv2
    desc: stereo_gpu
    license: BSD
    shortdesc: stereo_gpu
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/stereo_gpu
    website: http://ros.org/wiki/stereo_gpu
  stereo_image_proc_gpu:
    author: !!python/unicode 'Kurt Konolige, Jeremy Leibs, Patrick Mihelich'
    deps:
    - roscpp
    - message_filters
    - opencv2
    - cv_bridge
    - sensor_msgs
    - stereo_msgs
    - image_proc
    - dynamic_reconfigure
    - stereo_gpu
    - stereo_image_proc
    desc: Stereo and single image rectification and disparity processing.
    license: BSD
    shortdesc: Stereo and single image rectification and disparity processing.
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/stereo_image_proc_gpu
    website: http://www.ros.org/wiki/stereo_image_proc
  stereo_object_model_generation:
    author: !!python/unicode 'Suat Gedikli'
    deps:
    - roscpp
    - std_msgs
    - tf
    - opencv2
    - eigen3
    - dp_ptu47_pan_tilt_stage
    - image_geometry
    - stereo_msgs
    - sensor_msgs
    - visualization_msgs
    - pcl
    - frame_common
    - stereo_object_recognition
    - stereo_image_proc
    - posest
    - vslam_system
    desc: stereo_object_model_generation
    license: BSD
    shortdesc: stereo_object_model_generation
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/stacks/object_recognition_experimental/stereo_object_model_generation
    website: http://ros.org/wiki/stereo_object_model_generation
  stereo_object_recognition:
    author: !!python/unicode 'Suat Gedikli'
    deps:
    - roscpp
    - std_msgs
    - tf
    - opencv2
    - image_geometry
    - stereo_msgs
    - sensor_msgs
    - pcl
    desc: stereo_object_recognition
    license: BSD
    shortdesc: stereo_object_recognition
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/stacks/object_recognition/stereo_object_recognition
    website: http://ros.org/wiki/object_recognition
  stomp_motion_planner:
    author: !!python/unicode 'Mrinal Kalakrishnan / mail@mrinal.net'
    deps:
    - roscpp
    - rosbag
    - planning_models
    - planning_environment
    - planning_environment_msgs
    - motion_planning_msgs
    - mapping_msgs
    - kdl
    - kdl_parser
    - angles
    - eigen
    - visualization_msgs
    - tf
    - distance_field
    - sensor_msgs
    - trajectory_msgs
    - filters
    - spline_smoother
    - move_arm_msgs
    - assimp
    - kinematics_msgs
    - pr2_controllers_msgs
    desc: ''
    license: BSD
    shortdesc: Stochastic Trajectory Optimization for Motion Planning
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/policy_learning/stomp_motion_planner
    website: http://ros.org/wiki/stomp_motion_planner
  student_database:
    author: !!python/unicode 'Matei Ciocarlie'
    deps:
    - database_interface
    desc: "Example package for using the database_interface. Contains the\n    code\
      \ used in the database_interface tutorials."
    license: BSD
    shortdesc: student_database
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/sql_database/trunk/student_database
    website: http://ros.org/wiki/student_database
  surface_reconstruction:
    author: !!python/unicode 'Rosie Li'
    deps:
    - pcl
    desc: Surface reconstruction method (to be named) for PCL.
    license: BSD
    shortdesc: surface_reconstruction
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/point_cloud_perception_experimental/surface_reconstruction
    website: http://ros.org/wiki/surface_reconstruction
  table_boundary_detector:
    author: !!python/unicode 'Feng Wu'
    deps:
    - roscpp
    - tf
    - visualization_msgs
    - sensor_msgs
    - geometry_msgs
    - nav_msgs
    - pcl
    - opencv2
    - geometric_shapes_msgs
    - laser_assembler
    desc: table_boundary_detector
    license: BSD
    shortdesc: table_boundary_detector
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/find_object/table_boundary_detector
    website: http://ros.org/wiki/table_boundary_detector
  table_clutter_detector:
    author: !!python/unicode 'Bhaskara Marthi'
    deps:
    - actionlib
    - pcl
    - sensor_msgs
    - find_object_actions
    - point_cloud_python
    - laser_assembler
    - tf
    - visualization_msgs
    desc: table_clutter_detector
    license: BSD
    shortdesc: table_clutter_detector
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/find_object/table_clutter_detector
    website: http://ros.org/wiki/table_clutter_detector
  tabletop_collision_map_processing:
    author: !!python/unicode 'Matei Ciocarlie'
    deps:
    - collision_environment_msgs
    - mapping_msgs
    - std_srvs
    - pr2_msgs
    - geometric_shapes_msgs
    - tf
    - actionlib
    - household_objects_database_msgs
    - object_manipulation_msgs
    - tabletop_object_detector
    desc: "Populates and manages a collision environment using the results of\n  \
      \  sensor processing from the tabletop_object_detector. Functionality\n    includes\
      \ adding and removing detected objects from the collision\n    environment,\
      \ and requesting static collision maps for obstacle\n    avoidance."
    license: BSD
    shortdesc: tabletop_collision_map_processing
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/tabletop_object_perception/branches/0.4-branch/tabletop_collision_map_processing
    website: http://ros.org/wiki/tabletop_collision_map_processing
  tabletop_msgs:
    author: !!python/unicode 'Ioan Sucan'
    deps:
    - geometry_msgs
    - std_msgs
    - mapping_msgs
    - geometric_shapes_msgs
    desc: tabletop_msgs
    license: BSD
    shortdesc: tabletop_msgs
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/demos/tabletop_manipulation/tabletop_msgs
    website: http://pr.willowgarage.com/wiki/tabletop_msgs
  tabletop_object_detector:
    author: !!python/unicode 'Marius Muja and Matei Ciocarlie'
    deps:
    - roscpp
    - tf
    - visualization_msgs
    - sensor_msgs
    - geometry_msgs
    - pcl
    - distance_field
    - household_objects_database_msgs
    desc: "Performs object segmentation and simple object recognition for\n    constrained\
      \ scenes."
    license: BSD
    shortdesc: tabletop_object_detector
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/tabletop_object_perception/branches/0.4-branch/tabletop_object_detector
    website: http://ros.org/wiki/object_detector
  tabletop_srvs:
    author: !!python/unicode 'Ioan Sucan'
    deps:
    - std_msgs
    - geometry_msgs
    - tabletop_msgs
    - sensor_msgs
    desc: tabletop_srvs
    license: BSD
    shortdesc: tabletop_srvs
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/demos/tabletop_manipulation/tabletop_srvs
    website: http://pr.willowgarage.com/wiki/tabletop_srvs
  task_manager:
    author: !!python/unicode 'Peter Pastor'
    deps:
    - roscpp
    - pluginlib
    - policy_library
    - policy_improvement_utilities
    - pr2_mechanism_msgs
    desc: task_manager
    license: BSD
    shortdesc: task_manager
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/policy_learning/task_manager
    website: http://ros.org/wiki/task_manager
  task_recorder:
    author: !!python/unicode 'Peter Pastor'
    deps:
    - roscpp
    - sensor_msgs
    - pr2_msgs
    - geometry_msgs
    - visualization_msgs
    - slipgrip_controller
    - tf
    - message_filters
    - kdl
    - angles
    - filters
    - eigen
    - policy_improvement_utilities
    - laser_geometry
    - rosbag
    desc: task_recorder
    license: BSD
    shortdesc: task_recorder
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/policy_learning/task_recorder
    website: http://ros.org/wiki/task_recorder
  task_recorder_test:
    author: !!python/unicode 'Peter Pastor'
    deps:
    - roscpp
    - task_recorder
    - pr2_msgs
    - std_msgs
    - policy_improvement_utilities
    desc: task_recorder_test
    license: BSD
    shortdesc: task_recorder_test
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/policy_learning/task_recorder_test
    website: http://ros.org/wiki/task_recorder_test
  teleop3d:
    author: !!python/unicode 'Tim Field'
    deps:
    - rospy
    - roslib
    - std_msgs
    - webui
    - gazebo
    - pr2_gazebo
    - pr2_controller_manager
    - stereo_image_proc
    - topic_tools
    - geometry_msgs
    - kinematics_msgs
    - pr2_arm_kinematics
    desc: Teleop the PR2 via the web in 3D.
    license: BSD
    shortdesc: Teleop the PR2 via the web in 3D.
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/teleop3d
    website: http://ros.org/wiki/teleop3d
  teleop_base:
    author: !!python/unicode 'Morgan Quigley and Brian Gerkey'
    deps:
    - roscpp
    - rospy
    - std_msgs
    - nav_msgs
    - geometry_msgs
    - tf
    - control_toolbox
    desc: Teleoperation of a robot from keyboard and joystick.
    license: BSD
    shortdesc: Teleoperation of a robot from keyboard and joystick.
    source: details.php?name=joy
    website: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/teleop_base
  teleop_controllers:
    author: !!python/unicode 'Stuart Glaser'
    deps:
    - rospy
    - roscpp
    - rosrt
    - angles
    - tf
    - tf_conversions
    - kdl
    - pluginlib
    - std_msgs
    - geometry_msgs
    - diagnostic_msgs
    - pr2_controller_interface
    - pr2_controller_manager
    - kdl_parser
    - pr2_mechanism_model
    - control_toolbox
    - realtime_tools
    - eigen_conversions
    - rosatomic
    - allocators
    - lockfree
    desc: "This package contains the cartesian controllers used in the\n     Willow\
      \ Garage teleop setup."
    license: BSD
    shortdesc: teleop_controllers
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_cockpit/trunk/teleop_controllers
    website: http://ros.org/wiki/teleop_controllers
  teleop_haptic_fb:
    author: !!python/unicode 'Bert Willaert'
    deps:
    - rospy
    - roscpp
    - rosrt
    - angles
    - tf
    - tf_conversions
    - kdl
    - pluginlib
    - std_msgs
    - geometry_msgs
    - diagnostic_msgs
    - pr2_controller_interface
    - pr2_controller_manager
    - kdl_parser
    - pr2_mechanism_model
    - control_toolbox
    - realtime_tools
    - eigen_conversions
    - filters
    - rosatomic
    - allocators
    - lockfree
    - OrocosMsgPkg
    - ft_sensor_controller
    desc: teleop_haptic_fb
    license: BSD
    shortdesc: teleop_haptic_fb
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/teleop_haptic_fb
    website: http://ros.org/wiki/teleop_haptic_fb
  teleop_head:
    author: !!python/unicode 'Kevin Watts'
    deps:
    - sensor_msgs
    - trajectory_msgs
    - roscpp
    desc: "Teleop head keyboard moves the head from keyboard commands. Used in \n\
      \  pr2_head_cart. Only works on PR2 head."
    license: BSD
    shortdesc: Contains executable for teleoperation of PR2 head
    source: details.php?name=joy
    website: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_common_alpha/trunk/teleop_head
  teleop_microscribe:
    author: !!python/unicode 'Stuart Glaser'
    deps:
    - roscpp
    - rospy
    - geometry_msgs
    - std_srvs
    - microscribe
    - tf
    - pr2_controllers_msgs
    - pr2_cockpit_msgs
    - actionlib
    - image_rotate
    - infinity_pedals
    desc: teleop_microscribe
    license: BSD
    shortdesc: teleop_microscribe
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_cockpit/trunk/teleop_microscribe
    website: http://ros.org/wiki/teleop_microscribe
  teleop_ps3_application:
    author: !!python/unicode 'Scott Hassan'
    deps:
    - roslib
    - rospy
    - webui
    - rosweb
    - std_msgs
    - pr2_teleop
    desc: This application provides remote control for a PR2 via a Playstation 3 controller.
    license: BSD
    shortdesc: teleop_ps3_application
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_web_apps/trunk/teleop_ps3_application
    website: http://ros.org/wiki/teleop_ps3_application
  teleop_srh_keyboard:
    author: !!python/unicode 'Shadow Robotics?'
    deps:
    - std_msgs
    - pr2_mechanism_controllers
    desc: Operates shadow hand from keyboard input
    license: '?'
    shortdesc: Operates shadow hand from keyboard input
    source: details.php?name=roscpp
    website: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/shadow_robot_ethercat/teleop_srh_keyboard
  test_LARK:
    author: !!python/unicode 'Hae Jong Seo'
    deps:
    - roscpp
    - opencv2
    - cv_bridge
    - sensor_msgs
    - image_transport
    - image_view
    desc: test_LARK
    license: BSD
    shortdesc: test_LARK
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/test_LARK
    website: http://ros.org/wiki/test_LARK
  test_collision_space:
    author: !!python/unicode 'Ioan Sucan/isucan@willowgarage.com'
    deps:
    - roslib
    - visualization_msgs
    - planning_models
    - collision_space
    - planning_environment
    desc: "A visualization tool to check whether collision space code is\n    working\
      \ appropriately"
    license: BSD
    shortdesc: Test collision spaces
    source: details.php?name=roscpp
    website: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_arm_navigation_tests/trunk/test_collision_space
  test_gazebo:
    author: !!python/unicode 'John Hsu'
    deps:
    - gazebo
    - gazebo_plugins
    - gazebo_worlds
    - gazebo_tools
    - std_srvs
    - geometry_msgs
    desc: Contains a variety of unit tests for gazebo, tools and plugins.
    license: BSD
    shortdesc: test_gazebo
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/wg_robots_gazebo/trunk/test_gazebo
    website: http://ros.org/wiki/test_gazebo
  test_pr2_2dnav_gazebo:
    author: !!python/unicode 'John Hsu'
    deps:
    - pr2_gazebo_plugins
    - gazebo_plugins
    - map_server
    - fake_localization
    - robot_pose_ekf
    - pr2_gazebo
    - tf
    - laser_assembler
    - std_msgs
    - nav_msgs
    - rviz
    - rxtools
    - pr2_2dnav_gazebo
    desc: Test 2dnav stack in 3d sim.
    license: BSD
    shortdesc: Test 2dnav stack in 3d sim.
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/wg_robots_gazebo/trunk/test_pr2_2dnav_gazebo
    website: http://pr.willowgarage.com/wiki/pr2_simulator
  test_pr2_collision_gazebo:
    author: !!python/unicode 'John Hsu'
    deps:
    - rospy
    - rostest
    - nav_msgs
    - pr2_gazebo_plugins
    - gazebo_plugins
    - pr2_gazebo
    - pr2_ogre
    - gazebo_worlds
    desc: Tony's PR2 sliding down a ramp ad hoc test for collisions in simulation.
    license: BSD
    shortdesc: Tests for Gazebo Plugins
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/wg_robots_gazebo/trunk/test_pr2_collision_gazebo
    website: http://pr.willowgarage.com/wiki/test_pr2_collision_gazebo
  test_pr2_component_descriptions:
    author: !!python/unicode 'Kevin Watts'
    deps:
    - pr2_component_descriptions
    - gazebo_tools
    - xacro
    desc: Tests that pr2_component_descriptions parse with xacro/xacro.py and gazebo_tools/gazebo_model.
    license: BSD
    shortdesc: Parse test for URDF files in pr2_component_descriptions
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/test_wg_hardware_test_systems/test_pr2_component_descriptions
    website: http://ros.org/wiki/test_pr2_component_descriptions
  test_pr2_description:
    author: !!python/unicode 'Kevin Watts'
    deps:
    - pr2_description
    - xacro
    - gazebo_tools
    desc: test_pr2_description
    license: BSD
    shortdesc: test_pr2_description
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/wg_robots_gazebo/trunk/test_pr2_description
    website: http://ros.org/wiki/test_pr2_description
  test_pr2_gazebo:
    author: !!python/unicode 'John Hsu'
    deps:
    - pr2_gazebo
    - rospy
    - rostest
    - nav_msgs
    - geometry_msgs
    - std_msgs
    - tf
    desc: Test basic PR2 simulation.  Use this test to check for regression whenever
      simulator is modified.
    license: BSD
    shortdesc: test_pr2_gazebo
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/wg_robots_gazebo/trunk/test_pr2_gazebo
    website: http://ros.org/wiki/test_pr2_gazebo
  test_pr2_gazebo_plugins:
    author: !!python/unicode 'John Hsu'
    deps:
    - rospy
    - rostest
    - nav_msgs
    - pr2_gazebo_plugins
    - gazebo_plugins
    - pr2_examples_gazebo
    - gazebo_worlds
    desc: "Tests for Various Gazebo Plugins.\n    Currently tests"
    license: BSD
    shortdesc: Tests for Gazebo Plugins
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/wg_robots_gazebo/trunk/test_pr2_gazebo_plugins
    website: http://pr.willowgarage.com/wiki/test_pr2_gazebo_plugins
  test_pr2_grasping:
    author: !!python/unicode 'John Hsu'
    deps:
    - pr2_gazebo
    - robot_mechanism_controllers
    - pr2_mechanism_controllers
    - actionlib
    - pr2_controllers_msgs
    - std_msgs
    - rospy
    - move_arm_msgs
    - move_arm
    - geometry_msgs
    - pr2_arm_navigation_kinematics
    - actionlib
    - roscpp
    - joint_trajectory_action
    - trajectory_msgs
    - geometry_msgs
    - kinematics_msgs
    - tf
    - pr2_bringup
    - gazebo
    desc: test_pr2_grasping
    license: BSD
    shortdesc: test_pr2_grasping
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/wg_robots_gazebo/trunk/test_pr2_grasping
    website: http://ros.org/wiki/test_pr2_grasping
  test_pr2_mechanism_controllers_gazebo:
    author: !!python/unicode 'John Hsu'
    deps:
    - rospy
    - rostest
    - pr2_gazebo_plugins
    - gazebo_plugins
    - pr2_mechanism_controllers
    - pr2_tuckarm
    - pr2_gazebo
    - pr2_ogre
    - gazebo_worlds
    - pr2_machine
    - nav_msgs
    - geometry_msgs
    - std_msgs
    - tf
    desc: Hudson tests for Gazebo mechanism control plugins
    license: BSD
    shortdesc: Tests for Gazebo Plugins
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/wg_robots_gazebo/trunk/test_pr2_mechanism_controllers_gazebo
    website: http://pr.willowgarage.com/wiki/test_pr2_mechanism_controllers_gazebo
  test_pr2_self_test:
    author: !!python/unicode 'Kevin Watts'
    deps:
    - qualification
    - life_test
    - rospy
    - self_test
    - roscpp
    - diagnostic_msgs
    - wg_invent_client
    - pr2_self_test_msgs
    - roslaunch_parse_tester
    desc: "Regression and unit tests for nodes in qualification:\n   * run_selftest.py"
    license: BSD
    shortdesc: Tests scripts and I/O of qualification
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/test_wg_hardware_test_systems/test_pr2_self_test
    website: http://ros.org/wiki/test_pr2_self_test
  test_pr2_self_test_gazebo:
    author: !!python/unicode 'Kevin Watts'
    deps:
    - gazebo
    - gazebo_tools
    - gazebo_worlds
    - pr2_gazebo
    - rospy
    - qualification
    - life_test
    - pr2_description
    - robot_state_publisher
    - pr2_controller_manager
    - rostopic
    - pr2_self_test_msgs
    - roslaunch_parse_tester
    - pr2_controller_configuration
    - std_msgs
    desc: This is used for regression testing of the pr2_self_test stack. Certain
      tests and subtests are launched in gazebo to run a full unit regression test
      on parts of the WG Hardware Test system. This package has no external ROS or
      code API.
    license: BSD
    shortdesc: Tests WG Hardware Test system using gazebo
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/test_wg_hardware_test_systems/test_pr2_self_test_gazebo
    website: http://ros.org/wiki/test_pr2_self_test_gazebo
  test_pr2_sensors_gazebo:
    author: !!python/unicode 'John Hsu'
    deps:
    - rospy
    - rostest
    - pr2_gazebo_plugins
    - gazebo_plugins
    - pr2_gazebo
    - pr2_ogre
    - gazebo_worlds
    - sensor_msgs
    - stereo_image_proc
    - pr2_tuckarm
    - actionlib
    - pr2_controllers_msgs
    - pr2_controller_manager
    - pr2_mechanism_controllers
    - semantic_point_annotator
    - laser_filters
    - robot_self_filter
    desc: Hudson tests for Gazebo sensor plugins
    license: BSD
    shortdesc: Tests for Gazebo Plugins
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/wg_robots_gazebo/trunk/test_pr2_sensors_gazebo
    website: http://pr.willowgarage.com/wiki/test_pr2_sensors_gazebo
  test_world:
    author: !!python/unicode 'Kevin Watts'
    deps:
    - roscpp
    - rospy
    - geometry_msgs
    - sensor_msgs
    - stereo_msgs
    - tf
    - driver_base
    - dynamic_reconfigure
    - gazebo
    - gazebo_plugins
    - gazebo_tools
    - wge100_camera
    - pr2_gazebo
    - xacro
    - image_geometry
    - kinematics_msgs
    - pr2_controllers_msgs
    - trajectory_msgs
    desc: test_world
    license: ''
    shortdesc: test_world
    source: details.php?name=rxtools
    website: https://code.ros.org/svn/wg-ros-pkg/stacks/wg_robots_gazebo/trunk/test_world
  texai_face_finder:
    author: !!python/unicode 'Ze''ev Klapow'
    deps:
    - roscpp
    - opencv2
    - sensor_msgs
    - cv_bridge
    - image_transport
    - image_geometry
    - logitech_pantilt
    desc: face_finder
    license: BSD
    shortdesc: texai_face_finder
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/texai_face_finder
    website: http://ros.org/wiki/face_finder
  texai_speed_test:
    author: !!python/unicode 'Ze''ev Klapow'
    deps:
    - rospy
    - roscpp
    - geometry_msgs
    - nav_msgs
    desc: texai_speed_test
    license: BSD
    shortdesc: texai_speed_test
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/texai_speed_test
    website: http://ros.org/wiki/texai_speed_test
  texas_gazebo:
    author: !!python/unicode 'John Hsu'
    deps:
    - gazebo
    - gazebo_worlds
    - pr2_controller_manager
    - robot_pose_ekf
    - pr2_description
    desc: texas bot simulation
    license: BSD
    shortdesc: texas bot simulation
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/wg_robots_gazebo/trunk/texas_gazebo
    website: http://ros.org/wiki//wg/stor2/johnhsu/projects/pr2/wg-ros-pkg/stacks/wg_robots/texas_gazebo
  textured_object_detection:
    author: !!python/unicode 'Alexander Shishkov, Victor Eruhimov'
    deps:
    - image_transport
    - image_geometry
    - posest
    - stereo_object_recognition
    desc: Uses opencv to object recognition.
    license: BSD
    shortdesc: Object recognition and pose estimation
    source: details.php?name=cv_bridge
    website: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/stacks/object_recognition/textured_object_detection
  tf_recorder_plugin:
    author: !!python/unicode 'Lorenz Moesenlechner'
    deps:
    - world_db_core
    - model_database
    - geometry_msgs
    - pluginlib
    - tf
    desc: "This plugin records all tf messages in the world_db_model database\n  \
      \  and provides an service interface to get a former value of a\n    transform.\
      \ For use in world_db_model plugins, it also provides a\n    C++ method."
    license: BSD
    shortdesc: tf_recorder_plugin
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/world_db_model/tf_recorder_plugin
    website: http://ros.org/wiki/tf_recorder_plugin
  tf_workshop_demo:
    author: !!python/unicode ''
    deps:
    - rospy
    - tf
    - checkerboard_pose
    - visualization_msgs
    desc: tf_workshop_demo
    license: BSD
    shortdesc: tf_workshop_demo
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/tf_workshop_demo
    website: http://ros.org/wiki/tf_workshop_demo
  tirt:
    author: !!python/unicode 'Stuart Glaser'
    deps:
    - roscpp
    - boost_lockfree
    - std_msgs
    - rosrt
    desc: "tirt: Topics in Realtime\n\n     Tirt approximates ROS topics in realtime."
    license: BSD
    shortdesc: "tirt: Topics in Realtime\n\n     Tirt approximates ROS topics in realtime."
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/tirt
    website: http://ros.org/wiki/tirt
  tirt_controller:
    author: !!python/unicode 'Stuart Glaser'
    deps:
    - rospy
    - rosrt
    - nodelet
    - tirt
    - geometry_msgs
    - std_msgs
    - std_srvs
    - pr2_controller_interface
    - pr2_mechanism_model
    - robot_mechanism_controllers
    desc: A realtime controller that triggers the tirt update cycle.
    license: BSD
    shortdesc: tirt_controller
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/tirt_controller
    website: http://ros.org/wiki/tirt_controller
  tirt_tuning:
    author: !!python/unicode 'Stuart Glaser'
    deps:
    - dynamic_reconfigure
    - nodelet
    - roscpp
    - rosrt
    - tirt
    - tirt_controller
    - std_msgs
    - rttuning_utils
    desc: tirt_tuning
    license: BSD
    shortdesc: tirt_tuning
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/tirt_tuning
    website: http://ros.org/wiki/tirt_tuning
  tirt_viewer:
    author: !!python/unicode 'Stuart Glaser'
    deps:
    - rospy
    - xdot
    - tirt_controller
    desc: tirt_viewer
    license: BSD
    shortdesc: tirt_viewer
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/tirt_viewer
    website: http://ros.org/wiki/tirt_viewer
  tod:
    author: !!python/unicode 'Ethan Rublee'
    deps:
    - roscpp
    - rospy
    - pcl
    - opencv2
    - opencv_candidate
    - rbrief
    desc: tod
    license: BSD
    shortdesc: "tod - Textured object detection for the\n\t\tmasses (or atleast those\
      \ with Robots)."
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/stacks/object_recognition/tod
    website: http://ros.org/wiki/tod
  tod_converter:
    author: !!python/unicode 'Alexander Shishkov'
    deps:
    - opencv2
    - tod
    - tod_training
    desc: Convert bases from textured_object_detection to the new format.
    license: BSD
    shortdesc: tod_converter
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/stacks/object_recognition/tod_converter
    website: http://ros.org/wiki/tod_converter
  tod_detecting:
    author: !!python/unicode 'Alexander Shishkov, Ethan Rublee, Vincent Rabaud'
    deps:
    - eigen
    - opencv2
    - tod
    - tod_training
    - posest
    - pcl
    - rosbag
    - tabletop_object_detector
    desc: tod_detecting
    license: BSD
    shortdesc: tod_detecting
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/stacks/object_recognition/tod_detecting
    website: http://ros.org/wiki/tod_detecting
  tod_rein:
    author: !!python/unicode 'Ethan Rublee'
    deps:
    - rein
    - tod
    - nodelet
    - camera_calibration_parsers
    desc: tod_rein is a rein plugin interface for the textured_object_detion library.
    license: BSD
    shortdesc: tod_rein is a rein plugin interface for the textured_object_detion
      library.
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/stacks/object_recognition_experimental/tod_rein
    website: http://ros.org/wiki/tod_rein
  tod_stub:
    author: !!python/unicode 'Ethan Rublee'
    deps:
    - roscpp
    - std_msgs
    - message_filters
    - rosbag
    - cv_bridge
    - opencv2
    - pcl
    - pcl_ros
    - pcl_visualization
    - tod
    - tod_training
    - fiducial
    - opencv_candidate
    - eigen
    desc: "tod_stub is a simple stub for use in the\n\t\tNIST Solutions in Perception\
      \ contest."
    license: BSD
    shortdesc: "tod_stub is a simple stub for use in the\n\t\tNIST Solutions in Perception\
      \ contest."
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/stacks/object_recognition/tod_stub
    website: http://ros.org/wiki/tod_stub
  tod_test:
    author: !!python/unicode 'Alexander Shishkov'
    deps:
    - opencv2
    - tod_detecting
    - tod
    desc: Test system for tod_detecting package.
    license: BSD
    shortdesc: Test system for tod_detecting package.
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/stacks/object_recognition/tod_test
    website: http://ros.org/wiki/tod_test
  tod_training:
    author: !!python/unicode 'Ethan Rublee'
    deps:
    - roscpp
    - rospy
    - std_msgs
    - rosbag
    - message_filters
    - cv_bridge
    - tod
    - fiducial
    - opencv2
    - pcl
    - rbrief
    - dynamic_reconfigure
    desc: tod_training
    license: BSD
    shortdesc: tod_training
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/stacks/object_recognition/tod_training
    website: http://ros.org/wiki/tod_training
  topological_map_2d:
    author: !!python/unicode 'Bhaskara Marthi'
    deps:
    - roscpp
    - topological_nav_msgs
    - graph_mapping_utils
    desc: Defines 2d topological map, which is a set of 2d occupancy grids connected
      by approximate pose constraints.
    license: BSD
    shortdesc: Defines 2d topological map, which is a set of 2d occupancy grids connected
      by approximate pose cons...
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/topological_navigation/trunk/topological_map_2d
    website: http://ros.org/wiki/topological_map_2d
  topological_nav_msgs:
    author: !!python/unicode 'Bhaskara Marthi'
    deps:
    - geometry_msgs
    - nav_msgs
    desc: topological_nav_msgs
    license: BSD
    shortdesc: topological_nav_msgs
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/topological_navigation/trunk/topological_nav_msgs
    website: http://ros.org/wiki/topological_nav_msgs
  topological_roadmap:
    author: !!python/unicode 'Bhaskara Marthi'
    deps:
    - topological_nav_msgs
    - topological_map_2d
    - graph_mapping_utils
    - occupancy_grid_utils
    - warehouse
    - visualization_msgs
    - actionlib
    - navfn
    - costmap_2d
    - move_base_msgs
    desc: Defines a topological roadmap, which overlays a graph of waypoints over
      a topological graph as defined in the topological_map_2d package.
    license: BSD
    shortdesc: topological_roadmap
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/topological_navigation/trunk/topological_roadmap
    website: http://ros.org/wiki/topological_roadmap
  toro:
    author: !!python/unicode 'Giorgio Grisetti; Cyrill Stachniss; Slawomir Grzonka;
      Wolfram Burgard'
    deps: []
    license: Creative Commons (Attribution-NonCommercial-ShareAlike)
    shortdesc: toro
    source: list.php
    website: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/vision/toro
  trajectory_filter_server:
    author: !!python/unicode 'Sachin Chitta'
    deps:
    - filters
    - roscpp
    - trajectory_msgs
    - motion_planning_msgs
    - spline_smoother
    - joint_normalization_filters
    - urdf
    desc: This package contains a server that advertises a ROS service over which
      joint trajectories can be filtered. Internally, it creates and uses a chain
      of filters that can filter joint trajectories. The filters are configured using
      a yaml configuration file.
    license: BSD
    shortdesc: trajectory_filter_server
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/trajectory_filters/trunk/trajectory_filter_server
    website: http://ros.org/wiki/trajectory_filter
  trajectory_playback:
    author: !!python/unicode 'Stuart Glaser'
    deps:
    - rospy
    - actionlib
    - trajectory_msgs
    - pr2_controllers_msgs
    - sensor_msgs
    desc: trajectory_playback
    license: BSD
    shortdesc: trajectory_playback
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/trajectory_playback
    website: http://ros.org/wiki/trajectory_playback
  trex:
    author: !!python/unicode 'Conor McGann, with contributions from many others. See
      respective projects.'
    deps:
    - antlr
    - PLASMA
    desc: "This package contains TREX (initially developed at the Monterey Bay Aquarium\
      \ Research Institute), \n    and EUROPA from the NASA Ames Research Center.\
      \ This package does not modify these \n    3rd party libraries in any way; it\
      \ simply provides a convenient way to download and build the\n    headers and\
      \ libraries in a way that can be managed by the ROS dependency system."
    license: BSD, NOSA
    shortdesc: trex_core contains the core of TREX prior to ROS integration
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/executive_trex/trex
    website: http://code.google.com/p/trex-autonomy/
  trex_ros:
    author: !!python/unicode 'Conor McGann'
    deps:
    - roscpp
    - rosconsole
    - std_msgs
    - geometry_msgs
    - actionlib
    desc: A ROS node to encapsulate the TeleoReactive Executive for task level planning
      and control.
    license: BSD
    shortdesc: A ROS node to encapsulate the TeleoReactive Executive for task level
      planning and control.
    source: details.php?name=trex
    website: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/executive_trex/trex_ros
  triclops:
    author: !!python/unicode 'Gary Bradski/bradski@willowgarage.com and Rob Wheeler/wheeler@willowgarage.com'
    deps:
    - opencv2
    desc: "texai_stitch -- stitch 3 cameras together\n     Use texai_stitch.cpp (which\
      \ depends on the class stitch3 in the files 3stitch.h and 3stitch.cpp) to view\
      \ and manipulate stitching 3 cameras together into a panar view."
    license: BSD
    shortdesc: stitch 3 cameras together
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/triclops
    website: http://pr.willowgarage.com
  trigger_commands:
    author: !!python/unicode 'Tim Field'
    deps:
    - actionlib
    - trigger_msgs
    - pr2_controllers_msgs
    - sensor_msgs
    - tf
    desc: trigger_commands
    license: BSD
    shortdesc: trigger_commands
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/dance_demo/trigger_commands
    website: http://ros.org/wiki/trigger_commands
  trigger_msgs:
    author: !!python/unicode 'Blaise Gassend'
    deps:
    - rospy
    desc: trigger_msgs
    license: BSD
    shortdesc: trigger_msgs
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/dance_demo/trigger_msgs
    website: http://ros.org/wiki/trigger_msgs
  tuckarms_application:
    author: !!python/unicode 'Scott Hassan'
    deps:
    - roslib
    - rospy
    - webui
    - rosweb
    - std_msgs
    - pr2_tuckarm
    desc: Web application for tucking the arms of the PR2 robot via the web interface.
    license: BSD
    shortdesc: tuckarms_application
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/pr2_web_apps/trunk/tuckarms_application
    website: http://ros.org/wiki/tuckarms_application
  unsharp_mask:
    author: !!python/unicode 'Patrick Mihelich'
    deps:
    - roscpp
    - image_transport
    - opencv2
    - cv_bridge
    - dynamic_reconfigure
    desc: unsharp_mask
    license: BSD
    shortdesc: unsharp_mask
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/unsharp_mask
    website: http://ros.org/wiki/unsharp_mask
  value_learner:
    author: !!python/unicode 'Matthew Robards'
    deps:
    - roscpp
    - rospy
    - nav_msgs
    - nav_core
    - visualization_msgs
    - geometry_msgs
    - move_base_msgs
    - pr2_mechanism_msgs
    - roslib
    - pr2_plugs_msgs
    - tf
    - eigen
    desc: value_learner
    license: BSD
    shortdesc: value_learner
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/value_learner
    website: http://ros.org/wiki/value_learner
  verify_wrist_flags:
    author: !!python/unicode 'Stuart Glaser'
    deps:
    - rospy
    - pr2_controllers_msgs
    - pr2_mechanism_msgs
    - actionlib
    desc: verify_wrist_flags
    license: BSD
    shortdesc: verify_wrist_flags
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/verify_wrist_flags
    website: http://ros.org/wiki/verify_wrist_flags
  vfh_cluster_classifier:
    author: !!python/unicode 'Radu Bogdan Rusu'
    deps:
    - rospy
    - pcl
    - bond
    - pcl_visualization
    - rein
    - flann
    - nodelet
    - tf
    - geometry_msgs
    - sensor_msgs
    - std_msgs
    - bullet
    desc: "This package implements a variant of the global VFH (Viewpoint Feature\n\
      \    Histogram) descriptor, as presented in R.B. Rusu, G. Bradski, R. Thibaux,\n\
      \    J. Hsu. Fast 3D Recognition and Pose Using the Viewpoint Feature Histogram,\n\
      \    Proceedings of the 23rd IEEE/RSJ International Conference on Intelligent\n\
      \    Robots and Systems (IROS), Taipei, Taiwan, October 18-22, 2010."
    license: BSD
    shortdesc: VFH cluster classification
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_diamondback/stacks/object_recognition/vfh_cluster_classifier
    website: http://ros.org/wiki/vfh_cluster_classification
  virtual_scanner:
    author: !!python/unicode 'Radu Bogdan Rusu'
    deps:
    - pcl
    - pcl_visualization
    - model_database
    desc: Create virtually scanned PointCloud2 datasets from wireframe/surface models.
    license: BSD
    shortdesc: virtual_scanner
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/point_cloud_perception_experimental/virtual_scanner
    website: http://pr.willowgarage.com
  vision_gradient_templates:
    author: !!python/unicode 'Gary Bradski'
    deps:
    - opencv2
    - opencv2
    - cv_bridge
    - sensor_msgs
    - stereo_msgs
    - roscpp
    - image_transport
    desc: "vision_gradient_templates  This package is to develop fast gradient templates\
      \ for objects -- basically a fast but more flexible HOG feature.\n\t Started\
      \ Jan. 27, 2010."
    license: BSD
    shortdesc: vision_gradient_templates
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/vision_gradient_templates
    website: http://ros.org/wiki/vision_gradient_templates
  visual_arm_calibration:
    author: !!python/unicode 'Patrick Mihelich'
    deps:
    - roscpp
    - opencv2
    - image_transport
    - image_geometry
    - cv_bridge
    - cvblobslib
    - dynamic_reconfigure
    - tf
    - geometry_msgs
    - planning_environment
    - planning_models
    - geometric_shapes
    desc: visual_arm_calibration
    license: BSD
    shortdesc: visual_arm_calibration
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/visual_arm_calibration
    website: http://ros.org/wiki/visual_arm_calibration
  vslam_demo:
    author: !!python/unicode 'Helen Oleynikova'
    deps:
    - roscpp
    - move_base_msgs
    - geometry_msgs
    - nav_msgs
    - actionlib
    - tf
    - pcl
    - rosbag
    - image_transport
    - sba
    desc: "Demo of vslam_system, using both point-to-point matches from image matching\n\
      \    and point-plane matches from pointcloud data."
    license: BSD
    shortdesc: vslam_demo
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/vslam_demo
    website: http://ros.org/wiki/vslam_demo
  wavelet2d:
    author: !!python/unicode 'Ethan Rublee'
    deps:
    - opencv2
    - roscpp
    desc: wavelet2d
    license: BSD
    shortdesc: wavelet2d
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/wavelet2d
    website: http://ros.org/wiki/wavelet2d
  wbag:
    author: !!python/unicode 'Tim Field'
    deps:
    - web_bags_core
    desc: wbag is a command-line tool for interacting with a web bags server.
    license: BSD
    shortdesc: wbag is a command-line tool for interacting with a web bags server.
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/web_bags/wbag
    website: http://ros.org/wiki/wbag
  web_bags_core:
    author: !!python/unicode 'Tim Field/tfield@willowgarage.com,Scott Hassan/hassan@willowgarage.com'
    deps:
    - roslib
    - rospy
    - rosbag
    - pyclearsilver
    - wg_invent_client
    - pygeoip
    desc: A web interface to view bags through the web.
    license: BSD
    shortdesc: A web interface to view bags through the web.
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/web_bags/web_bags_core
    website: http://ros.org/wiki/web_bags_core
  web_msgs:
    author: !!python/unicode ''
    deps: []
    desc: web_msgs
    license: BSD
    shortdesc: web_msgs
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/web_interface/trunk/web_msgs
    website: http://ros.org/wiki/web_msgs
  webui:
    author: !!python/unicode 'Scott Hassan/hassan@willowgarage.com'
    deps:
    - roslib
    - rospy
    - rosservice
    - launchman
    - pyclearsilver
    - std_msgs
    - std_srvs
    - diagnostic_msgs
    - rosweb
    - web_msgs
    desc: A web interface to install and launch applications for the PR2.
    license: BSD
    shortdesc: PR2 Web UI
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/web_interface/trunk/webui
    website: http://ros.org/wiki/webui
  wg_invent_assembly_check:
    author: !!python/unicode 'Kevin Watts'
    deps:
    - wg_invent_client
    desc: wg_invent_assembly_check
    license: BSD
    shortdesc: wg_invent_assembly_check
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/wg_invent_assembly_check
    website: http://ros.org/wiki/wg_invent_assembly_check
  wg_invent_client:
    author: !!python/unicode 'Scott Hassan, Kevin Watts'
    deps: []
    desc: Provides an interface for the Willow Garage Inventory system, used by the
      life_test and qualification systems to automatically log assembly data into
      invent.
    license: BSD
    shortdesc: Interfaces with WG inventory system
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/wg_hardware_test/trunk/wg_invent_client
    website: http://ros.org/wiki/wg_invent_client
  wg_pr2_2dnav:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - willow_maps
    - map_server
    - pr2_navigation_global
    - pr2_navigation_perception
    - pr2_navigation_teleop
    - pr2_machine
    desc: This application allows the PR2 robot to navigate autonomously in the Willow
      Garage office environment.
    license: BSD
    shortdesc: Global navigation for the PR2 robot at Willow Garage.
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/wg_pr2_apps/trunk/wg_pr2_2dnav
    website: http://ros.org/wiki/wg_pr2_2dnav
  wgtest_data_analysis:
    author: !!python/unicode 'Kevin Watts'
    deps:
    - wg_invent_client
    desc: Loads testing data from WG Inventory system. Internal WG use only.
    license: BSD
    shortdesc: Loads, analyzes testing data from WG Inventory System
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/test_wg_hardware_test_systems/wgtest_data_analysis
    website: http://ros.org/wiki/wgtest_data_analysis
  wgtest_data_loader:
    author: !!python/unicode 'Kevin Watts'
    deps:
    - wg_invent_client
    - qualification
    - wgtest_data_analysis
    desc: wgtest_data_loader
    license: BSD
    shortdesc: wgtest_data_loader
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/test_wg_hardware_test_systems/wgtest_data_loader
    website: http://ros.org/wiki/wgtest_data_loader
  wgtest_status_indicator:
    author: !!python/unicode 'Kevin Watts'
    deps:
    - roscpp
    - pr2_self_test_msgs
    desc: Controls Delcom USB indicator light with the status of Test Manager.
    license: BSD
    shortdesc: Controls status indicator light for Test Manager
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/wg_hardware_test/trunk/wgtest_status_indicator
    website: http://ros.org/wiki/wgtest_status_indicator
  wheel_odometry_calibration:
    author: !!python/unicode 'Wim Meeussen'
    deps:
    - tf
    - nav_msgs
    - sensor_msgs
    - pr2_mechanism_controllers
    desc: Node for calibrating wheel odometry
    license: BSD
    shortdesc: Node for calibrating wheel odometry
    source: details.php?name=roscpp
    website: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/calibration_experimental/wheel_odometry_calibration
  wifi_ddwrt:
    author: !!python/unicode 'Scott Hassan/hassan@willowgarage.com, Eitan Marder-Eppstein/eitan@willowgarage.com'
    deps:
    - rospy
    - std_msgs
    - pr2_msgs
    - rostest
    - tf
    - geometry_msgs
    - nav_msgs
    - visualization_msgs
    desc: Access to the DD-WRT wifi
    license: BSD
    shortdesc: dd-wrt wifi ap
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/wifi_drivers/trunk/wifi_ddwrt
    website: http://pr.willowgarage.com/wiki/wifi_ddwrt
  willow_maps:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps: []
    desc: Holds maps of Willow Garage that can be used for a number of different applications.
    license: BSD
    shortdesc: A package that holds Willow Garage maps
    source: https://code.ros.org/svn/wg-ros-pkg/stacks/wg_common/trunk/willow_maps
    website: http://pr.willowgarage.com/wiki/willow_maps
  world_db_bag_player:
    author: !!python/unicode 'Lorenz Mosenlechner'
    deps:
    - world_db_core
    - actionlib
    - actionlib_msgs
    - tf_recorder_plugin
    - roscpp
    - rospy
    - geometry_msgs
    - world_db_detector_lib
    desc: "This plugin allows to play back bags that have been recorded at a specific\n\
      \    location."
    license: BSD
    shortdesc: world_db_bag_player
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/world_db_model/world_db_bag_player
    website: http://ros.org/wiki/world_db_bag_player
  world_db_core:
    author: !!python/unicode 'Lorenz Mosenlechner'
    deps:
    - roslib
    - roscpp
    - rospy
    - model_database
    - rosbag
    - pluginlib
    - actionlib
    - actionlib_msgs
    - std_msgs
    desc: "world_db_core contains the basic functionality of world_db_model,\n   \
      \ such as recording of topics and creating a bag index in a SQLite\n    database,\
      \ playback and instantiation of previously recorded bags\n    and the management\
      \ of detector plugins."
    license: BSD
    shortdesc: world_db_core
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/world_db_model/world_db_core
    website: http://ros.org/wiki/world_db_model
  world_db_detector_lib:
    author: !!python/unicode 'Lorenz Mosenlechner'
    deps:
    - world_db_core
    - tf_recorder_plugin
    - geometry_msgs
    desc: world_db_detector_lib
    license: BSD
    shortdesc: world_db_detector_lib
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/world_db_model/world_db_detector_lib
    website: http://ros.org/wiki/world_db_detector_lib
  world_db_model_demo:
    author: !!python/unicode 'Lorenz Mosenlechner'
    deps:
    - world_db_core
    - world_db_pcl_detectors
    - world_db_table_highlevel
    - world_db_bag_player
    - point_head_at_planes
    desc: world_db_model_demo
    license: BSD
    shortdesc: world_db_model_demo
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/sandbox/world_db_model_demo
    website: http://ros.org/wiki/world_db_model_demo
  world_db_pcl_detectors:
    author: !!python/unicode 'Lorenz Mosenlechner'
    deps:
    - world_db_core
    - model_database
    - pluginlib
    - tf_recorder_plugin
    - sensor_msgs
    - geometry_msgs
    - actionlib_msgs
    - pcl_detectors
    - world_db_detector_lib
    - visualization_msgs
    desc: world_db_pcl_detectors
    license: BSD
    shortdesc: world_db_pcl_detectors
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/world_db_model/world_db_pcl_detectors
    website: http://ros.org/wiki/world_db_pcl_detectors
  world_db_table_highlevel:
    author: !!python/unicode 'Bhaskara Marthi'
    deps:
    - roslisp
    - tf
    - world_db_core
    - geometry_msgs
    - actionlib_lisp
    - actionlib_msgs
    - world_db_pcl_detectors
    - world_db_detector_lib
    desc: world_db_table_highlevel
    license: BSD
    shortdesc: world_db_table_highlevel
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_cturtle/stacks/world_db_model/world_db_table_highlevel
    website: http://ros.org/wiki/world_db_table_highlevel
wg-ros-pkg-boxturtle:
  2dnav_texas:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - move_base
    - teleop_anti_collision
    - amcl
    - map_server
    - willow_maps
    desc: A 2D navigation application for the Texas robot platform.
    license: BSD
    shortdesc: 2dnav_texas
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/applications/2dnav_texas
    website: http://ros.org/wiki/2dnav_texas
  ANN:
    author: !!python/unicode 'Sunil Arya and David Mount'
    deps: []
    desc: "ANN is a library written in C++, which supports data structures and\n \
      \   algorithms for both exact and approximate nearest neighbor searching in\n\
      \    arbitrarily high dimensions.\n\n    In the nearest neighbor problem a set\
      \ of data points in d-dimensional\n    space is given. These points are preprocessed\
      \ into a data structure, so\n    that given any query point q, the nearest or\
      \ generally k nearest points of\n    P to q can be reported efficiently. The\
      \ distance between two points can be\n    defined in many ways. ANN assumes\
      \ that distances are measured using any\n    class of distance functions called\
      \ Minkowski metrics. These include the\n    well known Euclidean distance, Manhattan\
      \ distance, and max distance.\n\n    Based on our own experience, ANN performs\
      \ quite efficiently for point sets\n    ranging in size from thousands to hundreds\
      \ of thousands, and in dimensions\n    as high as 20. (For applications in significantly\
      \ higher dimensions, the\n    results are rather spotty, but you might try it\
      \ anyway.)\n\n    The library implements a number of different data structures,\
      \ based on\n    kd-trees and box-decomposition trees, and employs a couple of\
      \ different\n    search strategies.\n\n    The library also comes with test\
      \ programs for measuring the quality of\n    performance of ANN on any particular\
      \ data sets, as well as programs for\n    visualizing the structure of the geometric\
      \ data structures."
    license: LGPL
    shortdesc: "ANN is a library written in C++, which supports data structures and\n\
      \    algorithms for both ex..."
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/stacks/semantic_mapping/ANN
    website: http://www.cs.umd.edu/~mount/ANN/
  FLANN:
    author: !!python/unicode 'Marius Muja and David Lowe'
    deps: []
    desc: "FLANN is a library for performing fast approximate nearest neighbor\n \
      \   searches in high dimensional spaces. It contains a collection of\n    algorithms\
      \ we found to work best for nearest neighbor search and a\n    system for automatically\
      \ choosing the best algorithm and optimum\n    parameters depending on the dataset.\n\
      \n    FLANN is written in C++ and contains bindings for the following\n    languages:\
      \ C, MATLAB and Python."
    license: LGPL
    shortdesc: "FLANN is a library for performing fast approximate nearest neighbor\n\
      \    searches in high dimen..."
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/stacks/semantic_mapping/FLANN
    website: http://www.cs.ubc.ca/~mariusm/index.php/FLANN/FLANN
  action_translator:
    author: !!python/unicode 'Vijay Pradeep'
    deps:
    - actionlib
    - robot_actions
    desc: "This package provides tools that allow actionlib::ActionServer actions\n\
      \    to communicate over the robot_actions protocol. This is extremely useful\n\
      \    when an action needs to communicate with TREX.\n    \n    Once TREX supports\
      \ actionlib actions and python has an actionlib::ActionClient\n    interface\
      \ implemented, this package should be deprecated."
    license: BSD
    shortdesc: Tools to convert between the old and new actions (robot_actions and
      actionlib)
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/action_translator
    website: http://pr.willowgarage.com/wiki/action_bridge
  agilent_ethernet_node:
    author: !!python/unicode 'Matt Piccoli'
    deps:
    - roscpp
    - roslib
    - std_msgs
    desc: "This node lets you get information from an agilent DMM connected through\
      \ \nan ethernet connection."
    license: BSD
    shortdesc: agilent_ethernet_node
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/agilent_ethernet_node
    website: http://ros.org/wiki/agilent_ethernet_node
  annotated_map_builder:
    author: !!python/unicode 'Alexander Sorokin'
    deps:
    - rospy
    - nav_robot_actions
    - std_msgs
    - geometry_msgs
    - pr2_robot_actions
    - pr2_mechanism_controllers
    - robot_actions
    - bagserver
    - stereo_msgs
    - laser_filters
    desc: A python executive to run data collection of annotated maps
    license: BSD
    shortdesc: A python executive to run data collection of annotated maps
    source: details.php?name=pr2_machine
    website: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/annotated_map_builder
  annotated_map_msgs:
    author: !!python/unicode 'Alex Sorokin/sorokin@willowgarage.com'
    deps:
    - std_msgs
    - sensor_msgs
    - geometry_msgs
    desc: Messages for annotated 3D maps.
    license: BSD
    shortdesc: annotated_map_msgs
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/annotated_map_msgs
    website: http://pr.willowgarage.com/wiki/annotated_map_msgs
  annotated_planar_patch_map:
    author: !!python/unicode 'Alex Sorokin'
    deps:
    - pr2_machine
    - message_notifier
    - roscpp
    - std_msgs
    - mapping_msgs
    - sensor_msgs
    - stereo_msgs
    - geometry_msgs
    - annotated_map_msgs
    - pr2_mechanism_controllers
    - pr2_msgs
    - rostest
    - point_cloud_mapping
    - laser_assembler
    - pr2_laser_snapshotter
    - cv_mech_turk
    - bagserver
    - object_names
    - image_server
    desc: A node which lifts annotations to 3D, collects annotated polygons, stores
      them as a map and provides data access service.
    license: BSD
    shortdesc: A node which lifts annotations to 3D, collects annotated polygons,
      stores them as a map and pro...
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/deprecated/annotated_planar_patch_map
    website: http://pr.willowgarage.com
  auto_arm_commander:
    author: !!python/unicode 'Vijay Pradeep/ vpradeep@willowgarage.com'
    deps:
    - std_msgs
    - pr2_mechanism_controllers
    - manipulation_msgs
    desc: Utilities and scripts for moving the arm through a set of predefined joint
      angles in order to collect data for arm characterizations and calibrations
    license: BSD
    shortdesc: Move the arm through predefined setpoints
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/stacks/calibration_experimental/auto_arm_commander
    website: http://pr.willowgarage.com/wiki/auto_arm_commander
  autonomous_model_builder:
    author: !!python/unicode 'Alex Sorokin'
    deps:
    - pr2_machine
    - opencv2
    - cv_bridge
    - rostest
    - stereo_utils
    - actionlib_msgs
    - actionlib
    - tabletop_msgs
    - tabletop_srvs
    - geometry_msgs
    - tf
    - state_machine_core
    - state_machine_actions
    - data_recording
    - nav_msgs
    - cv_mech_turk
    desc: autonomous_model_builder
    license: BSD
    shortdesc: autonomous_model_builder
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/autonomous_model_builder
    website: http://ros.org/wiki/autonomous_model_builder
  bag_image_view:
    author: !!python/unicode 'Alex Sorokin'
    deps:
    - rospy
    - sensor_msgs
    - bagserver
    desc: The package allows to browse images in an indexed bagfile.
    license: BSD
    shortdesc: bag_image_view
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/stacks/bag_experimental/bag_image_view
    website: http://pr.willowgarage.com/wiki/bag_image_view
  bagserver:
    author: !!python/unicode 'Alex Sorokin /(sorokin@willowgarage.com)'
    deps:
    - roscpp
    - rospy
    - rosrecord
    - std_msgs
    - sensor_msgs
    - geometry_msgs
    - cv_mech_turk
    desc: 'This is a convenience tool to access random messages recorded in bag

      files. The main target is testing and debugging. Potential use

      includes access of some information from the past.'
    license: BSD
    shortdesc: Random access into the bag files
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/stacks/bag_experimental/bagserver
    website: http://pr.willowgarage.com/wiki/bagserver
  bagweb:
    author: !!python/unicode 'Tim Field'
    deps:
    - rospy
    - roslib
    - std_msgs
    - webui
    - gazebo
    - pr2_gazebo
    - pr2_controller_manager
    - stereo_image_proc
    - topic_tools
    desc: bagweb
    license: BSD
    shortdesc: bagweb
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/bagweb
    website: http://ros.org/wiki/bagweb
  balance:
    author: !!python/unicode 'Wim Meeussen'
    deps:
    - robot_mechanism_controllers
    - pr2_controller_interface
    - pr2_mechanism_model
    - pluginlib
    - sensor_msgs
    - kdl
    - joy
    - control_toolbox
    - filters
    desc: balance
    license: BSD
    shortdesc: balance
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/balance
    website: http://ros.org/wiki/balance
  bingham_pose:
    author: !!python/unicode 'Jared Glover'
    deps:
    - eigen
    - roscpp
    - point_cloud_mapping
    desc: bingham_pose
    license: GPL
    shortdesc: bingham_pose
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/bingham_pose
    website: http://ros.org/wiki/bingham_pose
  bullet_python:
    author: !!python/unicode 'Tully Foote'
    deps:
    - bullet
    desc: 'This package provides SWIGed bindings for the Bullet Physics Library.  \

      Only the Linear Math library has been implemented.'
    license: BSD
    shortdesc: Python Binding for Bullet Physics Library (only Linear Math)
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/bullet_python
    website: http://pr.willowgarage.com/wiki/bullet_python
  camera_focus:
    author: !!python/unicode 'Blaise Gassend'
    deps:
    - wge100_camera
    - prosilica_camera
    - opencv2
    - cv_bridge
    desc: "This package is used to output a signal indicating how well a camera is\n\
      \    focused. It is used during production to focus the cameras."
    license: BSD
    shortdesc: Tools for camera focusing.
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/stacks/pr2_self_test/camera_focus
    website: http://pr.willowgarage.com/wiki/camera_focus
  camera_pose_estimator:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - image_cb_detector
    desc: camera_pose_estimator
    license: BSD
    shortdesc: camera_pose_estimator
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/camera_pose_estimator
    website: http://ros.org/wiki/camera_pose_estimator
  cb_characterization:
    author: !!python/unicode 'Vijay Pradeep/ YOUR E-MAIL HERE'
    deps:
    - pr2_mechanism_controllers
    - auto_arm_commander
    desc: Moves the arm through a set of specified joint angles to collect data to
      characterize the counterbalance.
    license: BSD
    shortdesc: cb_characterization
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/stacks/pr2_self_test/cb_characterization
    website: http://pr.willowgarage.com/wiki/cb_characterization
  cminpack:
    author: "Fr\xC3\xA9d\xC3\xA9ric Devernay"
    deps: []
    desc: "<p>\n    <em>This is the official description of Minpack, from the original\
      \ ReadMe file:</em>\n    Minpack includes software for solving nonlinear equations\
      \ and nonlinear\n    least squares problems. Five algorithmic paths each include\
      \ a core\n    subroutine and an easy-to-use driver. The algorithms proceed either\
      \ from an\n    analytic specification of the Jacobian matrix or directly from\
      \ the problem\n    functions. The paths include facilities for systems of equations\
      \ with a\n    banded Jacobian matrix, for least squares problems with a large\
      \ amount of\n    data, and for checking the consistency of the Jacobian matrix\
      \ with the\n    functions.\n</p>\n<p>\n    Minpack is probably the best open-source\
      \ implementation of the\n    Levenberg-Marquardt algorithm (in fact, it is even\
      \ better, since it adds to\n    L-M automatic variables scaling). There is another\
      \ open-source L-M\n    implementation in C/C++, levmar by Manolis Lourakis,\
      \ but unfortunately is is\n    released under the GPL, which restricts its inclusion\
      \ in commercial\n    software. Minpack is licensed under a BSD-like license\
      \ (available in the\n    distribution).\n</p>\n<p>\n    I took a dozen of hours\
      \ to rework all these problems, and came out with a\n    pure C version of Minpack,\
      \ with has standard (ISO C99) parameters passing,\n    is fully reentrant, multithread-safe,\
      \ and has a full set of examples and\n    tests:\n</p>\n<p>\n      1. Input\
      \ variables are now passed by value, output variables are passed by\n      reference.\
      \ The keyword &quot;const&quot; is used as much as possible for constant\n \
      \     arrays. The return value of each function is now used to get the function\n\
      \      status (it was obtained via the IFLAG or INFO parameter in Minpack).\n\
      </p>\n<p>\n      2. All non-const static variables were removed, and the code\
      \ was tested\n      after that. Luckily, Minpack didn't use the nastiest feature\
      \ in FORTRAN: all\n      local variables are static, so that a function can\
      \ behave differently when\n      you call it several times.\n</p>\n<p>\n   \
      \   3. The function to be minimized and all the Minpack functions now take\n\
      \      an extra &quot;void*&quot; argument, which can be used to pass any\n\
      \      pointer-to-struct or pointer-to-class, and you can put all you extra\n\
      \      parameters and datd in that struct. Just cast this pointer to the\n \
      \     appropriate pointer type in your function, and there they are! There\n\
      \      is no need for global variables anymore. Be careful if you access the\n\
      \      same object from different threads, though.\n</p>\n<p>\n      4. The\
      \ Debian project did a C include file for Minpack. It still needed some\n  \
      \    work (add consts and C++ compatibility), so I did this work, and used the\n\
      \      include file for the FORTRAN version as the base for my C/C++ version.\n\
      </p>\n<p>\n      5. The Debian project also translated all the FORTRAN examples\
      \ to C. I\n      worked from these to produce examples which also call my C/C++\
      \ version of\n      Minpack instead of the FORTRAN version. Also included in\
      \ the distribution\n      are reference output files produced by the test runs\
      \ (for comparison).\n</p>"
    license: BSD
    shortdesc: ''
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/stacks/semantic_mapping/cminpack
    website: http://devernay.free.fr/hacks/cminpack.html
  collect_people_data:
    author: !!python/unicode 'Alex Sorokin/sorokin@willowgarage.com,Caroline Pantofaru/pantofaru@willowgarage.com'
    deps:
    - pr2_machine
    desc: Information for collecting people data.
    license: BSD
    shortdesc: collect_people_data
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/collect_people_data
    website: http://pr.willowgarage.com/wiki/collect_people_data
  color_calib:
    author: !!python/unicode 'Jeremy Leibs'
    deps:
    - roscpp
    - std_msgs
    - deprecated_msgs
    - std_srvs
    - image_utils
    - filters
    - opencv2
    - cv_bridge
    - sensor_msgs
    desc: Generate color calibration matrix from macbeth chart.
    license: BSD
    shortdesc: Generate color calibration matrix
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/color_calib
    website: http://www.willowgarage.com
  csparse:
    author: !!python/unicode 'Tim Davis'
    deps: []
    desc: CSparse is a set of sparse matrix routines from Tim Davis at UFL.
    license: LGPL
    shortdesc: Sparse matrix routines
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/vision/csparse
    website: http://www.cise.ufl.edu/research/sparse/CSparse
  cv_mech_turk:
    author: !!python/unicode 'Alexander Sorokin,Gary Bradski,Alex Teichman'
    deps:
    - cv_bridge
    - std_srvs
    - sensor_msgs
    - roscpp
    - tf
    desc: A wrapper around the OpenCV HighGUI cv_mech_turk viewer.
    license: BSD
    shortdesc: A wrapper around the OpenCV HighGUI cv_mech_turk viewer.
    source: details.php?name=opencv2
    website: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/vision/cv_mech_turk
  cv_mech_turk2:
    author: !!python/unicode 'Alexander Sorokin'
    deps:
    - mech_turk
    - opencv2
    - cv_bridge
    - image_transport
    desc: "Replacement package for cv_mech_turk. The package contains all\n     tools\
      \ relevant to computer vision tasks. The actual communication\n     with the\
      \ annotation server is left for mech_turk package."
    license: BSD
    shortdesc: cv_mech_turk2
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/cv_mech_turk2
    website: http://ros.org/wiki/cv_mech_turk2
  cv_mech_turk_experimental:
    author: !!python/unicode 'Alexander Sorokin'
    deps:
    - mech_turk
    - cv_mech_turk2
    desc: "Experimental vision tools that work with Mechanical Turk. \n    The stable\
      \ tools are in cv_mech_turk2 package."
    license: BSD
    shortdesc: cv_mech_turk_experimental
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/cv_mech_turk_experimental
    website: http://ros.org/wiki/cv_mech_turk_experimental
  data_recording:
    author: !!python/unicode 'Alex Sorokin'
    deps:
    - actionlib_msgs
    - actionlib
    - rosrecord
    - prosilica_camera
    desc: data_recording
    license: BSD
    shortdesc: data_recording
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/data_recording
    website: http://ros.org/wiki/data_recording
  deprecated_msgs:
    author: !!python/unicode 'Tully Foote/tfoote@willowgarage.com'
    deps:
    - roslib
    - std_msgs
    - geometry_msgs
    - rosbagmigration
    desc: "These messages have been selected for future deletion.  but need time to\
      \ be phased out.  \nDo not use these messages!"
    license: BSD
    shortdesc: ROS Messages slated for deletion
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/deprecated/deprecated_msgs
    website: http://pr.willowgarage.com/wiki/deprecated_msgs
  deprecated_srvs:
    author: !!python/unicode 'Tully Foote/tfoote@willowgarage.com'
    deps:
    - roslib
    - std_msgs
    - geometry_msgs
    - deprecated_msgs
    desc: "ROS services which have been selected for deletion but need time to be\
      \ \nphased out.\n\nDO NOT USE THESE MESSAGES!"
    license: BSD
    shortdesc: Deprecated ROS Services
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/deprecated/deprecated_srvs
    website: http://pr.willowgarage.com/wiki/deprecated_srvs
  descriptors_3d:
    author: !!python/unicode 'Daniel Munoz/ dmunoz@willowgarage.com'
    deps:
    - roscpp
    - eigen
    - opencv2
    - point_cloud_mapping
    desc: Feature descriptor library for 3-D data
    license: BSD
    shortdesc: descriptors_3d
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/stacks/segmentation_3d/descriptors_3d
    website: http://pr.willowgarage.com/wiki/descriptors_3d
  diagnostic_database_loader:
    author: !!python/unicode 'Kevin Watts'
    deps:
    - rosrecord
    - diagnostic_msgs
    - roscpp
    - model_database
    - yaml_cpp
    desc: Loads diagnostics bagfiles into a database for later analysis and querying.
    license: BSD
    shortdesc: Diagnostics bagfiles to database conversion
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/diagnostic_database_loader
    website: http://ros.org/wiki/diagnostic_database_loader
  diagnostics_plotter:
    author: !!python/unicode 'Kevin Watts'
    deps:
    - rospy
    - diagnostic_msgs
    - rxtools
    desc: diagnostics_plotter
    license: BSD
    shortdesc: diagnostics_plotter
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/diagnostics_plotter
    website: http://ros.org/wiki/diagnostics_plotter
  dodging_recovery_behaviors:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - roscpp
    - nav_core
    - tf
    - costmap_2d
    - navfn
    - geometry_msgs
    - base_local_planner
    - pluginlib
    - angles
    - sound_play
    - people_msgs
    - actionlib
    - pr2_controllers_msgs
    desc: dodging_recovery_behaviors
    license: BSD
    shortdesc: dodging_recovery_behaviors
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/dodging_recovery_behaviors
    website: http://ros.org/wiki/dodging_recovery_behaviors
  door_demos:
    author: !!python/unicode 'Sachin Chitta, Wim Meeussen, Conor McGann'
    deps:
    - pr2_machine
    - pr2_doors_actions
    desc: Launch files for door opening.
    license: BSD
    shortdesc: Launch files for door opening.
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/demos/door_demos
    website: http://pr.willowgarage.com/wiki/FIXME
  doors_planner_core:
    author: !!python/unicode 'Sachin Chitta, Wim Meeussen'
    deps:
    - pr2_machine
    - roscpp
    - std_msgs
    - diagnostic_msgs
    - diagnostic_updater
    - manipulation_msgs
    - door_msgs
    - deprecated_srvs
    - nav_msgs
    - geometry_msgs
    - robot_actions
    - nav_robot_actions
    - pr2_robot_actions
    - kdl
    - tf
    - door_handle_detector
    - costmap_2d
    - base_local_planner
    - pr2_doors_common
    - laser_assembler
    - move_arm
    - move_base
    - move_base_msgs
    - actionlib
    - sbpl_door_planner_action
    - pr2_laser_snapshotter
    desc: Door planning
    license: BSD
    shortdesc: Door planning
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/doors_planner_core
    website: http://pr.willowgarage.com
  dorylus:
    author: !!python/unicode 'Alex Teichman'
    deps:
    - eigen
    desc: Pointwise boosting classifier.
    license: BSD
    shortdesc: Pointwise boosting classifier.
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/dorylus
    website: http://pr.willowgarage.com/wiki/dorylus
  dynamics_estimation:
    author: !!python/unicode 'Mrinal Kalakrishnan/ kalakris@willowgarage.com'
    deps:
    - roscpp
    - rosrecord
    - std_msgs
    - pr2_mechanism_msgs
    - kdl
    - pr2_mechanism_model
    - pr2_controller_interface
    - pluginlib
    desc: dynamics_estimation
    license: BSD
    shortdesc: dynamics_estimation
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/dynamics_estimation
    website: http://pr.willowgarage.com/wiki/dynamics_estimation
  eigen_conversions:
    author: !!python/unicode 'Stuart Glaser'
    deps:
    - eigen
    - geometry_msgs
    - kdl
    - tf
    desc: Conversion functions between Eigen and other geometry types.
    license: BSD
    shortdesc: eigen_conversions
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/eigen_conversions
    website: http://ros.org/wiki/eigen_conversions
  erratic_defs:
    author: !!python/unicode 'Tony Pratkanis'
    deps:
    - xacro
    - convex_decomposition
    - ivcon
    desc: "This package contains XML (and xacro macros) descriptions of robot kinematics\
      \ in the format\n    defined at Willow Garage for the erratic robot."
    license: BSD
    shortdesc: Erratic Robot Definitions
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/stacks/erratic_robot/erratic_defs
    website: http://pr.willowgarage.com/wiki/RobotDescriptionFormat
  erratic_gazebo:
    author: !!python/unicode 'Tony Pratkanis'
    deps:
    - pr2_gazebo_plugins
    - gazebo_plugins
    - gazebo_worlds
    - erratic_defs
    - robot_mechanism_controllers
    - fake_localization
    - move_base
    - tf
    - rospy
    - std_msgs
    - robot_state_publisher
    desc: Gazebo 3D simulation example with erratic robot.
    license: BSD
    shortdesc: Gazebo 3D simulation example with erratic robot.
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/stacks/wg_robots_gazebo/erratic_gazebo
    website: http://pr.willowgarage.com/wiki/Simulator
  erratic_player:
    author: !!python/unicode 'Brian P. Gerkey'
    deps:
    - player
    - std_msgs
    - geometry_msgs
    - nav_msgs
    - pr2_msgs
    - tf
    desc: A ROS node that wraps up the Player erratic driver, which provides access
      to the Erratic mobile robot.
    license: GPL
    shortdesc: A ROS node that wraps up the Player erratic driver, which provides
      access to the Erratic mobile robo...
    source: details.php?name=roscpp
    website: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/stacks/erratic_robot/erratic_player
  experimental_controllers:
    author: !!python/unicode 'Stuart Glaser'
    deps:
    - message_notifier
    - kdl_parser
    - rospy
    - pr2_controller_interface
    - sensor_msgs
    - pr2_mechanism_model
    - pluginlib
    - control_toolbox
    - tinyxml
    - misc_utils
    - realtime_tools
    - roscpp
    - std_msgs
    - std_srvs
    - manipulation_msgs
    - visualization_msgs
    - tf
    - tf_conversions
    - kdl
    - angles
    - joy
    - eigen
    - filters
    - manipulation_srvs
    - deprecated_srvs
    - robot_mechanism_controllers
    - pr2_mechanism_controllers
    - geometry_msgs
    - pr2_robot_actions
    - trajectory
    - pr2_controllers_msgs
    desc: Controllers that are still under development
    license: BSD
    shortdesc: experimental_controllers
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/experimental_controllers
    website: http://pr.willowgarage.com/wiki/experimental_controllers
  fake_motion_planning:
    author: !!python/unicode 'Ioan Sucan'
    deps:
    - roscpp
    - motion_planning_msgs
    - planning_models
    - planning_environment
    desc: fake_motion_planning
    license: BSD
    shortdesc: fake_motion_planning
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/fake_motion_planning
    website: http://pr.willowgarage.com/wiki/fake_motion_planning
  filter:
    author: !!python/unicode 'Caroline Pantofaru'
    deps:
    - message_notifier
    - roscpp
    - std_msgs
    - deprecated_msgs
    - geometry_msgs
    - topic_synchronizer
    - topic_synchronizer2
    - tf
    - bfl
    - bullet
    - message_sequencing
    - people_msgs
    - sensor_msgs
    desc: tracker
    license: BSD
    shortdesc: tracker
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/stacks/people/filter
    website: http://ros.org/wiki/filter
  fingertip_reactive_grasp:
    author: !!python/unicode 'Kaijen Hsiao'
    deps:
    - pr2_mechanism_controllers
    - tf
    - gazebo_plugins
    - geometry_msgs
    - fingertip_pressure
    - rospy
    - pr2_mechanism_msgs
    - actionlib
    - pr2_controllers_msgs
    - pr2_gripper_action
    - kinematics_msgs
    - sensor_msgs
    - trajectory_msgs
    - experimental_controllers
    - visualization_msgs
    - joint_trajectory_action
    - simple_cartesian_controller
    - tabletop_object_detector
    - motion_planning_msgs
    - interpolated_ik_motion_planner
    - move_arm_msgs
    desc: fingertip_reactive_grasp
    license: BSD
    shortdesc: fingertip_reactive_grasp
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/fingertip_reactive_grasp
    website: http://ros.org/wiki/fingertip_reactive_grasp
  follower:
    author: !!python/unicode 'Caroline Pantofaru'
    deps:
    - pr2_machine
    - roscpp
    - std_msgs
    - deprecated_msgs
    - geometry_msgs
    - robot_actions
    - pr2_robot_actions
    - std_srvs
    - opencv2
    - cv_bridge
    - stereo_utils
    - stereo_msgs
    - rospy
    - sensor_msgs
    - tf
    - bfl
    - bullet
    - visualization_msgs
    - image_transport
    - person_following_planner
    - message_notifier
    - people_package
    - people_msgs
    - filter
    desc: follower
    license: BSD
    shortdesc: follower
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/stacks/people/follower
    website: http://ros.org/wiki/follower
  frame_attach:
    author: !!python/unicode 'Stuart Glaser'
    deps:
    - rospy
    - tf
    - geometry_msgs
    desc: frame_attach
    license: BSD
    shortdesc: frame_attach
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/frame_attach
    website: http://ros.org/wiki/frame_attach
  frame_uprighter:
    author: !!python/unicode 'Stuart Glaser'
    deps:
    - roscpp
    - tf
    desc: frame_uprighter
    license: BSD
    shortdesc: frame_uprighter
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/frame_uprighter
    website: http://ros.org/wiki/frame_uprighter
  functional_m3n_ros:
    author: !!python/unicode 'Daniel Munoz, Alex Sorokin'
    deps:
    - sensor_msgs
    - functional_m3n
    - point_cloud_mapping
    - point_cloud_clustering
    - descriptors_3d
    - object_segmentation
    - object_names
    - bagserver
    desc: ROS nodes for functional M3N library.
    license: BSD
    shortdesc: functional_m3n_ros
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/stacks/segmentation_3d/functional_m3n_ros
    website: http://pr.willowgarage.com/wiki/functional_m3n_ros
  geometric_blur:
    author: !!python/unicode 'Min Sun'
    deps:
    - roscpp
    - opencv2
    - std_msgs
    desc: geometric_blur
    license: BSD
    shortdesc: geometric_blur
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/geometric_blur
    website: http://pr.willowgarage.com/wiki/geometric_blur
  get_erratic_laser:
    author: !!python/unicode 'Kurt Konolige'
    deps:
    - rospy
    - sensor_msgs
    - std_msgs
    - laser_assembler
    - laser_geometry
    - laser_filters
    desc: get laser readings from the erratic robot
    license: BSD
    shortdesc: get_erratic_laser
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/example_erratic_pkgs/get_erratic_laser
    website: http://ros.org/wiki/get_laser_readings
  grasp_execution:
    author: !!python/unicode 'Matei Ciocarlie'
    deps:
    - roscpp
    - tf
    - actionlib
    - model_database
    - fingertip_reactive_grasp
    - move_arm_msgs
    - kinematics_msgs
    - pr2_controllers_msgs
    - motion_planning_msgs
    - geometry_msgs
    - visualization_msgs
    - geometry_msgs
    desc: "Contains the functionality needed for checking and executing\n     a pre-defined\
      \ grasp of a given object."
    license: BSD
    shortdesc: grasp_execution
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/applications/object_grasping_app/grasp_execution
    website: http://ros.org/wiki/grasp_execution
  grasping_app_executive:
    author: !!python/unicode 'Matei Ciocarlie'
    deps:
    - roscpp
    - object_grasping
    - model_database
    - tabletop_object_detector
    - geometry_msgs
    - sensor_msgs
    desc: grasping_app_executive
    license: BSD
    shortdesc: grasping_app_executive
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/applications/object_grasping_app/grasping_app_executive
    website: http://ros.org/wiki/grasping_app_executive
  hallway_tracker:
    author: !!python/unicode 'Caroline Pantofaru'
    deps:
    - roscpp
    - mapping_msgs
    - kdl
    - point_cloud_mapping
    - std_msgs
    - sensor_msgs
    - laser_geometry
    - laser_filters
    - message_filters
    - filters
    - visualization_msgs
    desc: A node which finds the two parallel walls in a hallway.
    license: BSD
    shortdesc: A node which finds the two parallel walls in a hallway.
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/stacks/point_cloud_perception_experimental/hallway_tracker
    website: http://pr.willowgarage.com
  hand_detector:
    author: !!python/unicode 'Alex Teichman'
    deps:
    - descriptors_2d
    - dorylus
    - opencv2
    - descriptors_2d_gpl
    - tinyxml
    desc: hand_detector
    license: BSD
    shortdesc: hand_detector
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/stacks/visual_feature_detectors/hand_detector
    website: http://pr.willowgarage.com/wiki/hand_detector
  hand_tracker:
    author: !!python/unicode 'Romain Thibaux'
    deps:
    - roscpp
    - rospy
    - opencv2
    - descriptors_2d
    desc: hand_tracker
    license: BSD
    shortdesc: hand_tracker
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/hand_tracker
    website: http://pr.willowgarage.com/wiki/hand_tracker
  hanoi:
    author: !!python/unicode 'Nate Koenig'
    deps:
    - pr2_machine
    - roscpp
    - rospy
    - pr2_tuckarm
    - visualization_msgs
    - actionlib
    - actionlib_msgs
    - sensor_msgs
    - trajectory_msgs
    - manipulation_srvs
    - motion_planning_msgs
    - robot_mechanism_controllers
    - experimental_controllers
    - pr2_gazebo
    - pr2_head_controller
    - stereo_image_proc
    - move_arm_msgs
    - cmvision
    - move_arm
    - bullet
    desc: hanoi
    license: BSD
    shortdesc: hanoi
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/hanoi
    website: http://pr.willowgarage.com/wiki/hanoi
  head_cart_gazebo:
    author: !!python/unicode 'John Hsu'
    deps: []
    desc: head cart simulation
    license: BSD
    shortdesc: head cart simulation
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/stacks/wg_robots_gazebo/head_cart_gazebo
    website: http://ros.org/wiki//wg/stor2/johnhsu/projects/pr2/wg-ros-pkg/stacks/wg_robots/head_cart_gazebo
  height_classifier:
    author: !!python/unicode 'Caroline Pantofaru'
    deps:
    - sensor_msgs
    - std_msgs
    - roscpp
    - geometry_msgs
    - opencv2
    - cv_bridge
    - tf
    desc: height_classifier
    license: BSD
    shortdesc: height_classifier
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/height_classifier
    website: http://pr.willowgarage.com/wiki/height_classifier
  hot_box_test:
    author: !!python/unicode 'Kevin Watts'
    deps:
    - life_test
    - power_monitor
    - geometry_msgs
    - pr2_mechanism_msgs
    - pr2_camera_synchronizer
    desc: "This package runs the hot box test including:\n  base_shuffle controller\
      \ (hot_box_test)\n  torso_lift_controller (lift_test)\n  head_controller (life_test)\n\
      \  laser_controller (life_test)\n  arm_life_controller (life_test)"
    license: BSD
    shortdesc: Scripts to run the PR2 hot box test
    source: details.php?name=pr2_controller_configuration
    website: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/stacks/pr2_self_test/hot_box_test
  icra_ros_tutorial:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - rospy
    - roslib
    - opencv2
    - cv_bridge
    - geometry_msgs
    - std_msgs
    - sensor_msgs
    - move_base_msgs
    - tf
    - actionlib
    - pr2_arm_ik_action
    - joint_trajectory_generator
    - pr2_tuck_arms_action
    - pr2_common_action_msgs
    - pr2_plugs_actions
    - pr2_2dnav_local
    desc: icra_ros_tutorial
    license: BSD
    shortdesc: icra_ros_tutorial
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/icra_ros_tutorial
    website: http://ros.org/wiki/icra_ros_tutorial
  ijg_libjpeg:
    author: !!python/unicode 'The Independent JPEG Group'
    deps: []
    desc: 'This package is a just a wrapper around the standard distribution of the
      IJG

      JPEG software, version 6b. This library is mature, widely used, and is present

      in many Linux distributions as &quot;libjpeg.&quot; I have wrapped it as a ROS
      package

      just to simplify installation and dependency generation within ROS. This ROS

      package also includes a trivial library which provides a mutex for wrapping

      calls to libjpeg, as libjpeg is not thread-safe due to its use of jumps for

      error handling.


      http://www.ijg.org/files/README'
    license: BSD-style
    shortdesc: The Independent JPEG Group's JPEG software
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/deprecated/ijg_libjpeg
    website: http://www.ijg.org
  image_server:
    author: !!python/unicode 'Alex Sorokin'
    deps:
    - roscpp
    - std_msgs
    - sensor_msgs
    - opencv2
    - cv_bridge
    desc: A simple server to store and retrieve specific images.
    license: BSD
    shortdesc: image_server
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/image_server
    website: http://pr.willowgarage.com/wiki/image_server
  image_synthesizer:
    author: !!python/unicode 'James Bowman'
    deps:
    - rospy
    - rostest
    - stereo_utils
    desc: Simple renderer
    license: BSD
    shortdesc: Simple renderer
    source: details.php?name=vop
    website: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/vision/image_synthesizer
  image_utils:
    author: !!python/unicode 'Morgan Quigley (email: mquigley@cs.stanford.edu)'
    deps:
    - ijg_libjpeg
    - std_msgs
    - deprecated_msgs
    - roscpp
    - opencv2
    desc: "This package provides a few sample nodes to show how to use the Image flow,\n\
      \    as well as a few test programs and utility programs (e.g. which send out\n\
      \    a static image at arbitrary intervals)."
    license: BSD
    shortdesc: Image utilities
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/deprecated/image_utils
    website: http://stair.stanford.edu
  invent_client:
    author: !!python/unicode 'Scott Hassen, Kevin Watts'
    deps: []
    desc: Provides an interface for the Willow Garage Inventory system, used by the
      life_test and qualification systems to automatically log assembly data into
      invent.
    license: BSD
    shortdesc: Interfaces with WG inventory system
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/stacks/pr2_self_test/invent_client
    website: http://ros.org/wiki/invent_client
  jacobian_server:
    author: !!python/unicode 'Stuart Glaser'
    deps:
    - roscpp
    - kdl
    - pr2_mechanism_model
    desc: "Provides a service for querying kinematic Jacobians of any chain\n    \
      \ of links of the robot."
    license: BSD
    shortdesc: jacobian_server
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/jacobian_server
    website: http://ros.org/wiki/jacobian_server
  joint_trajectory_normalizer:
    author: !!python/unicode 'Matei Ciocarlie'
    deps:
    - roscpp
    - trajectory_msgs
    - sensor_msgs
    - urdf
    desc: joint_trajectory_normalizer
    license: BSD
    shortdesc: joint_trajectory_normalizer
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/joint_trajectory_normalizer
    website: http://ros.org/wiki/joint_trajectory_normalizer
  labeled_object_detector:
    author: !!python/unicode 'Alex Sorokin'
    deps:
    - roscpp
    - robot_actions
    - pr2_robot_actions
    - point_cloud_mapping
    - laser_assembler
    - pr2_laser_snapshotter
    - tf
    - visualization_msgs
    - object_names
    - sensor_msgs
    - geometry_msgs
    - visualization_msgs
    desc: Object detector for previousely labeled objects.
    license: BSD
    shortdesc: labeled_object_detector
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/labeled_object_detector
    website: http://pr.willowgarage.com/wiki/labeled_object_detector
  lifelong_mapping:
    author: !!python/unicode 'Patrick Mihelich'
    deps:
    - roscpp
    - tf
    - geometry_msgs
    - toro
    desc: lifelong_mapping
    license: BSD
    shortdesc: lifelong_mapping
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/lifelong_mapping
    website: http://pr.willowgarage.com/wiki/lifelong_mapping
  linux_monitor:
    author: !!python/unicode 'Scott Hassan'
    deps:
    - roslib
    - rospy
    - rosservice
    - std_msgs
    desc: Monitor a cluster of linux computers
    license: BSD
    shortdesc: linux_monitor
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/linux_monitor
    website: http://pr.willowgarage.com/wiki/linux_mointor
  logsetta:
    author: !!python/unicode 'Morgan Quigley'
    deps:
    - std_msgs
    - sensor_msgs
    - rosrecord
    - geometry_msgs
    - nav_msgs
    - tf
    desc: "Like the famed Rosetta stone of ages past, the logsetta package will\n\
      \    contain translators to/from every imaginable log file format.\n    \n \
      \   But hey, you have to start somewhere. Currently all it can do is write\n\
      \    CARMEN log files. So you can use the &quot;megamaid&quot; package to make\
      \ vacuum bags\n    of your experiment, then play them back (also through &quot;megamaid&quot;)\
      \ while the\n    CARMEN logger is running to do the translation."
    license: BSD
    shortdesc: "Like the famed Rosetta stone of ages past, the logsetta package will\n\
      \    contain translators to..."
    source: details.php?name=roscpp
    website: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/stacks/bag_experimental/logsetta
  lwpr:
    author: !!python/unicode 'Stefan Klanke, Sethu Vijayakumar, and Stefan Schaal
      (sethu.vijayakumar@ed.ac.uk). ROS package maintained by Peter Pastor (pastor@willowgarage.com)'
    deps: []
    desc: "This package contains Locally Weighted Projection Regression (LWPR) library,\n\
      \    written by Stefan Klanke, Sethu Vijayakumar, and Stefan Schaal.\n    This\
      \ package does not modify LWPR in any way; it simply provides a convenient\n\
      \t\tway to download and compile the headers and library in a way that can be\n\
      \t\tmanaged by the ROS dependency system.\n\n    Locally Weighted Projection\
      \ Regression (LWPR) is a recent algorithm that\n    achieves nonlinear function\
      \ approximation in high dimensional spaces with\n    redundant and irrelevant\
      \ input dimensions. At its core, it uses locally linear\n    models, spanned\
      \ by a small number of univariate regressions in selected\n    directions in\
      \ input space. A locally weighted variant of Partial Least\n    Squares (PLS)\
      \ is employed for doing the dimensionality reduction.\n    \n    This nonparametric\
      \ local learning system\n    * learns rapidly with second order learning methods\
      \ based on incremental training,\n    * uses statistically sound stochastic\
      \ cross validation to learn,\n    * adjusts its weighting kernels based on local\
      \ information only,\n    *\n    * has a computational complexity that is linear\
      \ in the number of inputs, and\n    * can deal with a large number of - possibly\
      \ redundant - inputs,\n\n    as shown in evaluations with up to 50 dimensional\
      \ data sets. To our knowledge,\n    this is the first truly incremental spatially\
      \ localized learning method to combine\n    all these properties.\n\n    A good\
      \ reference for the algorithm is the following paper:\n    Sethu Vijayakumar,\
      \ Aaron D'Souza and Stefan Schaal. Incremental Online Learning in High Dimensions.\n\
      \    Neural Computation, vol. 17, no. 12, pp. 2602-2634 (2005).\n    [http://homepages.inf.ed.ac.uk/svijayak/publications/vijayakumar-NeuCom2005.pdf]\n\
      \n    More information here http://www.ipab.inf.ed.ac.uk/slmc/software/lwpr/"
    license: LGPL
    shortdesc: "This package contains Locally Weighted Projection Regression (LWPR)\
      \ library,\n    written by St..."
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/lwpr
    website: http://www.ipab.inf.ed.ac.uk/slmc/software/lwpr
  m3_simulator:
    author: !!python/unicode 'Bhaskara Marthi'
    deps:
    - pr2_gazebo
    - geometry_msgs
    - tf
    - move_base_msgs
    - actionlib
    desc: Miscellaneous launch files and scripts for m3 simulator use case.
    license: BSD
    shortdesc: m3_simulator
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/m3_simulator
    website: http://pr.willowgarage.com/wiki/m3_simulator
  mech_turk:
    author: !!python/unicode 'Alexander Sorokin'
    deps:
    - rostest
    desc: This package provides a general interface for interaction with Mechanical
      Turk task server.
    license: BSD
    shortdesc: "This package provides a general interface for interaction with Mechanical\
      \ Turk task server. \n  ..."
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/mech_turk
    website: http://ros.org/wiki/mech_turk
  mech_turk_ros:
    author: !!python/unicode 'Alexander Sorokin'
    deps:
    - sensor_msgs
    - actionlib_msgs
    - actionlib
    - opencv2
    - mech_turk_ros_msgs
    - mech_turk
    - cv_mech_turk2
    desc: "This package contains ROS integration tools for Mechanical\n    Turk. It\
      \ allows to send images directly for annotation and listen\n    for the resulting\
      \ annotations in real-time."
    license: BSD
    shortdesc: mech_turk_ros
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/mech_turk_ros
    website: http://ros.org/wiki/mech_turk_ros
  mech_turk_ros_msgs:
    author: !!python/unicode 'Alex'
    deps:
    - geometry_msgs
    desc: Annotation messages for Mechanical Turk interface.
    license: BSD
    shortdesc: mech_turk_msgs
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/mech_turk_ros_msgs
    website: http://ros.org/wiki/mech_turk_msgs
  mechanism_control_test:
    author: !!python/unicode 'Eric Berger'
    deps:
    - roscpp
    - pr2_hardware_interface
    - pr2_controller_manager
    - pr2_hardware_interface
    - rostest
    desc: Test harness for profiling and debugging controllers from the software perspective
      without hardware.
    license: BSD
    shortdesc: PR2 Controller Test Harness
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/mechanism_control_test
    website: http://pr.willowgarage.com
  message_notifier:
    author: !!python/unicode 'Tully Foote'
    deps:
    - tf
    desc: "This is a backwards compatability packages for users of\n    message_notifier\
      \ class. It was a deprecated tf API which has been\n    removed, but there is\
      \ a lot of code still using it.  The correct\n    thing to use instead is a\
      \ tf::MessageFilter.  This code will not\n    be maintained and will not be\
      \ ported to future distros."
    license: BSD
    shortdesc: message_notifier
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/message_notifier
    website: http://ros.org/wiki/message_notifier
  message_sequencing:
    author: !!python/unicode 'Jeremy Leibs'
    deps:
    - roscpp
    desc: A package for providing control over the sequencing of incoming messages.
    license: BSD
    shortdesc: A package for providing control over the sequencing of incoming messages.
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/deprecated/message_sequencing
    website: http://pr.willowgarage.com/wiki/message_sequencing
  misc_utils:
    shortdesc: Miscellaneous Utilities
  moby:
    author: !!python/unicode 'Evan Drumwright'
    deps: []
    desc: This package contains Moby, another physics engine.
    license: LGPL
    shortdesc: This package contains Moby, another physics engine.
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/moby
    website: http://svn.sourceforge.net/moby
  model_database_services:
    author: !!python/unicode 'Matei Ciocarlie'
    deps:
    - model_database
    - geometry_msgs
    - geometric_shapes_msgs
    - roscpp
    desc: model_database_services
    license: BSD
    shortdesc: model_database_services
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/model_database_services
    website: http://ros.org/wiki/model_database_services
  move_arm_tools:
    author: !!python/unicode 'Benjamin Cohen /bcohen@willowgarage.com, Ioan Sucan'
    deps:
    - std_msgs
    - mapping_msgs
    - manipulation_msgs
    - manipulation_srvs
    - motion_planning_msgs
    - planning_environment
    - sensor_msgs
    - tf
    - pr2_ik
    - kdl
    - angles
    - bullet
    - rospy
    - nav_msgs
    - pr2_mechanism_controllers
    - experimental_controllers
    - robot_mechanism_controllers
    - move_arm
    desc: ''
    license: BSD
    shortdesc: tools to use move_arm
    source: details.php?name=roscpp
    website: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/move_arm_tools
  move_base_client:
    author: !!python/unicode 'Vijay Pradeep'
    deps:
    - move_base_msgs
    - nav_robot_actions
    - actionlib
    - action_translator
    - geometry_msgs
    desc: move_base_client
    license: BSD
    shortdesc: move_base_client
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/move_base_client
    website: http://pr.willowgarage.com/wiki/move_base_client
  move_erratic:
    author: !!python/unicode 'Kurt Konolige'
    deps:
    - rospy
    - sensor_msgs
    - std_msgs
    - tf
    - move_base_stage
    desc: move the robot and check odometry
    license: BSD
    shortdesc: move_erratic
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/example_erratic_pkgs/move_erratic
    website: http://ros.org/wiki/get_laser_readings
  move_erratic_rviz:
    author: !!python/unicode 'Kurt Konolige'
    deps:
    - rospy
    - sensor_msgs
    - std_msgs
    - tf
    - move_base_stage
    - rviz
    desc: move the robot and check odometry
    license: BSD
    shortdesc: move_robot_rviz
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/example_erratic_pkgs/move_erratic_rviz
    website: http://ros.org/wiki/get_laser_readings
  mturk_grab_object:
    author: !!python/unicode 'Alex Sorokin'
    deps:
    - table_object_detector
    - tabletop_srvs
    - tabletop_msgs
    - sensor_msgs
    - actionlib
    - move_arm
    - motion_planning_msgs
    desc: The package to grab object using mechanical turk for object recognition
      and grasp points.
    license: BSD
    shortdesc: mturk_grab_object
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/mturk_grab_object
    website: http://pr.willowgarage.com/wiki/mturk_grab_object
  multibooster:
    author: !!python/unicode 'Alex Teichman'
    deps:
    - eigen
    - qpOASES
    desc: MultiBooster is a multi-class, multi-descriptor boosting algorithm which
      uses hypersphere weak classifiers.
    license: BSD
    shortdesc: multibooster
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/stacks/visual_feature_detectors/multibooster
    website: http://ros.org/wiki/multibooster
  naive_bayes:
    author: !!python/unicode 'Romain Thibaux'
    deps:
    - eigen
    - sensor_msgs
    - point_cloud_mapping
    - hierarchical_kmeans
    desc: naive_bayes
    license: BSD
    shortdesc: naive_bayes
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/naive_bayes
    website: http://ros.org/wiki/naive_bayes
  nav_robot_actions:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - robot_actions
    - std_msgs
    - geometry_msgs
    desc: This package contains core interfaces for navigation specific robot actions.
    license: BSD
    shortdesc: Navigation specific robot actions
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/deprecated/nav_robot_actions
    website: http://pr.willowgarage.com/wiki/nav_robot_actions
  neighborhood_index:
    author: !!python/unicode 'Marius Muja and Ethan Dreyfuss'
    deps:
    - sensor_msgs
    - geometry_msgs
    - point_cloud_mapping
    desc: "neighborhood_index\n     Datastructure which supports indexing of points\
      \ and efficient lookup of neighboorhoods around them."
    license: BSD
    shortdesc: neighborhood_index
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/neighborhood_index
    website: http://pr.willowgarage.com/wiki/neighborhood_index
  new_point_cloud:
    author: !!python/unicode 'Patrick Mihelich'
    deps:
    - std_msgs
    - geometry_msgs
    - sensor_msgs
    - eigen
    - opencv2
    desc: New version of PointCloud message and deserializer class for SSE-aligned
      point data.
    license: BSD
    shortdesc: new_point_cloud
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/new_point_cloud
    website: http://pr.willowgarage.com/wiki/new_point_cloud
  node_sequencer:
    author: !!python/unicode 'Bhaskara Marthi'
    deps:
    - roscpp
    - std_msgs
    desc: node_sequencer
    license: BSD
    shortdesc: node_sequencer
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/node_sequencer
    website: http://pr.willowgarage.com/wiki/node_sequencer
  object_grasping:
    author: !!python/unicode 'Matei Ciocarlie'
    deps:
    - roscpp
    - model_database
    - tabletop_object_detector
    - sensor_msgs
    - model_database
    - grasp_execution
    - planning_environment_msgs
    - mapping_msgs
    - pr2_msgs
    - geometric_shapes_msgs
    desc: "Provides functionality for grasping an object with known\n     identity\
      \ and pose."
    license: BSD
    shortdesc: object_grasping
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/applications/object_grasping_app/object_grasping
    website: http://ros.org/wiki/object_grasping
  object_segmentation:
    author: !!python/unicode 'Daniel Munoz\ dmunoz@willowgarage.com'
    deps:
    - functional_m3n
    - point_cloud_mapping
    - point_cloud_clustering
    - descriptors_3d
    - opencv2
    - bullet
    - descriptors_2d
    desc: "Package for segmenting objects from various vision\n     modalities: images,\
      \ stereo point clouds, laser point clouds\n     and combinations of."
    license: BSD
    shortdesc: object_segmentation
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/stacks/segmentation_3d/object_segmentation
    website: http://pr.willowgarage.com/wiki/object_segmentation
  object_thumbnail:
    author: !!python/unicode 'Alex Sorokin'
    deps:
    - annotated_map_msgs
    - annotated_planar_patch_map
    - tabletop_srvs
    - tabletop_msgs
    - sensor_msgs
    - geometry_msgs
    - opencv2
    - cv_bridge
    desc: Creates thumbnails of objects detected on the table.
    license: BSD
    shortdesc: object_thumbnail
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/object_thumbnail
    website: http://pr.willowgarage.com/wiki/object_thumbnail
  octave_bag_player:
    author: !!python/unicode 'Vijay Pradeep and John Eaton'
    deps: []
    desc: "Allows functionality similar to python's logplayer in rosrecord.\n    \
      \ Allows users to get specific batches of message from a bagfile."
    license: BSD
    shortdesc: Tools to manipulate bagfiles in octave
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/octave_bag_player
    website: http://pr.willowgarage.com/wiki/octave_bag_player
  optical_flag_calibration:
    author: !!python/unicode 'Vijay Pradeep'
    deps:
    - pr2_mechanism_controllers
    - manipulation_msgs
    desc: Scripts for checking the optical flag values. It is quite possible that
      all these scripts should be lumped into the kinematic calibration package.
    license: BSD
    shortdesc: Scripts for checking the optical flag values. It is quite possible
      that all these scripts should be ...
    source: details.php?name=std_msgs
    website: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/stacks/calibration_experimental/optical_flag_calibration
  outlet_detection:
    author: !!python/unicode 'Patrick Mihelich, Victor Eruhimov, Marius Muja, Gary
      Bradski'
    deps:
    - rospy
    - rostest
    - sensor_msgs
    - geometry_msgs
    - visualization_msgs
    - opencv2
    - cv_bridge
    - image_geometry
    - image_transport
    - image_proc
    - tf
    desc: Outlet detection and localization
    license: BSD
    shortdesc: Outlet detection and localization
    source: details.php?name=roscpp
    website: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/stacks/visual_feature_detectors/outlet_detection
  pcd_novelty:
    author: !!python/unicode 'Alex Sorokin'
    deps:
    - roscpp
    - robot_actions
    - pr2_robot_actions
    - point_cloud_mapping
    - laser_assembler
    - pr2_laser_snapshotter
    - tf
    desc: Annotates the point cloud with labels of how new the objects are.
    license: BSD
    shortdesc: pcd_novelty
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/pcd_novelty
    website: http://pr.willowgarage.com/wiki/pcd_novelty
  people_package:
    author: !!python/unicode 'Caroline Pantofaru'
    deps:
    - message_notifier
    - pr2_machine
    - roscpp
    - std_msgs
    - deprecated_msgs
    - geometry_msgs
    - robot_actions
    - pr2_robot_actions
    - std_srvs
    - opencv2
    - cv_bridge
    - stereo_utils
    - stereo_msgs
    - rospy
    - sensor_msgs
    - topic_synchronizer
    - topic_synchronizer2
    - laser_geometry
    - tf
    - color_calib
    - bfl
    - bullet
    - rosrecord
    - message_sequencing
    - visualization_msgs
    - image_transport
    - person_following_planner
    - people_msgs
    - filter
    desc: ''
    license: BSD
    shortdesc: All functions related to people. Detection, tracking, etc.
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/stacks/people/people_package
    website: http://www.willowgarage.com
  person_follower:
    author: !!python/unicode 'Ethan Dreyfuss'
    deps:
    - rospy
    - roscpp
    - tf
    - nav_robot_actions
    - std_msgs
    - geometry_msgs
    - pr2_robot_actions
    - robot_actions
    - bagserver
    - stereo_msgs
    desc: An executive-free (for now) program to follow people
    license: BSD
    shortdesc: An executive-free (for now) program to follow people
    source: details.php?name=pr2_machine
    website: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/person_follower
  person_following_planner:
    author: !!python/unicode 'Eitan Marder-Eppstein, Sachin Chitta'
    deps:
    - roscpp
    - costmap_2d
    - pluginlib
    - nav_core
    - base_local_planner
    - tf
    - angles
    - navfn
    desc: This planner attempts to find a legal place to direct the robot while it
      is following a person.
    license: BSD
    shortdesc: person_following_planner
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/person_following_planner
    website: http://pr.willowgarage.com/wiki/person_following_planner
  pf_object_detector:
    author: !!python/unicode 'Alex Sorokin/sorokin@willowgarage.com'
    deps: []
    desc: "Tree-structured object model. HOG features. LSVM training. An octave port\
      \ and a wrapper for ROS. \n     Original code by Pedro Felzenszwalb, Ross Girshick,\
      \ Deva Ramanan."
    license: BSD
    shortdesc: pf_object_detector
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/pf_object_detector
    website: http://pr.willowgarage.com/wiki/vision/object_detection/pf_object_detector
  phase_space:
    author: !!python/unicode 'Vijay Pradeep'
    deps:
    - std_msgs
    - mocap_msgs
    - rospy
    desc: A basic client application to interface with the PhaseSpace ground truth
      system
    license: BSD
    shortdesc: A basic client application to interface with the PhaseSpace ground
      truth system
    source: details.php?name=roscpp
    website: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/stacks/drivers_experimental/phase_space
  pipeline_sync:
    author: !!python/unicode 'Vijay Pradeep'
    deps:
    - rospy
    - std_msgs
    - calibration_msgs
    - roscpp
    desc: pipeline_sync
    license: BSD
    shortdesc: pipeline_sync
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/stacks/calibration_experimental/sandbox/pipeline_sync
    website: http://ros.org/wiki/pipeline_sync
  planar_objects:
    author: !!python/unicode 'Juergen Sturm'
    deps:
    - geometry_msgs
    - point_cloud_mapping
    - visualization_msgs
    - opencv2
    - cv_bridge
    - tf
    - eigen
    - stereo_msgs
    - mocap_msgs
    - message_filters
    - rosbagmigration
    desc: planar_objects
    license: BSD
    shortdesc: Detects and tracks rectangles in point clouds. Can be used to learn
      articulation models for doors and drawers.
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/planar_objects
    website: http://www.informatik.uni-freiburg.de/~sturm/projectposeestimationfrompointclouds.html
  planar_patch_map:
    author: !!python/unicode 'Radu Bogdan Rusu'
    deps:
    - roscpp
    - sensor_msgs
    - mapping_msgs
    - point_cloud_mapping
    desc: A node which converts 3D point cloud data to polygonal planar patches using
      SAC and Octrees.
    license: BSD
    shortdesc: "A node which converts 3D point cloud data to polygonal planar patches\
      \ using SAC and Octrees.\n  ..."
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/planar_patch_map
    website: http://pr.willowgarage.com
  player:
    author: !!python/unicode 'Brian Gerkey, with contributions from many others. See
      web page for a full credits llist.'
    deps: []
    desc: 'This package contains Player, from the Player Project

      (http://playerstage.sf.net). This package does not modify Player in any

      way; it simply provides a convenient way to download and compile the

      headers and libraries in a way that can be managed by the ROS dependency

      system.'
    license: LGPL
    shortdesc: 'This package contains Player, from the Player Project

      (http://playerstage.sf.net). This package do...'
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/player
    website: http://playerstage.sf.net
  pluginlib_tutorial_interfaces:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps: []
    desc: pluginlib_tutorial_interfaces
    license: BSD
    shortdesc: pluginlib_tutorial_interfaces
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/pluginlib_tutorials/pluginlib_tutorial_interfaces
    website: http://pr.willowgarage.com/wiki/pluginlib_tutorial_interfaces
  pluginlib_tutorial_provider:
    author: !!python/unicode 'Tully Foote'
    deps:
    - pluginlib
    - pluginlib_tutorial_interfaces
    desc: a package to experiment with providing a plugin
    license: BSD
    shortdesc: a package to experiment with providing a plugin
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/pluginlib_tutorials/pluginlib_tutorial_provider
    website: http://pr.willowgarage.com/wiki/pluginlib_tutorial_provider
  pluginlib_tutorial_user:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - pluginlib
    - pluginlib_tutorial_interfaces
    - rosconsole
    desc: Example of using a plugin
    license: BSD
    shortdesc: Example of using a plugin
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/pluginlib_tutorials/pluginlib_tutorial_user
    website: http://pr.willowgarage.com/wiki/pluginlib_tutorial_user
  point_cloud_basics_demo:
    author: !!python/unicode 'Alex Sorokin/ sorokin@willowgarage.com'
    deps:
    - rviz
    - rosrecord
    - laser_assembler
    - pr2_laser_snapshotter
    - planar_patch_map
    - rosgraph
    desc: "Tutorial on point clouds in ROS. It shows, how to build things in\n   \
      \  ROS, how to launch things, how the data is sent from the laser scanner to\
      \ processing nodes, how to display things and how to record the data."
    license: BSD
    shortdesc: A tutorial on laser and point cloud processing in ROS
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/point_cloud_basics_demo
    website: http://pr.willowgarage.com/wiki/ROS/Tutorials/point_cloud_basics
  point_cloud_clustering:
    author: !!python/unicode 'Daniel Munoz/ dmunoz@willowgarage.com, Alex Sorokin'
    deps:
    - roscpp
    - point_cloud_mapping
    desc: Package for creating clusters/groupings from 3-D point clouds.
    license: BSD
    shortdesc: point_cloud_clustering
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/stacks/segmentation_3d/point_cloud_clustering
    website: http://pr.willowgarage.com/wiki/point_cloud_clustering
  point_cloud_mapping:
    author: !!python/unicode 'Radu Bogdan Rusu and contributors'
    deps:
    - roscpp
    - sensor_msgs
    - visualization_msgs
    - angles
    - eigen
    - cminpack
    - tf
    - ANN
    - FLANN
    desc: "<p>\n    PCML - Point Cloud Mapping Library: a complete package for 3D\
      \ point\n    cloud processing, oferring both generic libraries and specific\
      \ purpose\n    nodes.\n</p>\n<p>\n    To keep things modular, PCML is split\
      \ into a list of smaller libraries, including:\n<ul>\n    <li>cloud_geometry:\
      \ areas, distances, intersections, 3D normals/features estimation, norms, projections,\
      \ statistics,\n                      transformations, etc</li>\n\n    <li>cloud_io:\
      \ a library for Input/Output PCD (Point Cloud Data) processing</li>\n\n    <li>cloud_kdtree:\
      \ a library for nD spatial decomposition and nearest neighbors searches for\
      \ PointCloud messages using k-D\n                    trees.</li>\n\n    <li>cloud_octree:\
      \ a library for 3D spatial decomposition of PointCloud messages using octree\
      \ data structures.</li>\n\n    <li>sample_consensus: a library for SAmple Consensus\
      \ (SAC) like methods (RANSAC, MSAC, MLESAC, etc,) and geometric shape\n    \
      \                    models (planes, cylinders, cones, torii, lines, spheres,\
      \ etc)</li>\n</ul>\n</p>\n<p>\n   The list of nodes includes:\n\n<ul>\n   <li>cloud_downsampler_node:\
      \ a node which uniformly downsamples a 3D point cloud</li>\n\n   <li>normal_estimation_node:\
      \ a node which estimates local surface properties at each point such as surface\
      \ normals,\n                             curvature changes, moment invariants,\
      \ etc.</li>\n\n   <li>planar_fit_node: a node that segments the best plane for\
      \ a given dataset using a variety of methods</li>\n</ul>\n</p>"
    license: BSD
    shortdesc: ''
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/stacks/semantic_mapping/point_cloud_mapping
    website: http://pr.willowgarage.com
  point_cloud_tutorials:
    author: !!python/unicode 'Marius Muja'
    deps:
    - roscpp
    - std_msgs
    - angles
    - point_cloud_mapping
    - mapping_msgs
    - visualization_msgs
    desc: This package contains examples of how to work with point clouds in ROS.
    license: BSD
    shortdesc: point_cloud_tutorials
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/point_cloud_tutorials
    website: http://pr.willowgarage.com/wiki/point_cloud_tutorials
  pose_median_filter:
    author: !!python/unicode 'Eric Berger'
    deps:
    - rospy
    - geometry_msgs
    - std_srvs
    desc: pose_median_filter
    license: BSD
    shortdesc: pose_median_filter
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/pose_median_filter
    website: http://ros.org/wiki/pose_median_filter
  poseviz:
    author: !!python/unicode 'Gunter Niemeyer'
    deps:
    - std_msgs
    - visualization_msgs
    - bullet
    - tf
    desc: ''
    license: BSD
    shortdesc: Pose Msg to Visualization Msg Retransmitter
    source: details.php?name=roscpp
    website: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/poseviz
  pr2_backup_safety_sound:
    author: !!python/unicode 'Leila Takayama'
    deps:
    - geometry_msgs
    - sound_play
    desc: A Python Robot Backing-Up Safety Sound
    license: BSD
    shortdesc: BackingUpSound
    source: details.php?name=rospy
    website: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/pr2_backup_safety_sound
  pr2_core_application:
    author: !!python/unicode 'Eric Berger'
    deps:
    - roslib
    - rospy
    - webui
    - rosweb
    - std_msgs
    - pr2_launch_files
    desc: pr2_core_application
    license: BSD
    shortdesc: pr2_core_application
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/pr2_robot/pr2_core_application
    website: http://ros.org/wiki/pr2_core_application
  pr2_gripper_controller:
    author: !!python/unicode 'Matthew Piccoli'
    deps:
    - roscpp
    - roslib
    - rosrecord
    - pr2_mechanism_model
    - robot_mechanism_controllers
    - std_msgs
    - experimental_controllers
    desc: The control toolbox contains modules that is useful for controlling the
      gripper.
    license: BSD
    shortdesc: Gripper Control Toolbox
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/pr2_gripper_controller
    website: http://pr.willowgarage.com
  pr2_head_cart:
    author: !!python/unicode 'Kevin Watts'
    deps:
    - pr2_controller_configuration
    - pr2_etherCAT
    - hokuyo_node
    - robot_state_publisher
    - prosilica_camera
    - teleop_head
    - pr2_computer_monitor
    - pr2_power_board
    - pr2_bringup
    - diagnostic_aggregator
    - robot_mechanism_controllers
    - pr2_mechanism_controllers
    - wge100_camera
    - pr2_controller_manager
    - move_base
    - laser_filters
    - laser_assembler
    - pr2_laser_snapshotter
    - camera_trigger_test
    - joy
    - ps3joy
    - rosrecord
    - stereo_image_proc
    - dynamic_reconfigure
    - costmap_2d
    desc: "This package contains the launch files and XML descriptions to run the\n\
      \    PR2 head on a cart"
    license: BSD
    shortdesc: Launch files to run PR2 head on a cart
    source: details.php?name=pr2_defs
    website: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/stacks/pr2_common_alpha/pr2_head_cart
  pr2_head_controller:
    author: !!python/unicode 'Stuart Glaser'
    deps:
    - geometry_msgs
    - trajectory_msgs
    - sensor_msgs
    - roscpp
    - message_filters
    - tf
    desc: Interface for controlling the head on the PR2
    license: BSD
    shortdesc: pr2_head_controller
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/pr2_head_controller
    website: http://ros.org/wiki/pr2_head_controller
  pr2_ik:
    author: !!python/unicode 'Sachin Chitta sachinc@willowgarage.com'
    deps:
    - message_notifier
    - roscpp
    - kdl
    - eigen
    - angles
    - tf_conversions
    - geometry_msgs
    - kdl_parser
    - urdf
    - pr2_mechanism_controllers
    - manipulation_srvs
    - manipulation_msgs
    - geometry_msgs
    - experimental_controllers
    desc: ''
    license: BSD
    shortdesc: PR2 inverse kinematics solver
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/stacks/motion_planning_research/pr2_ik
    website: http://pr.willowgarage.com
  pr2_ik_with_collision:
    author: !!python/unicode 'Sachin Chitta'
    deps:
    - roscpp
    - eigen
    - angles
    - tf_conversions
    - pr2_mechanism_model
    - manipulation_srvs
    - manipulation_msgs
    - chomp_motion_planner
    - pr2_ik
    desc: pr2_ik_with_collision
    license: BSD
    shortdesc: pr2_ik_with_collision
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/pr2_ik_with_collision
    website: http://pr.willowgarage.com/wiki/pr2_ik_with_collision
  pr2_laser_tilt_actions:
    author: !!python/unicode 'Vijay Pradeep'
    deps:
    - pr2_msgs
    - robot_actions
    desc: pr2_tilt_laser_actions
    license: BSD
    shortdesc: pr2_laser_tilt_actions
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/stacks/calibration_experimental/sandbox/pr2_laser_tilt_actions
    website: http://pr.willowgarage.com/wiki/pr2_tilt_laser_actions
  pr2_launch_files:
    author: !!python/unicode 'Eric Berger'
    deps: []
    desc: pr2_launch_files
    license: BSD
    shortdesc: pr2_launch_files
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/pr2_robot/pr2_launch_files
    website: http://ros.org/wiki/pr2_launch_files
  pr2_mirror_mode:
    author: !!python/unicode 'Blaise Gassend'
    deps:
    - trajectory_msgs
    - pr2_controllers_msgs
    - pr2_controller_manager
    desc: "A tool that mirrors the joint angles between the two robots (force\n  \
      \  feedback)."
    license: BSD
    shortdesc: Copys the arm and head position from one robot to another.
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/pr2_mirror_mode
    website: http://ros.org/wiki/pr2_mirror_mode
  pr2_phase_space:
    author: !!python/unicode 'Vijay Pradeep'
    deps:
    - std_msgs
    - nav_msgs
    - mocap_msgs
    - phase_space
    - tf
    - pr2_mechanism_controllers
    desc: A series a nodes to interface the PhaseSpace node with the actual PR2 hardware
    license: BSD
    shortdesc: A series a nodes to interface the PhaseSpace node with the actual PR2
      hardware
    source: details.php?name=roscpp
    website: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/stacks/drivers_experimental/pr2_phase_space
  pr2_robot_actions:
    author: !!python/unicode 'Conor McGann'
    deps:
    - robot_actions
    - std_msgs
    - nav_msgs
    - geometry_msgs
    - door_msgs
    - pr2_msgs
    desc: ''
    license: BSD
    shortdesc: This package contains core interfaces for robot actions
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/pr2_robot_actions
    website: http://pr.willowgarage.com
  pr2_robot_tests:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - 2dnav_pr2
    - pr2_machine
    - pr2_bringup
    desc: This package holds a number of different tests to run on a new PR2 robot
      to make sure that things are working correctly.
    license: BSD
    shortdesc: pr2_robot_tests
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/pr2_robot_tests
    website: http://ros.org/wiki/pr2_robot_tests
  pr2_slave_mode:
    author: !!python/unicode 'Blaise Gassend'
    deps:
    - trajectory_msgs
    - geometry_msgs
    - pr2_mechanism_controllers
    - pr2_controllers_msgs
    - pr2_controller_manager
    - roscpp
    - tf
    desc: A tool that mirrors the joint angles from one robot to another.
    license: BSD
    shortdesc: Copys the arm and head position from one robot to another.
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/pr2_slave_mode
    website: http://ros.org/wiki/pr2_slave_mode
  pr2_startup:
    author: !!python/unicode 'Melonee Wise'
    deps:
    - roslaunch_caller
    - rospy
    - std_msgs
    - robot_mechanism_controllers
    - pr2_mechanism_controllers
    - pr2_etherCAT
    - pr2_power_board
    - pr2_bringup
    - pr2_teleop
    - rviz
    desc: pr2_startup
    license: BSD
    shortdesc: pr2_startup
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/pr2_startup
    website: http://pr.willowgarage.com/wiki/pr2_startup
  py_image_view:
    author: !!python/unicode 'Tim Field'
    deps:
    - rospy
    - roslib
    - std_msgs
    - sensor_msgs
    desc: py_image_view
    license: BSD
    shortdesc: py_image_view
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/py_image_view
    website: http://ros.org/wiki/py_image_view
  qpOASES:
    author: !!python/unicode 'Hans Joachim Ferreau, et al.'
    deps: []
    desc: qpOASES is a QP solver.  See the URL for more information.
    license: LGPL
    shortdesc: qpOASES is a QP solver.  See the URL for more information.
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/qpOASES
    website: http://www.kuleuven.be/optec/index.php/software/qpOASES
  rf_detector:
    author: !!python/unicode 'Min Sun'
    deps:
    - roscpp
    - opencv2
    - cv_bridge
    - std_msgs
    - geometry_msgs
    - sensor_msgs
    - tf
    - point_cloud_mapping
    - t2obj
    - descriptors_3d
    desc: rf_detector
    license: BSD
    shortdesc: rf_detector
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/rf_detector
    website: http://www.ros.org/wiki/rf_detector
  rigid_body_dynamics:
    author: !!python/unicode 'John Hsu'
    deps:
    - roscpp
    - std_msgs
    - roslib
    - urdf
    desc: Rigid Body Dynamics
    license: BSD
    shortdesc: rigid_body_dynamics
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/rigid_body_dynamics
    website: http://ros.org/wiki/fixme
  robot_actions:
    author: !!python/unicode 'Conor McGann'
    deps:
    - roscpp
    - diagnostic_msgs
    - std_msgs
    - rospy
    - rostopic
    - actionlib
    - actionlib_msgs
    - pr2_mechanism_msgs
    desc: ''
    license: BSD
    shortdesc: This package contains core interfaces for robot actions
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/deprecated/robot_actions
    website: http://pr.willowgarage.com
  rosout_db:
    author: !!python/unicode 'Bhaskara Marthi'
    deps:
    - roslisp
    desc: Allows listing and querying recent rosout messages from command line.
    license: BSD
    shortdesc: Allows listing and querying recent rosout messages from command line.
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/rosout_db
    website: http://ros.org/wiki/rosout-db
  rt_scheduler:
    author: !!python/unicode 'Vijay Pradeep'
    deps: []
    license: BSD
    shortdesc: Vijay's prototype idea of a realtime (single thread) scheduler
    source: list.php
    website: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/rt_scheduler
  rtt_controller:
    author: !!python/unicode 'Ruben Smits/ ruben.smits@mech.kuleuven.be'
    deps:
    - rtt
    - ocl
    - pr2_etherCAT
    - pr2_controller_manager
    - pr2_mechanism_model
    - pr2_hardware_interface
    - ethercat_hardware
    desc: rtt_controller, An RTT application controlling the robot
    license: BSD
    shortdesc: rtt_controller
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/rtt_controller
    website: http://pr.willowgarage.com/wiki/rtt_controller
  rubot:
    author: !!python/unicode 'Morgan Quigley'
    deps: []
    license: BSD
    shortdesc: "A rubot is a ruby-controlled abstract robot. The concept is just to\
      \ have a\n  few dumb ruby files ..."
    source: list.php
    website: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/rubot
  rxdata_pattern_detector:
    author: !!python/unicode 'Andreas Paepcke'
    deps:
    - rospy
    - rxtools
    desc: rxdata_pattern_detector
    license: BSD
    shortdesc: rxdata_pattern_detector
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/rxdata_pattern_detector
    website: http://ros.org/wiki/rxdata_pattern_detector
  rxdata_pattern_detector_node:
    author: !!python/unicode 'Andreas Paepcke'
    deps:
    - rospy
    - rxtools
    - rosjava
    - geometry_msgs
    - sensor_msgs
    desc: rxdata_pattern_detector
    license: BSD
    shortdesc: rxdata_pattern_detector_node
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/rxdata_pattern_detector_node
    website: http://ros.org/wiki/rxdata_pattern_detector
  rxgraph2:
    author: !!python/unicode 'Ian Goodfellow/ goodfellow@willowgarage.com'
    deps: []
    license: BSD
    shortdesc: Java based visualizer that plots active nodes and topics as a graph
    source: list.php
    website: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/rxgraph2
  sbpl_door_planner_action:
    author: !!python/unicode 'Sachin Chitta/schitta@willowgarage.com'
    deps:
    - sbpl
    - roscpp
    - rosconsole
    - std_msgs
    - geometry_msgs
    - angles
    - tf
    - robot_actions
    - pr2_robot_actions
    - costmap_2d
    - mpglue
    - door_handle_detector
    - pr2_doors_common
    - door_msgs
    - mapping_msgs
    - motion_planning_msgs
    - pr2_mechanism_msgs
    - trajectory
    - pr2_ik
    - pr2_machine
    desc: ''
    license: BSD
    shortdesc: Doorway Planner Action
    source: details.php?name=kdl
    website: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/stacks/motion_planning_research/planning_research/sbpl_door_planner_action
  self_watch:
    author: !!python/unicode 'Ioan A. Sucan'
    deps:
    - rosconsole
    - planning_environment
    desc: A node that warns when the robot is about to hit itself
    license: BSD
    shortdesc: A node that warns when the robot is about to hit itself
    source: details.php?name=roscpp
    website: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/stacks/motion_planning_research/self_watch
  stanleyi:
    author: !!python/unicode 'Alex Teichman'
    deps:
    - dorylus
    - opencv2
    - cv_bridge
    - eigen
    - rosrecord
    - descriptors_2d
    - descriptors_2d_gpl
    - tinyxml
    desc: Package for experimenting with multidescriptor boosting classifiers in ros.
    license: GPL
    shortdesc: Package for experimenting with multidescriptor boosting classifiers
      in ros.
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/stanleyi
    website: http://pr.willowgarage.com/wiki/stanleyi
  star_detector:
    author: !!python/unicode 'Patrick Mihelich, James Bowman'
    deps:
    - rostest
    - rospy
    - opencv2
    desc: Star feature detector based on integral images.
    license: BSD
    shortdesc: Star feature detector based on integral images.
    source: details.php?name=roscpp
    website: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/stacks/visual_feature_detectors/star_detector
  stereo_gazebo:
    author: !!python/unicode 'John Hsu'
    deps:
    - pr2_gazebo_plugins
    - gazebo_plugins
    - gazebo_tools
    - pr2_ogre
    - gazebo_worlds
    - pr2_description
    - pr2_controller_configuration_gazebo
    - robot_mechanism_controllers
    - pr2_mechanism_controllers
    - robot_state_publisher
    - polled_camera
    - rospy
    - std_msgs
    - nav_msgs
    - geometry_msgs
    - tf
    desc: stereo_gazebo
    license: BSD
    shortdesc: stereo_gazebo
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/stacks/wg_robots_gazebo/stereo_gazebo
    website: http://ros.org/wiki/stereo_gazebo
  stereo_recovery:
    author: !!python/unicode 'Eitan Marder-Eppstein'
    deps:
    - roscpp
    - pluginlib
    - nav_core
    - costmap_2d
    - tf
    desc: A recovery behavior that points the head of the PR2 at the ground and uses
      stereo information to attempt to clear out space in the navigation stack's costmaps.
    license: BSD
    shortdesc: stereo_recovery
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/stereo_recovery
    website: http://ros.org/wiki/stereo_recovery
  stereo_utils:
    author: !!python/unicode 'Jindong (JD) Chen, Gary Bradski, James Bowman'
    deps:
    - rostest
    - opencv2
    - rosrecord
    - fast_detector
    - star_detector
    - vop
    - calonder_descriptor
    desc: "classes and functions for converting from disparity space to Cartesion\
      \ space, to synthesize\n    image from 3d point cloud, to compute spatial masks."
    license: BSD
    shortdesc: "classes and functions for converting from disparity space to Cartesion\
      \ space, to synthesize\n   ..."
    source: details.php?name=roscpp
    website: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/stacks/stereo/stereo_utils
  switch_controller_translator:
    author: !!python/unicode 'Wim Meeussen'
    deps:
    - pr2_mechanism_msgs
    - pr2_robot_actions
    - action_translator
    desc: switch_controller_translator
    license: BSD
    shortdesc: switch_controller_translator
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/switch_controller_translator
    website: http://pr.willowgarage.com/wiki/switch_controller_translator
  t2obj:
    author: !!python/unicode 'Min Sun'
    deps:
    - roscpp
    - opencv2
    - cv_bridge
    - topic_synchronizer2
    - std_msgs
    - sensor_msgs
    - geometry_msgs
    - tf
    - point_cloud_mapping
    - color_calib
    desc: t2obj
    license: BSD
    shortdesc: t2obj
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/t2obj
    website: http://www.ros.org/wiki/t2obj
  table_object_detector:
    author: !!python/unicode 'Radu Bogdan Rusu'
    deps:
    - roscpp
    - std_msgs
    - angles
    - point_cloud_mapping
    - tabletop_msgs
    - tabletop_srvs
    - mapping_msgs
    desc: A node which detects tables and objects from 3D point cloud data.
    license: BSD
    shortdesc: A node which detects tables and objects from 3D point cloud data.
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/table_object_detector
    website: http://pr.willowgarage.com
  tabletop_objects:
    author: !!python/unicode 'Marius Muja'
    deps:
    - roscpp
    - geometry_msgs
    - std_msgs
    - opencv2
    - cv_bridge
    - point_cloud_mapping
    - sensor_msgs
    - stereo_msgs
    - topic_synchronizer2
    - tf
    - visualization_msgs
    - eigen
    - chamfer_matching
    - mapping_msgs
    - tabletop_msgs
    - distance_field
    desc: A node for detecting tabletop objects.
    license: BSD
    shortdesc: A node for detecting tabletop objects.
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/tabletop_objects
    website: http://pr.willowgarage.com
  teleop_arm_keyboard:
    author: !!python/unicode 'Advait Jain'
    deps:
    - std_msgs
    - pr2_mechanism_controllers
    desc: "A ROS node that supports position-mode teleoperation of \nindividual joints\
      \ of the PR2Arm from keyboard input"
    license: BSD
    shortdesc: "A ROS node that supports position-mode teleoperation of \nindividual\
      \ joints of the PR2Arm from keyboa..."
    source: details.php?name=roscpp
    website: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/stacks/pr2_self_test/teleop/teleop_arm_keyboard
  teleop_frame:
    author: !!python/unicode 'Blaise Gassend'
    deps:
    - tf
    - rospy
    - joy
    - geometry_msgs
    - dynamic_reconfigure
    desc: This node allows a TF frame to be teleoperated.
    license: BSD
    shortdesc: Teleoperate a TF frame.
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/teleop_frame
    website: http://ros.org/wiki/teleop_frame
  teleop_joint_effort:
    author: !!python/unicode 'Eric Berger berger@willowgarage.com'
    deps:
    - rospy
    - std_msgs
    - robot_mechanism_controllers
    - pr2_controller_manager
    - joy
    desc: Use input from a joystick to tele-operate a single joint in effort mode
    license: BSD
    shortdesc: Single Joint Teleop
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/stacks/pr2_self_test/teleop/teleop_joint_effort
    website: http://pr.willowgarage.com
  teleop_spacenav:
    author: !!python/unicode 'Stuart Glaser sglaser@willowgarage.com'
    deps:
    - rospy
    - std_msgs
    - geometry_msgs
    - robot_mechanism_controllers
    - pr2_controller_manager
    - spacenav_node
    - joy
    desc: Teleoperates the robot using the Space Navigator 3d mouse
    license: BSD
    shortdesc: Teleop Spacenav
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/stacks/pr2_self_test/teleop/teleop_spacenav
    website: http://pr.willowgarage.com
  teleop_wiimote:
    author: !!python/unicode 'Andreas Paepcke'
    deps:
    - rospy
    - std_msgs
    - pr2_mechanism_msgs
    - geometry_msgs
    - move_arm_tools
    - wiimote
    desc: teleop_wiimote
    license: BSD
    shortdesc: teleop_wiimote controls a robot arm as user moves the Wiimote control
      in space
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/teleop_wiimote
    website: http://ros.org/wiki/teleop_wiimote
  test_arm_vision_calibration:
    author: !!python/unicode 'Ioan Sucan'
    deps:
    - roscpp
    - tf
    - robot_self_filter
    - message_notifier
    desc: test_arm_vision_calibration
    license: BSD
    shortdesc: test_arm_vision_calibration
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/test_arm_vision_calibration
    website: http://pr.willowgarage.com/wiki/test_arm_vision_calibration
  test_gazebo_physics:
    author: !!python/unicode 'John Hsu'
    deps:
    - pr2_gazebo_plugins
    - gazebo_plugins
    - gazebo_tools
    - pr2_ogre
    - gazebo_worlds
    - pr2_tuckarm
    - pr2_controller_configuration_gazebo
    - robot_mechanism_controllers
    - pr2_mechanism_controllers
    - robot_state_publisher
    - pr2_gazebo
    - rospy
    - std_msgs
    desc: Package for basic physics tests
    license: BSD
    shortdesc: Package for basic physics tests
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/stacks/wg_robots_gazebo/test_gazebo_physics
    website: http://pr.willowgarage.com/wiki/
  test_stereo_msgs:
    author: !!python/unicode 'Jeremy Leibs'
    deps:
    - rospy
    - rosrecord
    - rostest
    - rosbagmigration
    - sensor_msgs
    - stereo_msgs
    desc: "A package containing original saved messages and verifying that\n    migration\
      \ rules behave as anticipated."
    license: BSD
    shortdesc: test_stereo_msgs
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/stacks/stereo/test_stereo_msgs
    website: http://pr.willowgarage.com/wiki/test_stereo_msgs
  test_trajectory:
    author: !!python/unicode 'Matei Ciocarlie'
    deps:
    - roscpp
    - motion_planning_msgs
    - actionlib
    - pr2_controllers_msgs
    desc: test_trajectory
    license: BSD
    shortdesc: test_trajectory
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/test_trajectory
    website: http://ros.org/wiki/test_trajectory
  texas_park:
    author: !!python/unicode 'Victor Eruhimov'
    deps:
    - roscpp
    - opencv2
    - image_transport
    - compressed_image_transport
    - outlet_detection
    desc: Autonomous parking for the Texas robot.
    license: BSD
    shortdesc: texas_park
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/texas_park
    website: http://ros.org/wiki/texas_park
  texas_park_action:
    author: !!python/unicode 'Melonee Wise'
    deps:
    - roscpp
    - opencv2
    - image_transport
    - compressed_image_transport
    - outlet_detection
    - sensor_msgs
    - actionlib
    - actionlib_msgs
    desc: actionlib interface for the texas_park package.
    license: BSD
    shortdesc: texas_park_action
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/texas_park_action
    website: http://ros.org/wiki/texas_park_action
  texture_light_on_off:
    author: !!python/unicode 'Min Sun'
    deps:
    - roscpp
    - std_msgs
    - tf
    - topic_synchronizer2
    - opencv2
    - cv_bridge
    - point_cloud_mapping
    - stereo_msgs
    - sensor_msgs
    - geometry_msgs
    desc: texture_light_on_off
    license: BSD
    shortdesc: texture_light_on_off
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/texture_light_on_off
    website: http://www.ros.org/wiki/texture_light_on_off
  thumbnail_hand_detector:
    author: !!python/unicode 'Alex Teichman'
    deps:
    - descriptors_2d
    - dorylus
    - descriptors_2d_gpl
    - opencv2
    - cv_bridge
    desc: thumbnail_hand_detector
    license: BSD
    shortdesc: thumbnail_hand_detector
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/thumbnail_hand_detector
    website: http://pr.willowgarage.com/wiki/thumbnail_hand_detector
  topic_synchronizer:
    author: !!python/unicode 'Jeremy Leibs'
    deps:
    - roscpp
    - std_msgs
    desc: A class to synchronize incoming topics with the same timestamp.
    license: BSD
    shortdesc: A class to synchronize incoming topics with the same timestamp.
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/deprecated/topic_synchronizer
    website: http://pr.willowgarage.com/wiki/topic_synchronizer
  topic_synchronizer2:
    author: !!python/unicode 'Marius Muja'
    deps:
    - roscpp
    - std_msgs
    desc: A class to synchronize incoming topics with the same timestamp, for the
      new API.
    license: BSD
    shortdesc: A class to synchronize incoming topics with the same timestamp, for
      the new API.
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/topic_synchronizer2
    website: http://pr.willowgarage.com/wiki/topic_synchronizer2
  topological_map:
    author: !!python/unicode 'Bhaskara Marthi'
    deps:
    - roscpp
    - door_msgs
    - tinyxml
    - visualization_msgs
    - costmap_2d
    - geometry_msgs
    - rosconsole
    - tf
    - roslib
    - sbpl
    - navfn
    - eigen
    - bullet
    - roslisp
    - willow_maps
    desc: Builds a graph containing higher level information from a 2d occupancy grid
    license: BSD
    shortdesc: Builds a graph containing higher level information from a 2d occupancy
      grid
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/stacks/world_models/topological_map
    website: http://ros.org/wiki/topological_map
  trex_pr2:
    author: !!python/unicode 'Conor McGann'
    deps:
    - rosconsole
    - trex_ros
    - topological_map
    - willow_maps
    - pr2_msgs
    - std_msgs
    - kdl
    - tf
    desc: A ROS node to encapsulate the TeleoReactive Executive for task level planning
      and control.
    license: BSD
    shortdesc: A ROS node to encapsulate the TeleoReactive Executive for task level
      planning and control.
    source: details.php?name=roscpp
    website: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/stacks/executive_trex/trex_pr2
  trex_tabletop_manipulation:
    author: !!python/unicode 'Conor McGann'
    deps:
    - trex_ros
    desc: A package for tabletop manipulation.
    license: BSD
    shortdesc: A package for tabletop manipulation.
    source: details.php?name=trex_pr2
    website: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/stacks/executive_trex/trex_tabletop_manipulation
  trex_turtles:
    author: !!python/unicode 'Unknown'
    deps:
    - trex
    - turtlesim
    - turtle_actionlib
    desc: A TREX package.
    license: BSD
    shortdesc: A TREX package.
    source: details.php?name=trex_ros
    website: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/stacks/executive_trex/trex_turtles
  trex_tutorial_handybot_1:
    author: !!python/unicode 'Unknown'
    deps:
    - trex
    desc: A TREX package.
    license: BSD
    shortdesc: A TREX package.
    source: details.php?name=trex_ros
    website: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/stacks/executive_trex/trex_tutorial_handybot_1
  visodo:
    author: !!python/unicode 'Kurt Konolige'
    deps:
    - rostest
    - rospy
    - std_msgs
    - sensor_msgs
    - stereo_msgs
    - eigen
    - opencv2
    - stereo_utils
    - vop
    - rosrecord
    - tf
    - fast_detector
    - calonder_descriptor
    - csparse
    - visualization_msgs
    desc: Visual odometry.
    license: BSD
    shortdesc: Visual odometry.
    source: details.php?name=roscpp
    website: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/vision/visodo
  vocsearch:
    author: !!python/unicode 'Romain Thibaux'
    deps: []
    desc: vocsearch
    license: BSD
    shortdesc: vocsearch
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/vocsearch
    website: http://ros.org/wiki/vocsearch
  voice_node:
    author: !!python/unicode 'Curt'
    deps: []
    desc: voice_node
    license: BSD
    shortdesc: voice_node
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/voice_node
    website: http://ros.org/wiki/voice_node
  vop:
    author: !!python/unicode 'James Bowman'
    deps: []
    license: BSD
    shortdesc: a fast vector module for Python
    source: list.php
    website: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/stacks/stereo/vop
  voxel3d:
    author: !!python/unicode 'Stuart Glaser'
    deps:
    - roscpp
    - geometry_msgs
    - mapping_msgs
    - visualization_msgs
    - tf
    desc: ''
    license: BSD
    shortdesc: 3D Voxel Costmap
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/voxel3d
    website: http://pr.willowgarage.com
  wave_teleop_msgs:
    author: !!python/unicode 'Stuart Glaser'
    deps: []
    desc: wave_teleop_msgs
    license: BSD
    shortdesc: wave_teleop_msgs
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/wave_teleop_msgs
    website: http://ros.org/wiki/wave_teleop_msgs
  wave_teleop_slave:
    author: !!python/unicode 'Stuart Glaser'
    deps:
    - pr2_controller_interface
    - pr2_mechanism_model
    - realtime_tools
    - control_toolbox
    - wave_teleop_msgs
    desc: wave_teleop_slave
    license: BSD
    shortdesc: wave_teleop_slave
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/wave_teleop_slave
    website: http://ros.org/wiki/wave_teleop_slave
  wavefront:
    author: !!python/unicode 'Brian P. Gerkey'
    deps:
    - laser_geometry
    - nav_msgs
    - sensor_msgs
    - geometry_msgs
    - robot_actions
    - nav_robot_actions
    - tf
    - visualization_msgs
    - message_notifier
    desc: A ROS node that uses the Player wavefront library, which implements wavefront
      path-planning for a planar robot.
    license: LGPL
    shortdesc: A ROS node that uses the Player wavefront library, which implements
      wavefront path-planning for a pl...
    source: details.php?name=roscpp
    website: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/wavefront
  web_object_menu:
    author: !!python/unicode 'Alexander Sorokin'
    deps:
    - tabletop_srvs
    - std_msgs
    - geometry_msgs
    - actionlib
    desc: web_object_menu
    license: BSD
    shortdesc: web_object_menu
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/web_object_menu
    website: http://ros.org/wiki/web_object_menu
  webbags:
    author: !!python/unicode 'Tim Field/tfield@willowgarage.com,Scott Hassan/hassan@willowgarage.com'
    deps:
    - roslib
    - rospy
    - rosrecord
    - pyclearsilver
    desc: A web interface to view bags through the web.
    license: BSD
    shortdesc: A web interface to view bags through the web.
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/webbags
    website: http://ros.org/wiki/webbags
  whoami:
    author: !!python/unicode 'Rob Wheeler'
    deps:
    - rospy
    desc: whoami
    license: BSD
    shortdesc: whoami
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/whoami
    website: http://ros.org/wiki/whoami
  wide_pfh:
    author: !!python/unicode 'Gary Bradski'
    deps:
    - opencv2
    - rosconsole
    - geometry_msgs
    - point_cloud_mapping
    desc: Wide PFH 3D feature
    license: BSD
    shortdesc: Wide PFH 3D feature
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/wide_pfh
    website: http://pr.willowgarage.com/wiki/wide_pfh
  wii_integration_test:
    author: !!python/unicode 'Blaise Gassend'
    deps: []
    desc: "This package contains drivers for the wiimote/wiimotion. Nothing much\n\
      \t\there yet, mostly just a sandbox to test cwiid."
    license: BSD
    shortdesc: Drivers for the wiimote/wiimotion
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/wii_integration_test
    website: http://pr.willowgarage.com/wiki/wii
  worlds_erratic:
    author: !!python/unicode 'Kurt Konolige'
    deps: []
    desc: erratic sim definitions for Stanford Gates building
    license: BSD
    shortdesc: worlds_erratic
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/example_erratic_pkgs/worlds_erratic
    website: http://ros.org/wiki/CS225B
  writing_core:
    author: !!python/unicode 'Melonee Wise/ mwise@willowgarage.com'
    deps:
    - roscpp
    - roslib
    - robot_actions
    - pr2_robot_actions
    - point_cloud_mapping
    - tf
    - people_package
    - geometry_msgs
    desc: writing_core
    license: BSD
    shortdesc: writing_core
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/writing_core
    website: http://pr.willowgarage.com/wiki/writing_core
  yarp:
    author: !!python/unicode 'Paul Fitzpatrick, Giorgio Metta, Lorenzo Natale, Alessandro
      Scalzo'
    deps: []
    desc: "YARP (Yet Another Robot Platform) is an open-source framework that supports\n\
      \    distributed computation with an eye at robot control and efficiency."
    license: GPL v2
    shortdesc: "YARP (Yet Another Robot Platform) is an open-source framework that\
      \ supports\n    distributed co..."
    source: https://code.ros.org/svn/wg-ros-pkg/branches/trunk_boxturtle/sandbox/yarp
    website: http://yarp0.sourceforge.net/
whole_body_control:
  wbc_core:
    author: !!python/unicode 'Roland Philippsen'
    deps:
    - roscpp
    - eigen
    - yaml_cpp
    - wbc_msgs
    desc: "This is a ROS wrapper for the Stanford Whole-Body Control\n    framework\
      \ from http://stanford-wbc.sourceforge.net/."
    license: LGPLv3
    shortdesc: A ROS wrapper for stanford-wbc.sourceforge.net
    source: https://github.com/poftwaresatent/whole_body_control.git
    website: http://stanford-wbc.sourceforge.net/
  wbc_m3_ctrl:
    author: !!python/unicode 'Roland Philippsen'
    deps:
    - roscpp
    - std_msgs
    - wbc_uta_opspace
    desc: "This package is based on the RTAI control code for Dreamer, the\n    Meka\
      \ M3 humanoid torso of the Human-Centered Robotics Group at the\n    University\
      \ of Texas at Austin. http://www.me.utexas.edu/~hcrl/"
    license: BSD
    shortdesc: wbc_m3_ctrl
    source: https://github.com/poftwaresatent/whole_body_control.git
    website: https://github.com/poftwaresatent/utaustin-wbc
  wbc_msgs:
    author: !!python/unicode 'Roland Philippsen'
    deps: []
    desc: ''
    license: LGPLv3
    shortdesc: Messages and services for the Stanford Whole-Body Controller.
    source: https://github.com/poftwaresatent/whole_body_control.git
    website: http://stanford-wbc.sourceforge.net/
  wbc_pr2_ctrl:
    author: !!python/unicode 'Roland Philippsen'
    deps:
    - wbc_core
    - wbc_urdf
    - wbc_msgs
    - wbc_uta_opspace
    - rosconsole
    - pr2_controller_interface
    - pluginlib
    - sensor_msgs
    desc: "This package contains an adaptation of the Stanford Whole-Body\n    Control\
      \ Framework (WBC) for PR2. It relies mainly on the\n    joint-space dynamic\
      \ model which is part of WBC. There is a &quot;pump&quot;\n    controller plugin\
      \ which sends robot state from real-time to\n    user-space and the torque commands\
      \ back from user-space into the\n    real-time controller. For simpler WBC operations,\
      \ it would\n    (probably) be possible to run the entire WBC servo within the\n\
      \    plugin, but tests in late 2009 (which were based on a very\n    complete\
      \ set of WBC functionality) failed in this respect because\n    they were too\
      \ slow to fit within the 1kHz RT control loop on PR2."
    license: LGPLv3
    shortdesc: PR2 controller plugin for Stanford_WBC.
    source: https://github.com/poftwaresatent/whole_body_control.git
    website: http://stanford-wbc.sourceforge.net/
  wbc_urdf:
    author: !!python/unicode 'Roland Philippsen'
    deps:
    - wbc_core
    - urdf
    desc: ''
    license: LGPLv3
    shortdesc: URDF to TAO conversion for Stanford_WBC
    source: https://github.com/poftwaresatent/whole_body_control.git
    website: http://stanford-wbc.sourceforge.net/
  wbc_uta_opspace:
    author: !!python/unicode ''
    deps:
    - wbc_core
    desc: ''
    license: LGPLv3
    shortdesc: ROS wrapper for the UT Austin operational space control library.
    source: https://github.com/poftwaresatent/whole_body_control.git
    website: https://github.org/poftwaresatent/utaustin-wbc
wifibot:
  wifibot:
    author: !!python/unicode 'claire'
    deps:
    - roscpp
    - rospy
    - joy
    - std_msgs
    - nav_msgs
    - tf
    desc: wifibot
    license: BSD
    shortdesc: wifibot
    source: https://roswifibot.svn.sourceforge.net/svnroot/roswifibot/trunk
    website: http://ros.org/wiki/wifibot
win-ros-pkg:
  gen_comms:
    author: !!python/unicode 'Daniel Stonier'
    deps:
    - rospy
    - roscpp
    desc: "This avoids doing complete package compilation and just generates sources\
      \ for\n     msg and srv files of a package and all its dependencies."
    license: BSD
    shortdesc: Generate headers and sources for msg/srv files
    source: http://win-ros-pkg.googlecode.com/svn/stacks/win_ros/trunk/gen_comms
    website: http://ros.org/wiki/gen_comms
  win_env:
    author: !!python/unicode 'Daniel Stonier'
    deps:
    - win_py2exe
    - win_roscd
    desc: "Can be used to either configure environment variables temporarily inside\
      \ a shell, or \n   permanently save the environment variables in the registry\
      \ for session-wide use."
    license: BSD
    shortdesc: Configures environment variables for ros on windows
    source: http://win-ros-pkg.googlecode.com/svn/stacks/win_ros/trunk/win_env
    website: http://ros.org/wiki/win_setup
  win_py2exe:
    author: !!python/unicode 'Daniel Stonier'
    deps: []
    desc: "Windows python scripts aren't recognised as executables, so alot of the\
      \ ros\n    build logic will fail when trying to call python scripts because\
      \ they \n    utilise the bash logic at the top of the script.\n     \n\tThis\
      \ remedies the problem by creating an executable for each that calls\n\tthe\
      \ relevant python script."
    license: BSD
    shortdesc: Creates executables to start python scripts in windows
    source: http://win-ros-pkg.googlecode.com/svn/stacks/win_ros/trunk/win_py2exe
    website: http://ros.org/wiki/win_py2exe
  win_roscd:
    author: !!python/unicode 'Daniel Stonier'
    deps: []
    desc: "Some quick magic to implement roscd in cmd.exe. This is called from \n\
      \  winshell.bat (see win_env)."
    license: BSD
    shortdesc: Implements the legendary bash roscd in the windows shell
    source: http://win-ros-pkg.googlecode.com/svn/stacks/win_ros/trunk/win_roscd
    website: http://ros.org/wiki/win_roscd
wpdros:
  simple_armstack_goals:
    author: !!python/unicode 'Patrick Doyle'
    deps:
    - move_arm_msgs
    - actionlib
    desc: simple_armstack_goals
    license: BSD
    shortdesc: simple_armstack_goals
    source: https://github.com/wpd/wpdros.git
    website: http://ros.org/wiki/simple_armstack_goals
  wpd_arm_nav:
    author: !!python/unicode 'Patrick Doyle'
    deps: []
    desc: wpd_arm_nav
    license: BSD
    shortdesc: wpd_arm_nav
    source: https://github.com/wpd/wpdros.git
    website: http://ros.org/wiki/wpd_arm_nav
  wpdps1:
    author: !!python/unicode 'Patrick Doyle'
    deps:
    - rospy
    - roscpp
    - tf
    - move_base_msgs
    - actionlib
    - pr2_tuck_arms_action
    - pr2_common_action_msgs
    desc: wpdps1
    license: BSD
    shortdesc: wpdps1
    source: https://github.com/wpd/wpdros.git
    website: http://ros.org/wiki/wpdps1
  wpdtb:
    author: !!python/unicode 'Patrick Doyle'
    deps:
    - rospy
    - actionlib
    - pr2_tuck_arms_action
    - trajectory_msgs
    - kinematics_msgs
    - pr2_common_action_msgs
    - sensor_msgs
    - actionlib
    - actionlib_msgs
    - geometry_msgs
    - object_manipulation_msgs
    - object_manipulator
    desc: wpdtb
    license: BSD
    shortdesc: wpdtb
    source: https://github.com/wpd/wpdros.git
    website: http://ros.org/wiki/wpdtb
wu-ros-pkg:
  arm_kinematics:
    author: !!python/unicode 'David Lu!!'
    deps:
    - roscpp
    - tf
    - sensor_msgs
    - tf_conversions
    - kdl_parser
    - kinematics_msgs
    desc: "A generic package for computing both forward and backward kinematics for\
      \ arms.\n    Developed as an alternative to pr2_arm_kinematics for people not\
      \ using the PR2."
    license: BSD
    shortdesc: A generic package for computing Arm Kinematics
    source: https://wu-ros-pkg.svn.sourceforge.net/svnroot/wu-ros-pkg/stacks/urdf_tools/trunk/arm_kinematics
    website: http://ros.org/wiki/arm_kinematics
  basic_utils:
    author: !!python/unicode 'CJ Carey'
    deps:
    - rospy
    desc: basic_utils - A collection of general-purpose functions.
    license: BSD
    shortdesc: basic_utils
    source: https://wu-ros-pkg.svn.sourceforge.net/svnroot/wu-ros-pkg/stacks/wu_utils/trunk/basic_utils
    website: http://ros.org/wiki/basic_utils
  c3d:
    author: !!python/unicode 'David V. Lu!!'
    deps:
    - rospy
    desc: A package for reading in c3d motion capture files.
    license: BSD
    shortdesc: A package for reading in c3d motion capture files.
    source: https://wu-ros-pkg.svn.sourceforge.net/svnroot/wu-ros-pkg/stacks/motion_capture/trunk/c3d
    website: http://ros.org/wiki/c3d
  gcm:
    author: !!python/unicode 'Bruce Maxwell'
    deps:
    - ipc
    desc: Common CMU-IPC library used at Colby College
    license: BSD
    shortdesc: Common CMU-IPC library used at Colby College
    source: https://wu-ros-pkg.svn.sourceforge.net/svnroot/wu-ros-pkg/stacks/cmuipc/trunk/gcm
    website: http://ros.org/wiki/gcm
  geometry_util:
    author: !!python/unicode 'Erik Karulf (erik@cse.wustl.edu)'
    deps:
    - tf
    - geometry_msgs
    - bullet
    - roscpp
    - rospy
    desc: Conversions and common functions of geometric data
    license: BSD
    shortdesc: geometry utility library
    source: https://wu-ros-pkg.svn.sourceforge.net/svnroot/wu-ros-pkg/stacks/wu_utils/trunk/geometry_util
    website: http://ros.org/wiki/geometry_util
  ipc:
    author: !!python/unicode 'Reid Simmons'
    deps: []
    desc: CMU IPC provides flexible, efficient message passing between processes.
    license: BSD
    shortdesc: CMU's ipc library
    source: https://wu-ros-pkg.svn.sourceforge.net/svnroot/wu-ros-pkg/stacks/cmuipc/trunk/ipc
    website: http://www.cs.cmu.edu/~ipc/
  mocap_point_cloud:
    author: !!python/unicode 'David V. Lu!!'
    deps:
    - rospy
    - c3d
    - sensor_msgs
    - geometry_msgs
    - visualization_msgs
    - rosbag
    desc: A package for converting C3d motion capture files into a PointCloud
    license: BSD
    shortdesc: mocap_point_cloud
    source: https://wu-ros-pkg.svn.sourceforge.net/svnroot/wu-ros-pkg/stacks/motion_capture/trunk/mocap_point_cloud
    website: http://ros.org/wiki/mocap_point_cloud
  polonius_demo:
    author: !!python/unicode 'David V. Lu!!'
    deps:
    - actionlib
    - actionlib_msgs
    - rospy
    - pr2_controllers_msgs
    - trajectory_msgs
    desc: Polonius Demo
    license: BSD
    shortdesc: polonius_demo
    source: https://wu-ros-pkg.svn.sourceforge.net/svnroot/wu-ros-pkg/stacks/polonius/trunk/polonius_demo
    website: http://ros.org/wiki/polonius_demo
  polonius_engine:
    author: !!python/unicode 'David!!'
    deps:
    - rospy
    - smach
    - smach_ros
    - polonius_msgs
    - lewis
    - rostopic
    - polonius_demo
    desc: polonius_engine
    license: BSD
    shortdesc: polonius_engine
    source: https://wu-ros-pkg.svn.sourceforge.net/svnroot/wu-ros-pkg/stacks/polonius/trunk/polonius_engine
    website: http://ros.org/wiki/polonius_engine
  polonius_interface:
    author: !!python/unicode 'David!!'
    deps:
    - rospy
    - polonius_msgs
    desc: polonius_interface
    license: BSD
    shortdesc: polonius_interface
    source: https://wu-ros-pkg.svn.sourceforge.net/svnroot/wu-ros-pkg/stacks/polonius/trunk/polonius_interface
    website: http://ros.org/wiki/polonius_interface
  polonius_msgs:
    author: !!python/unicode 'David!!'
    deps: []
    desc: polonius_msgs
    license: BSD
    shortdesc: polonius_msgs
    source: https://wu-ros-pkg.svn.sourceforge.net/svnroot/wu-ros-pkg/stacks/polonius/trunk/polonius_msgs
    website: http://ros.org/wiki/polonius_msgs
  ptu46:
    author: !!python/unicode 'Erik Karulf, David Lu'
    deps:
    - tf
    - sensor_msgs
    - roscpp
    - rospy
    - actionlib
    - ptu_control
    desc: Driver for the Directed Perception ptu46 pan/tilt driver, forked from player
    license: GPL
    shortdesc: Directed Perception ptu46 pan/tilt driver
    source: https://wu-ros-pkg.svn.sourceforge.net/svnroot/wu-ros-pkg/stacks/rwi/trunk/ptu46
    website: http://ros.org/wiki/ptu46
  pymp:
    author: !!python/unicode 'Erik Karulf/erik@cse.wustl.edu'
    deps: []
    desc: Python multiprocessing library
    license: BSD
    shortdesc: Python multiprocessing library
    source: https://wu-ros-pkg.svn.sourceforge.net/svnroot/wu-ros-pkg/stacks/wu_utils/trunk/pymp
    website: http://ros.org/wiki/pymp
  rflex:
    author: !!python/unicode 'David V. Lu!!'
    deps:
    - roscpp
    - std_msgs
    - sensor_msgs
    - geometry_msgs
    - nav_msgs
    - tf
    - angles
    desc: ROS adaptations of the RFLEX driver.
    license: GPL
    shortdesc: ROS adaptations of the RFLEX driver.
    source: https://wu-ros-pkg.svn.sourceforge.net/svnroot/wu-ros-pkg/stacks/rwi/trunk/rflex
    website: http://ros.org/wiki/rflex
  ride_karulf_thesis:
    author: !!python/unicode 'Erik Karulf'
    deps:
    - ride_msgs
    - ride_stage
    - tf
    - roslaunch_tools
    desc: ride_karulf_thesis
    license: BSD
    shortdesc: ride_karulf_thesis
    source: https://wu-ros-pkg.svn.sourceforge.net/svnroot/wu-ros-pkg/stacks/wu_experiments/trunk/ride_karulf_thesis
    website: http://ros.org/wiki/ride_karulf_thesis
  roslaunch_tools:
    author: !!python/unicode 'Erik Karulf'
    deps:
    - roscpp
    desc: roslaunch_tools
    license: BSD
    shortdesc: roslaunch_tools
    source: https://wu-ros-pkg.svn.sourceforge.net/svnroot/wu-ros-pkg/stacks/wu_utils/trunk/roslaunch_tools
    website: http://ros.org/wiki/roslaunch_tools
  rosmultimaster:
    author: !!python/unicode 'Erik Karulf/erik@karulf.com and Marshall Strother/mcstrother@gmail.com'
    deps:
    - rospy
    - pymp
    - basic_utils
    desc: The rosmultimaster package is designed to allow you to connect to multiple
      ros cores from within a single process. This is achieved via the rosmultimaster.Adaptor
      class.
    license: BSD
    shortdesc: rosmultimaster
    source: https://wu-ros-pkg.svn.sourceforge.net/svnroot/wu-ros-pkg/stacks/wu_utils/trunk/rosmultimaster
    website: http://ros.org/wiki/rosmultimaster
  rosmultimaster_test:
    author: !!python/unicode 'Marshall Strother/ mcstrother@gmail.com'
    deps:
    - rospy
    - std_msgs
    - std_srvs
    - rosmultimaster
    desc: A test package for rosmultimaster.
    license: BSD
    shortdesc: rosmultimaster_test
    source: https://wu-ros-pkg.svn.sourceforge.net/svnroot/wu-ros-pkg/stacks/wu_utils/trunk/rosmultimaster_test
    website: http://pr.willowgarage.com/wiki/rosmultimaster
  roswiki_node:
    author: !!python/unicode 'David Lu!!'
    deps:
    - rospy
    desc: 'Creates CS/NodeAPI clearsilver documentation from source code files. Typical
      usage: rosrun roswiki_node roswiki src/*'
    license: BSD
    shortdesc: Tool for generating ROS Wiki documentation
    source: https://wu-ros-pkg.svn.sourceforge.net/svnroot/wu-ros-pkg/stacks/wu_utils/trunk/roswiki_node
    website: http://ros.org/wiki/roswiki_node
  simmechanics_to_urdf:
    author: !!python/unicode 'David Lu!!'
    deps:
    - rospy
    - sensor_msgs
    - tf
    desc: Converts SimMechanics XML to URDF
    license: BSD
    shortdesc: Converts SimMechanics XML to URDF
    source: https://wu-ros-pkg.svn.sourceforge.net/svnroot/wu-ros-pkg/stacks/urdf_tools/trunk/simmechanics_to_urdf
    website: http://ros.org/wiki/simmechanics_to_urdf
  simulator_bridge:
    author: !!python/unicode 'Erik Karulf'
    deps:
    - rospy
    - rosmultimaster
    - tf
    - basic_utils
    - roslaunch_tools
    desc: simulator_bridge
    license: BSD
    shortdesc: simulator_bridge
    source: https://wu-ros-pkg.svn.sourceforge.net/svnroot/wu-ros-pkg/stacks/wu_utils/trunk/simulator_bridge
    website: http://ros.org/wiki/simulator_bridge
  skype_bridge:
    author: !!python/unicode 'Dan Lazewatsky'
    deps:
    - rospy
    - opencv2
    - cv_bridge
    - image_transport
    - std_msgs
    - actionlib
    - actionlib_msgs
    desc: Actions, services and a frontend for interacting with Skype through ROS
    license: BSD
    shortdesc: skype_bridge
    source: https://wu-ros-pkg.svn.sourceforge.net/svnroot/wu-ros-pkg/stacks/communication/trunk/skype_bridge
    website: http://ros.org/wiki/skype_bridge
